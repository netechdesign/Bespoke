(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[21],{

/***/ "./node_modules/@amcharts/amcharts4-geodata/continentsLow.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4-geodata/continentsLow.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var map = { "type": "FeatureCollection", "features": [
        { "type": "Feature", "geometry": { "type": "MultiPolygon", "coordinates": [[[[-77.3742, 8.6583], [-77.4072, 8.427], [-77.2124, 8.0338], [-77.3509, 7.7057], [-77.7439, 7.537], [-77.9011, 7.2294], [-78.1701, 7.5437], [-78.4215, 8.0608], [-78.1139, 8.3795], [-79.0865, 8.997], [-79.4418, 9.0059], [-79.7508, 8.5953], [-80.3687, 8.289], [-80.4581, 8.0768], [-80.0752, 7.6671], [-80.4388, 7.2747], [-80.8456, 7.2201], [-81.0352, 7.711], [-81.5041, 7.7213], [-81.7279, 8.1376], [-82.6796, 8.3218], [-83.1232, 8.3529], [-83.1625, 8.5882], [-83.734, 8.6144], [-83.6373, 9.0352], [-83.8956, 9.2762], [-84.6589, 9.6473], [-85.1145, 9.5816], [-85.6248, 9.9025], [-85.8305, 10.3979], [-85.6672, 10.745], [-85.7453, 11.0886], [-86.4688, 11.7385], [-86.7556, 12.1566], [-87.6676, 12.9037], [-87.4128, 13.1274], [-87.7084, 13.36], [-87.9308, 13.1807], [-88.5121, 13.1838], [-89.2776, 13.4781], [-89.8042, 13.5602], [-90.607, 13.9291], [-91.1461, 13.9255], [-91.8191, 14.2283], [-92.2645, 14.5678], [-92.809, 15.1387], [-93.916, 16.0536], [-94.3741, 16.2848], [-94.6615, 16.2018], [-94.9003, 16.4175], [-95.4643, 15.9745], [-96.2136, 15.6931], [-96.5108, 15.6518], [-97.1846, 15.9093], [-97.7548, 15.967], [-98.5203, 16.3048], [-98.7622, 16.5347], [-99.6906, 16.7198], [-100.0244, 16.9205], [-100.8478, 17.2006], [-101.6002, 17.6516], [-101.847, 17.9223], [-102.6995, 18.0626], [-103.4415, 18.3254], [-103.9125, 18.8283], [-104.9385, 19.3095], [-105.4821, 19.9762], [-105.6694, 20.3855], [-105.2603, 20.579], [-105.4923, 20.7766], [-105.237, 21.1192], [-105.2086, 21.4908], [-105.6492, 21.9879], [-105.7917, 22.6276], [-106.4025, 23.1958], [-106.9354, 23.8811], [-107.9512, 24.6149], [-108.3736, 25.1942], [-109.0288, 25.4805], [-109.385, 25.7273], [-109.4256, 26.0327], [-109.1997, 26.3052], [-109.4829, 26.7105], [-109.7548, 26.703], [-109.9441, 27.0794], [-110.4779, 27.3226], [-110.5298, 27.8642], [-111.1215, 27.9672], [-111.6801, 28.4706], [-112.1618, 29.0188], [-112.2235, 29.2696], [-112.7384, 29.9856], [-113.1104, 30.7934], [-113.0467, 31.1792], [-113.6235, 31.3461], [-113.9478, 31.6293], [-114.1493, 31.5072], [-114.8398, 31.7984], [-114.8819, 31.1565], [-114.6333, 30.5067], [-114.6498, 30.2381], [-114.3726, 29.8302], [-113.7556, 29.3677], [-113.4999, 28.9269], [-113.2056, 28.7986], [-112.8709, 28.4244], [-112.7339, 27.826], [-112.3291, 27.5233], [-112.0091, 26.9671], [-111.5696, 26.7074], [-111.2917, 25.7899], [-111.0345, 25.5271], [-110.6774, 24.7885], [-110.5471, 24.2141], [-110.0229, 24.1746], [-109.4209, 23.4803], [-109.458, 23.2149], [-109.9234, 22.8859], [-110.0861, 23.0053], [-110.3627, 23.605], [-111.4193, 24.329], [-112.0728, 24.84], [-112.0557, 25.488], [-112.3773, 26.2138], [-113.0207, 26.5831], [-113.2058, 26.857], [-113.5986, 26.7212], [-113.841, 26.9666], [-114.4456, 27.2183], [-114.5399, 27.431], [-114.9938, 27.7359], [-114.3006, 27.8731], [-114.0487, 28.4262], [-114.1455, 28.6055], [-114.9938, 29.3845], [-115.6738, 29.7565], [-115.8157, 30.3038], [-116.0622, 30.8041], [-116.6622, 31.5649], [-117.2434, 32.664], [-117.4674, 33.2957], [-118.0806, 33.7222], [-118.4104, 33.744], [-118.5063, 34.0174], [-119.1437, 34.112], [-119.606, 34.4178], [-120.4812, 34.4715], [-120.6448, 34.5798], [-120.6337, 35.0766], [-120.8605, 35.3655], [-121.8774, 36.331], [-121.79, 36.7323], [-122.3948, 37.2077], [-122.4669, 37.838], [-122.9681, 38.0968], [-122.9865, 38.277], [-123.7012, 38.9073], [-123.8845, 39.8608], [-124.324, 40.2519], [-124.3717, 40.4911], [-124.1331, 40.9697], [-124.0687, 41.3843], [-124.5397, 42.8127], [-124.1486, 43.6916], [-123.9293, 45.5768], [-124.0716, 46.7447], [-124.3763, 47.6587], [-124.6211, 47.9041], [-124.6327, 48.3751], [-123.9757, 48.1683], [-122.2421, 48.0107], [-122.7888, 48.993], [-123.0491, 48.993], [-123.3356, 49.4591], [-123.859, 49.4828], [-124.1415, 49.7927], [-124.4833, 49.8082], [-125.21, 50.4763], [-126.4045, 50.5298], [-126.6317, 50.9151], [-127.0579, 50.8676], [-127.7082, 51.1512], [-127.6449, 51.4784], [-128.1024, 51.7884], [-128.3576, 52.1589], [-128.1088, 52.858], [-128.4519, 52.8766], [-128.6523, 53.2437], [-129.2842, 53.3931], [-129.5637, 53.2515], [-130.3351, 53.724], [-130.0433, 54.1335], [-130.8496, 54.8076], [-131.0478, 55.1576], [-130.9186, 55.736], [-131.2875, 56.0121], [-131.8439, 56.1601], [-132.8145, 57.0408], [-133.4659, 57.1722], [-133.5542, 57.6951], [-134.0634, 58.2111], [-134.7761, 58.4539], [-135.3025, 58.2559], [-135.8618, 58.5771], [-136.5827, 58.2453], [-137.5439, 58.5811], [-138.3525, 59.0873], [-140.2168, 59.7265], [-140.8432, 59.749], [-141.6701, 59.9698], [-142.9457, 60.097], [-143.805, 60.0129], [-144.9012, 60.3351], [-145.8989, 60.4783], [-146.8741, 61.005], [-148.3445, 60.8536], [-148.1976, 60.1678], [-148.4306, 59.9891], [-149.4323, 60.0011], [-150.9608, 59.244], [-151.7383, 59.1885], [-151.7345, 59.9882], [-151.4515, 60.2026], [-151.3217, 60.7428], [-150.4412, 61.0236], [-150.6123, 61.3013], [-151.7341, 60.9106], [-151.7505, 60.7548], [-153.1061, 59.875], [-154.0882, 59.3632], [-154.1298, 59.12], [-153.327, 58.8843], [-154.0199, 58.493], [-154.2469, 58.1594], [-155.0069, 58.016], [-156.4784, 57.328], [-156.4751, 57.1051], [-157.5783, 56.6344], [-158.4144, 56.4358], [-158.2757, 56.196], [-159.5233, 55.8101], [-159.9623, 55.7948], [-161.0995, 55.4059], [-161.7416, 55.3911], [-162.0741, 55.1394], [-162.8651, 54.9545], [-162.9621, 55.1838], [-162.1571, 55.7195], [-161.2156, 56.0214], [-160.8514, 55.7719], [-160.3021, 56.3141], [-159.2831, 56.6885], [-158.321, 57.2978], [-157.6076, 57.6016], [-157.5235, 58.4213], [-158.5032, 58.8503], [-159.0827, 58.4697], [-159.6702, 58.9111], [-160.3631, 59.0512], [-161.7554, 58.6119], [-161.8286, 59.5887], [-162.2425, 60.1782], [-163.2193, 59.8455], [-163.9069, 59.8067], [-164.6622, 60.3038], [-165.3538, 60.5413], [-164.8051, 60.892], [-165.566, 61.1024], [-166.0789, 61.8031], [-165.1944, 62.4736], [-164.409, 63.2151], [-163.3589, 63.0457], [-161.974, 63.453], [-161.0997, 63.558], [-160.7786, 63.819], [-160.932, 64.5792], [-161.187, 64.9241], [-161.7594, 64.8162], [-162.807, 64.3743], [-163.7132, 64.5883], [-164.8995, 64.4607], [-166.1428, 64.5827], [-167.4039, 65.4221], [-168.0884, 65.6578], [-164.6742, 66.5549], [-163.7755, 66.5312], [-163.6954, 66.0837], [-161.8164, 66.0536], [-161.557, 66.2504], [-160.2317, 66.4202], [-160.864, 66.6708], [-161.8566, 66.7003], [-161.9653, 67.0499], [-163.0016, 67.0272], [-163.7205, 67.1955], [-164.1251, 67.6067], [-166.3805, 68.4251], [-166.2092, 68.8854], [-164.3024, 68.9364], [-163.1614, 69.3879], [-162.9521, 69.7581], [-161.881, 70.3318], [-160.9963, 70.3045], [-159.3144, 70.8784], [-157.9985, 70.8454], [-156.7833, 71.319], [-155.1669, 71.0993], [-154.1952, 70.801], [-153.2329, 70.9326], [-152.233, 70.8103], [-151.9447, 70.4521], [-149.2694, 70.5009], [-147.7053, 70.2173], [-145.8232, 70.16], [-145.1973, 70.0086], [-143.2184, 70.1163], [-141.4078, 69.6533], [-139.1815, 69.5155], [-138.1283, 69.1519], [-136.7174, 68.8891], [-135.8762, 68.9169], [-135.6914, 69.3111], [-135.1409, 69.4675], [-133.1632, 69.4338], [-130.4985, 70.1431], [-128.9715, 69.7123], [-127.765, 70.2219], [-127.1385, 70.2392], [-126.6122, 69.7305], [-125.9073, 69.4185], [-124.7678, 69.99], [-123.6091, 69.3774], [-123.0258, 69.81], [-120.9624, 69.6604], [-120.2925, 69.4205], [-118.8687, 69.2571], [-118.0953, 69.0429], [-116.0651, 68.8554], [-115.6314, 68.9726], [-114.4138, 68.6596], [-113.9644, 68.3991], [-114.7652, 68.2701], [-115.1332, 67.8194], [-113.6819, 67.7], [-112.4352, 67.6849], [-110.9901, 67.7907], [-110.0426, 67.9772], [-109.6305, 67.7328], [-108.5929, 67.591], [-108.0884, 67.0698], [-107.1564, 66.8819], [-108.2611, 68.1501], [-108.3134, 68.6108], [-106.1646, 68.9198], [-105.4286, 68.4583], [-104.1934, 68.0311], [-103.4741, 68.115], [-102.692, 67.8116], [-101.555, 67.6931], [-100.4561, 67.8396], [-99.1468, 67.7237], [-98.4171, 67.8265], [-97.4549, 67.6169], [-97.2066, 67.8551], [-98.4384, 68.0646], [-98.2184, 68.3174], [-97.2658, 68.453], [-96.9769, 68.2555], [-96.036, 68.1578], [-96.3714, 67.5539], [-95.7826, 67.1937], [-95.2588, 67.2625], [-95.6505, 67.7375], [-95.461, 68.0213], [-94.7443, 68.0708], [-93.6517, 68.5431], [-93.6628, 68.8381], [-94.2707, 69.4551], [-96.0503, 69.8311], [-96.4926, 70.1249], [-96.2265, 70.5418], [-96.549, 70.809], [-96.4058, 71.2737], [-95.2013, 71.9036], [-94.3084, 71.7649], [-92.9488, 71.2622], [-92.9814, 70.8525], [-91.5641, 70.1782], [-92.751, 69.7139], [-90.8221, 69.2904], [-90.4683, 68.8638], [-89.0567, 69.266], [-88.0413, 68.8117], [-87.8103, 68.4042], [-88.3469, 68.2883], [-88.1958, 67.7659], [-87.2663, 67.1839], [-86.5363, 67.5162], [-85.9526, 68.0724], [-85.7338, 68.6301], [-84.8622, 69.074], [-85.3869, 69.2318], [-85.5076, 69.8453], [-84.2416, 69.8351], [-82.6183, 69.691], [-82.642, 69.4584], [-81.3286, 69.12], [-81.2815, 68.6572], [-82.5526, 68.4464], [-81.9764, 67.862], [-81.2702, 67.4598], [-81.4675, 67.0698], [-82.6416, 66.5876], [-84.4784, 66.1794], [-85.6039, 66.5683], [-86.6331, 66.5314], [-86.0429, 66.0225], [-87.2914, 65.3549], [-87.9701, 65.3489], [-89.7494, 65.9359], [-89.9243, 65.7803], [-88.9739, 65.3482], [-87.0275, 65.1982], [-87.2805, 64.8262], [-88.1057, 64.1832], [-88.653, 64.0094], [-90.1418, 63.9819], [-90.0135, 63.8044], [-91.3303, 63.5067], [-90.7466, 63.3516], [-90.8711, 62.9459], [-91.4491, 62.804], [-92.3613, 62.8194], [-93.4206, 61.7059], [-93.9127, 61.4815], [-94.6469, 60.4164], [-94.7858, 59.9536], [-94.7137, 58.9033], [-94.2871, 58.716], [-93.2781, 58.7564], [-92.249, 57.0093], [-91.1115, 57.2412], [-90.5922, 57.2245], [-89.7909, 56.9813], [-88.9484, 56.8512], [-88.0751, 56.4673], [-87.5608, 56.0564], [-85.8305, 55.6569], [-85.061, 55.2856], [-83.9107, 55.3147], [-82.5775, 55.1487], [-82.2195, 54.8135], [-82.4181, 54.3559], [-82.1413, 53.8177], [-82.2605, 52.9612], [-81.5993, 52.4325], [-81.6615, 52.2938], [-80.6579, 51.7585], [-80.368, 51.3299], [-79.8362, 51.1734], [-79.4975, 51.5698], [-78.9777, 51.7338], [-78.4917, 52.2521], [-78.7238, 52.6278], [-79.2418, 54.0989], [-79.6655, 54.6975], [-78.9091, 54.8815], [-77.8911, 55.2364], [-77.3249, 55.5555], [-76.6504, 56.1075], [-76.5257, 56.8918], [-76.6555, 57.3806], [-77.1571, 58.0191], [-78.5152, 58.6823], [-78.4586, 58.8734], [-77.7606, 59.3801], [-77.7262, 59.6759], [-77.312, 60.0424], [-77.8715, 60.7859], [-77.7362, 61.4373], [-78.1372, 62.1074], [-78.0682, 62.3555], [-77.3724, 62.5726], [-74.6899, 62.1835], [-73.6299, 62.4543], [-72.0816, 61.7283], [-71.4229, 61.159], [-70.2792, 61.0687], [-69.6404, 60.6898], [-69.7559, 60.3886], [-69.682, 59.3417], [-69.5317, 58.8692], [-68.6983, 58.9045], [-67.5697, 58.2135], [-66.608, 58.5489], [-65.6061, 59.1106], [-64.9312, 60.2519], [-64.4995, 60.2683], [-63.5398, 59.3328], [-63.1854, 58.8578], [-62.5939, 58.4741], [-62.3056, 57.9723], [-61.899, 57.8613], [-61.851, 57.3812], [-61.3337, 57.0106], [-61.5146, 56.3903], [-61.0893, 55.8662], [-60.8318, 55.9579], [-59.9303, 55.2594], [-58.997, 55.1494], [-58.7802, 54.8384], [-58.1951, 54.8659], [-57.4046, 54.5705], [-58.1516, 54.3503], [-57.4161, 54.1628], [-57.1489, 53.8476], [-56.4651, 53.7651], [-55.7979, 53.212], [-55.8336, 52.3104], [-55.6951, 52.1378], [-56.976, 51.4577], [-58.5103, 51.295], [-59.1655, 50.7799], [-60.0801, 50.2546], [-61.2897, 50.202], [-62.7155, 50.3016], [-64.8679, 50.2754], [-65.2686, 50.32], [-66.4955, 50.2119], [-66.9411, 49.9938], [-67.3719, 49.3486], [-68.2821, 49.1972], [-68.9291, 48.829], [-69.7752, 48.0981], [-69.9057, 47.8322], [-70.7058, 47.1398], [-70.5196, 47.0323], [-68.987, 48.2748], [-67.5608, 48.8558], [-66.1781, 49.2132], [-65.5234, 49.2662], [-64.8364, 49.1917], [-64.2618, 48.9218], [-64.2538, 48.5505], [-65.2595, 48.0213], [-65.9266, 48.1887], [-65.6667, 47.696], [-65.2282, 47.8114], [-64.7033, 47.7248], [-64.9121, 47.3688], [-65.3189, 47.1011], [-64.9057, 46.8881], [-64.5415, 46.2404], [-63.2928, 45.7522], [-62.4831, 45.6217], [-61.9556, 45.868], [-61.4924, 45.6869], [-61.2837, 45.2355], [-62.514, 44.8435], [-63.7611, 44.4862], [-64.286, 44.5501], [-64.3781, 44.3037], [-64.8624, 43.8678], [-65.7382, 43.5607], [-66.1257, 43.8137], [-66.0995, 44.3677], [-65.6567, 44.7605], [-64.4489, 45.2559], [-64.8979, 45.6261], [-65.8847, 45.223], [-66.8726, 45.0672], [-67.3642, 44.697], [-67.9073, 44.4538], [-68.2775, 44.5075], [-69.0683, 44.0978], [-69.7916, 43.8052], [-70.1789, 43.7662], [-70.8292, 42.8251], [-71.0463, 42.3311], [-70.7382, 42.229], [-70.4046, 41.6271], [-70.6572, 41.5343], [-71.4264, 41.6333], [-71.5228, 41.3789], [-72.8471, 41.2657], [-73.5831, 41.022], [-74.2267, 40.6079], [-73.9575, 40.3282], [-74.1761, 39.7268], [-74.4289, 39.3872], [-74.897, 39.1453], [-75.3922, 39.0929], [-75.036, 38.5034], [-75.6592, 37.9539], [-76.2948, 38.4945], [-76.1683, 38.8527], [-76.5194, 38.8985], [-76.5012, 38.5323], [-76.2642, 37.8935], [-76.2635, 37.3568], [-75.8904, 36.6568], [-76.4788, 36.0283], [-75.7724, 35.9], [-75.7742, 35.647], [-76.1739, 35.354], [-76.513, 35.2705], [-76.7449, 34.9412], [-77.751, 34.2851], [-78.0136, 33.9118], [-78.5778, 33.8732], [-78.9202, 33.6588], [-79.276, 33.1354], [-80.0218, 32.6201], [-80.2297, 32.5766], [-80.8494, 32.114], [-81.1978, 31.7043], [-81.1754, 31.5312], [-81.5203, 30.8747], [-81.2496, 29.7938], [-80.9, 29.0498], [-80.524, 28.4861], [-80.6503, 28.1811], [-80.2262, 27.2072], [-80.0413, 26.5685], [-80.1263, 25.8334], [-80.3669, 25.3313], [-80.7366, 25.1564], [-81.0977, 25.3194], [-81.365, 25.8312], [-81.7154, 25.983], [-81.8666, 26.4349], [-82.4414, 27.0599], [-82.6609, 27.7186], [-82.8436, 27.846], [-82.6607, 28.4856], [-82.6518, 28.8874], [-83.2906, 29.452], [-83.6943, 29.9261], [-84.0443, 30.1036], [-84.3828, 29.9074], [-85.3189, 29.6802], [-85.3538, 29.8759], [-86.2573, 30.4929], [-87.7903, 30.2918], [-88.9051, 30.4152], [-89.5885, 30.1658], [-90.2253, 30.3793], [-90.413, 30.1405], [-89.5894, 29.915], [-90.1014, 29.1817], [-90.3793, 29.2953], [-90.7511, 29.1311], [-91.2902, 29.2891], [-91.3312, 29.5137], [-91.8932, 29.836], [-92.2607, 29.5568], [-93.1758, 29.7791], [-93.6947, 29.7698], [-94.8886, 29.3708], [-95.2734, 28.9637], [-95.8534, 28.6401], [-96.4486, 28.5944], [-96.5616, 28.3671], [-97.1564, 28.1443], [-97.1715, 27.8797], [-97.5546, 26.9675], [-97.4023, 26.3967], [-97.1402, 26.0296], [-97.225, 25.5852], [-97.5071, 25.0144], [-97.6676, 24.3898], [-97.8578, 22.6245], [-97.6376, 21.6035], [-97.1214, 20.615], [-96.456, 19.8697], [-96.2895, 19.3437], [-95.821, 18.7546], [-95.1818, 18.7005], [-94.798, 18.5145], [-94.5461, 18.1749], [-94.189, 18.1953], [-93.5522, 18.4306], [-92.8849, 18.4688], [-92.7102, 18.6121], [-91.9738, 18.716], [-91.8031, 18.4705], [-91.2753, 18.6246], [-91.343, 18.9007], [-90.7393, 19.3521], [-90.6934, 19.7299], [-90.5071, 19.9119], [-90.4841, 20.5564], [-90.3531, 21.0096], [-89.8198, 21.2746], [-88.8787, 21.414], [-88.1317, 21.616], [-86.8242, 21.4215], [-86.8648, 20.8849], [-87.4672, 20.1023], [-87.4248, 19.5834], [-87.7619, 18.4461], [-88.0973, 18.1216], [-88.2717, 17.6098], [-88.3134, 16.6328], [-88.6952, 16.2475], [-88.894, 15.8906], [-88.131, 15.7011], [-87.6181, 15.9097], [-86.9072, 15.7624], [-86.3568, 15.7832], [-85.7839, 16.0029], [-85.4836, 15.8995], [-84.9738, 15.9901], [-84.2614, 15.8227], [-83.7604, 15.2204], [-83.3691, 15.2399], [-83.1576, 14.9931], [-83.2992, 14.749], [-83.1878, 14.3401], [-83.4124, 13.9966], [-83.5673, 13.3205], [-83.511, 12.4119], [-83.7693, 11.9316], [-83.6517, 11.6422], [-83.8679, 11.2999], [-83.4482, 10.4658], [-82.7783, 9.6695], [-82.3708, 9.428], [-82.2441, 9.0321], [-81.355, 8.7804], [-80.8387, 8.8874], [-80.1272, 9.2101], [-79.5774, 9.598], [-78.5043, 9.4063], [-78.0828, 9.2363], [-77.3742, 8.6583]]], [[[-25.4583, 70.9426], [-25.4022, 70.6527], [-27.8979, 70.4541], [-27.7088, 70.8971], [-25.4583, 70.9426]]], [[[-53.103, 70.1409], [-52.0452, 69.8071], [-52.1125, 69.4893], [-53.5784, 69.2567], [-53.7831, 69.5064], [-54.804, 69.6304], [-54.8304, 70.1611], [-54.3719, 70.3174], [-53.103, 70.1409]]], [[[-97.4694, 69.6668], [-96.2999, 69.3444], [-95.6856, 68.7358], [-96.4016, 68.4708], [-97.472, 68.544], [-99.254, 68.8632], [-99.5641, 69.0341], [-98.4559, 69.3346], [-98.5483, 69.545], [-97.4694, 69.6668]]], [[[-75.8665, 68.3367], [-75.1538, 68.234], [-75.1274, 67.5373], [-75.7801, 67.2836], [-77.0051, 67.2669], [-77.3058, 67.7062], [-76.7405, 68.2313], [-75.8665, 68.3367]]], [[[-85.0559, 65.4374], [-83.4071, 65.1039], [-82.0501, 64.6442], [-81.7161, 64.0219], [-80.829, 64.09], [-80.3021, 63.7622], [-81.0465, 63.4615], [-82.3782, 63.7067], [-82.4672, 63.9269], [-83.4943, 64.0993], [-83.7283, 63.8135], [-84.6329, 63.3092], [-85.4954, 63.1392], [-85.7142, 63.6579], [-87.1888, 63.6723], [-86.252, 64.1368], [-86.3743, 64.5659], [-85.9617, 65.7042], [-85.241, 65.7954], [-85.0559, 65.4374]]], [[[-82.0477, 62.9705], [-82.1138, 62.6522], [-83.0158, 62.2099], [-83.699, 62.1602], [-83.8994, 62.4765], [-83.3767, 62.905], [-82.0477, 62.9705]]], [[[-79.5978, 62.4132], [-79.324, 62.0261], [-79.7144, 61.6126], [-80.2761, 61.8586], [-80.0215, 62.3431], [-79.5978, 62.4132]]], [[[-166.1355, 60.3835], [-165.7298, 60.3143], [-165.5917, 59.9132], [-166.1876, 59.7738], [-167.1389, 60.0086], [-166.4759, 60.3828], [-166.1355, 60.3835]]], [[[-134.7332, 58.2251], [-134.2671, 57.8846], [-133.9253, 57.3369], [-134.4354, 57.057], [-134.7332, 58.2251]]], [[[-135.7304, 58.2442], [-135.002, 58.0511], [-135.0848, 57.5111], [-136.0767, 57.6747], [-136.5123, 58.0959], [-135.7304, 58.2442]]], [[[-152.8979, 57.8238], [-152.4121, 57.4547], [-153.7933, 56.9895], [-154.339, 56.9209], [-154.7059, 57.3353], [-154.2813, 57.638], [-153.8184, 57.5956], [-152.8979, 57.8238]]], [[[-135.0653, 57.4168], [-134.6207, 56.7183], [-135.787, 57.3173], [-135.0653, 57.4168]]], [[[-133.7078, 57.0627], [-133.0708, 56.9742], [-132.9592, 56.677], [-133.6029, 56.4642], [-133.7078, 57.0627]]], [[[-78.9067, 56.3203], [-79.1755, 55.8851], [-80.0009, 55.9322], [-79.3925, 56.2764], [-78.9067, 56.3203]]], [[[-133.566, 56.3392], [-133.2029, 56.3199], [-131.9764, 55.2086], [-131.9809, 54.8049], [-132.7823, 55.0484], [-133.447, 55.797], [-133.2415, 55.9208], [-133.566, 56.3392]]], [[[-130.965, 55.5679], [-131.6475, 55.5855], [-131.2693, 55.9555], [-130.965, 55.5679]]], [[[-163.4761, 54.9807], [-163.358, 54.7356], [-164.0734, 54.6209], [-164.5907, 54.4043], [-164.8877, 54.6078], [-164.5297, 54.8808], [-163.8681, 55.039], [-163.4761, 54.9807]]], [[[-132.8931, 54.1408], [-131.7025, 53.9864], [-132.0113, 53.2653], [-132.7477, 53.3105], [-133.0522, 53.7784], [-132.8931, 54.1408]]], [[[-166.6153, 53.9009], [-166.4442, 53.6519], [-167.136, 53.5265], [-166.9782, 53.9628], [-166.6153, 53.9009]]], [[[-128.6326, 53.1126], [-128.5099, 52.5186], [-129.0847, 52.8225], [-128.6326, 53.1126]]], [[[-131.8535, 53.23], [-131.6524, 53.103], [-131.8097, 52.5417], [-132.3455, 53.1361], [-131.8535, 53.23]]], [[[-77.7015, 24.2878], [-77.5186, 23.8696], [-77.7712, 23.7524], [-77.9998, 24.2198], [-77.7015, 24.2878]]], [[[-82.1016, 23.1904], [-81.1788, 23.0595], [-80.6503, 23.103], [-80.0752, 22.9423], [-79.183, 22.3879], [-78.6865, 22.367], [-77.8651, 21.9005], [-77.4973, 21.8716], [-76.6475, 21.2844], [-75.7229, 21.1108], [-75.6428, 20.7335], [-74.8826, 20.6505], [-74.2529, 20.0797], [-75.1165, 19.9012], [-76.1586, 19.9895], [-77.7151, 19.8555], [-77.2135, 20.3003], [-77.2297, 20.6438], [-77.9974, 20.7153], [-78.4908, 21.0536], [-78.6366, 21.5156], [-79.2745, 21.5627], [-80.2313, 21.8721], [-80.4992, 22.0634], [-80.9619, 22.0528], [-81.8164, 22.2001], [-81.9036, 22.6791], [-82.7384, 22.6893], [-83.3796, 22.2228], [-84.3264, 22.0745], [-84.3612, 22.379], [-84.045, 22.6662], [-83.2577, 22.9676], [-82.1016, 23.1904]]], [[[-82.5679, 21.6217], [-82.8531, 21.4437], [-83.0826, 21.7913], [-82.7146, 21.8903], [-82.5679, 21.6217]]], [[[-157.7994, 21.4566], [-158.1104, 21.3186], [-158.273, 21.5853], [-157.9625, 21.7012], [-157.7994, 21.4566]]], [[[-155.5813, 19.0121], [-155.8813, 19.0707], [-156.0487, 19.7498], [-155.8203, 20.014], [-155.8316, 20.2759], [-155.1989, 19.9944], [-154.8042, 19.5243], [-155.5813, 19.0121]]], [[[-71.7682, 18.0391], [-72.0601, 18.2286], [-72.8766, 18.1518], [-73.3851, 18.2513], [-73.8849, 18.0417], [-74.4189, 18.3463], [-74.2276, 18.6628], [-73.5915, 18.5225], [-72.7894, 18.4346], [-72.3477, 18.6747], [-72.8112, 19.0716], [-72.7033, 19.4409], [-73.0526, 19.6109], [-73.1177, 19.9039], [-72.6369, 19.9008], [-71.8348, 19.6966], [-71.5578, 19.8954], [-70.9541, 19.9141], [-70.1294, 19.6362], [-69.7394, 19.2993], [-69.3228, 19.2012], [-68.6848, 18.9047], [-68.3392, 18.6121], [-68.6588, 18.222], [-68.9349, 18.408], [-69.7707, 18.4435], [-70.1831, 18.2517], [-70.6448, 18.336], [-71.0281, 18.273], [-71.3958, 17.6462], [-71.7682, 18.0391]]], [[[-66.153, 18.4705], [-65.6288, 18.3813], [-65.9708, 17.9743], [-67.1968, 17.9942], [-67.1586, 18.4994], [-66.153, 18.4705]]], [[[-77.3544, 18.4666], [-76.9083, 18.3902], [-76.3499, 18.1518], [-76.5245, 17.8664], [-76.8533, 17.9738], [-77.3615, 17.8336], [-77.7681, 17.8775], [-78.2167, 18.4479], [-77.8735, 18.522], [-77.3544, 18.4666]]], [[[-61.0041, 10.168], [-61.5967, 10.0646], [-61.4648, 10.5391], [-61.0338, 10.67], [-61.0041, 10.168]]], [[[-80.7096, 52.7874], [-81.839, 52.9579], [-81.8473, 53.1865], [-81.1359, 53.2058], [-80.7096, 52.7874]]], [[[-55.4532, 51.5623], [-55.8714, 50.9073], [-56.6939, 50.0597], [-55.7648, 49.9605], [-55.892, 49.5803], [-54.9827, 49.268], [-54.579, 49.4908], [-53.9577, 49.4418], [-53.5733, 49.1413], [-53.853, 48.8112], [-53.5312, 48.2317], [-53.695, 47.921], [-52.955, 48.0293], [-53.1756, 47.6529], [-52.6536, 47.5495], [-53.0697, 46.6812], [-53.6164, 46.6803], [-53.5813, 46.9573], [-54.1737, 46.8805], [-53.8692, 47.387], [-54.8566, 47.3848], [-55.3156, 46.9058], [-55.7886, 46.8672], [-55.1909, 47.4492], [-56.2211, 47.6715], [-56.9525, 47.5743], [-58.3332, 47.6769], [-59.1169, 47.5708], [-59.3623, 47.8655], [-58.7105, 48.325], [-58.7165, 48.5979], [-58.0158, 49.5426], [-57.4656, 50.4636], [-56.7503, 51.2751], [-56.0256, 51.5685], [-55.4532, 51.5623]]], [[[-127.7131, 50.8207], [-126.701, 50.5156], [-125.4821, 50.3167], [-124.6429, 49.4285], [-123.9959, 49.2241], [-123.4972, 48.582], [-123.5946, 48.3334], [-124.6893, 48.5975], [-125.8285, 49.0918], [-125.8354, 49.2767], [-126.5485, 49.4189], [-126.6832, 49.8764], [-127.1143, 49.8797], [-127.9059, 50.4452], [-127.7131, 50.8207]]], [[[-61.7456, 49.1058], [-62.2195, 49.0791], [-63.5658, 49.3994], [-64.1315, 49.9416], [-62.8584, 49.7055], [-61.8171, 49.2835], [-61.7456, 49.1058]]], [[[-63.8337, 46.4939], [-63.1294, 46.422], [-62.1635, 46.4872], [-62.8784, 46.0012], [-63.641, 46.2307], [-63.8337, 46.4939]]], [[[-60.9122, 46.0447], [-60.8061, 45.738], [-60.4723, 45.9466], [-60.5049, 46.204], [-59.8651, 46.1596], [-60.3862, 45.6545], [-61.2837, 45.5737], [-61.4952, 45.9413], [-60.8702, 46.7966], [-60.3318, 46.7678], [-60.5768, 46.1721], [-60.9122, 46.0447]]], [[[-72.4274, 41.0385], [-72.3391, 40.8942], [-73.1942, 40.6541], [-73.5738, 40.9195], [-72.4274, 41.0385]]], [[[-77.8402, 24.7942], [-77.7453, 24.4635], [-78.0449, 24.2873], [-78.2988, 24.7538], [-78.0333, 25.1431], [-77.8402, 24.7942]]], [[[-30.7029, 83.5935], [-25.9475, 83.2897], [-24.4702, 82.8773], [-21.5208, 82.5954], [-25.1491, 82.001], [-21.3379, 82.0687], [-21.1466, 81.6952], [-17.2261, 81.4304], [-15.5555, 81.8337], [-12.1928, 81.649], [-11.5288, 81.424], [-14.5035, 80.7633], [-16.7607, 80.5733], [-16.8683, 80.1982], [-19.4292, 80.2577], [-20.1385, 79.8033], [-19.2836, 79.683], [-19.0749, 79.1524], [-20.9557, 78.5551], [-20.8625, 77.9119], [-20.2319, 77.3684], [-18.339, 77.2152], [-18.5103, 76.7782], [-20.9422, 76.887], [-21.8772, 76.5734], [-21.5692, 76.2937], [-20.1036, 76.2191], [-19.5091, 75.7575], [-19.426, 75.2299], [-20.4849, 75.3143], [-19.2252, 74.4795], [-19.3692, 74.284], [-21.1295, 74.1109], [-20.3673, 73.8483], [-20.5096, 73.493], [-22.1851, 73.2699], [-22.0364, 72.9183], [-22.2931, 72.1196], [-24.0692, 72.4986], [-24.6669, 72.4374], [-22.0133, 71.6888], [-21.7523, 71.4784], [-21.5228, 70.5262], [-23.3279, 70.451], [-23.7917, 70.5551], [-24.377, 71.1463], [-25.6558, 71.5301], [-25.7422, 71.1836], [-26.7179, 70.9506], [-27.6887, 70.9934], [-28.5409, 70.4769], [-28.0149, 70.4024], [-26.7472, 70.4756], [-26.4156, 70.2213], [-25.53, 70.3531], [-23.1732, 70.1145], [-23.0882, 69.883], [-26.3414, 68.7023], [-29.2496, 68.2988], [-29.8686, 68.3116], [-30.9786, 68.0613], [-32.1373, 68.3849], [-32.2747, 67.9228], [-33.157, 67.6267], [-34.1016, 66.7258], [-34.6329, 66.4351], [-36.3792, 65.8307], [-37.7541, 65.593], [-39.9609, 65.5562], [-39.5779, 65.3407], [-40.6554, 64.9154], [-40.1822, 64.48], [-40.6179, 64.1317], [-40.5504, 63.7253], [-42.1529, 62.5686], [-42.3216, 62.1526], [-42.1103, 61.8572], [-42.4188, 61.537], [-42.7171, 60.7675], [-43.1565, 60.3329], [-43.3203, 59.9281], [-44.0654, 59.9247], [-45.3793, 60.2028], [-45.5904, 60.5189], [-46.0467, 60.6157], [-46.0116, 61.0971], [-46.8746, 60.8163], [-47.7963, 60.8289], [-48.922, 61.2775], [-49.2891, 61.59], [-49.5534, 62.2328], [-50.3192, 62.4731], [-50.3382, 62.8287], [-51.4688, 63.6423], [-51.4511, 63.9047], [-52.0934, 64.4158], [-52.259, 65.1549], [-53.6346, 66.4136], [-53.0382, 66.8268], [-53.8845, 67.1355], [-53.4189, 67.5746], [-53.578, 67.8369], [-53.0393, 68.6108], [-51.2493, 68.74], [-50.5, 69.9358], [-52.2545, 70.059], [-54.0143, 70.4217], [-54.1659, 70.8201], [-52.4052, 70.6867], [-51.5245, 70.4394], [-51.1301, 70.9717], [-53.117, 71.313], [-53.4761, 71.6402], [-54.689, 71.3672], [-55.5939, 71.5536], [-55.3156, 72.1107], [-55.6017, 72.4536], [-54.7379, 72.8726], [-55.6687, 73.0078], [-55.2972, 73.2624], [-56.104, 73.5582], [-55.9295, 73.8954], [-56.7063, 74.2192], [-56.2555, 74.5268], [-58.6035, 75.3853], [-58.5163, 75.6891], [-61.3747, 76.1801], [-63.4388, 76.3394], [-66.8262, 75.9688], [-68.149, 76.0671], [-69.3728, 76.3319], [-69.252, 76.6861], [-70.7928, 76.869], [-70.8629, 77.1755], [-68.9784, 77.1952], [-68.1354, 77.3795], [-66.4531, 77.393], [-66.6912, 77.6813], [-69.3515, 77.4671], [-72.8181, 78.1944], [-72.3957, 78.5043], [-68.9935, 78.8574], [-67.4822, 79.1169], [-65.9679, 79.1324], [-64.7923, 80.0006], [-66.8437, 80.0761], [-66.996, 80.413], [-62.9932, 81.2069], [-61.436, 81.1337], [-61.2029, 81.7469], [-58.7174, 82.0932], [-54.7259, 82.3513], [-52.7757, 82.3218], [-50.8944, 81.8952], [-49.6942, 81.9722], [-48.8612, 82.4054], [-45.2912, 81.8288], [-44.2389, 82.3681], [-46.4782, 82.9519], [-43.1945, 83.255], [-37.828, 83.4856], [-30.7029, 83.5935]]], [[[-69.5694, 83.0249], [-63.641, 82.8127], [-61.477, 82.4674], [-62.1766, 82.0434], [-64.5741, 81.7336], [-65.4838, 81.2848], [-70.1434, 80.3977], [-71.3878, 79.7618], [-73.2937, 79.5217], [-75.2595, 79.4209], [-76.2558, 79.0068], [-74.4334, 78.724], [-75.866, 78.0098], [-78.0127, 77.9461], [-78.0762, 77.5191], [-79.3408, 77.1584], [-78.2888, 76.978], [-78.2844, 76.5711], [-80.6903, 76.1765], [-81.1708, 76.5128], [-83.8856, 76.4531], [-85.1412, 76.3046], [-89.5701, 76.4919], [-89.4997, 76.8268], [-88.3982, 77.104], [-86.8737, 77.2004], [-88.0946, 77.7193], [-87.0179, 77.8922], [-87.5519, 78.1767], [-86.808, 78.7744], [-84.3162, 78.9753], [-85.0901, 79.6122], [-86.4207, 79.8453], [-86.3073, 80.3194], [-83.7236, 80.229], [-80.051, 80.5287], [-83.4013, 80.714], [-85.3074, 80.526], [-88.9213, 80.8054], [-89.9474, 81.1725], [-88.9786, 81.5414], [-90.4903, 81.8772], [-86.5807, 82.1873], [-84.8968, 82.4494], [-82.1225, 82.6019], [-79.8864, 82.9385], [-77.4796, 82.8831], [-75.7449, 83.0471], [-69.5694, 83.0249]]], [[[-91.9977, 81.1854], [-90.643, 80.5937], [-87.6749, 80.3722], [-87.1442, 79.6624], [-85.5014, 79.5303], [-85.2899, 79.2083], [-87.0164, 78.8987], [-88.7911, 78.1925], [-90.6143, 78.1498], [-92.6782, 78.3893], [-95.1032, 79.29], [-95.297, 79.6531], [-96.7734, 80.1358], [-95.6148, 80.3962], [-96.1328, 80.6913], [-95.2697, 81.0007], [-91.9977, 81.1854]]], [[[-103.7063, 79.3521], [-99.6094, 78.5831], [-99.1664, 77.8569], [-100.5859, 77.8917], [-101.0742, 78.1938], [-102.7313, 78.3711], [-103.5183, 78.7691], [-105.5358, 79.0325], [-105.3877, 79.3235], [-103.7063, 79.3521]]], [[[-96.2564, 78.5511], [-94.8873, 78.3454], [-95.0872, 77.9927], [-96.9895, 77.806], [-98.2548, 78.4293], [-98.212, 78.8046], [-96.2564, 78.5511]]], [[[-109.9412, 78.6785], [-109.3908, 78.3367], [-113.1499, 78.4084], [-110.4077, 78.7566], [-109.9412, 78.6785]]], [[[-110.4581, 78.1035], [-109.7718, 77.9574], [-110.1984, 77.5246], [-111.952, 77.3442], [-113.1643, 77.5302], [-113.2153, 77.9035], [-110.4581, 78.1035]]], [[[-95.4843, 77.7921], [-93.301, 77.7399], [-93.5196, 77.4745], [-95.9872, 77.484], [-95.4843, 77.7921]]], [[[-116.0081, 77.4607], [-115.6239, 77.2658], [-116.2205, 76.6111], [-119.3679, 76.2218], [-119.9128, 75.8589], [-121.9083, 76.0347], [-122.7741, 76.2278], [-121.6138, 76.4415], [-119.0902, 77.3051], [-116.8353, 77.5288], [-116.0081, 77.4607]]], [[[-94.616, 76.9584], [-92.7162, 76.6029], [-91.305, 76.6808], [-90.8547, 76.4373], [-89.2844, 76.3017], [-90.2515, 76.0536], [-88.2014, 75.512], [-87.257, 75.6177], [-86.0687, 75.5022], [-83.932, 75.819], [-82.1538, 75.8309], [-79.6602, 75.4494], [-79.5082, 74.8801], [-80.2779, 74.5816], [-81.8089, 74.4766], [-83.5318, 74.5856], [-84.4256, 74.5081], [-88.4231, 74.4942], [-89.8444, 74.5485], [-91.9616, 74.7931], [-92.4283, 75.3828], [-92.1851, 75.8465], [-93.0917, 76.3541], [-95.2739, 76.2644], [-96.6397, 76.703], [-96.7583, 76.9717], [-94.616, 76.9584]]], [[[-108.3869, 76.0667], [-107.1356, 75.8787], [-106.3967, 76.0602], [-105.4812, 75.7457], [-105.8625, 75.1915], [-107.1533, 74.9272], [-108.8312, 75.0648], [-110.9408, 74.6387], [-112.5193, 74.4169], [-113.5141, 74.43], [-114.4518, 75.0879], [-115.7289, 74.9682], [-117.6001, 75.2716], [-116.6098, 76.0738], [-115.5806, 76.4375], [-114.1939, 76.4515], [-112.6975, 76.2016], [-111.0527, 75.5484], [-109.0865, 75.5065], [-108.9449, 75.6989], [-110.2703, 76.4169], [-109.3386, 76.76], [-108.467, 76.7376], [-108.3869, 76.0667]]], [[[-97.7259, 76.4961], [-97.4097, 75.5522], [-97.7994, 75.1167], [-100.2344, 75.0077], [-100.7122, 75.4064], [-102.5413, 75.5136], [-101.4313, 75.9919], [-102.1378, 76.2848], [-100.388, 76.6135], [-97.7259, 76.4961]]], [[[-102.4259, 76.0864], [-103.3148, 75.7641], [-104.3506, 76.1823], [-103.0981, 76.3115], [-102.4259, 76.0864]]], [[[-93.5518, 75.0513], [-93.5471, 74.691], [-94.6973, 74.6422], [-96.5658, 75.0987], [-95.6707, 75.5287], [-94.4272, 75.5935], [-93.5518, 75.0513]]], [[[-18.0005, 75.4073], [-17.5861, 74.9929], [-18.6708, 75.0015], [-18.0005, 75.4073]]], [[[-119.737, 74.13], [-117.5149, 74.2318], [-115.5107, 73.6188], [-115.4468, 73.4388], [-118.9615, 72.6842], [-119.4078, 72.3604], [-120.1802, 72.2126], [-120.6195, 71.5057], [-123.2107, 71.1235], [-124.0077, 71.6774], [-125.7626, 72.1375], [-124.9871, 72.5881], [-124.8364, 73.0762], [-123.7973, 73.7682], [-124.6962, 74.3481], [-121.3153, 74.5299], [-119.737, 74.13]]], [[[-93.4102, 74.1788], [-92.2228, 73.9726], [-90.3547, 73.8687], [-92.118, 72.7539], [-93.3407, 72.8018], [-94.0376, 72.0288], [-95.1929, 72.0275], [-95.5478, 72.7816], [-95.633, 73.6954], [-94.9736, 74.0414], [-93.4102, 74.1788]]], [[[-100.002, 73.946], [-99.1579, 73.7316], [-97.5819, 73.8876], [-97.0017, 73.6665], [-97.7959, 73.2852], [-97.0519, 72.6367], [-96.6133, 71.8339], [-98.663, 71.3021], [-99.167, 71.3672], [-100.5944, 72.1524], [-101.7241, 72.3149], [-102.7137, 72.783], [-101.9225, 73.0568], [-101.3508, 72.7463], [-100.4847, 72.773], [-100.2828, 73.1203], [-101.4509, 73.431], [-100.9151, 73.8052], [-100.002, 73.946]]], [[[-86.4735, 71.0427], [-84.7896, 71.0933], [-84.6995, 71.6315], [-85.9115, 71.9866], [-85.3411, 72.4216], [-85.6445, 72.7745], [-85.0184, 73.3356], [-82.6596, 73.7296], [-81.406, 73.6346], [-80.2748, 72.7455], [-80.9413, 72.2101], [-78.453, 72.4352], [-77.7532, 72.7248], [-76.6979, 72.6951], [-75.2943, 72.4809], [-74.9032, 72.1005], [-73.7136, 71.7198], [-71.6406, 71.5163], [-69.9501, 70.8449], [-68.3583, 70.5231], [-67.3637, 70.0344], [-66.6852, 69.2858], [-67.7517, 69.0387], [-68.038, 68.5507], [-67.033, 68.3261], [-66.2251, 67.9587], [-64.5275, 67.8127], [-64.0079, 67.3473], [-61.9684, 67.019], [-61.2997, 66.6488], [-61.9915, 66.0354], [-62.6589, 65.6399], [-63.3643, 65.5433], [-63.4018, 65.1185], [-64.6653, 65.1689], [-65.4017, 65.7639], [-65.3054, 66.0085], [-66.4771, 66.2797], [-67.1835, 66.0345], [-68.2568, 65.9386], [-67.3034, 65.4829], [-66.8606, 65.0916], [-65.2748, 64.6316], [-65.0107, 64.0088], [-64.6786, 64.0281], [-64.5144, 63.2639], [-65.0688, 63.2635], [-65.2659, 62.715], [-65.9788, 63.0007], [-67.676, 63.0935], [-66.2815, 62.3027], [-66.2567, 61.8683], [-67.4401, 62.1513], [-69.0823, 62.4052], [-69.5452, 62.7448], [-70.2364, 62.7634], [-71.2538, 63.0424], [-73.4439, 64.4236], [-74.5124, 64.6702], [-75.0675, 64.4567], [-76.7239, 64.242], [-77.7912, 64.367], [-78.1745, 64.6178], [-78.0957, 64.9392], [-77.4474, 65.1618], [-77.3267, 65.4532], [-75.8283, 65.227], [-73.5607, 65.5429], [-74.434, 66.139], [-73.0333, 66.7283], [-72.2201, 67.2543], [-73.3283, 68.2668], [-74.648, 68.7076], [-74.9174, 68.9828], [-76.4034, 68.6923], [-75.7872, 69.3186], [-77.5917, 69.8455], [-77.7219, 70.1707], [-79.3033, 69.8948], [-81.0982, 70.0912], [-82.1387, 69.8413], [-83.0913, 70.004], [-83.8594, 69.9627], [-86.3219, 70.1454], [-86.6244, 70.4013], [-87.9006, 70.2519], [-88.8483, 70.5231], [-89.3655, 71.0671], [-88.0387, 70.9512], [-87.8724, 71.2085], [-89.0794, 71.2879], [-89.8457, 71.4923], [-90.0251, 71.9489], [-89.2631, 73.0691], [-87.7197, 73.7229], [-86.7687, 73.8341], [-85.1108, 73.8081], [-86.6293, 72.8709], [-86.036, 71.7709], [-85.0235, 71.3532], [-86.4735, 71.0427]]], [[[-79.8893, 73.7014], [-78.2866, 73.6659], [-77.2066, 73.4996], [-76.2895, 73.081], [-76.4005, 72.8207], [-77.836, 72.8968], [-79.5006, 72.7559], [-80.1833, 73.2246], [-80.8241, 73.3807], [-80.8492, 73.7211], [-79.8893, 73.7014]]], [[[-105.2006, 72.9474], [-106.9216, 73.4799], [-105.5123, 73.7657], [-104.583, 73.3538], [-105.2006, 72.9474]]], [[[-114.4977, 72.6258], [-113.5003, 72.6944], [-112.7539, 72.986], [-111.2698, 72.7137], [-108.6983, 72.4995], [-108.2105, 71.7511], [-107.306, 71.8947], [-107.6958, 72.1493], [-108.2382, 73.1059], [-107.72, 73.3289], [-106.4822, 73.1962], [-105.415, 72.7883], [-105.2342, 72.415], [-104.3495, 71.434], [-104.5696, 71.1039], [-103.9535, 70.7626], [-100.9732, 70.0295], [-100.9351, 69.7152], [-102.2343, 69.8422], [-102.9197, 69.5647], [-101.9755, 69.4069], [-101.857, 69.0239], [-103.4681, 68.8084], [-105.0195, 69.0813], [-106.1408, 69.1621], [-106.659, 69.4396], [-107.4399, 69.0021], [-108.946, 68.7597], [-111.3108, 68.542], [-113.1277, 68.4941], [-113.6168, 68.8385], [-113.6941, 69.195], [-115.1591, 69.2647], [-116.5135, 69.4247], [-117.1043, 69.8042], [-117.1353, 70.1001], [-114.5923, 70.3125], [-112.6378, 70.2253], [-112.1143, 70.4468], [-113.7573, 70.6907], [-115.991, 70.5864], [-117.5872, 70.6296], [-118.2642, 70.8882], [-117.8141, 71.1588], [-118.8683, 71.687], [-118.9446, 71.9855], [-118.2136, 72.2629], [-118.3745, 72.5339], [-117.5517, 72.8311], [-114.6382, 73.3727], [-114.1091, 72.8611], [-114.4977, 72.6258]]]] }, "properties": { "name": "North America", "id": "northAmerica" }, "id": "northAmerica" },
        { "type": "Feature", "geometry": { "type": "MultiPolygon", "coordinates": [[[[179.9991, -16.1686], [179.7483, -16.4464], [179.9281, -16.7443], [179.007, -16.9001], [178.805, -16.6315], [179.5517, -16.2498], [179.9991, -16.1686]]], [[[178.2804, -17.372], [178.5915, -17.6516], [178.6679, -18.0809], [177.8471, -18.2549], [177.3216, -18.0773], [177.2638, -17.8633], [177.6181, -17.4612], [178.2804, -17.372]]], [[[164.0598, -20.1414], [164.4358, -20.2821], [165.1918, -20.7691], [165.6627, -21.2671], [166.3033, -21.6373], [166.9425, -22.0901], [166.7742, -22.376], [166.096, -21.9565], [165.2419, -21.5255], [164.4549, -20.829], [164.1699, -20.4801], [164.0598, -20.1414]]], [[[173.2404, -34.899], [173.8441, -35.0264], [174.3204, -35.2466], [174.5437, -35.5822], [174.391, -35.7739], [174.802, -36.3093], [174.7226, -36.8411], [175.2996, -36.9933], [175.4608, -36.4757], [175.8762, -36.9578], [176.108, -37.645], [176.7698, -37.8895], [177.3358, -37.9907], [178.0091, -37.5548], [178.536, -37.692], [178.2679, -38.5509], [177.9763, -38.7223], [177.9656, -39.1426], [177.4077, -39.0809], [176.954, -39.3677], [177.1098, -39.6731], [176.8422, -40.1578], [175.9828, -41.2134], [175.3098, -41.6107], [175.1656, -41.4176], [174.6356, -41.2893], [175.1625, -40.6217], [175.2543, -40.2892], [175.0093, -39.9523], [173.9342, -39.5093], [173.8441, -39.1395], [174.5974, -38.7849], [174.7155, -38.2256], [174.9281, -37.8043], [174.7292, -37.4488], [174.782, -36.9436], [174.4758, -36.9418], [174.4469, -36.4509], [173.9453, -36.1761], [173.1166, -35.2053], [173.2404, -34.899]]], [[[137.5963, -35.7384], [137.4485, -36.0749], [136.7551, -36.0332], [136.6388, -35.7491], [137.334, -35.5924], [137.5963, -35.7384]]], [[[173.0686, -41.1859], [173.2306, -41.2844], [173.7376, -40.9888], [174.3026, -41.0194], [174.0922, -41.5055], [174.2831, -41.7407], [173.5449, -42.518], [173.2213, -42.9765], [172.7184, -43.2589], [172.9208, -43.8914], [172.3855, -43.8297], [171.4426, -44.136], [171.1133, -45.0393], [170.7005, -45.6843], [169.6866, -46.5516], [168.382, -46.6054], [168.1889, -46.3621], [167.682, -46.193], [166.7316, -46.1979], [166.7338, -45.5436], [167.1946, -44.9634], [167.7872, -44.595], [168.3665, -44.0818], [168.8064, -43.9922], [169.6613, -43.5913], [170.3027, -43.1075], [170.7417, -42.9273], [171.2571, -42.4652], [171.4861, -41.7949], [172.0108, -41.4447], [172.1396, -40.9471], [172.6407, -40.5183], [172.9892, -40.8481], [173.0686, -41.1859]]], [[[144.8184, -40.7216], [145.2832, -40.77], [146.3175, -41.1637], [146.99, -40.9923], [147.4547, -41.0017], [147.9687, -40.7797], [148.2928, -40.9471], [148.3017, -42.0399], [147.9244, -42.5726], [147.9807, -43.1572], [147.4081, -42.894], [146.8741, -43.6126], [145.9943, -43.376], [145.4874, -42.9268], [145.2681, -42.5442], [145.2384, -42.0195], [144.7776, -41.4189], [144.6458, -40.9808], [144.8184, -40.7216]]], [[[167.9559, -46.6946], [168.2409, -47.0701], [167.6292, -47.1425], [167.9559, -46.6946]]], [[[150.9952, -2.6885], [152.1795, -3.4102], [153.1241, -4.2523], [153.0233, -4.6664], [152.6807, -4.4986], [152.5985, -3.9948], [152.1924, -3.5057], [151.9731, -3.4533], [150.9681, -2.7799], [150.9952, -2.6885]]], [[[140.9761, -9.1187], [140.9752, -6.9054], [140.8625, -6.7399], [140.9748, -6.3461], [140.9743, -5.0398], [140.9735, -2.6099], [141.1856, -2.6276], [142.2115, -3.0835], [142.9053, -3.3206], [143.509, -3.4311], [144.0159, -3.7835], [144.4775, -3.8253], [145.0879, -4.3491], [145.3347, -4.3855], [145.767, -4.8231], [145.8527, -5.4712], [146.4036, -5.6164], [147.0344, -5.9191], [147.3766, -5.9506], [147.8018, -6.3151], [147.8453, -6.6626], [147.1191, -6.7217], [146.9607, -6.929], [147.1902, -7.3782], [147.7242, -7.8762], [148.1268, -8.1035], [148.2466, -8.5545], [148.5831, -9.0516], [149.2476, -9.0712], [149.2032, -9.4068], [149.7612, -9.8058], [149.8748, -10.0131], [150.6672, -10.2573], [150.4825, -10.6368], [150.0169, -10.5773], [149.7541, -10.3531], [148.3833, -10.1853], [147.7686, -10.0699], [146.6966, -9.0255], [146.0334, -8.0764], [144.9738, -7.8021], [144.5099, -7.5673], [143.6137, -8.2003], [143.0948, -8.3112], [143.3922, -8.8017], [143.366, -8.9611], [142.6474, -9.3277], [142.2297, -9.1697], [141.1333, -9.2212], [140.9761, -9.1187]]], [[[151.9158, -4.2967], [152.4055, -4.3406], [152.4001, -4.7312], [152.0135, -5.0038], [152.1431, -5.3571], [151.8652, -5.5649], [151.515, -5.5524], [151.2291, -5.92], [150.4284, -6.2764], [149.6524, -6.2906], [149.3825, -6.078], [149.1264, -6.1277], [148.4011, -5.7651], [148.3447, -5.5449], [148.999, -5.4845], [149.2454, -5.5729], [150.2987, -5.5356], [150.953, -5.4237], [151.3268, -4.9603], [151.6713, -4.8835], [151.5518, -4.3455], [151.9158, -4.2967]]], [[[155.9575, -6.687], [155.7191, -6.8628], [155.344, -6.7217], [155.202, -6.3075], [154.782, -5.9706], [154.7412, -5.5453], [154.9969, -5.54], [155.467, -6.145], [155.8225, -6.3803], [155.9575, -6.687]]], [[[159.8793, -8.5341], [158.944, -8.0409], [158.5969, -7.759], [158.7345, -7.6046], [159.1096, -7.9037], [159.8433, -8.3272], [159.8793, -8.5341]]], [[[160.7493, -8.3139], [160.9979, -8.6122], [161.2584, -9.3171], [160.8736, -9.1569], [160.5904, -8.3729], [160.7493, -8.3139]]], [[[159.7505, -9.2727], [159.9707, -9.4334], [160.3547, -9.4214], [160.6254, -9.5888], [160.6494, -9.9288], [159.8535, -9.7916], [159.6218, -9.5319], [159.7505, -9.2727]]], [[[161.7152, -10.3873], [162.1054, -10.4539], [162.1236, -10.8246], [161.5381, -10.5671], [161.7152, -10.3873]]], [[[143.1787, -11.9547], [143.1104, -12.3036], [143.4015, -12.6401], [143.5866, -13.4435], [143.5485, -13.7409], [143.7562, -14.3491], [143.9617, -14.4627], [144.4731, -14.2319], [144.648, -14.4924], [145.2876, -14.943], [145.2717, -15.4765], [145.4581, -16.0563], [145.4261, -16.4061], [145.902, -17.0701], [146.1257, -17.6352], [146.0325, -18.2731], [146.3335, -18.5536], [146.2971, -18.8412], [146.4813, -19.0787], [147.1387, -19.393], [147.4183, -19.3784], [147.9155, -19.8693], [148.7593, -20.2897], [148.6839, -20.5804], [149.205, -21.1251], [149.7039, -22.4408], [150.0763, -22.1647], [150.5415, -22.5593], [150.7639, -22.5762], [150.843, -23.4582], [151.5004, -24.0126], [151.9025, -24.2008], [152.1298, -24.5976], [152.4565, -24.8023], [152.6545, -25.2022], [152.9137, -25.4322], [153.1649, -25.9644], [153.0842, -26.304], [153.117, -27.1944], [153.5756, -28.2407], [153.6044, -28.8546], [153.3483, -29.2905], [153.2724, -29.8924], [153.0305, -30.5635], [152.9439, -31.4349], [152.5595, -32.0457], [152.4703, -32.439], [152.1644, -32.7573], [151.8129, -32.9011], [151.4839, -33.3476], [151.2314, -34.0295], [150.9601, -34.2971], [150.6903, -35.1778], [150.1953, -35.8334], [149.9605, -36.8455], [149.9325, -37.5287], [149.2987, -37.8021], [148.2626, -37.8309], [147.3957, -38.2189], [146.8568, -38.6632], [145.9353, -38.9016], [145.791, -38.6668], [144.6653, -38.21], [143.5392, -38.8208], [142.6123, -38.4515], [141.725, -38.2713], [141.4244, -38.3636], [141.0112, -38.0769], [140.6272, -38.0285], [139.7843, -37.2459], [139.8575, -36.6622], [139.5481, -36.0967], [139.0376, -35.6892], [138.1845, -35.6128], [138.5112, -35.0242], [138.4899, -34.7637], [138.0895, -34.1697], [137.6918, -35.1432], [136.8834, -35.2399], [137.0144, -34.9159], [137.3908, -34.9137], [137.4938, -34.1613], [137.9319, -33.5789], [137.8525, -33.2007], [137.4423, -33.1936], [137.2372, -33.6295], [136.4307, -34.0299], [135.6476, -34.9394], [135.1855, -33.9069], [134.7909, -33.3285], [134.3013, -33.1652], [134.1002, -32.7488], [134.2343, -32.5486], [133.5511, -32.1829], [133.212, -32.1838], [132.7575, -31.956], [132.2146, -32.0071], [131.7214, -31.6964], [131.1435, -31.4957], [130.783, -31.604], [130.1296, -31.5792], [128.9462, -31.7026], [128.0677, -32.0666], [127.3198, -32.2641], [125.9171, -32.2969], [124.759, -32.8829], [124.126, -33.1292], [123.6506, -33.8364], [123.2076, -33.9882], [122.7774, -33.891], [122.1511, -33.9917], [122.061, -33.8745], [121.4054, -33.8266], [120.4186, -33.9629], [119.854, -33.9749], [119.4505, -34.3681], [118.8952, -34.48], [118.1357, -34.9865], [117.5817, -35.0979], [116.5172, -34.9878], [115.9868, -34.7952], [115.7262, -34.5262], [115.0089, -34.2558], [115.1816, -33.6433], [115.5154, -33.5314], [115.6832, -33.1927], [115.6982, -31.6946], [115.1767, -30.8081], [114.9947, -30.2164], [114.9592, -29.4334], [114.5375, -28.5429], [114.165, -28.0809], [114.0283, -27.3471], [113.5818, -26.5583], [113.853, -26.3319], [113.5889, -26.0984], [113.5396, -25.6252], [114.2156, -26.2893], [114.2143, -25.8516], [113.671, -24.9772], [113.4175, -24.4356], [113.5529, -23.7329], [113.7571, -23.4182], [113.7953, -22.9144], [113.683, -22.6379], [113.9586, -21.9392], [114.1637, -22.3231], [114.3777, -22.3413], [114.6027, -21.9423], [114.8588, -21.7359], [115.4563, -21.4917], [116.0107, -21.0305], [116.7068, -20.6537], [117.4063, -20.7211], [118.1991, -20.3753], [118.7513, -20.2617], [119.1047, -19.9954], [119.5858, -20.0384], [120.1962, -19.9092], [120.8785, -19.6651], [121.4937, -19.1067], [121.8337, -18.4773], [122.2372, -17.9686], [122.1604, -17.3138], [122.7202, -16.7878], [122.9705, -16.4367], [123.1419, -16.8633], [123.5254, -17.4856], [123.778, -16.8677], [123.4903, -16.4908], [124.577, -16.1135], [124.3817, -15.758], [124.8389, -15.1609], [125.2433, -14.9448], [125.1789, -14.7148], [125.6814, -14.3881], [126.021, -14.4947], [126.1115, -14.1142], [126.5696, -14.1608], [126.9034, -13.744], [127.6727, -14.195], [128.1996, -14.7517], [129.4589, -14.9332], [129.7536, -14.7894], [129.3786, -14.3926], [129.7097, -13.9802], [129.8389, -13.5731], [130.2597, -13.3024], [130.1682, -12.9575], [130.3999, -12.688], [130.898, -12.5238], [131.0458, -12.1895], [131.4382, -12.277], [132.3722, -12.2392], [132.5839, -12.1101], [132.6829, -11.5055], [133.0247, -11.4527], [133.1854, -11.7057], [133.904, -11.8322], [134.2369, -12.008], [134.7301, -11.9844], [135.218, -12.2215], [135.7884, -11.9072], [136.0818, -12.4226], [136.5403, -11.9578], [136.9474, -12.3498], [136.5372, -12.7843], [136.5945, -13.0036], [135.9273, -13.3041], [135.9894, -13.8102], [135.8833, -14.1533], [135.4053, -14.7583], [135.5309, -15.0002], [136.2052, -15.4033], [136.7844, -15.8942], [137.002, -15.8783], [137.7037, -16.2329], [138.2449, -16.7181], [139.0097, -16.8992], [139.2485, -17.3285], [140.036, -17.7027], [140.5114, -17.6245], [140.8305, -17.4146], [141.2189, -16.6462], [141.412, -16.0696], [141.4515, -15.6053], [141.6255, -15.0566], [141.523, -14.4702], [141.5945, -14.1529], [141.4724, -13.7977], [141.6455, -13.2593], [141.6779, -12.4914], [141.9513, -11.8961], [142.1684, -10.9466], [142.4565, -10.7074], [142.8369, -11.3071], [142.8724, -11.8215], [143.1787, -11.9547]]], [[[130.6188, -11.3763], [131.2682, -11.1899], [131.5385, -11.4367], [130.9508, -11.9263], [130.645, -11.7425], [130.6188, -11.3763]]], [[[136.7148, -13.804], [136.8945, -14.2931], [136.3632, -14.2288], [136.4249, -13.8648], [136.7148, -13.804]]], [[[166.7458, -14.8267], [166.8102, -15.1574], [167.1316, -15.1352], [167.1995, -15.4859], [166.8257, -15.635], [166.6313, -15.406], [166.5274, -14.8502], [166.7458, -14.8267]]], [[[167.4126, -16.0958], [167.8365, -16.4496], [167.4494, -16.5552], [167.4126, -16.0958]]]] }, "properties": { "name": "Oceania", "id": "oceania" }, "id": "oceania" },
        { "type": "Feature", "geometry": { "type": "MultiPolygon", "coordinates": [[[[-59.7339, -80.3442], [-60.5828, -80.9484], [-64.2683, -80.7486], [-65.9801, -80.3846], [-62.5189, -80.3736], [-61.3432, -79.8866], [-59.7064, -79.8755], [-59.7339, -80.3442]]], [[[-159.053, -79.8076], [-161.8655, -79.7037], [-164.2259, -79.3206], [-163.2562, -78.7223], [-161.6431, -78.9012], [-159.6842, -79.4023], [-159.053, -79.8076]]], [[[-70.334, -79.6797], [-71.7836, -79.4445], [-70.544, -78.8838], [-67.4785, -78.3627], [-66.7281, -78.3836], [-69.2509, -79.2101], [-70.334, -79.6797]]], [[[-45.2226, -78.8106], [-43.722, -78.8186], [-42.9654, -79.4769], [-43.5278, -80.1916], [-49.1875, -80.643], [-49.773, -80.7842], [-54.1626, -80.8703], [-53.4823, -80.1889], [-52.2971, -80.1414], [-50.3391, -79.4796], [-50.7331, -79.2829], [-50.2197, -78.6051], [-49.0811, -78.0476], [-46.8257, -77.7852], [-45.5302, -77.8815], [-43.8086, -78.2864], [-43.9473, -78.5975], [-45.2226, -78.8106]]], [[[-120.5562, -73.756], [-120.2726, -73.9891], [-121.0625, -74.3375], [-122.8591, -74.3428], [-122.6247, -73.9655], [-123.1121, -73.6823], [-120.5562, -73.756]]], [[[-126.3299, -73.2864], [-124.9933, -73.8297], [-124.8731, -74.2083], [-127.4143, -73.5163], [-126.3299, -73.2864]]], [[[-74.3544, -73.0986], [-74.5748, -73.6113], [-75.9009, -73.3325], [-75.3769, -72.8203], [-74.3544, -73.0986]]], [[[-91.1608, -73.1821], [-91.6699, -72.6236], [-90.8072, -72.6108], [-91.1608, -73.1821]]], [[[-98.0911, -71.9125], [-96.8695, -71.8508], [-95.6095, -72.0683], [-96.0518, -72.5775], [-98.4078, -72.5477], [-100.1951, -72.2725], [-102.2647, -72.1354], [-102.128, -71.9853], [-98.6155, -71.7638], [-98.0911, -71.9125]]], [[[-73.7067, -70.635], [-74.205, -70.924], [-76.1763, -71.1326], [-76.5004, -70.9413], [-75.0076, -70.6088], [-73.7067, -70.635]]], [[[-74.9871, -69.7277], [-74.8489, -70.1791], [-75.7267, -70.0961], [-74.9871, -69.7277]]], [[[-70.0511, -69.1892], [-69.417, -69.5834], [-68.3361, -70.8561], [-68.2411, -71.822], [-69.2092, -72.5344], [-72.3675, -72.6698], [-73.0864, -72.4079], [-71.1066, -72.047], [-72.4121, -71.6622], [-73.8994, -72.1522], [-75.3531, -71.8783], [-75.2925, -71.6151], [-74.1872, -71.383], [-72.6216, -71.3883], [-71.1941, -70.9848], [-71.0611, -70.5369], [-70.328, -70.3611], [-71.8537, -69.9692], [-71.869, -68.9411], [-70.417, -68.7889], [-70.0511, -69.1892]]], [[[-67.9885, -67.4745], [-68.5804, -67.7328], [-69.0825, -67.403], [-68.3359, -66.802], [-67.6878, -67.1473], [-67.9885, -67.4745]]], [[[-57.0206, -63.3729], [-58.2631, -63.7636], [-58.8954, -64.389], [-59.9632, -64.4312], [-61.0598, -64.9812], [-61.7361, -65.0335], [-62.1453, -65.3318], [-62.3051, -65.8405], [-61.8754, -66.296], [-63.7525, -66.2778], [-64.0778, -66.6542], [-64.6862, -66.8064], [-64.8193, -67.3076], [-65.4432, -67.3262], [-65.6394, -68.1306], [-64.8984, -68.6734], [-63.3436, -68.8106], [-63.4559, -69.0419], [-62.4505, -69.5843], [-61.9611, -70.1201], [-61.9611, -70.9005], [-61.0172, -71.1668], [-61.2136, -71.5641], [-60.7193, -72.0728], [-60.3846, -73.0072], [-61.4054, -73.467], [-60.8789, -73.6122], [-61.0107, -74.4782], [-62.2257, -74.5057], [-63.9247, -75.0047], [-63.3634, -75.4517], [-66.3705, -76.0132], [-69.3044, -76.3506], [-70.0954, -76.6546], [-71.7987, -76.7527], [-75.2683, -76.5814], [-77.19, -76.6298], [-76.2487, -77.2747], [-75.3869, -77.474], [-72.852, -77.5903], [-73.2515, -77.8944], [-74.812, -78.1776], [-80.6015, -77.7519], [-81.4411, -77.8855], [-77.4325, -78.4346], [-77.8691, -78.7454], [-80.2923, -78.8226], [-83.246, -78.3569], [-83.26, -78.7742], [-80.1512, -79.2683], [-76.499, -79.3255], [-76.5578, -79.9035], [-75.2366, -80.8028], [-73.0296, -80.9173], [-70.239, -80.8565], [-64.7501, -81.5219], [-64.1371, -81.8695], [-65.9133, -82.1833], [-62.7357, -82.5273], [-61.5898, -83.3414], [-59.5159, -83.4586], [-57.3535, -82.8403], [-53.9862, -82.2006], [-48.3607, -81.8921], [-43.6692, -82.2699], [-41.4338, -81.2977], [-38.7718, -80.8823], [-37.2093, -81.0638], [-35.3269, -80.6505], [-29.3291, -80.172], [-24.2403, -80.0619], [-25.2586, -79.7623], [-29.9494, -79.599], [-30.3161, -79.1631], [-32.9943, -79.2288], [-36.2391, -78.7742], [-36.181, -78.4684], [-34.0758, -77.4252], [-32.0634, -77.1598], [-28.9336, -76.3701], [-26.0594, -75.9573], [-24.2696, -75.7668], [-19.4931, -75.54], [-17.2989, -74.334], [-15.6725, -74.4072], [-15.7488, -73.9456], [-16.5188, -73.6441], [-15.5959, -73.0968], [-14.3211, -73.123], [-14.2978, -72.7328], [-13.2087, -72.7852], [-11.497, -72.4128], [-10.8254, -71.5534], [-9.8879, -71.0274], [-9.2307, -71.1739], [-8.6466, -71.6728], [-7.7137, -71.5463], [-7.8735, -70.9404], [-5.9364, -70.7127], [-5.5879, -70.8569], [-5.9499, -71.3417], [-2.8121, -71.3208], [-0.8958, -71.3492], [-0.5431, -71.7128], [0.835, -71.2023], [2.6096, -70.9], [5.1132, -70.6559], [8.5232, -70.4739], [9.1415, -70.1836], [10.2175, -70.5081], [11.7014, -70.7664], [12.9292, -70.2133], [13.8228, -70.3434], [15.807, -70.3238], [18.1246, -70.5405], [19.1966, -70.2932], [19.2649, -70.9022], [21.0707, -70.8436], [21.705, -70.2586], [22.979, -70.8103], [23.8037, -70.4046], [24.7567, -70.892], [25.9743, -71.0372], [27.207, -70.9111], [30.0035, -70.2999], [31.3787, -70.2257], [32.6212, -70.0007], [32.9892, -69.6243], [32.5675, -69.0743], [33.1214, -68.689], [34.193, -68.7023], [35.2246, -69.6371], [37.5599, -69.7184], [38.8592, -70.006], [39.7053, -69.4258], [39.8637, -68.9669], [41.1328, -68.5749], [42.409, -68.3521], [42.8196, -68.123], [44.6999, -67.9042], [44.9893, -67.7692], [47.1174, -67.5726], [48.6479, -67.7941], [48.7136, -67.217], [49.2472, -66.9414], [50.6059, -67.15], [50.3325, -66.4447], [51.8843, -66.0199], [53.6719, -65.8587], [54.9481, -65.9164], [55.7102, -66.0798], [57.1853, -66.6133], [56.4533, -66.7798], [56.8919, -67.0563], [57.6274, -67.0142], [58.7376, -67.2295], [59.2507, -67.4851], [60.4821, -67.3853], [62.6878, -67.6476], [63.6989, -67.5082], [68.3279, -67.8895], [69.4163, -67.743], [69.9822, -68.4644], [69.5344, -68.7369], [69.6293, -69.2314], [68.9062, -69.3726], [69.0825, -69.8666], [68.1783, -69.8373], [67.2678, -70.2732], [67.9408, -70.4228], [69.2503, -70.4313], [68.8725, -71.0354], [68.0375, -71.391], [67.4321, -72.0031], [66.8919, -72.9486], [67.9714, -73.0857], [68.4197, -72.5149], [69.5548, -72.3746], [71.2766, -71.624], [71.9047, -70.7069], [72.7601, -70.3957], [72.8223, -70.0961], [73.9422, -69.7432], [75.4239, -69.8933], [75.8913, -69.5754], [77.8174, -69.069], [78.7265, -68.2779], [79.288, -68.1195], [82.017, -67.6902], [83.3043, -67.6032], [84.4851, -67.1145], [85.7107, -67.1611], [87.9803, -66.7882], [89.6986, -66.8229], [92.0734, -66.5077], [93.9644, -66.6897], [94.8397, -66.5015], [95.5411, -66.6311], [98.2577, -66.4673], [99.3701, -66.6484], [100.8891, -66.3581], [101.4746, -65.9511], [102.674, -65.8654], [103.9511, -65.9879], [108.1578, -66.6391], [109.4629, -66.9085], [110.6223, -66.5241], [110.9069, -66.0767], [113.0992, -65.8001], [113.7096, -65.9297], [114.3368, -66.3603], [115.3103, -66.561], [115.2739, -67.0279], [113.991, -67.2117], [114.0265, -67.4412], [116.7134, -67.047], [118.1388, -67.0825], [119.1331, -67.3706], [121.4875, -67.0905], [122.1826, -66.8593], [123.9693, -66.608], [124.5978, -66.7083], [125.8656, -66.3643], [126.6646, -66.4975], [127.5413, -67.051], [129.2369, -67.0417], [129.7412, -66.4686], [130.9517, -66.1912], [131.831, -66.2356], [133.4446, -66.0816], [134.9716, -66.3301], [135.352, -66.1273], [136.1941, -66.2924], [137.7539, -66.4065], [139.9001, -66.715], [141.9726, -66.8069], [142.8884, -67], [143.4481, -66.877], [144.6214, -67.1416], [143.9422, -67.7941], [145.9752, -67.6241], [146.8279, -67.9645], [147.0938, -68.3685], [148.4561, -68.467], [151.068, -68.3849], [151.562, -68.6939], [153.0819, -68.8568], [154.1997, -68.4178], [155.5202, -69.0246], [157.4813, -69.3087], [158.1578, -69.2088], [159.7838, -69.5217], [160.2095, -69.9749], [161.0369, -70.3172], [161.4244, -70.8268], [162.6749, -70.3047], [163.3487, -70.6208], [164.4034, -70.5103], [166.6269, -70.6643], [167.5692, -70.8103], [168.1725, -71.1832], [170.1625, -71.6307], [169.8287, -72.7288], [169.545, -73.0502], [167.6158, -73.337], [164.7758, -74.0286], [165.3027, -74.5936], [163.1672, -74.6021], [162.5337, -75.1671], [161.6797, -75.2177], [162.8156, -75.8463], [162.7628, -76.7456], [164.4296, -78.0422], [166.2087, -78.4515], [164.6347, -78.6033], [160.4829, -79.2017], [160.542, -80.425], [160.9078, -81.3901], [162.8214, -81.8664], [167.2328, -82.9521], [168.1099, -83.3618], [171.9172, -83.6441], [179.403, -84.2061], [180, -84.3517], [180, -89.9989], [-180, -89.9989], [-180, -89.583], [-180, -89.2931], [-180, -88.5869], [-180, -87.8811], [-180, -87.1753], [-180, -86.4695], [-180, -85.7633], [-180, -85.0575], [-180, -84.3517], [-171.7037, -84.5426], [-162.9335, -84.9012], [-157.1276, -85.1858], [-156.9864, -84.8111], [-163.5685, -84.5288], [-164.951, -83.8057], [-167.5528, -83.8111], [-169.1677, -83.4497], [-174.0661, -82.9002], [-171.8213, -82.8474], [-168.4178, -83.2287], [-163.111, -83.329], [-159.4445, -83.5434], [-157.6796, -83.1292], [-155.4594, -82.9805], [-153.0098, -82.4496], [-154.7175, -81.9409], [-153.9566, -81.7003], [-157.0326, -81.319], [-156.5283, -81.1623], [-148.1228, -80.9009], [-150.5755, -80.3536], [-148.3172, -80.0708], [-148.1765, -79.7761], [-152.0914, -79.2416], [-155.21, -78.9646], [-156.4693, -78.6353], [-154.7164, -78.3982], [-155.3416, -78.1918], [-157.2667, -78.1998], [-158.5003, -77.7786], [-158.2136, -77.1571], [-154.8149, -77.1269], [-153.4606, -77.4159], [-151.719, -77.4261], [-149.7177, -77.7976], [-145.967, -77.0688], [-145.7504, -76.7492], [-147.3404, -76.4384], [-146.383, -76.0998], [-143.5742, -75.5635], [-142.3298, -75.4907], [-141.5057, -75.6905], [-139.6911, -75.2129], [-137.6181, -75.0757], [-136.5494, -75.1396], [-135.362, -74.6904], [-133.4748, -74.852], [-132.0495, -74.7659], [-129.7907, -74.8915], [-127.8633, -74.7193], [-123.8894, -74.773], [-119.6771, -74.6544], [-118.3421, -74.3815], [-115.1052, -74.4551], [-114.7909, -73.9886], [-113.5085, -74.0889], [-113.9318, -74.982], [-111.6963, -74.7921], [-111.8064, -74.2696], [-110.307, -74.3668], [-110.3005, -74.7108], [-111.4631, -75.1334], [-109.2722, -75.1849], [-106.6189, -75.3438], [-104.9019, -75.1152], [-101.7081, -75.1272], [-101.0394, -75.4219], [-98.5578, -75.1898], [-101.2518, -74.4858], [-101.7154, -74.0237], [-102.7663, -73.8838], [-102.4108, -73.6166], [-100.9854, -73.7573], [-99.7812, -73.7201], [-100.0209, -73.4027], [-102.6751, -73.321], [-102.4092, -72.9876], [-98.0125, -73.0334], [-96.1521, -73.3095], [-94.2463, -73.313], [-92.241, -73.1785], [-90.9209, -73.3192], [-90.2954, -72.9779], [-88.1945, -72.8585], [-88.4193, -73.2291], [-87.0379, -73.3538], [-85.9808, -73.2087], [-84.9811, -73.5021], [-82.1835, -73.8568], [-81.3088, -73.7383], [-81.2624, -73.3148], [-80.4421, -72.9446], [-79.5217, -73.0897], [-78.4078, -73.5558], [-76.8506, -73.4604], [-77.1349, -73.8177], [-75.293, -73.6388], [-73.9961, -73.6996], [-72.9293, -73.4479], [-68.821, -73.1053], [-67.6671, -72.8345], [-66.8277, -72.0905], [-67.4603, -71.5268], [-67.8884, -70.4215], [-68.4033, -70.0198], [-68.7078, -69.4321], [-67.3717, -69.4125], [-66.9749, -69.1608], [-67.3906, -68.8612], [-66.7933, -68.2402], [-67.1498, -68.0245], [-66.705, -67.5273], [-67.5859, -67.435], [-67.4934, -67.1127], [-66.371, -66.6089], [-65.7664, -66.6249], [-65.6172, -66.1353], [-64.0658, -65.5538], [-64.0381, -65.1791], [-62.5761, -64.7557], [-61.6317, -64.6047], [-60.8643, -64.0734], [-59.5102, -63.8208], [-58.8721, -63.5518], [-57.3897, -63.2264], [-57.0206, -63.3729]]]] }, "properties": { "name": "Antarctica", "id": "antarctica" }, "id": "antarctica" },
        { "type": "Feature", "geometry": { "type": "MultiPolygon", "coordinates": [[[[-77.9011, 7.2294], [-77.7439, 7.537], [-77.3509, 7.7057], [-77.2124, 8.0338], [-77.4072, 8.427], [-77.3742, 8.6583], [-76.8519, 8.0906], [-76.8879, 8.6197], [-76.2769, 8.9886], [-76.1355, 9.2656], [-75.6394, 9.4502], [-75.6709, 10.1964], [-75.4459, 10.611], [-74.8446, 11.1095], [-74.4545, 10.9892], [-74.0594, 11.3408], [-73.3137, 11.2959], [-72.7219, 11.7127], [-72.2749, 11.889], [-72.1358, 12.1886], [-71.7145, 12.4199], [-71.2622, 12.3351], [-71.1375, 12.0461], [-71.4886, 11.7189], [-71.8686, 11.6275], [-71.9469, 11.4144], [-71.5942, 10.6572], [-72.1129, 9.8155], [-71.7607, 9.3357], [-71.687, 9.0725], [-71.2979, 9.1257], [-71.0858, 9.3481], [-71.0527, 9.7059], [-71.3867, 10.2639], [-71.5445, 10.7788], [-71.4695, 10.9643], [-70.2326, 11.3732], [-70.2865, 11.8859], [-70.004, 12.1779], [-69.6316, 11.4801], [-68.8279, 11.4317], [-68.3987, 11.161], [-68.234, 10.5693], [-67.8715, 10.4721], [-66.9891, 10.6105], [-66.2471, 10.6323], [-65.8518, 10.2577], [-65.1292, 10.0699], [-64.8504, 10.0979], [-63.8734, 10.6638], [-63.4968, 10.6434], [-62.7024, 10.7499], [-62.8429, 10.4179], [-62.5151, 10.176], [-62.3204, 9.7831], [-62.1196, 9.9847], [-60.7923, 9.3605], [-61.0534, 9.0951], [-61.3039, 8.4102], [-60.801, 8.5926], [-60.3402, 8.6286], [-59.9807, 8.5327], [-59.2003, 8.0746], [-58.6266, 7.5459], [-58.4808, 7.0381], [-57.9825, 6.786], [-56.9698, 5.9927], [-55.9395, 5.7957], [-55.8283, 5.9617], [-54.834, 5.9883], [-53.8472, 5.7823], [-53.4544, 5.5635], [-52.8993, 5.425], [-52.2905, 4.942], [-51.6659, 4.2287], [-51.2198, 4.0938], [-51.0525, 3.2819], [-50.6592, 2.1309], [-50.459, 1.8295], [-49.9572, 1.6599], [-49.8988, 1.1628], [-50.2945, 0.8356], [-50.8163, 0.1724], [-51.2828, -0.085], [-51.7025, -0.7624], [-51.9476, -1.5867], [-51.2975, -1.2236], [-50.9177, -1.1153], [-50.69, -1.7616], [-50.4033, -2.0155], [-49.9993, -1.8317], [-49.7195, -1.9263], [-49.3137, -1.7319], [-48.9913, -1.83], [-48.71, -1.4877], [-48.4459, -1.5206], [-48.4497, -1.1455], [-48.115, -0.7376], [-47.3981, -0.6266], [-46.8113, -0.7797], [-46.6173, -0.9706], [-46.2191, -1.0314], [-45.6447, -1.3479], [-45.0763, -1.4664], [-44.6513, -1.7456], [-44.3084, -2.5353], [-43.9329, -2.5833], [-42.9368, -2.4652], [-42.2496, -2.7919], [-41.8761, -2.7466], [-41.3181, -2.9361], [-40.4745, -2.7954], [-39.9647, -2.8616], [-38.4757, -3.7174], [-38.0489, -4.2163], [-37.1746, -4.9124], [-36.5907, -5.0975], [-35.9799, -5.0544], [-35.5493, -5.1294], [-35.2357, -5.5667], [-34.9882, -6.3936], [-34.8056, -7.2885], [-34.8346, -7.9717], [-35.1578, -8.9305], [-35.3409, -9.2305], [-36.3983, -10.4841], [-36.9378, -10.8206], [-37.4119, -11.4971], [-37.6887, -12.0999], [-38.2397, -12.8443], [-38.7879, -12.7826], [-38.8352, -13.147], [-39.0894, -13.5882], [-38.9422, -14.0308], [-39.0596, -14.6549], [-38.8805, -15.8645], [-39.1251, -16.7634], [-39.2152, -17.3156], [-39.1539, -17.704], [-39.4869, -17.9903], [-39.7399, -18.6397], [-39.6999, -19.278], [-40.0013, -19.7419], [-40.3959, -20.5693], [-40.7892, -20.9062], [-41.0471, -21.5059], [-40.9879, -21.9201], [-41.1228, -22.0843], [-41.7054, -22.3098], [-41.9806, -22.5806], [-42.0423, -22.9472], [-42.9583, -22.9672], [-43.5327, -23.0462], [-43.8661, -22.9104], [-44.6373, -23.0556], [-44.9516, -23.3814], [-45.4232, -23.6854], [-45.9721, -23.796], [-46.8672, -24.2363], [-47.8766, -24.9976], [-48.5451, -25.8161], [-48.6776, -26.703], [-48.5542, -27.1962], [-48.6208, -28.0755], [-48.7997, -28.5754], [-49.2713, -28.871], [-49.7461, -29.3633], [-50.0333, -29.8009], [-50.2994, -30.4259], [-51.1572, -30.3642], [-51.4637, -31.0527], [-51.9724, -31.3839], [-52.1935, -31.8855], [-52.1273, -32.1678], [-52.3417, -32.4399], [-52.6523, -33.1377], [-53.4195, -33.7791], [-53.7853, -34.3806], [-54.1686, -34.6709], [-54.9023, -34.9328], [-55.6732, -34.7756], [-56.1179, -34.9079], [-56.8555, -34.6766], [-57.1706, -34.4525], [-57.8291, -34.4773], [-58.4002, -33.9123], [-58.5258, -34.2962], [-58.2835, -34.6838], [-57.3036, -35.1885], [-57.1589, -35.5058], [-57.354, -35.7202], [-57.265, -36.1442], [-56.6981, -36.4265], [-56.6721, -36.8513], [-57.3957, -37.7448], [-57.547, -38.0857], [-58.1792, -38.436], [-59.8282, -38.8381], [-61.1122, -38.9931], [-62.067, -38.9189], [-62.3382, -39.1506], [-62.0537, -39.3739], [-62.2869, -39.8955], [-62.395, -40.8907], [-62.959, -41.1095], [-63.7731, -41.1499], [-64.8533, -40.8139], [-65.1334, -40.8805], [-65.0182, -41.5667], [-65.059, -41.9698], [-64.4205, -42.4337], [-63.596, -42.4066], [-63.6925, -42.8052], [-64.1306, -42.8616], [-64.3246, -42.5722], [-64.6504, -42.5313], [-65.0269, -42.759], [-64.4323, -43.0591], [-64.9858, -43.2935], [-65.2836, -43.63], [-65.3613, -44.4773], [-65.6476, -44.6616], [-65.6388, -45.0078], [-66.1901, -44.9647], [-66.9416, -45.2573], [-67.5568, -45.9701], [-67.5633, -46.3452], [-66.7769, -47.0057], [-65.9985, -47.0936], [-65.7382, -47.3449], [-65.8101, -47.941], [-66.3934, -48.3423], [-67.033, -48.6277], [-67.6849, -49.2465], [-67.7834, -49.8591], [-68.9398, -50.3824], [-69.2352, -50.9506], [-69.0325, -51.6364], [-68.3938, -52.3072], [-69.2409, -52.2055], [-69.5605, -52.4217], [-70.795, -52.7688], [-70.9959, -53.7791], [-71.2977, -53.8834], [-72.1744, -53.6322], [-71.8528, -53.2855], [-71.4005, -53.107], [-71.3878, -52.7644], [-72.4583, -53.2544], [-73.0526, -53.2433], [-74.0146, -52.6392], [-73.8343, -52.2339], [-73.5183, -52.0408], [-73.9733, -51.7847], [-73.8958, -51.3315], [-74.8147, -51.0629], [-75.0948, -50.6812], [-74.3337, -49.9745], [-74.341, -48.5958], [-74.5772, -48.2744], [-74.6549, -47.7022], [-74.1584, -47.1824], [-74.1519, -46.9742], [-75.6567, -46.6102], [-74.9245, -46.1597], [-75.0666, -45.8752], [-74.1579, -45.7673], [-74.0379, -45.4175], [-73.5498, -45.4836], [-73.3625, -44.9781], [-72.739, -44.7344], [-72.6638, -44.4365], [-73.2651, -44.1688], [-72.9965, -43.6317], [-73.101, -43.4551], [-72.878, -43.048], [-72.7854, -42.3014], [-72.4996, -41.9809], [-72.6698, -41.6595], [-73.0149, -41.5441], [-73.5214, -41.7971], [-73.8108, -41.5175], [-73.966, -41.1184], [-73.6694, -40.0824], [-73.4104, -39.789], [-73.2264, -39.2243], [-73.5327, -38.3667], [-73.4648, -38.0405], [-73.6619, -37.6987], [-73.6017, -37.1886], [-73.216, -37.1669], [-73.1181, -36.6884], [-72.8746, -36.3905], [-72.6238, -35.5857], [-72.2237, -35.0961], [-72.0028, -34.1653], [-71.6646, -33.6526], [-71.7429, -33.0951], [-71.4522, -32.6596], [-71.5259, -31.806], [-71.6619, -31.1695], [-71.6695, -30.3305], [-71.4007, -30.1432], [-71.3157, -29.6496], [-71.5192, -28.9265], [-71.1863, -28.3778], [-71.0527, -27.7275], [-70.6465, -26.3293], [-70.7138, -25.7842], [-70.4454, -25.1725], [-70.5742, -24.6442], [-70.4878, -23.7818], [-70.5633, -23.0569], [-70.3316, -22.8487], [-70.0874, -21.4931], [-70.1971, -20.7256], [-70.1485, -19.8049], [-70.2759, -19.2683], [-70.3616, -18.3978], [-71.337, -17.6827], [-71.5325, -17.2943], [-72.1114, -17.0026], [-72.4676, -16.7079], [-72.7939, -16.6147], [-73.825, -16.153], [-74.1473, -15.9124], [-75.1043, -15.4117], [-75.5336, -14.899], [-75.934, -14.6336], [-76.2891, -14.1333], [-76.1839, -13.5154], [-76.8322, -12.3489], [-77.1527, -12.0603], [-77.2204, -11.6635], [-77.6332, -11.288], [-77.7362, -10.8365], [-78.1856, -10.089], [-78.7624, -8.6171], [-79.0123, -8.21], [-79.3774, -7.8354], [-79.7621, -7.0666], [-80.1103, -6.6497], [-80.8117, -6.2822], [-81.1805, -5.9426], [-80.8827, -5.7589], [-81.1084, -5.0278], [-81.3366, -4.6695], [-81.2833, -4.3224], [-80.7986, -3.7312], [-80.0266, -3.2282], [-79.7299, -2.5793], [-80.1272, -2.5282], [-80.4501, -2.6259], [-80.9628, -2.1891], [-80.7704, -2.0768], [-80.8014, -1.383], [-80.9024, -1.0789], [-80.554, -0.8481], [-80.4823, -0.3682], [-80.1334, -0.006], [-80.0251, 0.4104], [-80.0883, 0.7846], [-79.7412, 0.9799], [-78.8996, 1.2063], [-78.7931, 1.8486], [-78.6171, 2.3067], [-78.1201, 2.4882], [-77.67, 2.8788], [-77.2428, 3.5855], [-77.1666, 3.8621], [-77.4272, 4.0605], [-77.2863, 4.7219], [-77.4017, 5.4161], [-77.2492, 5.7801], [-77.4694, 6.177], [-77.36, 6.5045], [-77.9011, 7.2294]]], [[[-91.3057, 0.0912], [-90.7997, -0.7522], [-90.9055, -0.9404], [-91.3716, -1.0172], [-91.4582, -0.7997], [-91.1448, -0.623], [-91.3692, -0.287], [-91.3057, 0.0912]]], [[[-50.2481, -0.1165], [-49.6287, -0.2293], [-49.1169, -0.1636], [-48.3798, -0.3527], [-48.5396, -0.801], [-48.9289, -1.4824], [-49.5878, -1.7123], [-50.5076, -1.7878], [-50.7597, -1.2405], [-50.7713, -0.6452], [-50.6454, -0.2728], [-50.2481, -0.1165]]], [[[-51.6377, -1.3421], [-51.6784, -0.8552], [-51.5461, -0.6497], [-51.1608, -0.6665], [-51.2764, -1.0216], [-51.6377, -1.3421]]], [[[-73.7735, -43.3459], [-74.355, -43.2637], [-74.2094, -42.8789], [-74.037, -41.7953], [-73.5278, -41.8961], [-73.4708, -42.4665], [-73.7893, -42.5859], [-73.4364, -42.9366], [-73.7735, -43.3459]]], [[[-73.7354, -44.3948], [-73.9833, -44.4947], [-73.7271, -45.1192], [-74.0991, -45.3252], [-74.6178, -44.6478], [-74.5017, -44.4733], [-73.7354, -44.3948]]], [[[-72.8971, -44.7122], [-73.445, -44.6411], [-73.2078, -44.3349], [-72.8425, -44.4578], [-72.8971, -44.7122]]], [[[-74.6183, -48.4253], [-74.923, -48.6264], [-75.2128, -48.1417], [-74.7292, -48.1261], [-74.6183, -48.4253]]], [[[-74.5306, -48.8124], [-74.4589, -49.6913], [-74.5699, -49.9909], [-75.3001, -49.8475], [-75.1842, -49.0836], [-74.7934, -48.705], [-74.5306, -48.8124]]], [[[-58.8501, -51.2698], [-58.4737, -51.509], [-57.9767, -51.3843], [-57.8382, -51.7092], [-58.6834, -51.9361], [-59.068, -52.1731], [-59.5708, -51.9254], [-59.0596, -51.6857], [-58.8501, -51.2698]]], [[[-60.4454, -51.3994], [-60.1416, -51.4811], [-59.268, -51.4274], [-59.9214, -51.9694], [-60.4454, -51.3994]]], [[[-69.4141, -52.4865], [-68.7897, -52.5766], [-68.2781, -52.9841], [-68.0085, -53.5638], [-67.2943, -54.0499], [-65.346, -54.8777], [-66.5112, -55.0322], [-66.9305, -54.9248], [-68.3316, -54.8165], [-69.0816, -54.9097], [-69.7235, -54.7122], [-70.4972, -54.8094], [-71.4409, -54.6198], [-70.8982, -54.338], [-70.8678, -53.8843], [-70.0903, -53.4182], [-70.4603, -53.206], [-69.4141, -52.4865]]], [[[-72.9472, -53.4426], [-72.2055, -53.8075], [-73.3048, -53.9438], [-73.6865, -53.4266], [-72.9472, -53.4426]]], [[[-69.8846, -54.8822], [-68.9007, -55.0176], [-68.2826, -55.255], [-68.2932, -55.5214], [-69.4118, -55.4441], [-69.9798, -55.1476], [-69.8846, -54.8822]]], [[[-67.0854, -55.1152], [-67.7679, -55.2595], [-68.107, -54.9292], [-67.2452, -54.9776], [-67.0854, -55.1152]]]] }, "properties": { "name": "South America", "id": "southAmerica" }, "id": "southAmerica" },
        { "type": "Feature", "geometry": { "type": "MultiPolygon", "coordinates": [[[[54.719, 81.1159], [57.694, 80.7923], [55.7124, 80.6372], [54.0665, 80.8136], [54.719, 81.1159]]], [[[62.168, 80.8347], [61.0511, 80.4186], [59.3044, 80.5216], [59.5921, 80.8165], [62.168, 80.8347]]], [[[20.898, 80.2499], [22.4507, 80.4021], [26.8608, 80.16], [27.1986, 79.9065], [25.641, 79.4029], [23.9475, 79.1943], [20.8612, 79.3978], [18.7251, 79.7607], [18.3438, 80.0595], [20.898, 80.2499]]], [[[16.7867, 79.9068], [18.5813, 79.5716], [19.0896, 79.1573], [20.4581, 79.1293], [21.3889, 78.7404], [19.7687, 78.6228], [18.4393, 78.0251], [18.228, 77.5226], [17.6234, 77.3994], [16.7006, 76.5793], [14.3657, 77.2345], [14.921, 77.6889], [13.6808, 78.028], [11.7738, 78.7165], [10.866, 79.7965], [12.7535, 79.7758], [13.3838, 79.4808], [15.8163, 79.6819], [16.7867, 79.9068]]], [[[21.6082, 78.5957], [23.1166, 77.9916], [24.2383, 77.8986], [23.8414, 77.4978], [22.057, 77.5011], [21.6082, 77.9161], [20.2282, 78.4779], [21.6082, 78.5957]]], [[[67.7654, 76.2376], [66.2824, 75.9836], [61.3561, 75.3149], [60.2224, 74.7965], [58.5347, 74.499], [58.4415, 74.1288], [56.9638, 73.3665], [55.0067, 73.4539], [54.3, 73.3509], [53.7629, 73.7662], [54.6427, 73.9595], [55.5824, 74.6278], [56.4986, 74.9571], [57.0876, 75.3837], [58.8814, 75.8547], [61.0538, 76.1199], [62.9714, 76.2367], [65.8629, 76.6133], [67.5351, 77.0077], [68.4859, 76.9338], [68.9, 76.5729], [67.7654, 76.2376]]], [[[55.32, 73.3083], [56.4293, 73.2011], [56.0835, 72.7894], [55.356, 72.4651], [55.2979, 71.9354], [56.0431, 71.3456], [56.895, 70.927], [57.1458, 70.5892], [54.6014, 70.68], [53.7225, 70.8145], [53.3638, 71.5416], [51.8124, 71.4912], [51.5825, 72.0712], [52.6221, 72.3009], [53.7531, 73.2932], [55.32, 73.3083]]], [[[67.8751, 68.4763], [68.2688, 67.2858], [67.5444, 66.7227], [66.2021, 66.1716], [64.8011, 65.7162], [63.0824, 64.9054], [61.2167, 64.2824], [60.5424, 61.0083], [60.0644, 59.4402], [59.4318, 58.5187], [58.7984, 57.8522], [58.0265, 57.3293], [57.8276, 56.859], [58.58, 56.5143], [58.6901, 56.0873], [58.0984, 55.5504], [56.084, 55.3471], [56.9735, 54.4686], [57.6207, 53.983], [58.9546, 54.5315], [59.6294, 54.3086], [59.8828, 53.9417], [59.4083, 53.6477], [59.0052, 53.1794], [59.0372, 52.607], [59.707, 52.4616], [60.1789, 52.009], [60.0657, 51.9766], [60.4648, 51.6513], [61.3632, 51.442], [61.5851, 51.23], [61.3894, 50.8609], [60.6379, 50.6638], [59.9552, 50.7992], [59.8122, 50.5819], [58.8836, 50.6945], [58.3594, 51.0638], [57.8387, 51.0917], [57.4423, 50.8889], [57.0117, 51.0651], [56.4915, 51.0196], [55.7977, 50.6021], [55.5424, 50.6017], [54.727, 50.9981], [54.4216, 50.7803], [54.0416, 51.1153], [53.3381, 51.4824], [52.571, 51.4817], [52.3309, 51.6812], [51.6091, 51.4839], [50.7941, 51.7292], [50.2468, 51.2895], [49.498, 51.0835], [48.8086, 50.6012], [48.8432, 50.0131], [48.4344, 49.8284], [47.706, 50.378], [47.3264, 50.2734], [46.9917, 49.8526], [46.8022, 49.367], [47.0144, 49.0987], [46.7028, 48.8055], [46.661, 48.4124], [47.0042, 48.2846], [47.0934, 47.9476], [48.1099, 47.7452], [48.9595, 46.7744], [48.6102, 46.5663], [49.2321, 46.3372], [48.1592, 45.7371], [47.5244, 45.6017], [47.1147, 44.9061], [46.7552, 44.6566], [46.7529, 44.4205], [47.2301, 44.1923], [47.5089, 43.5096], [47.4632, 43.0351], [48.228, 42.181], [49.1064, 41.3017], [49.2263, 41.026], [49.7758, 40.5839], [50.3067, 40.4121], [49.5512, 40.1942], [49.3244, 39.6082], [49.363, 39.3495], [49.0137, 39.1346], [48.8508, 38.8155], [48.8685, 38.4355], [48.5929, 38.4111], [48.0234, 38.819], [48.2422, 38.9788], [47.9958, 39.6842], [47.773, 39.6486], [46.8528, 39.1484], [46.555, 38.9042], [46.1701, 38.8692], [45.4798, 39.0063], [44.5872, 39.7685], [44.3892, 39.4223], [44.023, 39.3774], [44.4309, 38.3569], [44.2112, 37.9081], [44.5614, 37.7448], [44.794, 37.2902], [44.2818, 36.9782], [44.1562, 37.2831], [43.5161, 37.2445], [42.7748, 37.3719], [41.5154, 37.0892], [40.7058, 37.0976], [40.0164, 36.8259], [39.3568, 36.6817], [38.7669, 36.6932], [38.1916, 36.9014], [37.4365, 36.6435], [36.6584, 36.8024], [36.5376, 36.4575], [36.1275, 35.8316], [35.8927, 35.9164], [35.811, 36.3097], [36.1879, 36.659], [36.0489, 36.9107], [35.5376, 36.5969], [34.6014, 36.7846], [33.6945, 36.1818], [32.7947, 36.0358], [32.3775, 36.1836], [32.0219, 36.5352], [31.3525, 36.8011], [30.6441, 36.8654], [30.4838, 36.3106], [29.6893, 36.1565], [29.1433, 36.3971], [29.0381, 36.6937], [28.4837, 36.8037], [28.1339, 37.0297], [27.3491, 37.0195], [27.0779, 37.6875], [27.2323, 37.9787], [26.6828, 38.1984], [26.8612, 38.3729], [26.7636, 38.7098], [27.0135, 38.8869], [26.6819, 39.2922], [26.8271, 39.563], [26.1133, 39.4675], [26.1812, 39.99], [26.7378, 40.4002], [27.2847, 40.4556], [27.4756, 40.3198], [28.2892, 40.4033], [29.3648, 40.8094], [29.0456, 41.0074], [29.3222, 41.2276], [31.2549, 41.1077], [31.4582, 41.3199], [32.3065, 41.7296], [33.3816, 42.0177], [34.7505, 41.9569], [35.0067, 42.0634], [35.2979, 41.7287], [36.0516, 41.6826], [36.5097, 41.2626], [38.3811, 40.9244], [39.4265, 41.1064], [40.2654, 40.9612], [41.4142, 41.4238], [41.7631, 41.9702], [41.4888, 42.6591], [40.8367, 43.0635], [40.5242, 43.1212], [39.8735, 43.4728], [38.7172, 44.2882], [38.1814, 44.4196], [37.8516, 44.6988], [37.4112, 44.7352], [36.9411, 45.2896], [37.6474, 45.3771], [37.9332, 46.0016], [38.1836, 46.0948], [37.9679, 46.6182], [39.2933, 47.1056], [38.485, 47.1757], [37.5435, 47.0745], [37.3398, 46.9169], [36.2793, 46.6586], [35.827, 46.6244], [34.8495, 46.1898], [35.0231, 45.7011], [35.558, 45.3109], [36.1705, 45.453], [36.5749, 45.3935], [36.3934, 45.0655], [35.87, 45.0055], [35.5695, 45.1192], [35.0879, 44.8027], [34.7168, 44.8071], [33.9098, 44.3876], [33.4508, 44.5536], [33.5551, 45.0979], [32.508, 45.4037], [33.6648, 45.947], [33.2022, 46.1756], [32.4769, 46.0837], [32.0357, 46.2609], [31.9744, 46.7087], [30.7963, 46.552], [30.2193, 45.8667], [29.6018, 45.6825], [29.727, 45.3433], [29.5574, 44.8435], [29.0483, 44.7574], [28.6452, 44.2957], [28.5618, 43.5012], [27.9288, 43.186], [27.8889, 42.7497], [27.4849, 42.4682], [27.9825, 42.0474], [28.3465, 41.4664], [29.0572, 41.2298], [28.7802, 40.9741], [28.1721, 41.0806], [27.4996, 40.9732], [27.2581, 40.6873], [26.1053, 40.6114], [25.8558, 40.844], [25.1043, 40.9945], [24.7931, 40.8574], [24.3839, 40.9128], [23.8787, 40.5444], [23.6643, 40.2239], [23.3123, 40.2164], [22.6296, 40.4956], [22.5923, 40.037], [22.919, 39.6291], [22.9656, 39.0307], [22.7739, 38.8004], [23.2528, 38.6614], [23.9671, 38.2748], [24.0554, 37.7097], [23.5804, 38.0107], [23.1938, 37.9592], [23.1614, 37.3337], [22.765, 37.3932], [23.0735, 36.7749], [22.6083, 36.7798], [22.0805, 37.0288], [21.5829, 37.0807], [21.5714, 37.541], [21.1448, 37.9192], [21.4036, 38.1967], [21.8248, 38.3281], [22.7996, 37.9814], [22.4219, 38.4386], [21.4724, 38.3214], [21.1133, 38.3849], [20.7768, 38.8075], [20.7795, 39.0085], [20.301, 39.3273], [19.8517, 40.0437], [19.3981, 40.2847], [19.4407, 41.4247], [19.5774, 41.7873], [19.1863, 41.9484], [18.8943, 42.2494], [17.824, 42.7976], [16.903, 43.3924], [15.9415, 43.6565], [15.123, 44.2567], [14.8548, 45.081], [14.3861, 45.342], [13.9657, 44.8355], [13.6293, 45.1081], [13.517, 45.4818], [13.0305, 45.6376], [12.2745, 45.4459], [12.5235, 44.9678], [12.2483, 44.7223], [12.3961, 44.2238], [12.6913, 43.9948], [13.564, 43.5713], [14.0106, 42.6897], [14.8659, 42.0523], [15.1687, 41.9338], [15.9641, 41.9396], [16.0125, 41.4353], [17.1032, 41.062], [17.955, 40.6554], [18.4859, 40.105], [18.078, 39.9367], [17.8649, 40.2803], [16.9283, 40.4579], [16.5301, 39.8595], [16.5976, 39.6389], [17.1147, 39.3805], [17.1746, 38.9979], [16.559, 38.7147], [16.5456, 38.4093], [16.0569, 37.9419], [15.7244, 37.9392], [15.9721, 38.7125], [16.1967, 38.7591], [16.0236, 39.3535], [15.6929, 39.99], [14.9507, 40.239], [14.7656, 40.6683], [14.1025, 40.8272], [13.7331, 41.2356], [13.0886, 41.244], [12.631, 41.4695], [11.6375, 42.2876], [11.1679, 42.5353], [10.7085, 42.9361], [10.0475, 44.0201], [9.2893, 44.3193], [8.766, 44.4223], [8.0815, 43.9189], [7.1813, 43.6592], [6.4941, 43.1691], [6.1159, 43.0724], [5.4066, 43.2286], [5.0599, 43.4444], [4.7119, 43.3733], [4.0527, 43.5931], [3.2591, 43.1931], [3.0518, 42.9152], [3.248, 41.9445], [2.0827, 41.2875], [1.0329, 41.062], [0.7147, 40.8227], [0.3638, 40.3189], [-0.3269, 39.5199], [-0.2049, 39.0627], [0.2015, 38.7591], [-0.3813, 38.4355], [-0.6467, 38.1518], [-0.8221, 37.581], [-1.3275, 37.561], [-1.7975, 37.233], [-2.1116, 36.7767], [-4.3668, 36.7181], [-4.6742, 36.5063], [-5.1716, 36.4238], [-5.6254, 36.026], [-6.0407, 36.1885], [-6.4924, 36.9547], [-6.8845, 37.1944], [-7.4936, 37.1682], [-7.8342, 37.0057], [-8.5977, 37.1211], [-8.8141, 37.431], [-8.9147, 38.5123], [-9.4742, 38.7307], [-9.3748, 39.3384], [-9.1482, 39.5426], [-8.8867, 40.1795], [-8.6557, 41.0296], [-8.8872, 42.1051], [-8.691, 42.2743], [-9.2352, 42.9769], [-8.8736, 43.3343], [-8.5369, 43.3369], [-8.2568, 43.5797], [-7.6982, 43.7644], [-7.2621, 43.5948], [-5.6658, 43.5824], [-4.523, 43.416], [-3.6046, 43.5194], [-3.0455, 43.3716], [-2.3371, 43.3281], [-1.4848, 43.5638], [-1.2456, 44.5599], [-1.0662, 45.8059], [-1.1463, 46.3115], [-1.7867, 46.5148], [-2.0188, 47.0377], [-3.1587, 47.6946], [-4.312, 47.8229], [-4.6291, 48.0857], [-4.3932, 48.3676], [-4.7208, 48.5398], [-3.2315, 48.8408], [-2.6926, 48.5367], [-2.4463, 48.6483], [-1.4375, 48.6414], [-1.5831, 49.2023], [-1.8564, 49.6837], [-1.2587, 49.6802], [-1.1386, 49.3879], [-0.1636, 49.2966], [0.2777, 49.4633], [0.1867, 49.703], [1.2456, 49.9982], [1.5514, 50.2938], [1.5794, 50.7393], [1.9123, 50.9905], [2.4458, 51.0664], [3.5871, 51.4539], [4.4829, 52.3091], [4.7687, 52.9412], [5.0257, 52.9499], [5.1203, 52.3881], [5.5611, 52.5948], [5.3755, 53.0957], [6.0622, 53.4071], [6.8164, 53.4413], [7.2852, 53.6814], [8.0091, 53.6909], [8.5387, 53.5569], [8.8983, 53.8357], [8.9573, 54.5383], [8.6821, 54.7918], [8.6159, 55.4181], [8.1321, 55.5999], [8.1641, 56.6069], [8.6186, 57.1114], [9.5543, 57.2325], [9.9623, 57.581], [10.5371, 57.4487], [10.2828, 56.6204], [10.8461, 56.5216], [10.3187, 56.2129], [10.1829, 55.8651], [9.5912, 55.4929], [9.6449, 55.0228], [10.2126, 54.4089], [11.0085, 54.1812], [11.3996, 53.9446], [12.1112, 54.1683], [12.5755, 54.4673], [13.0291, 54.4109], [13.8654, 53.8534], [14.4878, 53.6719], [14.7159, 54.0183], [16.1865, 54.2904], [16.5598, 54.5539], [17.2621, 54.7294], [18.3234, 54.8382], [18.6697, 54.4309], [19.407, 54.3861], [19.7585, 54.5448], [19.9747, 54.9214], [21.1887, 54.9352], [21.238, 55.455], [21.0618, 55.8134], [21.0707, 56.8237], [21.7285, 57.571], [22.5546, 57.7241], [23.6479, 56.9711], [24.4034, 57.3251], [24.3018, 57.7841], [24.529, 58.3543], [23.7678, 58.3609], [23.5094, 58.6585], [23.4943, 59.1956], [24.3803, 59.4726], [25.5096, 59.6389], [27.8924, 59.4143], [28.4535, 59.8142], [29.1473, 59.9998], [28.643, 60.3753], [28.6506, 60.611], [27.4623, 60.4647], [27.2421, 60.5386], [25.6565, 60.3331], [23.7216, 59.9656], [22.7934, 60.0768], [22.5759, 60.3591], [21.436, 60.5964], [21.3605, 60.9674], [21.606, 61.5916], [21.2562, 61.9897], [21.1035, 62.6229], [22.2434, 63.4379], [23.2488, 63.8962], [24.2782, 64.5153], [24.5579, 64.8009], [25.3729, 65.0095], [25.348, 65.4792], [24.5814, 65.757], [23.6914, 65.8285], [21.5656, 65.4081], [21.574, 65.1258], [21.1381, 64.8087], [21.4653, 64.3796], [20.7626, 63.8678], [19.0345, 63.2377], [18.4632, 62.8959], [17.8955, 62.8305], [17.4174, 61.7407], [17.1307, 61.5758], [17.251, 60.7011], [17.9559, 60.5899], [18.5574, 60.2537], [18.9706, 59.7572], [17.876, 59.2709], [18.2852, 59.1093], [17.4569, 58.8585], [16.6522, 58.4344], [16.5279, 57.0681], [15.9965, 56.2227], [14.7821, 56.1619], [14.2152, 55.8325], [14.3417, 55.5278], [13.3212, 55.3464], [12.5923, 56.1377], [12.8835, 56.6177], [12.4214, 56.9063], [11.7347, 57.7177], [11.2718, 58.4757], [11.1958, 59.0782], [10.645, 59.3892], [10.1793, 59.0094], [9.6183, 58.946], [8.1663, 58.1452], [7.0051, 58.0242], [5.7067, 58.5236], [5.8452, 59.3535], [5.1314, 59.2265], [5.305, 59.6426], [5.1194, 59.8337], [5.2441, 60.5697], [5.0493, 60.7075], [4.9276, 61.711], [5.5336, 62.3109], [6.353, 62.6114], [7.2838, 62.6023], [7.0082, 62.9576], [8.1006, 63.091], [8.398, 63.5349], [9.6968, 63.6246], [9.7079, 63.8652], [11.3499, 64.9059], [12.1595, 65.1789], [12.2727, 65.5682], [12.9763, 66.0192], [13.1046, 66.5394], [14.755, 67.4991], [14.7989, 67.8094], [16.0645, 68.2], [16.6517, 68.6257], [17.3908, 68.7995], [18.1015, 69.1564], [18.2932, 69.4751], [20.0688, 69.8835], [21.163, 69.8895], [21.4005, 70.1744], [22.6847, 70.3748], [23.0464, 70.1019], [24.4198, 70.702], [24.6582, 71.001], [25.7684, 70.8531], [27.5972, 71.0913], [29.1025, 70.8607], [30.9442, 70.2745], [29.6014, 69.9767], [31.4529, 69.6895], [31.9846, 69.9536], [32.9417, 69.7518], [32.3775, 69.4791], [33.6843, 69.3102], [35.858, 69.1917], [37.7304, 68.6921], [40.3809, 67.8318], [40.9664, 67.7135], [41.1887, 66.8262], [40.5216, 66.4466], [39.2889, 66.1321], [38.3976, 66.0644], [35.5136, 66.3958], [34.8247, 66.6111], [32.4636, 66.9163], [33.5667, 66.321], [34.3999, 66.1286], [34.7865, 65.8645], [34.4065, 65.3957], [34.8034, 64.986], [34.8695, 64.5601], [35.6472, 64.3783], [36.365, 64.0028], [37.4423, 63.8135], [38.0708, 64.0259], [37.9537, 64.3202], [37.1835, 64.4085], [36.5283, 64.8473], [36.883, 65.1724], [38.0096, 64.8788], [39.7581, 64.577], [40.281, 64.998], [39.8167, 65.5979], [40.6916, 65.9634], [41.4759, 66.1235], [42.2106, 66.5196], [44.0971, 66.2351], [44.4886, 66.6719], [44.292, 67.0996], [43.7824, 67.2545], [44.2254, 67.9956], [44.0483, 68.5489], [45.8922, 68.4799], [46.6903, 67.8489], [45.5287, 67.7577], [44.9396, 67.4776], [45.9859, 66.853], [46.6912, 66.8255], [47.7091, 67.045], [47.8746, 67.5841], [48.8778, 67.7315], [50.839, 68.3498], [52.5502, 68.5924], [53.8019, 68.9959], [53.968, 68.2273], [54.5614, 68.273], [56.0436, 68.649], [57.1267, 68.554], [58.9191, 69.0039], [59.8975, 68.4219], [60.9335, 68.9868], [60.1705, 69.5909], [61.0156, 69.8515], [63.3616, 69.6753], [66.416, 68.9477], [67.0024, 68.8736], [67.8751, 68.4763]]], [[[60.4506, 69.935], [59.5783, 69.7385], [58.9529, 69.8928], [58.473, 70.2668], [59.0052, 70.4652], [60.4506, 69.935]]], [[[17.5031, 69.5963], [17.951, 69.1981], [16.9718, 69.1382], [17.5031, 69.5963]]], [[[50.265, 69.1857], [49.6262, 68.8596], [48.667, 68.7331], [48.279, 69.0403], [48.6315, 69.436], [49.225, 69.5113], [50.265, 69.1857]]], [[[-15.5431, 66.2285], [-14.6982, 66.0203], [-14.7576, 65.7557], [-13.6159, 65.4872], [-13.853, 64.8622], [-15.0215, 64.296], [-16.0605, 64.1113], [-16.6404, 63.8656], [-17.8156, 63.7129], [-18.6537, 63.4066], [-20.1982, 63.5558], [-21.8328, 64.2054], [-21.9502, 64.515], [-22.684, 65.0264], [-22.0057, 65.4934], [-22.9024, 65.5804], [-24.2241, 65.4872], [-23.7371, 66.0695], [-22.4261, 66.4302], [-21.3037, 65.8764], [-21.23, 65.4206], [-20.3567, 65.7191], [-20.3567, 66.0331], [-18.7775, 66.1687], [-16.7485, 66.1317], [-16.5407, 66.4466], [-15.9854, 66.5145], [-15.5431, 66.2285]]], [[[-3.1097, 58.5154], [-3.2124, 58.3212], [-3.9901, 57.959], [-3.4029, 57.7082], [-2.0741, 57.7024], [-1.778, 57.4938], [-2.6527, 56.3183], [-3.1783, 56.0802], [-2.1471, 55.9031], [-1.6555, 55.5704], [-1.2917, 54.7738], [-0.6716, 54.5039], [-0.2055, 54.0219], [0.5589, 52.9672], [1.0556, 52.959], [1.6566, 52.7537], [1.7467, 52.4689], [1.559, 52.0869], [0.9553, 51.8077], [0.6867, 51.3865], [1.4151, 51.3632], [0.9601, 50.9259], [0.2051, 50.763], [-1.5168, 50.7477], [-2.5477, 50.6163], [-3.4046, 50.6323], [-3.7933, 50.2293], [-4.1726, 50.3908], [-5.3422, 50.2461], [-4.5832, 50.7763], [-4.1881, 51.1885], [-3.1359, 51.2049], [-4.3863, 51.7411], [-4.9023, 51.6262], [-5.0883, 51.9959], [-4.3832, 52.197], [-3.9804, 52.5417], [-4.1111, 53.2189], [-3.0646, 53.4268], [-2.925, 53.7327], [-3.958, 54.7809], [-5.1354, 54.8575], [-4.7212, 55.421], [-5.2457, 55.9293], [-5.6097, 56.0553], [-5.392, 56.5148], [-5.9368, 56.6058], [-5.562, 57.2328], [-5.8181, 57.4361], [-5.3382, 58.2388], [-4.7155, 58.5101], [-3.1097, 58.5154]]], [[[22.6172, 58.6213], [23.2928, 58.4834], [22.1875, 58.1543], [22.0819, 58.4781], [22.6172, 58.6213]]], [[[19.0767, 57.836], [18.8139, 57.7062], [18.6998, 57.2427], [18.1365, 57.5566], [18.5374, 57.8305], [19.0767, 57.836]]], [[[12.5688, 55.785], [11.6539, 55.1869], [11.2864, 55.2044], [10.9788, 55.7215], [12.219, 56.1186], [12.5688, 55.785]]], [[[10.645, 55.6099], [10.7852, 55.1334], [9.9889, 55.1631], [9.8606, 55.5156], [10.645, 55.6099]]], [[[-7.1786, 55.0568], [-6.1293, 55.2175], [-5.4703, 54.5002], [-5.6068, 54.2727], [-6.3452, 53.9872], [-6.0274, 52.927], [-6.5612, 52.1888], [-7.5275, 52.0989], [-7.6645, 51.9797], [-8.8135, 51.5849], [-9.2964, 51.4981], [-9.5799, 51.6892], [-10.3786, 51.8688], [-9.9558, 52.1367], [-9.2993, 53.0977], [-9.7954, 53.3951], [-9.996, 54.276], [-8.623, 54.3468], [-8.764, 54.6813], [-8.2746, 55.1462], [-7.2468, 55.3531], [-7.1786, 55.0568]]], [[[9.4802, 42.8056], [9.5508, 42.1296], [9.1863, 41.3847], [8.8077, 41.5884], [8.7132, 42.5499], [9.4802, 42.8056]]], [[[9.632, 40.8822], [9.8051, 40.4996], [9.5623, 39.1661], [9.0563, 39.2394], [8.8814, 38.9127], [8.418, 39.2056], [8.4712, 40.2927], [8.1898, 40.6518], [9.2831, 41.2018], [9.632, 40.8822]]], [[[3.1454, 39.7902], [3.4619, 39.6979], [3.0726, 39.3011], [2.3713, 39.6131], [2.785, 39.8546], [3.1454, 39.7902]]], [[[23.4153, 38.9588], [24.0989, 38.6712], [23.7589, 38.4013], [23.252, 38.8013], [23.4153, 38.9588]]], [[[15.5766, 38.2202], [15.0994, 37.4585], [15.2943, 37.0133], [15.1128, 36.6879], [14.502, 36.7989], [14.1428, 37.1038], [13.9054, 37.1007], [12.4356, 37.8198], [13.3518, 38.1807], [13.6816, 38.0009], [14.506, 38.0453], [14.846, 38.1718], [15.5766, 38.2202]]], [[[34.4633, 35.5937], [33.9418, 35.2918], [34.0501, 34.9882], [32.9417, 34.5758], [32.449, 34.7294], [32.3171, 34.9532], [32.9417, 35.3904], [33.4588, 35.3358], [34.4633, 35.5937]]], [[[23.8521, 35.5355], [24.3129, 35.3638], [24.7212, 35.425], [25.4759, 35.306], [25.7449, 35.1427], [24.7998, 34.9345], [24.4638, 35.1604], [23.5618, 35.2949], [23.8521, 35.5355]]], [[[-16.3346, 28.38], [-16.6579, 28.0071], [-16.9054, 28.3396], [-16.3346, 28.38]]]] }, "properties": { "name": "Europe", "id": "europe" }, "id": "europe" },
        { "type": "Feature", "geometry": { "type": "MultiPolygon", "coordinates": [[[[32.8862, -26.8495], [32.5346, -28.1998], [32.2856, -28.6215], [31.7782, -28.9371], [31.3352, -29.3779], [30.2885, -30.9701], [28.8561, -32.2943], [27.8604, -33.0538], [27.0774, -33.5212], [26.4293, -33.7596], [25.9894, -33.7112], [25.6383, -34.0113], [25.0031, -33.9735], [24.8273, -34.1688], [23.5858, -33.9851], [23.2679, -34.0814], [22.5537, -34.0099], [22.2457, -34.0694], [21.7889, -34.3726], [21.06, -34.3646], [20.53, -34.4631], [20.0204, -34.7858], [19.6351, -34.7534], [18.8086, -34.108], [18.3545, -33.9389], [18.4331, -33.7174], [17.8782, -32.9614], [18.2511, -32.6521], [18.3105, -32.1225], [18.2107, -31.7425], [17.6776, -31.019], [17.1893, -30.0997], [16.95, -29.4037], [16.4808, -28.6415], [15.7191, -27.9659], [15.3414, -27.3866], [14.9676, -26.3182], [14.8451, -25.7256], [14.8371, -25.0331], [14.5015, -24.2021], [14.474, -23.2811], [14.5259, -22.7027], [14.3217, -22.19], [13.9733, -21.7678], [13.4504, -20.9169], [13.1685, -20.1845], [12.4583, -18.9269], [12.0956, -18.5412], [11.776, -18.0018], [11.7219, -17.467], [11.8191, -16.7043], [11.7507, -15.8321], [11.9678, -15.6341], [12.2803, -14.6376], [12.5506, -13.4377], [12.9834, -12.7759], [13.4171, -12.5202], [13.7855, -11.8127], [13.8477, -11.0545], [13.2093, -9.7033], [12.9985, -9.0481], [13.3589, -8.6872], [13.3785, -8.3698], [12.8622, -7.2317], [12.8236, -6.9547], [12.5213, -6.5903], [12.1555, -5.6328], [12.2066, -5.4681], [11.7773, -4.5657], [11.0321, -3.8266], [10.3471, -3.0129], [9.6245, -2.3671], [9.2658, -1.8251], [9.3306, -1.5348], [9.0647, -1.2982], [8.8215, -0.7083], [9.2969, -0.3514], [9.47, 0.362], [9.3302, 0.611], [9.6258, 0.7792], [9.4944, 1.4353], [9.8069, 1.9276], [9.8216, 2.5393], [9.9485, 3.079], [9.8762, 3.3099], [9.4256, 3.9224], [8.9999, 4.0916], [8.762, 4.5798], [7.1547, 4.5146], [6.7569, 4.3437], [6.0764, 4.2904], [5.5877, 4.6473], [5.2326, 5.4836], [4.8611, 6.0265], [4.4314, 6.3487], [4.126, 6.4113], [2.7726, 6.3758], [1.8182, 6.2609], [1.1057, 6.0513], [0.9499, 5.8103], [0.2597, 5.7575], [-0.3487, 5.5009], [-0.7977, 5.2266], [-1.6384, 4.9807], [-2.0017, 4.7623], [-2.399, 4.9292], [-4.0372, 5.2301], [-5.5646, 5.0894], [-6.8453, 4.6713], [-7.4261, 4.3761], [-7.66, 4.3668], [-8.2591, 4.59], [-9.1322, 5.0548], [-10.2763, 6.0775], [-10.7857, 6.3101], [-11.9292, 7.1837], [-12.4856, 7.3861], [-12.5104, 7.6658], [-12.8809, 7.8566], [-13.1818, 8.5771], [-13.2695, 9.1706], [-13.7003, 9.851], [-14.4269, 10.2483], [-14.7758, 10.9315], [-15.0431, 10.9404], [-15.3933, 11.2173], [-15.5018, 11.7238], [-16.1384, 11.9174], [-16.7121, 12.355], [-16.8248, 13.3409], [-16.5878, 13.6894], [-17.168, 14.6406], [-17.1471, 14.9221], [-16.5354, 15.8383], [-16.5359, 16.2866], [-16.3468, 16.9262], [-16.0789, 17.5459], [-16.0849, 18.5211], [-16.2132, 19.0032], [-16.5146, 19.3619], [-16.2835, 19.7871], [-16.2105, 20.2279], [-16.4298, 20.6523], [-16.6224, 20.6341], [-16.8761, 21.086], [-16.9309, 21.9001], [-16.5143, 22.3333], [-16.2103, 23.0981], [-15.5864, 24.0729], [-15.0388, 24.5488], [-14.856, 24.8715], [-14.7949, 25.4041], [-14.4138, 26.2537], [-13.5758, 26.7349], [-13.176, 27.6556], [-12.949, 27.9144], [-11.9862, 28.1292], [-11.4302, 28.3822], [-11.0809, 28.7138], [-10.4865, 29.0649], [-9.6671, 30.1094], [-9.6529, 30.4476], [-9.8755, 30.718], [-9.8087, 31.4247], [-9.3475, 32.0865], [-9.2458, 32.5726], [-8.5962, 33.1873], [-6.901, 33.969], [-6.3532, 34.776], [-5.9248, 35.7859], [-5.3973, 35.9297], [-5.1054, 35.4676], [-4.3299, 35.1613], [-3.6932, 35.2799], [-2.84, 35.128], [-2.0177, 35.085], [-1.6737, 35.1831], [-0.9175, 35.6683], [-0.4261, 35.8614], [0.0479, 35.9004], [0.5149, 36.2617], [1.2571, 36.5196], [2.5932, 36.6009], [2.9727, 36.7846], [3.7789, 36.8961], [4.7581, 36.8965], [5.1958, 36.6768], [6.0649, 36.8641], [6.4866, 37.0856], [6.9274, 36.9196], [7.6079, 36.9999], [7.9106, 36.8566], [8.8237, 36.9977], [9.6879, 37.3404], [10.1962, 37.2059], [10.5713, 36.8796], [11.1266, 36.8739], [10.5256, 36.3234], [10.5908, 35.8871], [11.0045, 35.6336], [11.1199, 35.2403], [10.5349, 34.5448], [10.0648, 34.2119], [10.1589, 33.8501], [10.7227, 33.5145], [12.2798, 32.8584], [12.7535, 32.8012], [13.2835, 32.9148], [14.237, 32.6813], [14.5135, 32.5109], [15.1767, 32.391], [15.4963, 31.6568], [15.7058, 31.4264], [16.123, 31.2644], [17.3491, 31.0815], [18.1903, 30.7775], [18.9364, 30.2905], [19.2916, 30.2878], [19.7132, 30.4885], [20.1509, 31.0784], [19.9263, 31.8175], [20.1216, 32.2188], [20.621, 32.5801], [21.6357, 32.9374], [22.1875, 32.9183], [23.0908, 32.6187], [23.2866, 32.2139], [24.1295, 32.0093], [24.684, 32.0164], [25.0249, 31.8832], [25.2255, 31.5339], [25.8931, 31.6209], [27.2479, 31.378], [27.9674, 31.0975], [28.5147, 31.0505], [29.0723, 30.8303], [29.5916, 31.0114], [30.3951, 31.4575], [30.7005, 31.4038], [31.1941, 31.5876], [32.1018, 31.0922], [32.6034, 31.0687], [33.1299, 31.1681], [33.6666, 31.1304], [34.1983, 31.3226], [34.9041, 29.4773], [34.7363, 29.2704], [34.3999, 28.016], [34.2201, 27.7643], [33.7602, 28.0475], [33.2475, 28.5678], [33.0757, 29.0729], [32.7215, 29.5217], [32.5653, 29.3863], [32.6318, 28.9921], [32.8982, 28.5651], [33.5471, 27.8984], [33.5498, 27.6072], [33.8929, 27.0492], [33.9591, 26.6488], [34.565, 25.6913], [35.194, 24.4751], [35.6246, 24.0658], [35.5229, 23.4426], [35.6978, 22.9463], [36.2296, 22.6289], [36.8297, 22.0976], [36.9269, 21.5867], [37.1507, 21.1037], [37.2275, 20.5568], [37.2483, 19.5821], [37.4711, 18.8203], [37.9217, 18.5558], [38.2018, 18.2495], [38.5742, 18.0728], [38.9116, 17.427], [39.1424, 16.7292], [39.2991, 15.9213], [39.5064, 15.532], [39.8637, 15.4703], [40.2042, 15.014], [40.5464, 14.9336], [41.1763, 14.6202], [41.6584, 13.9832], [42.2452, 13.5877], [42.7961, 12.8642], [43.0828, 12.8247], [43.41, 12.1899], [43.2719, 11.9697], [42.7992, 11.7394], [43.4411, 11.3465], [43.853, 10.7841], [44.3865, 10.4303], [44.9427, 10.4365], [45.8168, 10.836], [46.5652, 10.7459], [47.405, 11.1738], [48.0194, 11.1392], [48.6745, 11.3226], [48.9031, 11.2546], [50.1101, 11.5294], [50.7923, 11.9835], [51.2549, 11.8308], [51.0844, 11.3354], [51.1408, 10.6567], [50.8984, 10.2532], [50.8248, 9.428], [50.4297, 8.8452], [50.103, 8.1998], [49.8522, 7.9627], [49.7612, 7.6596], [49.3484, 6.9906], [49.0492, 6.1738], [48.6492, 5.4942], [47.9754, 4.4968], [46.879, 3.2854], [46.0511, 2.4753], [44.9201, 1.8099], [44.3328, 1.3909], [43.4677, 0.6216], [41.9798, -0.9728], [41.3872, -1.8664], [40.9957, -1.9507], [40.8984, -2.2699], [40.6441, -2.5393], [40.2224, -2.6885], [40.1154, -3.2504], [39.4909, -4.4787], [39.2281, -4.6656], [38.8192, -5.8778], [38.8738, -6.3315], [39.4722, -6.8788], [39.5193, -7.1243], [39.2884, -7.518], [39.4411, -8.0116], [39.304, -8.444], [39.7838, -9.9146], [39.9836, -10.1596], [40.3889, -10.3536], [40.6117, -10.6616], [40.4031, -11.3319], [40.5806, -12.6356], [40.5451, -13.463], [40.6401, -14.3903], [40.835, -14.7916], [40.6179, -15.1157], [40.5589, -15.4734], [40.1088, -15.9795], [39.8446, -16.4358], [39.0843, -16.9729], [38.145, -17.2428], [37.2443, -17.7399], [36.5403, -18.5181], [35.6512, -19.164], [34.9481, -19.8129], [34.7559, -19.8218], [34.6982, -20.4042], [34.9822, -20.8064], [35.2677, -21.6511], [35.3156, -22.3968], [35.5753, -22.9632], [35.3702, -23.7982], [35.4381, -24.1711], [35.1558, -24.5413], [34.6072, -24.8214], [33.3474, -25.2608], [32.7921, -25.6443], [32.5906, -26.0039], [32.9337, -26.2525], [32.8862, -26.8495]]], [[[49.5384, -12.4323], [49.9374, -13.0724], [50.174, -14.0401], [50.2353, -14.7321], [50.483, -15.3855], [50.2091, -15.9604], [49.8926, -15.4579], [49.6498, -15.5671], [49.8389, -16.4864], [49.4491, -17.2406], [49.478, -17.8984], [48.6071, -20.4575], [48.3509, -21.3488], [47.9084, -22.4661], [47.5582, -23.8745], [47.1773, -24.7872], [46.7285, -25.1498], [46.1586, -25.2306], [45.5078, -25.5631], [45.1154, -25.5431], [44.8131, -25.3341], [44.3457, -25.2262], [44.0354, -24.9958], [43.6874, -24.3579], [43.7225, -23.5296], [43.398, -22.8864], [43.2666, -22.0493], [43.5019, -21.3563], [43.8556, -21.0767], [44.2396, -20.3798], [44.4047, -19.9221], [44.4487, -19.4285], [44.2387, -19.0752], [44.233, -18.7409], [44.0399, -18.2886], [43.9795, -17.3915], [44.4216, -16.7026], [44.4762, -16.2174], [44.9094, -16.1743], [45.1669, -15.983], [45.5984, -15.9928], [45.7, -15.8139], [46.3317, -15.7136], [46.4751, -15.5134], [47.8116, -14.5448], [47.9954, -13.9607], [48.7966, -13.2673], [48.9102, -12.9357], [48.8996, -12.4585], [49.2072, -12.0794], [49.5384, -12.4323]]], [[[55.8225, -21.2778], [55.5575, -21.3586], [55.233, -21.0585], [55.6618, -20.9062], [55.8225, -21.2778]]]] }, "properties": { "name": "Africa", "id": "africa" }, "id": "africa" },
        { "type": "Feature", "geometry": { "type": "MultiPolygon", "coordinates": [[[[110.8887, 19.9918], [111.0138, 19.6553], [110.5722, 19.1719], [110.4514, 18.748], [109.5193, 18.2184], [108.7016, 18.5354], [108.6936, 19.3384], [109.1792, 19.6739], [109.2188, 19.8426], [109.6511, 19.9842], [110.5882, 20.0726], [110.8887, 19.9918]]], [[[121.1017, 18.6153], [121.8457, 18.2952], [122.2998, 18.4026], [122.1511, 17.7563], [122.2368, 17.4349], [122.5191, 17.1247], [122.1351, 16.1849], [121.5953, 15.9333], [121.6069, 15.67], [121.3925, 15.3242], [121.6957, 14.7374], [121.6486, 14.4813], [121.8004, 14.1137], [122.1999, 14.1479], [122.4907, 14.3224], [122.856, 14.2509], [123.2315, 13.7475], [123.4322, 13.9664], [123.726, 13.8843], [123.608, 13.5283], [124.1428, 13.036], [124.0598, 12.5672], [123.311, 13.044], [123.1632, 13.4417], [122.5954, 13.9078], [122.4068, 13.4927], [121.7778, 13.9375], [121.2034, 13.6401], [120.8407, 13.8847], [120.6166, 14.1879], [120.922, 14.4933], [120.8882, 14.7157], [120.0821, 14.851], [119.8309, 16.327], [120.1598, 16.0478], [120.3893, 16.2218], [120.3054, 16.5294], [120.4088, 16.9555], [120.3582, 17.6382], [120.5997, 18.5078], [121.1017, 18.6153]]], [[[120.7045, 13.4794], [121.2029, 13.4324], [121.5226, 13.131], [121.5407, 12.6382], [121.2367, 12.2188], [120.922, 12.5117], [120.7635, 12.9698], [120.5083, 13.2601], [120.7045, 13.4794]]], [[[53.7633, 12.6369], [54.1872, 12.664], [54.1295, 12.3608], [53.5982, 12.3422], [53.7633, 12.6369]]], [[[125.2397, 12.5277], [125.5358, 12.1912], [125.4568, 11.9524], [125.6281, 11.1321], [125.2335, 11.145], [125.0342, 11.3412], [124.8841, 11.7753], [124.3848, 12.2441], [124.2947, 12.5694], [125.2397, 12.5277]]], [[[122.4964, 11.6151], [123.1583, 11.5356], [123.0167, 11.1166], [122.7699, 10.8236], [122.1977, 10.623], [121.9642, 10.8716], [122.1036, 11.643], [122.4964, 11.6151]]], [[[124.5748, 11.343], [124.9299, 11.3727], [125.0133, 10.7854], [125.2535, 10.2639], [125.0266, 10.033], [124.7807, 10.168], [124.7869, 10.7814], [124.4456, 10.9235], [124.5748, 11.343]]], [[[117.3109, 8.4395], [117.35, 8.7134], [117.8849, 9.2407], [118.1148, 9.3468], [119.0243, 10.3535], [119.2241, 10.4774], [119.2614, 10.8449], [119.5268, 10.9532], [119.6839, 10.5515], [119.1917, 10.061], [118.782, 9.9163], [118.4348, 9.2562], [117.9896, 8.8772], [117.3109, 8.4395]]], [[[123.3705, 9.4498], [123.386, 9.9669], [123.7114, 10.4738], [123.952, 10.3167], [123.6435, 10.0202], [123.3705, 9.4498]]], [[[123.1308, 9.064], [122.5626, 9.4826], [122.4716, 9.9616], [122.8556, 10.0868], [122.8169, 10.5036], [122.9834, 10.8866], [123.2564, 10.9941], [123.5676, 10.7806], [123.1618, 9.8644], [123.3083, 9.357], [123.1308, 9.064]]], [[[124.5938, 9.7871], [124.3599, 9.63], [123.9355, 9.6238], [123.817, 9.8173], [124.1726, 10.1351], [124.577, 10.0268], [124.5938, 9.7871]]], [[[79.9822, 9.8129], [80.253, 9.7965], [80.7111, 9.3663], [81.373, 8.4315], [81.436, 8.119], [81.8741, 7.2885], [81.8612, 6.9014], [81.6375, 6.4251], [81.3801, 6.2409], [80.724, 5.979], [80.2672, 6.0096], [80.0954, 6.153], [79.8593, 6.8295], [79.7923, 7.5854], [79.929, 8.8993], [80.1185, 9.3268], [79.9822, 9.8129]]], [[[126.0059, 9.321], [126.1932, 9.2767], [126.3201, 8.8447], [126.4355, 7.8327], [126.57, 7.6773], [126.5816, 7.2476], [126.08, 6.7332], [125.8243, 7.3333], [125.4008, 6.7957], [125.5886, 6.4659], [125.6681, 5.9785], [125.4559, 5.6643], [124.6365, 5.9981], [124.0776, 6.4042], [123.9853, 6.9937], [124.2068, 7.3963], [123.9684, 7.6644], [123.493, 7.8078], [123.3909, 7.4074], [122.4973, 7.6729], [122.176, 7.0044], [122.0472, 7.3635], [122.132, 7.8105], [122.3371, 8.0284], [122.911, 8.1563], [123.0176, 8.3982], [123.4344, 8.7031], [124.2259, 8.2712], [124.4513, 8.6064], [124.731, 8.5629], [124.8686, 8.9721], [125.5336, 9.1408], [125.4142, 9.6691], [125.5211, 9.7592], [126.0059, 9.321]]], [[[116.8075, 6.691], [117.1285, 6.9689], [117.294, 6.6768], [117.6456, 6.4735], [117.6172, 5.9408], [118.0038, 6.0531], [118.1157, 5.8627], [118.5946, 5.5919], [119.2236, 5.4126], [119.1322, 5.1005], [118.1854, 4.8284], [118.5627, 4.5022], [118.4979, 4.3623], [118.0083, 4.25], [117.741, 4.3375], [117.4654, 4.076], [117.6301, 3.6361], [117.1662, 3.5922], [117.6105, 3.0644], [118.0664, 2.3178], [117.8649, 1.9684], [118.0806, 1.7016], [118.639, 1.319], [118.9848, 0.9821], [118.5347, 0.8134], [118.196, 0.8742], [117.745, 0.7295], [117.5222, 0.2359], [117.4627, -0.3238], [117.5626, -0.7708], [116.5545, -1.474], [116.4236, -2.0528], [116.5656, -2.2996], [116.3308, -2.9024], [115.9561, -3.5949], [114.6937, -4.1697], [114.5361, -3.4946], [114.0825, -3.2788], [113.7953, -3.4564], [113.5258, -3.1843], [112.9714, -3.1869], [112.6003, -3.4005], [112.2852, -3.321], [111.8222, -3.5323], [111.8231, -3.0573], [111.3676, -2.9335], [111.0445, -3.0556], [110.574, -2.8913], [110.2326, -2.9251], [110.0191, -1.399], [109.7874, -1.0114], [109.454, -0.8689], [109.1606, -0.4947], [109.2574, 0.0313], [108.9444, 0.3558], [108.9058, 0.7939], [109.0758, 1.4957], [109.3786, 1.9227], [109.6289, 2.0275], [109.9845, 1.7176], [110.3493, 1.7198], [110.9397, 1.5174], [111.1541, 1.7389], [111.242, 2.4358], [111.7276, 2.854], [112.7375, 3.0706], [113.0447, 3.2051], [113.4459, 3.7404], [113.924, 4.2434], [114.0536, 4.5927], [114.2995, 4.6074], [114.9956, 5.0224], [115.5198, 5.049], [115.419, 5.413], [115.7968, 5.536], [116.1386, 6.1295], [116.4946, 6.5219], [116.8075, 6.691]]], [[[96.4924, 5.2293], [97.4512, 5.2359], [97.9084, 4.8799], [98.2484, 4.4147], [98.3074, 4.0929], [99.7319, 3.1829], [100.4572, 2.2574], [100.6854, 2.1202], [101.0463, 2.2574], [101.4768, 1.6932], [101.7849, 1.6213], [102.1573, 1.2591], [102.4694, 0.7792], [102.8493, 0.7153], [103.0664, 0.492], [103.4788, 0.48], [103.7868, 0.0468], [103.4286, -0.1916], [103.4313, -0.5334], [103.7211, -0.8867], [104.3608, -1.0385], [104.5685, -1.9219], [104.8451, -2.0932], [104.6684, -2.3857], [105.3968, -2.3804], [105.5819, -2.4918], [106.0445, -3.1062], [105.8438, -3.6135], [105.8873, -5.0096], [105.8163, -5.6767], [105.6183, -5.7997], [105.3493, -5.5493], [105.0812, -5.7455], [104.6396, -5.5205], [104.6014, -5.9045], [103.8312, -5.0797], [102.919, -4.4707], [102.5377, -4.152], [102.1276, -3.5993], [101.5785, -3.167], [100.8478, -2.1438], [100.8554, -1.9343], [100.4865, -1.2991], [100.3081, -0.8268], [99.8602, -0.3136], [99.5978, 0.1023], [99.1593, 0.3518], [98.7962, 1.4948], [98.5645, 1.9023], [97.7006, 2.3586], [97.591, 2.8464], [97.3912, 2.9752], [96.9691, 3.5753], [96.4449, 3.8163], [95.4949, 4.7614], [95.2069, 5.2838], [95.2277, 5.5648], [95.629, 5.6092], [96.1333, 5.2941], [96.4924, 5.2293]]], [[[96.4635, 2.3599], [95.8088, 2.6556], [95.8061, 2.9161], [96.4173, 2.5153], [96.4635, 2.3599]]], [[[128.4539, 2.0519], [128.2178, 2.2973], [128.6022, 2.5974], [128.623, 2.2245], [128.4539, 2.0519]]], [[[127.7326, 0.848], [128.161, 1.1579], [128.4242, 1.5174], [128.6883, 1.5725], [128.7025, 1.1064], [128.299, 0.8769], [128.6914, 0.3602], [127.983, 0.4721], [127.8875, 0.2985], [128.0464, -0.706], [127.6918, -0.2417], [127.7086, 0.2883], [127.5555, 0.4898], [127.4201, 1.252], [127.6318, 1.8437], [128.0109, 1.7012], [128.0118, 1.3319], [127.6527, 1.014], [127.7326, 0.848]]], [[[124.889, 0.9954], [124.4274, 0.4707], [123.754, 0.3056], [123.2653, 0.3265], [123.0824, 0.4858], [121.8422, 0.4365], [121.4258, 0.4947], [120.3489, 0.4494], [120.1274, 0.1667], [120.012, -0.307], [120.0972, -0.6501], [120.5176, -1.0394], [120.6676, -1.3701], [121.0338, -1.4065], [121.5194, -0.8556], [121.9691, -0.9333], [122.2798, -0.7571], [122.8888, -0.7553], [123.1716, -0.5706], [123.3798, -0.6488], [123.378, -1.0043], [123.0495, -0.8725], [122.8076, -0.9662], [122.5067, -1.3479], [121.7188, -1.8628], [121.349, -1.9458], [121.8484, -2.3316], [122.3992, -3.2007], [122.2528, -3.6206], [122.8773, -4.1089], [122.8973, -4.3491], [122.207, -4.4964], [121.9172, -4.848], [121.4866, -4.5812], [121.6175, -4.0929], [120.9144, -3.5558], [121.0542, -3.167], [121.052, -2.7515], [120.6539, -2.6676], [120.2539, -3.0529], [120.4368, -3.7072], [120.3627, -4.0858], [120.4199, -4.6176], [120.2792, -5.1463], [120.3116, -5.5418], [119.7172, -5.6932], [119.3768, -5.4255], [119.6116, -4.4236], [119.6236, -4.0343], [119.4194, -3.4755], [118.9946, -3.5376], [118.8126, -3.1568], [118.7837, -2.7648], [119.0922, -2.4829], [119.3217, -1.9298], [119.3089, -1.4083], [119.7718, -0.4836], [119.8091, 0.2386], [120.2694, 0.971], [120.5167, 0.8174], [120.9122, 1.2888], [121.44, 1.2142], [121.5918, 1.0678], [122.4365, 1.018], [122.8924, 0.8498], [123.2781, 0.9279], [123.8468, 0.8383], [124.2738, 1.022], [124.9893, 1.7012], [125.2339, 1.5023], [124.889, 0.9954]]], [[[97.4814, 1.465], [97.9319, 0.9741], [97.8764, 0.6283], [97.4055, 0.9466], [97.2443, 1.4238], [97.4814, 1.465]]], [[[140.9735, -2.6099], [140.9743, -5.0398], [140.9748, -6.3461], [140.8625, -6.7399], [140.9752, -6.9054], [140.9761, -9.1187], [139.9347, -8.1013], [139.3857, -8.1892], [138.8561, -8.1452], [139.0878, -7.5872], [138.7478, -7.2517], [138.8645, -6.8584], [138.4388, -6.3435], [138.2826, -5.8388], [138.0611, -5.4654], [137.0894, -4.9243], [136.6189, -4.8187], [135.9797, -4.5311], [135.1962, -4.4507], [134.6795, -4.0792], [134.1473, -3.7969], [133.9737, -3.8182], [133.6532, -3.3645], [133.2488, -4.0623], [132.9688, -4.0947], [132.7539, -3.7036], [132.7512, -3.2948], [132.3482, -2.9752], [133.1911, -2.4377], [133.6088, -2.5473], [133.9049, -2.391], [133.9213, -2.1021], [132.963, -2.2725], [132.3078, -2.2423], [132.0233, -1.9902], [131.9305, -1.5596], [131.2935, -1.3936], [131.2571, -0.8556], [131.8044, -0.7038], [132.1285, -0.4539], [132.6252, -0.3589], [133.4726, -0.726], [133.9746, -0.7442], [134.2596, -1.363], [134.106, -1.7212], [134.1557, -2.1953], [135.0373, -3.333], [135.4865, -3.345], [136.2433, -2.5833], [136.3898, -2.2734], [136.843, -2.1975], [137.1236, -1.8411], [137.8063, -1.4833], [138.6497, -1.7909], [139.7896, -2.3484], [140.6223, -2.4456], [140.9735, -2.6099]]], [[[135.3831, -0.6514], [135.8936, -0.726], [136.2828, -1.0647], [135.839, -1.1193], [135.3831, -0.6514]]], [[[99.1637, -1.778], [98.8743, -1.664], [98.6017, -1.1979], [98.869, -0.9156], [99.2671, -1.6276], [99.1637, -1.778]]], [[[128.153, -1.6604], [127.5617, -1.7283], [127.6465, -1.3324], [128.153, -1.6604]]], [[[106.0458, -1.6693], [106.3659, -2.4647], [106.6788, -2.704], [106.547, -3.0556], [105.9988, -2.8247], [105.7857, -2.1815], [105.1332, -2.0426], [105.5855, -1.5268], [106.0458, -1.6693]]], [[[135.4741, -1.5916], [136.2016, -1.6551], [136.1927, -1.8593], [135.4741, -1.5916]]], [[[124.9694, -1.7057], [124.8344, -1.8943], [124.4176, -2.0053], [124.3808, -1.6875], [124.9694, -1.7057]]], [[[108.2071, -2.9978], [107.6145, -3.2096], [107.6665, -2.5664], [108.0744, -2.597], [108.2071, -2.9978]]], [[[129.7545, -2.866], [130.3791, -2.9894], [130.8598, -3.5705], [130.8052, -3.8577], [129.8442, -3.3272], [129.4678, -3.4533], [128.9675, -3.3259], [128.4193, -3.416], [128.0819, -3.1843], [128.1987, -2.866], [129.4274, -2.7906], [129.7545, -2.866]]], [[[126.8612, -3.088], [127.2275, -3.3911], [127.2297, -3.6331], [126.6863, -3.8235], [126.1785, -3.5798], [126.0263, -3.1705], [126.8612, -3.088]]], [[[123.1796, -4.551], [123.0553, -4.7481], [122.9856, -5.3935], [122.8121, -5.6714], [122.5843, -5.5445], [122.7663, -5.2102], [122.8533, -4.6185], [123.1796, -4.551]]], [[[122.6452, -5.2692], [122.3961, -5.0699], [122.3691, -4.7672], [122.702, -4.6185], [122.7592, -4.9341], [122.6452, -5.2692]]], [[[140.0488, 75.8289], [140.9442, 75.7004], [141.4853, 76.1372], [142.4605, 75.9035], [143.6856, 75.8636], [145.2552, 75.5857], [144.0199, 75.0446], [141.9873, 74.9913], [139.0993, 74.6566], [138.0922, 74.7973], [137.0064, 75.235], [137.5013, 75.9097], [138.8139, 76.1996], [140.0488, 75.8289]]], [[[146.7951, 75.3709], [150.1039, 75.2193], [150.6463, 74.9445], [149.5969, 74.7725], [148.0926, 74.8258], [146.1483, 75.1984], [146.7951, 75.3709]]], [[[113.3873, 74.4005], [112.7823, 74.0951], [111.6428, 74.2729], [112.0845, 74.549], [113.3873, 74.4005]]], [[[142.1848, 73.8958], [143.3438, 73.5687], [143.1934, 73.2206], [140.6627, 73.4519], [141.0849, 73.8658], [142.1848, 73.8958]]], [[[70.6738, 73.095], [69.996, 73.3594], [70.9402, 73.5145], [71.626, 73.174], [70.6738, 73.095]]], [[[-178.8765, 71.5769], [-177.5322, 71.2631], [-177.8218, 71.0675], [-179.5066, 70.9235], [-180, 70.993], [-180, 71.5378], [-178.8765, 71.5769]]], [[[178.8614, 70.8265], [178.8912, 71.2311], [180, 71.5378], [180, 70.993], [178.8614, 70.8265]]], [[[169.201, 69.5805], [167.789, 69.8369], [168.358, 70.0157], [169.375, 69.8826], [169.201, 69.5805]]], [[[-179.7985, 68.9402], [-178.8738, 68.7542], [-177.4074, 68.2451], [-175.3451, 67.678], [-174.4476, 67.1031], [-173.6796, 67.1449], [-172.6405, 66.9249], [-171.7955, 66.9318], [-170.192, 66.2014], [-170.6663, 65.6217], [-172.2115, 65.4255], [-172.2132, 65.0481], [-172.9239, 64.705], [-173.0091, 64.2975], [-173.7298, 64.3645], [-174.318, 64.6375], [-175.3951, 64.8024], [-175.8538, 65.0109], [-176.0933, 65.471], [-177.0563, 65.6137], [-178.3103, 65.4849], [-178.8794, 65.9364], [-179.7283, 65.8039], [-179.3521, 65.5167], [-180, 65.0672], [-180, 67.0252], [-180, 68.9835], [-179.7985, 68.9402]]], [[[163.635, 58.6033], [163.7615, 59.015], [164.6156, 58.8856], [163.635, 58.6033]]], [[[142.761, 54.3941], [142.9181, 53.7941], [143.2235, 53.2961], [143.3234, 52.6138], [143.1556, 52.0838], [143.4553, 51.4717], [143.8161, 50.2825], [144.272, 49.3113], [143.105, 49.1988], [142.5741, 48.0719], [142.5568, 47.7381], [143.0056, 47.2228], [143.2821, 46.5592], [142.5781, 46.7008], [142.2088, 46.0891], [141.8302, 46.4508], [142.0388, 47.1402], [141.9647, 47.5872], [142.1817, 48.0133], [141.8661, 48.75], [142.1422, 49.5692], [142.0712, 50.5149], [142.2066, 51.2225], [141.7223, 51.7363], [141.661, 52.2729], [141.8035, 52.5557], [141.8235, 53.3394], [142.5262, 53.4475], [142.67, 53.9684], [142.3349, 54.2807], [142.761, 54.3941]]], [[[148.5991, 45.3176], [147.9137, 44.9904], [147.7694, 45.1906], [148.5991, 45.3176]]], [[[143.8241, 44.1169], [144.7985, 43.9402], [145.1012, 43.7644], [145.3471, 43.1767], [144.6307, 42.9468], [143.9693, 42.8815], [143.4295, 42.419], [143.2364, 42.0004], [142.5084, 42.2578], [141.8515, 42.5792], [141.4067, 42.5468], [140.9863, 42.3422], [140.4803, 42.5592], [140.3267, 42.2933], [140.7342, 42.1162], [140.3849, 41.5192], [139.9951, 41.5765], [140.1083, 41.9129], [139.8211, 42.3875], [139.8912, 42.6494], [140.7808, 43.2149], [141.2962, 43.1998], [141.6446, 44.0196], [141.7822, 44.7166], [141.5829, 45.156], [141.9376, 45.5093], [142.7042, 44.8191], [143.8241, 44.1169]]], [[[141.2296, 41.3727], [141.4626, 40.611], [141.7969, 40.2914], [141.978, 39.8444], [141.9007, 39.1115], [141.6584, 38.9748], [141.4675, 38.404], [141.1084, 38.3378], [140.9282, 37.9494], [141.0365, 37.4674], [140.9686, 37.0022], [140.6272, 36.5028], [140.6219, 36.0593], [140.874, 35.7251], [140.4572, 35.5102], [140.3147, 35.1551], [139.7994, 34.9567], [139.6502, 35.409], [139.2494, 35.2781], [138.9826, 34.6984], [138.5773, 35.0863], [138.1889, 34.5963], [136.8848, 34.8058], [136.5332, 34.6784], [136.8537, 34.3242], [136.3299, 34.1768], [135.9162, 33.5615], [135.4528, 33.5531], [135.1753, 33.898], [135.1003, 34.2882], [135.3849, 34.5004], [134.7399, 34.7654], [134.2081, 34.6975], [133.9684, 34.5275], [133.1423, 34.3024], [132.2381, 34.2269], [132.0903, 33.8554], [131.7405, 34.0521], [130.9189, 33.9757], [131.0041, 34.3925], [131.3543, 34.4134], [131.8564, 34.7263], [132.923, 35.5111], [133.3767, 35.4587], [134.2139, 35.5391], [135.1744, 35.7473], [135.68, 35.5031], [136.0955, 35.7677], [136.0063, 35.9905], [136.6983, 36.742], [137.3424, 36.7704], [137.5142, 36.9516], [138.3199, 37.2183], [138.8849, 37.8438], [139.4012, 38.1425], [140.0479, 39.4635], [139.9228, 40.5986], [140.2814, 40.8463], [141.1186, 40.8822], [141.2296, 41.3727]]], [[[134.3572, 34.2562], [134.6373, 34.2265], [134.739, 33.8203], [134.3772, 33.6082], [134.1815, 33.2473], [133.6319, 33.5109], [133.2861, 33.36], [132.9772, 32.842], [132.4951, 32.9166], [132.3659, 33.5123], [132.7841, 33.9926], [133.5822, 34.017], [134.0758, 34.3583], [134.3572, 34.2562]]], [[[131.1745, 33.6024], [131.5829, 33.6525], [131.8968, 33.2548], [131.9767, 32.8438], [131.7321, 32.593], [131.3374, 31.4047], [130.5886, 31.1783], [130.2006, 31.2919], [130.3218, 31.6013], [130.1944, 32.0909], [130.6405, 32.6192], [130.3817, 33.0924], [130.1749, 32.8513], [129.5801, 33.2362], [129.66, 33.3649], [130.3649, 33.6343], [130.4838, 33.8345], [130.953, 33.8718], [131.1745, 33.6024]]], [[[121.009, 22.6205], [120.5815, 22.3564], [120.3258, 22.5424], [120.0724, 23.1496], [120.1589, 23.7089], [121.0405, 25.0326], [121.5936, 25.2754], [121.9292, 24.9736], [121.6393, 24.1302], [121.4773, 23.4239], [121.2957, 22.9667], [121.009, 22.6205]]], [[[96.5265, 81.0755], [97.8316, 80.7983], [97.1751, 80.241], [94.565, 80.126], [93.8725, 80.0102], [91.5239, 80.3584], [93.2626, 80.7912], [93.0651, 80.9885], [95.8008, 81.2804], [96.5265, 81.0755]]], [[[97.6745, 80.1582], [100.0613, 79.7771], [99.4394, 78.8341], [97.5555, 78.8266], [94.6524, 79.1275], [93.0708, 79.4953], [94.9867, 80.0967], [97.6745, 80.1582]]], [[[102.8849, 79.254], [105.146, 78.8188], [105.3125, 78.4998], [103.7194, 78.2581], [101.2043, 78.192], [100.2841, 78.6792], [101.5905, 79.3503], [102.8849, 79.254]]], [[[34.9041, 29.4773], [34.1983, 31.3226], [34.6786, 31.8956], [35.2512, 33.3924], [35.6481, 34.2483], [35.9779, 34.5474], [35.9433, 35.2239], [35.7644, 35.5715], [35.8927, 35.9164], [36.1275, 35.8316], [36.5376, 36.4575], [36.6584, 36.8024], [37.4365, 36.6435], [38.1916, 36.9014], [38.7669, 36.6932], [39.3568, 36.6817], [40.0164, 36.8259], [40.7058, 37.0976], [41.5154, 37.0892], [42.7748, 37.3719], [43.5161, 37.2445], [44.1562, 37.2831], [44.2818, 36.9782], [44.794, 37.2902], [44.5614, 37.7448], [44.2112, 37.9081], [44.4309, 38.3569], [44.023, 39.3774], [44.3892, 39.4223], [44.5872, 39.7685], [45.4798, 39.0063], [46.1701, 38.8692], [46.555, 38.9042], [46.8528, 39.1484], [47.773, 39.6486], [47.9958, 39.6842], [48.2422, 38.9788], [48.0234, 38.819], [48.5929, 38.4111], [48.8685, 38.4355], [49.0811, 37.6676], [49.47, 37.4967], [50.1305, 37.407], [50.5331, 37.0137], [51.1186, 36.7425], [52.1902, 36.6217], [54.0172, 36.9524], [53.8237, 37.9281], [53.8685, 38.9491], [53.6177, 39.2158], [53.125, 39.432], [53.4721, 39.6686], [53.4042, 39.9603], [52.9874, 39.9878], [52.7335, 40.3988], [53.1454, 40.825], [53.6151, 40.8183], [53.8699, 40.6487], [54.7101, 40.8911], [54.5921, 41.1934], [54.0949, 41.5192], [53.8463, 42.0914], [53.1641, 42.0936], [52.6096, 41.5294], [52.4623, 42.1007], [52.5968, 42.7603], [51.8439, 42.9104], [51.3019, 43.4825], [50.8305, 44.1928], [50.3311, 44.3255], [50.4093, 44.6242], [50.8603, 44.6287], [51.4156, 45.358], [52.5311, 45.3988], [52.7739, 45.5728], [53.1352, 46.1916], [53.1703, 46.6692], [52.9159, 46.9542], [52.1888, 46.8397], [51.1781, 47.11], [50.4195, 46.8796], [50, 46.6342], [49.3475, 46.5192], [49.2321, 46.3372], [48.6102, 46.5663], [48.9595, 46.7744], [48.1099, 47.7452], [47.0934, 47.9476], [47.0042, 48.2846], [46.661, 48.4124], [46.7028, 48.8055], [47.0144, 49.0987], [46.8022, 49.367], [46.9917, 49.8526], [47.3264, 50.2734], [47.706, 50.378], [48.4344, 49.8284], [48.8432, 50.0131], [48.8086, 50.6012], [49.498, 51.0835], [50.2468, 51.2895], [50.7941, 51.7292], [51.6091, 51.4839], [52.3309, 51.6812], [52.571, 51.4817], [53.3381, 51.4824], [54.0416, 51.1153], [54.4216, 50.7803], [54.727, 50.9981], [55.5424, 50.6017], [55.7977, 50.6021], [56.4915, 51.0196], [57.0117, 51.0651], [57.4423, 50.8889], [57.8387, 51.0917], [58.3594, 51.0638], [58.8836, 50.6945], [59.8122, 50.5819], [59.9552, 50.7992], [60.6379, 50.6638], [61.3894, 50.8609], [61.5851, 51.23], [61.3632, 51.442], [60.4648, 51.6513], [60.0657, 51.9766], [60.1789, 52.009], [59.707, 52.4616], [59.0372, 52.607], [59.0052, 53.1794], [59.4083, 53.6477], [59.8828, 53.9417], [59.6294, 54.3086], [58.9546, 54.5315], [57.6207, 53.983], [56.9735, 54.4686], [56.084, 55.3471], [58.0984, 55.5504], [58.6901, 56.0873], [58.58, 56.5143], [57.8276, 56.859], [58.0265, 57.3293], [58.7984, 57.8522], [59.4318, 58.5187], [60.0644, 59.4402], [60.5424, 61.0083], [61.2167, 64.2824], [63.0824, 64.9054], [64.8011, 65.7162], [66.2021, 66.1716], [67.5444, 66.7227], [68.2688, 67.2858], [67.8751, 68.4763], [68.3714, 68.3143], [69.1406, 68.9506], [68.5427, 68.967], [68.006, 69.48], [67.0645, 69.6937], [66.9265, 70.0142], [67.2847, 70.7386], [66.6664, 70.9006], [66.9176, 71.2824], [68.2693, 71.6828], [69.039, 72.67], [69.6449, 72.8975], [71.5004, 72.9137], [72.8121, 72.6915], [72.6243, 72.0794], [71.9118, 71.5478], [72.5812, 71.1512], [72.7002, 70.4574], [72.4694, 70.275], [72.5275, 69.0805], [73.548, 68.5744], [73.1521, 67.8651], [72.5946, 67.587], [71.5514, 66.7605], [70.9393, 66.5481], [69.877, 66.8455], [69.1943, 66.5787], [70.3396, 66.3423], [71.9172, 66.2467], [72.4174, 66.5607], [73.7922, 66.9953], [74.0745, 67.4141], [74.7696, 67.7663], [74.3914, 68.4206], [74.5796, 68.7511], [76.4591, 68.9784], [77.2385, 68.4697], [77.6509, 68.9029], [76.0005, 69.2349], [74.8145, 69.0907], [73.7757, 69.1983], [73.56, 69.7072], [74.3111, 70.6538], [73.0864, 71.4448], [73.6719, 71.845], [75.7413, 72.2962], [75.2472, 71.8135], [75.332, 71.3416], [76.1106, 71.2185], [77.4809, 71.3115], [76.3121, 71.5956], [76.0325, 71.9103], [78.4828, 72.395], [79.4221, 72.3808], [80.7626, 72.0892], [81.511, 71.7463], [82.9861, 71.7487], [82.1835, 72.2376], [80.827, 72.4882], [80.5096, 73.0861], [80.5833, 73.5684], [83.5449, 73.6665], [86.5914, 73.8942], [86.6513, 74.6824], [87.6713, 75.1296], [90.1851, 75.591], [93.5498, 75.854], [94.5756, 76.1517], [96.879, 75.931], [98.6621, 76.2427], [98.8055, 76.4806], [100.3223, 76.479], [101.0991, 76.7041], [100.9899, 76.9904], [103.1312, 77.6265], [104.0146, 77.7304], [105.8944, 77.4889], [104.9121, 77.1748], [105.712, 77.0015], [107.4299, 76.9265], [108.0278, 76.7185], [111.1151, 76.7229], [112.6194, 76.3836], [113.8712, 75.856], [113.6137, 75.2929], [111.8683, 74.7403], [109.8402, 74.3219], [108.1996, 73.6941], [107.271, 73.621], [106.4782, 73.1394], [107.7504, 73.1731], [109.8553, 73.4725], [110.2615, 74.0174], [112.1471, 73.7089], [114.0607, 73.5846], [115.3378, 73.7025], [118.4504, 73.5897], [118.4304, 73.2466], [119.7505, 72.9792], [123.1605, 72.955], [123.6222, 73.1933], [123.3052, 73.5331], [124.3883, 73.7549], [125.617, 73.5207], [127.7406, 73.4816], [128.8885, 73.1902], [129.4118, 72.3155], [128.3589, 72.0883], [129.7621, 71.1195], [131.1572, 70.7419], [131.5621, 70.9011], [132.5621, 71.8952], [133.4264, 71.491], [134.1029, 71.3789], [135.8847, 71.6306], [137.3153, 71.3594], [138.1183, 71.5663], [139.695, 71.7003], [139.6014, 72.496], [142.0614, 72.7208], [145.4856, 72.5422], [146.594, 72.3027], [148.402, 72.312], [149.5015, 72.1644], [150.5997, 71.5201], [151.5825, 71.287], [152.5089, 70.8345], [153.7944, 70.88], [155.8949, 71.0955], [158.0371, 71.0394], [159.3506, 70.7908], [160.0062, 70.3096], [159.8327, 69.7849], [161.5368, 69.3796], [162.3757, 69.6491], [164.1597, 69.7192], [164.5135, 69.6091], [166.8204, 69.4995], [167.6287, 69.7403], [168.303, 69.2716], [169.3106, 69.0796], [169.6098, 68.7862], [170.5376, 68.8254], [170.9952, 69.0454], [170.5824, 69.5834], [170.4869, 70.1076], [172.5595, 69.9682], [173.2773, 69.8238], [176.1075, 69.8604], [176.9243, 69.646], [178.8485, 69.3872], [180, 68.9835], [180, 65.0672], [178.5196, 64.6029], [177.4672, 64.7368], [177.433, 64.4445], [178.6501, 63.9653], [178.7065, 63.5216], [179.3324, 63.1902], [179.5703, 62.6875], [179.1206, 62.3204], [177.3513, 62.5874], [175.2681, 62.1025], [174.5144, 61.8237], [173.6235, 61.7161], [172.856, 61.4693], [172.3926, 61.0618], [170.6081, 60.435], [169.9827, 60.067], [169.2267, 60.5959], [168.1374, 60.5739], [166.9642, 60.3069], [166.3521, 60.4847], [165.0843, 60.0985], [163.7802, 60.041], [163.41, 59.8349], [163.2728, 59.3026], [162.1418, 58.4475], [161.9602, 58.0768], [162.4672, 57.7661], [163.2138, 57.6869], [162.7792, 57.3577], [162.8027, 56.8113], [163.2564, 56.6881], [163.3354, 56.2324], [163.0473, 56.0447], [162.5284, 56.2606], [162.085, 56.0897], [161.7294, 55.358], [162.1058, 54.7521], [161.7259, 54.533], [160.7733, 54.5414], [160.0746, 54.1892], [159.8437, 53.7837], [159.8975, 53.3807], [158.6088, 52.8735], [158.4637, 52.3049], [158.1037, 51.8095], [156.7476, 50.9692], [156.5004, 51.475], [156.3645, 52.5093], [156.0986, 53.0065], [155.6201, 54.8646], [155.5549, 55.3484], [155.9828, 56.6952], [156.7285, 57.1522], [156.9767, 57.4662], [156.7915, 57.7479], [157.4503, 57.7994], [158.2102, 58.0253], [159.0368, 58.4239], [159.8473, 59.1271], [160.8554, 59.6269], [161.7534, 60.1522], [162.0037, 60.4201], [162.9732, 60.7828], [163.71, 60.9168], [164.0052, 61.3439], [164.2556, 62.6966], [163.3319, 62.5508], [163.0091, 61.7915], [162.3926, 61.6621], [160.7666, 60.7533], [159.8833, 61.2917], [160.3174, 61.7933], [159.5526, 61.7194], [159.0767, 61.9223], [158.07, 61.7536], [157.4694, 61.7989], [156.6801, 61.4806], [156.63, 61.2724], [155.8532, 60.7772], [154.9707, 60.3766], [154.2929, 59.8333], [154.5827, 59.5401], [155.1669, 59.3601], [154.011, 59.0756], [153.3612, 59.2147], [152.8822, 58.9391], [151.3268, 58.8752], [151.99, 59.1601], [151.4857, 59.5241], [150.4572, 59.5907], [149.6427, 59.7705], [149.205, 59.4882], [147.8746, 59.3881], [147.5146, 59.2687], [146.4444, 59.4305], [145.9317, 59.1983], [145.5544, 59.4136], [143.192, 59.3701], [142.0255, 58.9997], [141.7547, 58.7453], [140.6849, 58.2122], [140.447, 57.8136], [140.0022, 57.6875], [138.6621, 56.9658], [137.6913, 56.1395], [136.175, 55.3522], [135.2623, 54.9434], [135.2579, 54.7314], [135.8514, 54.5838], [136.7973, 54.6209], [136.6828, 53.9313], [137.1555, 53.8217], [137.3282, 53.5389], [138.2923, 53.5924], [138.6608, 53.7449], [138.6958, 54.3199], [139.3195, 54.193], [139.7075, 54.2771], [140.3471, 53.8126], [141.4023, 53.184], [141.1697, 52.3684], [141.4853, 52.1786], [140.6876, 51.2322], [140.4763, 50.546], [140.5171, 49.596], [140.1705, 48.5238], [139.3723, 47.8873], [139.0012, 47.3835], [138.5866, 47.0572], [138.3367, 46.5432], [137.6855, 45.8183], [136.8035, 45.1711], [136.1421, 44.4893], [135.8745, 44.3734], [135.4834, 43.835], [135.1309, 43.5256], [133.7092, 42.83], [133.1601, 42.6968], [132.4814, 42.9099], [132.3344, 43.2388], [131.7947, 43.2553], [131.1586, 42.6258], [130.8341, 42.5228], [130.0684, 42.0457], [129.7563, 41.7123], [129.7088, 40.8574], [128.3043, 40.0362], [127.5684, 39.7818], [127.3944, 39.2079], [127.7863, 39.084], [128.3745, 38.6233], [128.6191, 38.1763], [129.335, 37.2747], [129.4735, 36.742], [129.4034, 36.0522], [129.5619, 35.9475], [129.2143, 35.1818], [128.5112, 35.101], [128.4442, 34.8706], [127.7148, 34.9545], [127.0308, 34.6069], [126.4817, 34.4937], [126.2913, 35.1542], [126.7174, 35.769], [126.5483, 36.4775], [126.2172, 36.8708], [126.8688, 36.9755], [126.5727, 37.7967], [125.9419, 37.8735], [125.4492, 37.7301], [125.1931, 38.0378], [124.6911, 38.1292], [125.0675, 38.5567], [125.4097, 39.2882], [125.3609, 39.5266], [124.2676, 39.9243], [123.3483, 39.7632], [122.3349, 39.3663], [121.6499, 38.8652], [121.7853, 39.4009], [121.5177, 39.6389], [122.2749, 40.5418], [121.859, 40.8423], [121.1745, 40.9013], [120.479, 40.231], [119.5912, 39.9025], [119.2245, 39.4081], [118.9125, 39.1666], [118.2977, 39.0671], [117.7845, 39.1346], [117.5577, 38.625], [118.0149, 38.1834], [118.94, 38.0426], [119.0891, 37.7008], [118.9529, 37.3311], [119.45, 37.1247], [120.3702, 37.7008], [120.7502, 37.834], [121.6402, 37.4603], [122.6025, 37.4265], [122.5195, 36.9467], [121.9327, 36.9595], [120.9899, 36.5978], [120.3933, 36.054], [120.0546, 35.8614], [119.2156, 35.0117], [119.5827, 34.5821], [120.2015, 34.3255], [120.5047, 33.6383], [120.8709, 33.0165], [120.8532, 32.6613], [121.4009, 32.3719], [121.3521, 31.8588], [121.0556, 31.7194], [121.661, 31.3199], [121.8781, 30.9164], [120.9974, 30.5582], [121.1594, 30.3012], [121.9442, 29.8941], [121.7174, 29.2562], [121.602, 28.3667], [121.0986, 28.2903], [120.2788, 27.0971], [119.6484, 25.9186], [119.5392, 25.5915], [119.0252, 25.2235], [118.9089, 24.9287], [118.5605, 24.5803], [118.0873, 24.6269], [118.0562, 24.246], [117.6283, 23.8368], [117.4663, 23.8408], [116.5381, 23.1798], [116.4706, 22.9459], [115.4985, 22.719], [115.1958, 22.8171], [114.854, 22.6169], [114.6515, 22.7554], [114.268, 22.2956], [113.8965, 22.4283], [113.5494, 22.225], [112.3051, 21.7416], [111.9438, 21.8495], [111.6029, 21.5591], [110.771, 21.3865], [110.1935, 21.0376], [110.1802, 20.8587], [110.5114, 20.5182], [110.123, 20.2639], [109.6626, 20.9168], [109.9308, 21.4806], [109.5441, 21.5378], [109.1486, 21.4255], [109.0305, 21.6266], [108.3248, 21.6936], [107.4099, 21.2848], [107.3544, 21.0553], [106.6752, 20.9603], [106.7534, 20.7348], [106.5181, 20.2887], [105.9841, 19.9389], [105.6214, 18.9664], [105.8882, 18.5025], [106.4986, 17.9463], [106.479, 17.7195], [107.1804, 16.8983], [108.0296, 16.331], [108.6741, 15.4836], [108.8215, 15.3779], [109.0847, 14.7161], [109.3035, 13.8563], [109.272, 13.2792], [109.4238, 12.9561], [109.2188, 12.6458], [109.1988, 11.7247], [108.8206, 11.3154], [108.2715, 10.9341], [107.2616, 10.3984], [106.8129, 10.4334], [106.7853, 10.1165], [106.5075, 9.8213], [106.5723, 9.6411], [105.5012, 9.0933], [105.3223, 8.8012], [104.8921, 8.5833], [104.8184, 8.8017], [104.8451, 9.606], [105.028, 10.0672], [104.6635, 10.1698], [104.2623, 10.5413], [103.532, 10.6048], [103.722, 10.8902], [103.5325, 11.1468], [103.153, 10.9137], [103.1254, 11.4606], [102.7628, 12.0124], [101.7236, 12.6893], [101.4449, 12.6187], [100.8634, 12.7146], [100.9624, 13.4319], [100.6561, 13.5211], [100.0173, 13.3534], [100.0901, 13.0457], [99.964, 12.6902], [99.9889, 12.1708], [99.6271, 11.4628], [99.4869, 10.8898], [99.165, 10.3198], [99.161, 9.7339], [99.3936, 9.2136], [99.7239, 9.3144], [99.9046, 9.1129], [99.9605, 8.6712], [100.2792, 8.2686], [100.4537, 7.4425], [100.5864, 7.1762], [101.0178, 6.861], [101.4977, 6.8654], [101.7991, 6.4744], [102.3402, 6.1721], [102.5342, 5.8627], [102.9825, 5.5249], [103.4158, 4.8502], [103.4686, 4.3934], [103.362, 3.7693], [103.4535, 3.5207], [103.4397, 2.933], [103.8121, 2.5805], [104.2884, 1.4806], [103.6945, 1.4495], [102.7273, 1.8557], [101.2953, 2.8851], [101.2997, 3.2535], [100.7156, 3.9664], [100.6143, 4.6522], [100.3525, 5.5875], [100.3431, 5.9843], [100.119, 6.442], [99.6959, 6.8765], [99.7203, 7.106], [99.051, 7.8877], [98.5791, 8.3445], [98.2377, 8.423], [98.2417, 8.7684], [98.5618, 9.8373], [98.465, 10.6758], [98.6754, 10.987], [98.7416, 11.5916], [98.6364, 11.7385], [98.6963, 12.2254], [98.576, 13.162], [98.2453, 13.7333], [97.8121, 14.859], [97.7104, 15.8756], [97.5843, 16.0194], [97.6194, 16.5374], [97.3757, 16.5227], [97.1782, 17.0621], [96.97, 17.3173], [96.8106, 16.7784], [96.6224, 16.564], [95.7635, 16.169], [95.3897, 15.7229], [94.9432, 15.8183], [94.5876, 16.2888], [94.2143, 16.1268], [94.589, 17.5694], [94.4309, 18.2015], [94.07, 18.8936], [93.7056, 19.0267], [93.9981, 19.4409], [93.3625, 20.0583], [93.002, 20.0748], [92.6079, 20.4698], [92.0561, 21.1747], [92.0082, 21.6848], [91.693, 22.5046], [91.4094, 22.7972], [90.9455, 22.597], [90.6334, 23.0946], [90.435, 22.7519], [90.5895, 22.2583], [90.1589, 21.817], [89.8118, 21.9835], [89.0518, 21.6541], [88.2537, 21.6222], [87.9483, 21.8255], [87.678, 21.6537], [87.1005, 21.5006], [86.8595, 21.2369], [86.9753, 20.7002], [86.7503, 20.3131], [86.2793, 19.9194], [85.5748, 19.693], [84.771, 19.1253], [84.1042, 18.2925], [83.6541, 18.0697], [83.1982, 17.609], [82.3597, 17.0963], [82.259, 16.56], [81.7618, 16.3297], [81.2385, 16.264], [80.9788, 15.7584], [80.6468, 15.8951], [80.2934, 15.7109], [80.0533, 15.0739], [80.1656, 14.5776], [80.1119, 14.2123], [80.3422, 13.3613], [80.229, 12.6902], [79.8584, 11.9888], [79.7541, 11.5751], [79.8486, 11.1969], [79.838, 10.3225], [79.3905, 10.3065], [78.9964, 9.6833], [78.9795, 9.2687], [78.4215, 9.1049], [78.1925, 8.8909], [78.0602, 8.3844], [77.5178, 8.0781], [76.9669, 8.4071], [76.5536, 8.9029], [76.3246, 9.452], [76.3463, 9.9221], [75.9224, 10.7841], [75.724, 11.3616], [75.1966, 12.0576], [74.7701, 13.0773], [74.6711, 13.6676], [74.3821, 14.4946], [73.9493, 15.0748], [73.932, 15.397], [73.4761, 16.0544], [73.3376, 16.4597], [73.1561, 17.6218], [72.8711, 18.6832], [72.8116, 19.2988], [72.6678, 19.8311], [72.8809, 20.5631], [72.8138, 21.117], [72.5431, 21.6968], [72.5901, 22.2783], [72.3327, 22.2703], [72.037, 21.8233], [72.2541, 21.5312], [72.0153, 21.1556], [71.0245, 20.7388], [70.7191, 20.7406], [70.1274, 21.0948], [69.0088, 22.1966], [70.1771, 22.5726], [70.2512, 22.9707], [69.6644, 22.759], [69.2361, 22.8487], [68.6408, 23.19], [68.4175, 23.5713], [68.0371, 23.8483], [67.6687, 23.811], [67.3096, 24.175], [67.1715, 24.7561], [66.7032, 24.8608], [66.6988, 25.2261], [66.4284, 25.5755], [65.6796, 25.3553], [64.7767, 25.3074], [64.6591, 25.184], [63.7207, 25.3859], [63.4912, 25.2106], [62.5724, 25.2545], [62.3153, 25.1347], [61.4116, 25.1023], [60.6641, 25.2821], [59.4562, 25.4814], [59.0461, 25.4175], [58.7979, 25.5546], [57.7961, 25.6532], [57.3344, 25.7917], [56.9824, 26.9054], [56.8129, 27.09], [56.3561, 27.2001], [55.6503, 26.9777], [54.8957, 26.5565], [54.6449, 26.509], [54.2472, 26.6968], [53.7056, 26.7256], [53.4548, 26.9431], [52.6918, 27.3235], [52.476, 27.6165], [52.0308, 27.8242], [51.6664, 27.8451], [51.2789, 28.1314], [51.0622, 28.7262], [50.6752, 29.1466], [50.6499, 29.42], [49.9831, 30.2093], [49.5548, 30.0291], [48.9169, 30.397], [48.9191, 30.1209], [48.4544, 29.9385], [47.9825, 30.0113], [47.9696, 29.6167], [48.1836, 28.9793], [48.9067, 27.6289], [49.4052, 27.1815], [49.9858, 26.829], [50.214, 26.3083], [50.0315, 26.1108], [50.5584, 25.0868], [51.0032, 25.9816], [51.2624, 26.1534], [51.543, 25.9022], [51.4853, 25.5249], [51.5869, 24.9647], [51.3099, 24.3406], [51.7676, 24.2545], [51.9061, 23.9855], [52.6483, 24.1546], [53.8934, 24.0769], [54.3972, 24.278], [54.747, 24.8102], [55.0981, 25.0415], [55.5229, 25.4982], [55.9411, 25.7939], [56.1643, 26.2071], [56.4298, 26.327], [56.373, 25.0184], [56.6406, 24.4702], [57.2199, 23.9229], [58.5782, 23.6437], [59.5352, 22.5783], [59.8233, 22.5091], [59.7998, 22.2201], [59.3715, 21.4988], [58.8956, 21.1126], [58.4743, 20.4068], [57.8618, 20.2439], [57.7153, 19.6069], [57.8116, 19.017], [57.1764, 18.9025], [56.6553, 18.5873], [56.551, 18.166], [56.2704, 17.9507], [55.4785, 17.8433], [55.0644, 17.039], [54.0683, 17.0057], [53.6097, 16.7598], [52.5812, 16.4704], [52.3278, 16.2937], [52.1742, 15.9568], [52.2177, 15.6554], [51.6038, 15.3367], [50.5269, 15.0384], [50.1669, 14.851], [49.3497, 14.638], [49.0483, 14.4564], [48.6683, 14.0503], [47.9901, 14.048], [47.4077, 13.6614], [46.7889, 13.4657], [45.6574, 13.3387], [45.0386, 12.8158], [44.6178, 12.8171], [43.9298, 12.6165], [43.4752, 12.8389], [43.232, 13.2672], [43.2826, 13.6397], [43.089, 14.0108], [43.0211, 14.555], [42.7171, 15.6545], [42.8396, 16.0322], [42.6989, 16.7371], [42.3833, 17.1224], [42.294, 17.4349], [41.7498, 17.8855], [41.2296, 18.6783], [41.1159, 19.0822], [40.7591, 19.7556], [40.0808, 20.2661], [39.6138, 20.5178], [39.0936, 21.3101], [38.9879, 21.8819], [39.0958, 22.3928], [38.9413, 22.8819], [38.4641, 23.712], [37.9195, 24.1852], [37.5431, 24.2917], [37.1808, 24.82], [37.1489, 25.2909], [36.7627, 25.7513], [36.2496, 26.5947], [35.5815, 27.4323], [35.1807, 28.0346], [34.616, 28.1483], [34.7798, 28.5074], [34.9041, 29.4773]]], [[[134.747, -5.7069], [134.7559, -6.1708], [134.4411, -6.335], [134.3018, -6.0097], [134.3413, -5.7127], [134.747, -5.7069]]], [[[107.3739, -6.0074], [107.6669, -6.2156], [108.295, -6.2649], [108.6776, -6.7905], [110.4261, -6.9472], [110.7369, -6.4722], [111.1546, -6.6693], [111.5403, -6.6484], [112.0872, -6.8934], [112.5391, -6.9263], [112.7943, -7.5526], [113.2484, -7.7182], [114.0705, -7.633], [114.4442, -7.8958], [114.387, -8.4053], [114.5836, -8.7698], [113.2533, -8.2868], [112.6789, -8.4093], [111.5101, -8.305], [110.6072, -8.1501], [110.0386, -7.8904], [109.2818, -7.7049], [108.7411, -7.6671], [108.4517, -7.7968], [107.9173, -7.724], [107.2852, -7.4718], [106.6317, -7.4155], [106.5199, -7.0537], [105.4838, -6.7816], [105.8683, -6.1166], [106.0751, -5.9142], [106.8253, -6.0984], [107.0463, -5.9045], [107.3739, -6.0074]]], [[[134.5366, -6.4424], [134.3559, -6.8149], [134.0589, -6.7692], [134.1681, -6.1761], [134.5366, -6.4424]]], [[[113.8445, -7.1052], [113.4708, -7.2184], [112.7637, -7.1398], [112.868, -6.9001], [113.9746, -6.873], [113.8445, -7.1052]]], [[[131.3255, -7.9996], [131.0866, -7.8651], [131.2602, -7.4705], [131.5607, -7.1358], [131.6912, -7.439], [131.3255, -7.9996]]], [[[138.5352, -8.2735], [138.2963, -8.4053], [137.6851, -8.2624], [138.0074, -7.6414], [138.2955, -7.4385], [138.77, -7.3906], [138.9893, -7.696], [138.5352, -8.2735]]], [[[126.8009, -7.668], [126.4719, -7.9504], [125.8434, -7.8167], [126.6096, -7.5717], [126.8009, -7.668]]], [[[115.4479, -8.155], [115.7045, -8.4071], [115.2362, -8.7977], [114.4753, -8.1195], [115.4479, -8.155]]], [[[118.2426, -8.3179], [118.9879, -8.3379], [119.0061, -8.7498], [118.2342, -8.808], [117.0614, -9.0991], [116.7884, -9.0064], [116.8351, -8.5323], [117.1649, -8.3672], [117.567, -8.4266], [118.1175, -8.1221], [118.2426, -8.3179]]], [[[122.7828, -8.6117], [121.6513, -8.899], [121.0352, -8.9353], [119.8078, -8.6974], [119.9183, -8.4453], [120.6104, -8.2407], [121.4444, -8.578], [121.9664, -8.4551], [122.263, -8.6251], [122.6034, -8.4027], [122.7828, -8.6117]]], [[[116.6406, -8.614], [116.3774, -8.9291], [116.0764, -8.7449], [116.0613, -8.4373], [116.4014, -8.2043], [116.7343, -8.3871], [116.6406, -8.614]]], [[[127.2963, -8.4244], [126.915, -8.7152], [126.3823, -8.9575], [125.4079, -9.2758], [124.4274, -10.1485], [123.8574, -10.3438], [123.5893, -9.967], [123.7092, -9.6149], [123.9773, -9.373], [124.5756, -9.1555], [125.178, -8.6477], [125.8043, -8.4923], [126.6198, -8.4595], [126.9664, -8.3157], [127.2963, -8.4244]]], [[[120.0124, -9.3748], [120.5038, -9.674], [120.8327, -10.0375], [120.439, -10.2941], [120.1447, -10.2], [119.6009, -9.7734], [119.0856, -9.7068], [119.1855, -9.3846], [120.0124, -9.3748]]]] }, "properties": { "name": "Asia", "id": "asia" }, "id": "asia" }
    ] };
/* harmony default export */ __webpack_exports__["default"] = (map);


/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/Chart.js":
/*!********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/Chart.js ***!
  \********************************************************************/
/*! exports provided: ChartDataItem, Chart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChartDataItem", function() { return ChartDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Chart", function() { return Chart; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/Component */ "./node_modules/@amcharts/amcharts4/.internal/core/Component.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _core_elements_Grip__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/elements/Grip */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Grip.js");
/* harmony import */ var _core_DataItem__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/DataItem */ "./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../core/utils/Responsive */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Responsive.js");
/**
 * [[Chart]] class provides base functionality for all chart types to inherit.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */












/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[Chart]].
 *
 * @see {@link DataItem}
 */
var ChartDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ChartDataItem, _super);
    /**
     * Constructor
     */
    function ChartDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "ChartDataItem";
        _this.applyTheme();
        return _this;
    }
    return ChartDataItem;
}(_core_DataItem__WEBPACK_IMPORTED_MODULE_8__["DataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for all Charts.
 *
 * @see {@link IChartEvents} for a list of available Events
 * @see {@link IChartAdapters} for a list of available Adapters
 */
var Chart = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Chart, _super);
    /**
     * Constructor
     */
    function Chart() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A reference to chart's [[Legend]].
         * @ignore
         */
        _this._legend = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["MutableValueDisposer"]();
        if (_this.constructor === Chart) {
            throw new Error("'Chart' cannot be instantiated directly. Please use a specific chart type.");
        }
        _this.className = "Chart";
        // Create a list of titles
        var template = new _core_elements_Label__WEBPACK_IMPORTED_MODULE_6__["Label"]();
        _this.titles = new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__["ListTemplate"](template);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__["ListDisposer"](_this.titles));
        _this._disposers.push(template);
        // Chart component is also a container. it holds _chartAndLegendCont and titles
        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__["percent"])(100);
        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__["percent"])(100);
        _this.layout = "vertical";
        // Chart and legend
        var chartAndLegendContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_5__["Container"]);
        chartAndLegendContainer.shouldClone = false;
        chartAndLegendContainer.layout = "vertical";
        chartAndLegendContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__["percent"])(100);
        chartAndLegendContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__["percent"])(100);
        _this.chartAndLegendContainer = chartAndLegendContainer;
        // Chart container holds all the elements of a chart, extept titles and legend
        var chartContainer = chartAndLegendContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_5__["Container"]);
        chartContainer.shouldClone = false;
        chartContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__["percent"])(100);
        chartContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__["percent"])(100);
        _this.chartContainer = chartContainer;
        _this.showOnInit = true;
        _this._disposers.push(_this._legend);
        // Add title list events to apply certain formatting options and to make
        // the chart reference them as accessible screen reader labels
        _this.titles.events.on("inserted", function (label) {
            _this.processTitle(label);
            _this.updateReaderTitleReferences();
        }, _this, false);
        _this.titles.events.on("removed", function (label) {
            _this.updateReaderTitleReferences();
        }, _this, false);
        // Accessibility
        // It seems we can't set focusable on the whole chart because it seems to
        // mess up the whole focus event system - getting a focus on an inside
        // object also trigger focus on parent
        //this.focusable = true;
        _this.role = "region";
        _this.defaultState.transitionDuration = 1;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    Chart.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Chart");
        }
    };
    /**
     * Initiates drawing of the chart.
     *
     * @ignore Exclude from docs
     */
    Chart.prototype.draw = function () {
        this.fixLayout();
        _super.prototype.draw.call(this);
    };
    /**
     * Updates legend's hierarchy based on the position.
     */
    Chart.prototype.fixLayout = function () {
        var legend = this.legend;
        if (legend) {
            var chartAndLegendContainer = this.chartAndLegendContainer;
            var chartContainer = this.chartContainer;
            chartContainer.x = undefined;
            chartContainer.y = undefined;
            legend.x = undefined;
            legend.y = undefined;
            switch (legend.position) {
                case "left":
                    chartAndLegendContainer.layout = "horizontal";
                    legend.toBack();
                    break;
                case "right":
                    chartAndLegendContainer.layout = "horizontal";
                    legend.toFront();
                    break;
                case "top":
                    chartAndLegendContainer.layout = "vertical";
                    legend.toBack();
                    break;
                case "bottom":
                    chartAndLegendContainer.layout = "vertical";
                    legend.toFront();
            }
        }
    };
    /**
     * Setups the legend to use the chart's data.
     */
    Chart.prototype.feedLegend = function () {
        // Nothing here. This method is provided only as a "placeholder" for
        // extending classes to override
    };
    /**
     * Adds a new title to the chart when it is inserted into chart's titles
     * list.
     * @param event  An event object which is triggered when inserting into titles list
     * @return Label object
     */
    Chart.prototype.processTitle = function (event) {
        var title = event.newValue;
        title.parent = this;
        title.toBack();
        title.shouldClone = false;
        title.align = "center";
        // Need to explicitly apply the `id` attribute so it can be referenced by
        // `aria-labelledby`
        title.uidAttr();
        return title;
    };
    /**
     * Checks if chart has any title elements. If it does, we will use them in an
     * `aria-labelledby` attribute so that screen readers can use them to properly
     * describe the chart when it is focused or hovered.
     *
     * @ignore Exclude from docs
     */
    Chart.prototype.updateReaderTitleReferences = function () {
        if (this.titles.length) {
            var titleIds_1 = [];
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](this.titles.iterator(), function (title) {
                titleIds_1.push(title.uid);
            });
            this.setSVGAttribute({ "aria-labelledby": titleIds_1.join(" ") });
        }
        else {
            this.removeSVGAttribute("aria-labelledby");
        }
    };
    Object.defineProperty(Chart.prototype, "legend", {
        /**
         * @return Legend
         */
        get: function () {
            return this._legend.get();
        },
        /**
         * Holds the instance of chart's [[Leged]].
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for more information about legends
         * @param Legend
         */
        set: function (legend) {
            this.setLegend(legend);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Prepares the legend instance for use in this chart.
     *
     * @param legend  Legend
     */
    Chart.prototype.setLegend = function (legend) {
        var _this = this;
        if (this._legend.get() !== legend) {
            if (legend) {
                // Set legend options
                legend.parent = this.chartAndLegendContainer;
                this._legend.set(legend, legend.events.on("propertychanged", function (event) {
                    if (event.property == "position") {
                        _this.fixLayout();
                    }
                }, undefined, false));
                legend.addDisposer(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["Disposer"](function () {
                    _this.legend = undefined;
                }));
            }
            else {
                this._legend.reset();
            }
            this.feedLegend();
        }
    };
    /**
     * Destroys this object and all related data.
     */
    Chart.prototype.dispose = function () {
        // otherwise there might be some errors when disposing chart which was just inited
        if (this.legend) {
            this.legend.dispose();
        }
        _super.prototype.dispose.call(this);
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    Chart.prototype.processConfig = function (config) {
        if (config) {
            // Set up legend
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](config.legend) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](config.legend.type)) {
                config.legend.type = "Legend";
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    /**
     * Copies all properties from another instance of [[Series]].
     *
     * @param source  Source series
     */
    Chart.prototype.copyFrom = function (source) {
        this.titles.copyFrom(source.titles);
        this.chartContainer.copyFrom(source.chartContainer);
        if (source.legend) {
            this.legend = source.legend.clone();
            this.legend.removeChildren();
        }
        _super.prototype.copyFrom.call(this, source);
    };
    Object.defineProperty(Chart.prototype, "dragGrip", {
        /**
         * @return Grip
         */
        get: function () {
            var _this = this;
            if (!this._dragGrip) {
                var grip_1 = this.tooltipContainer.createChild(_core_elements_Grip__WEBPACK_IMPORTED_MODULE_7__["Grip"]);
                grip_1.align = "right";
                grip_1.valign = "middle";
                grip_1.hide(0);
                grip_1.events.on("down", function (ev) {
                    if (ev.touch) {
                        _this.interactionsEnabled = false;
                    }
                });
                grip_1.events.on("up", function (ev) {
                    _this.interactionsEnabled = true;
                });
                this.events.on("down", function (ev) {
                    if (ev.touch) {
                        grip_1.show();
                    }
                });
                this._dragGrip = grip_1;
            }
            return this._dragGrip;
        },
        /**
         * An instance of [[Grip]] which serves as a grip point which appears on
         * touch and allows scrolling whole page even if chart is occupying the
         * whole of the screen and would otherwise prevent scrolling.
         *
         * @since 4.4.0
         * @see {@link https://www.amcharts.com/docs/v4/concepts/touch/} For more information.
         * @param  value  Grip
         */
        set: function (value) {
            this._dragGrip = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Chart.prototype, "focusable", {
        get: function () {
            return this.parent.focusable;
        },
        set: function (value) {
            this.parent.focusable = value;
        },
        enumerable: true,
        configurable: true
    });
    return Chart;
}(_core_Component__WEBPACK_IMPORTED_MODULE_2__["Component"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_1__["registry"].registeredClasses["Chart"] = Chart;
/**
 * Add default responsive rules
 */
/**
 * Reduce horizontal margins
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_12__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_12__["ResponsiveBreakpoints"].widthXS,
    state: function (target, stateId) {
        if (target instanceof Chart) {
            var state = target.states.create(stateId);
            if (target.pixelPaddingLeft > 10) {
                state.properties.paddingLeft = 10;
            }
            if (target.pixelPaddingRight > 10) {
                state.properties.paddingRight = 10;
            }
            return state;
        }
        return null;
    }
});
/**
 * Reduce vertical margins
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_12__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_12__["ResponsiveBreakpoints"].heightXS,
    state: function (target, stateId) {
        if (target instanceof Chart) {
            var state = target.states.create(stateId);
            if (target.pixelPaddingTop > 10) {
                state.properties.paddingTop = 10;
            }
            if (target.pixelPaddingBottom > 10) {
                state.properties.paddingBottom = 10;
            }
            return state;
        }
        return null;
    }
});
/**
 * Remove horizontal padding
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_12__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_12__["ResponsiveBreakpoints"].widthXXS,
    state: function (target, stateId) {
        if (target instanceof Chart) {
            var state = target.states.create(stateId);
            state.properties.paddingLeft = 0;
            state.properties.paddingRight = 0;
            return state;
        }
        return null;
    }
});
/**
 * Remove vertical padding
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_12__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_12__["ResponsiveBreakpoints"].heightXXS,
    state: function (target, stateId) {
        if (target instanceof Chart) {
            var state = target.states.create(stateId);
            state.properties.paddingTop = 0;
            state.properties.paddingBottom = 0;
            return state;
        }
        return null;
    }
});
//# sourceMappingURL=Chart.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js ***!
  \*********************************************************************/
/*! exports provided: LegendDataItem, LegendSettings, Legend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendDataItem", function() { return LegendDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LegendSettings", function() { return LegendSettings; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Legend", function() { return Legend; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../core/Component */ "./node_modules/@amcharts/amcharts4/.internal/core/Component.js");
/* harmony import */ var _core_DataItem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../core/DataItem */ "./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../core/elements/RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../core/elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../core/utils/Keyboard */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../core/interaction/Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../core/interaction/Mouse */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js");
/* harmony import */ var _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../core/utils/Responsive */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Responsive.js");
/* harmony import */ var _core_elements_Scrollbar__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../core/elements/Scrollbar */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Scrollbar.js");
/**
 * Legend-related functionality.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



















/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[Legend]].
 *
 * @see {@link DataItem}
 */
var LegendDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(LegendDataItem, _super);
    /**
     * Constructor
     */
    function LegendDataItem() {
        var _this = _super.call(this) || this;
        /**
         * @ignore
         */
        _this.childrenCreated = false;
        _this.className = "LegendDataItem";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(LegendDataItem.prototype, "label", {
        /**
         * A legend item's [[Label]] element.
         *
         * @return Label
         */
        get: function () {
            var _this = this;
            if (!this._label) {
                var label_1 = this.component.labels.create();
                this._label = label_1;
                this.addSprite(label_1);
                this._disposers.push(label_1);
                label_1.parent = this.itemContainer;
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_16__["Disposer"](function () {
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](_this.component)) {
                        _this.component.labels.removeValue(label_1);
                    }
                }));
            }
            return this._label;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LegendDataItem.prototype, "color", {
        /**
         * @return Main color
         */
        get: function () {
            return this.properties.color;
        },
        /**
         * Main color of legend data item.
         *
         * This is set by the target element this legend item represents, like
         * a Series or a Slice.
         *
         * It can be used to derive a color in legend's sub-items, like label:
         *
         * ```TypeScript
         * chart.legend.labels.template.text = "[{color}]{name}[/]";
         * ```
         * ```JavaScript
         * chart.legend.labels.template.text = "[{color}]{name}[/]";
         * ```
         * ```JSON
         * {
         *   // ...
         *   "legend": {
         *     // ...
         *     "labels": {
         *       "text": "[{color}]{name}[/]"
         *     }
         *   }
         * }
         * ```
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/#Legend_labels} For more information about configuring legend labels.
         * @param value  Main color
         */
        set: function (value) {
            this.setProperty("color", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LegendDataItem.prototype, "valueLabel", {
        /**
         * A legend item's [[Label]] element for "value label".
         *
         * @return Label
         */
        get: function () {
            var _this = this;
            if (!this._valueLabel) {
                var valueLabel_1 = this.component.valueLabels.create();
                this._valueLabel = valueLabel_1;
                this.addSprite(valueLabel_1);
                this._disposers.push(valueLabel_1);
                valueLabel_1.parent = this.itemContainer;
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_16__["Disposer"](function () {
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](_this.component)) {
                        _this.component.valueLabels.removeValue(valueLabel_1);
                    }
                }));
            }
            return this._valueLabel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LegendDataItem.prototype, "itemContainer", {
        /**
         * A reference to the main [[Container]] that holds legend item's elements:
         * marker and labels.
         *
         * @return Item container
         */
        get: function () {
            var _this = this;
            if (!this._itemContainer) {
                var component_1 = this.component;
                var itemContainer_1 = component_1.itemContainers.create();
                itemContainer_1.parent = component_1;
                this._itemContainer = itemContainer_1;
                this.addSprite(itemContainer_1);
                this._disposers.push(itemContainer_1);
                // Add click/tap event to toggle item
                if (itemContainer_1.togglable) {
                    itemContainer_1.events.on("toggled", function (ev) {
                        component_1.toggleDataItem(ev.target.dataItem);
                    }, undefined, false);
                }
                // Add focus event so that we can track which object is currently in focus
                // for keyboard toggling
                if (itemContainer_1.focusable) {
                    itemContainer_1.events.on("hit", function (ev) {
                        // We need this here in order to reset focused item when it is clicked
                        // normally so that it is not toggled by ENTER afterwards
                        component_1.focusedItem = undefined;
                    }, undefined, false);
                    itemContainer_1.events.on("focus", function (ev) {
                        component_1.focusedItem = ev.target.dataItem;
                    }, undefined, false);
                    itemContainer_1.events.on("blur", function (ev) {
                        component_1.focusedItem = undefined;
                    }, undefined, false);
                }
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_16__["Disposer"](function () {
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](_this.component)) {
                        _this.component.itemContainers.removeValue(itemContainer_1);
                    }
                }));
                if (this.dataContext.uidAttr) {
                    itemContainer_1.readerControls = this.dataContext.uidAttr();
                    itemContainer_1.readerLabelledBy = this.dataContext.uidAttr();
                }
                var sprite = this.dataContext;
                if ((sprite instanceof _core_DataItem__WEBPACK_IMPORTED_MODULE_2__["DataItem"] || sprite instanceof _core_Sprite__WEBPACK_IMPORTED_MODULE_15__["Sprite"]) && !sprite.isDisposed()) {
                    var visibilitychanged = function (ev) {
                        itemContainer_1.readerChecked = ev.visible;
                        itemContainer_1.events.disableType("toggled");
                        itemContainer_1.isActive = !ev.visible;
                        itemContainer_1.events.enableType("toggled");
                    };
                    sprite.addDisposer(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_16__["Disposer"](function () {
                        if (_this.component) {
                            _this.component.dataItems.remove(_this);
                        }
                    }));
                    if (sprite instanceof _core_Sprite__WEBPACK_IMPORTED_MODULE_15__["Sprite"]) {
                        itemContainer_1.addDisposer(sprite.events.on("visibilitychanged", visibilitychanged, undefined, false));
                        itemContainer_1.addDisposer(sprite.events.on("hidden", function (ev) {
                            itemContainer_1.readerChecked = false;
                            itemContainer_1.events.disableType("toggled");
                            itemContainer_1.isActive = true;
                            itemContainer_1.events.enableType("toggled");
                        }, undefined, false));
                        itemContainer_1.addDisposer(sprite.events.on("shown", function (ev) {
                            itemContainer_1.readerChecked = true;
                            itemContainer_1.events.disableType("toggled");
                            itemContainer_1.isActive = false;
                            itemContainer_1.events.enableType("toggled");
                        }, undefined, false));
                    }
                    else {
                        itemContainer_1.addDisposer(sprite.events.on("visibilitychanged", visibilitychanged, undefined, false));
                    }
                }
            }
            return this._itemContainer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LegendDataItem.prototype, "marker", {
        /**
         * A [[Container]] that holds legend item's marker element.
         *
         * @return Marker
         */
        get: function () {
            var _this = this;
            if (!this._marker) {
                var marker_1 = this.component.markers.create();
                this._marker = marker_1;
                marker_1.parent = this.itemContainer;
                this.addSprite(marker_1);
                this._disposers.push(marker_1);
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_16__["Disposer"](function () {
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](_this.component)) {
                        _this.component.markers.removeValue(marker_1);
                    }
                }));
            }
            return this._marker;
        },
        enumerable: true,
        configurable: true
    });
    return LegendDataItem;
}(_core_DataItem__WEBPACK_IMPORTED_MODULE_2__["DataItem"]));

/**
 * ============================================================================
 * REQUISITES
 * ============================================================================
 * @hidden
 */
/**
 * Defines a class that carries legend settings.
 *
 * A legend might change its settings dynamically. Legend can also be shared
 * by several elements, requiring different settings.
 *
 * Having legend's settings in a separate object is a good way to "hot swap"
 * a set of settings for the legend.
 */
var LegendSettings = /** @class */ (function () {
    function LegendSettings() {
        /**
         * Should marker be created for each legend item.
         */
        this.createMarker = true;
    }
    return LegendSettings;
}());

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * [[Legend]] class is used to create legend for the chart.
 *
 * @see {@link https://www.amcharts.com/docs/v4/concepts/legend/} for Legend documentation
 * @see {@link ILegendEvents} for a list of available events
 * @see {@link ILegendAdapters} for a list of available Adapters
 */
var Legend = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Legend, _super);
    /**
     * Constructor
     */
    function Legend() {
        var _this = _super.call(this) || this;
        _this.className = "Legend";
        // Set defaults
        _this.layout = "grid";
        _this.setPropertyValue("useDefaultMarker", false);
        _this.setPropertyValue("scrollable", false);
        _this.setPropertyValue("contentAlign", "center");
        // Create a template container and list for legend items
        var itemContainer = new _core_Container__WEBPACK_IMPORTED_MODULE_5__["Container"]();
        itemContainer.applyOnClones = true;
        itemContainer.padding(8, 0, 8, 0);
        itemContainer.margin(0, 10, 0, 10);
        itemContainer.layout = "horizontal";
        itemContainer.clickable = true;
        itemContainer.focusable = true;
        itemContainer.role = "switch";
        itemContainer.togglable = true;
        itemContainer.cursorOverStyle = _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_17__["MouseCursorStyle"].pointer;
        itemContainer.background.fillOpacity = 0; // creates hit area
        // Create container list using item template we just created
        _this.itemContainers = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](itemContainer);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](_this.itemContainers));
        _this._disposers.push(_this.itemContainers.template);
        // Set up global keyboard events for toggling elements
        _this._disposers.push(Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_9__["getInteraction"])().body.events.on("keyup", function (ev) {
            if (_core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_7__["keyboard"].isKey(ev.event, "enter") && _this.focusedItem) {
                var focusedItem = _this.focusedItem;
                var target = focusedItem.itemContainer;
                if (target.togglable) {
                    _this.toggleDataItem(focusedItem);
                }
                else if (target.clickable && target.events.isEnabled("hit")) {
                    target.dispatchImmediately("hit", { event: ev });
                    // We need this here because "hit" event resets `this.focusedItem`
                    // And we need it here
                    _this.focusedItem = focusedItem;
                }
            }
        }, _this));
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_11__["InterfaceColorSet"]();
        // Create a template container and list for the a marker
        var marker = new _core_Container__WEBPACK_IMPORTED_MODULE_5__["Container"]();
        marker.width = 23;
        marker.height = 23;
        marker.interactionsEnabled = false;
        marker.applyOnClones = true;
        marker.setStateOnChildren = true;
        marker.background.fillOpacity = 0;
        marker.background.strokeOpacity = 0;
        marker.propertyFields.fill = "fill";
        marker.valign = "middle";
        var disabledColor = interfaceColors.getFor("disabledBackground");
        marker.events.on("childadded", function (event) {
            var child = event.newValue;
            var activeState = child.states.create("active");
            activeState.properties.stroke = disabledColor;
            activeState.properties.fill = disabledColor;
        });
        _this.markers = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](marker);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](_this.markers));
        _this._disposers.push(_this.markers.template);
        // Create a legend background element
        var rectangle = marker.createChild(_core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_4__["RoundedRectangle"]);
        rectangle.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        rectangle.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        rectangle.applyOnClones = true;
        rectangle.propertyFields.fill = "fill"; //othrwise old edge doesn't like as the same pattern is set both on parent and child https://codepen.io/team/amcharts/pen/72d7a98f3fb811d3118795220ff63182
        rectangle.strokeOpacity = 0;
        // Create a template container and list for item labels
        var label = new _core_elements_Label__WEBPACK_IMPORTED_MODULE_6__["Label"]();
        label.text = "{name}";
        label.margin(0, 5, 0, 5);
        label.valign = "middle";
        label.applyOnClones = true;
        label.states.create("active").properties.fill = interfaceColors.getFor("disabledBackground");
        _this.labels = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](label);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](_this.labels));
        _this._disposers.push(_this.labels.template);
        label.interactionsEnabled = false;
        label.truncate = true;
        label.fullWords = false;
        // Create a template container and list for item value labels
        var valueLabel = new _core_elements_Label__WEBPACK_IMPORTED_MODULE_6__["Label"]();
        valueLabel.margin(0, 5, 0, 0);
        valueLabel.valign = "middle";
        valueLabel.width = 50; // to avoid rearranging legend entries when value changes.
        valueLabel.align = "right";
        valueLabel.textAlign = "end";
        valueLabel.applyOnClones = true;
        valueLabel.states.create("active").properties.fill = interfaceColors.getFor("disabledBackground");
        valueLabel.interactionsEnabled = false;
        _this.valueLabels = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](valueLabel);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](_this.valueLabels));
        _this._disposers.push(_this.valueLabels.template);
        _this.position = "bottom"; // don't use setPropertyValue here!
        // Create a state for disabled legend items
        itemContainer.states.create("active");
        itemContainer.setStateOnChildren = true;
        // Apply accessibility settings
        _this.role = "group";
        _this.events.on("layoutvalidated", _this.handleScrollbar, _this, false);
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    Legend.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Legend");
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    Legend.prototype.createDataItem = function () {
        return new LegendDataItem();
    };
    /**
     * [validateDataElements description]
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Legend.prototype.validateDataElements = function () {
        if (this.scrollbar) {
            this.scrollbar.start = 0;
            this.scrollbar.end = 1;
        }
        _super.prototype.validateDataElements.call(this);
    };
    /**
     * [validateDataElement description]
     *
     * @ignore Exclude from docs
     * @param dataItem Data item
     * @todo Description
     * @todo Figure out how to update appearance of legend item without losing focus
     * @todo Update legend marker appearance as apperance of related series changes
     */
    Legend.prototype.validateDataElement = function (dataItem) {
        _super.prototype.validateDataElement.call(this, dataItem);
        // Get data item (legend item's) container
        var container = dataItem.itemContainer;
        var marker = dataItem.marker;
        _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__["used"](dataItem.label);
        var valueLabel = dataItem.valueLabel;
        // Set parent and update current state
        container.readerChecked = dataItem.dataContext.visible;
        // Tell series its legend data item
        dataItem.dataContext.legendDataItem = dataItem;
        var tempMaxWidth = dataItem.label.maxWidth;
        if (!(dataItem.label.width instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["Percent"])) {
            dataItem.label.width = undefined;
        }
        if (tempMaxWidth > 0) {
            dataItem.label.maxWidth = tempMaxWidth;
        }
        if (valueLabel.align == "right") {
            valueLabel.width = undefined;
        }
        var legendSettings = dataItem.dataContext.legendSettings;
        // If we are not using default markers, create a unique legend marker based
        // on the data item type
        var dataContext = dataItem.dataContext;
        if (dataContext.createLegendMarker && (!this.useDefaultMarker || !(dataContext instanceof _core_Sprite__WEBPACK_IMPORTED_MODULE_15__["Sprite"]))) {
            if (!dataItem.childrenCreated) {
                dataContext.createLegendMarker(marker);
                dataItem.childrenCreated = true;
            }
        }
        else {
            this.markers.template.propertyFields.fill = undefined;
        }
        if (dataContext.updateLegendValue) {
            dataContext.updateLegendValue(); // this solves issue with external legend, as legend is created after chart updates legend values
        }
        if (dataContext.component && dataContext.component.updateLegendValue) {
            dataContext.component.updateLegendValue(dataContext);
        }
        if (valueLabel.invalid) {
            valueLabel.validate();
        }
        if (valueLabel.text == "" || valueLabel.text == undefined) {
            valueLabel.__disabled = true;
        }
        else {
            valueLabel.__disabled = false;
        }
        if (legendSettings && (legendSettings.itemValueText != undefined || legendSettings.valueText != undefined)) {
            valueLabel.__disabled = false;
        }
        var visible = dataItem.dataContext.visible;
        if (visible === undefined) {
            visible = true;
        }
        visible = _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["toBoolean"](visible);
        dataItem.dataContext.visible = visible;
        container.events.disableType("toggled");
        container.isActive = !visible;
        if (container.isActive) {
            container.setState("active", 0);
        }
        else {
            container.setState("default", 0);
        }
        container.events.enableType("toggled");
    };
    Legend.prototype.afterDraw = function () {
        var _this = this;
        var maxWidth = this.getPropertyValue("maxWidth");
        var maxLabelWidth = 0;
        this.labels.each(function (label) {
            if (label.invalid) {
                label.maxWidth = undefined;
                label.validate();
            }
            if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxLabelWidth) {
                maxLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;
            }
        });
        var maxValueLabelWidth = 0;
        this.valueLabels.each(function (label) {
            if (label.invalid) {
                label.validate();
            }
            if (label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight > maxValueLabelWidth) {
                maxValueLabelWidth = label.measuredWidth + label.pixelMarginLeft + label.pixelMarginRight;
            }
        });
        var maxMarkerWidth = 0;
        this.markers.each(function (marker) {
            if (marker.invalid) {
                marker.validate();
            }
            if (marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight > maxMarkerWidth) {
                maxMarkerWidth = marker.measuredWidth + marker.pixelMarginLeft + marker.pixelMarginRight;
            }
        });
        var itemContainer = this.itemContainers.template;
        var margin = itemContainer.pixelMarginRight + itemContainer.pixelMarginLeft;
        var maxAdjustedLabelWidth;
        var trueMaxWidth = maxLabelWidth + maxValueLabelWidth + maxMarkerWidth;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](maxWidth)) {
            maxAdjustedLabelWidth = maxLabelWidth;
        }
        else {
            maxWidth = maxWidth - margin;
            if (maxWidth > trueMaxWidth) {
                maxWidth = trueMaxWidth;
            }
            maxAdjustedLabelWidth = maxWidth - maxMarkerWidth - maxValueLabelWidth;
        }
        this.labels.each(function (label) {
            if (_this.valueLabels.template.align == "right" || label.measuredWidth > maxAdjustedLabelWidth) {
                if (!(label.width instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["Percent"])) {
                    label.width = Math.min(label.maxWidth, maxAdjustedLabelWidth - label.pixelMarginLeft - label.pixelMarginRight);
                }
            }
        });
        if (this.valueLabels.template.align == "right") {
            this.valueLabels.each(function (valueLabel) {
                valueLabel.width = maxValueLabelWidth - valueLabel.pixelMarginRight - valueLabel.pixelMarginLeft;
            });
        }
        _super.prototype.afterDraw.call(this);
    };
    Legend.prototype.handleScrollbar = function () {
        var scrollbar = this.scrollbar;
        if (this.scrollable && scrollbar) {
            scrollbar.height = this.measuredHeight;
            scrollbar.x = this.measuredWidth - scrollbar.pixelWidth - scrollbar.pixelMarginLeft;
            if (this.contentHeight > this.measuredHeight) {
                scrollbar.visible = true;
                scrollbar.thumb.height = scrollbar.height * this.measuredHeight / this.contentHeight;
                this.paddingRight = scrollbar.pixelWidth + scrollbar.pixelMarginLeft + +scrollbar.pixelMarginRight;
            }
            else {
                scrollbar.visible = false;
            }
            this.updateMasks();
        }
    };
    Object.defineProperty(Legend.prototype, "position", {
        /**
         * @return Position
         */
        get: function () {
            return this.getPropertyValue("position");
        },
        /**
         * Position of the legend.
         *
         * Options: "left", "right", "top", "bottom" (default), or "absolute".
         *
         * IMPORTANT: [[MapChart]] will ignore this setting, as it is using different
         * layout structure than other charts.
         *
         * To position legend in [[MapChart]] set legend's `align` (`"left"` or
         * `"right"`) and `valign` (`"top"` or `"bottom"`) properties instead.
         *
         * @default "bottom"
         * @param value  Position
         */
        set: function (value) {
            if (this.setPropertyValue("position", value)) {
                if (value == "left" || value == "right") {
                    this.margin(10, 5, 10, 10);
                    this.valign = "middle";
                    this.contentAlign = "none";
                    this.valueLabels.template.align = "right";
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](this.maxColumns)) {
                        this.maxColumns = 1;
                    }
                    this.width = undefined;
                    this.maxWidth = 220;
                }
                else {
                    this.maxColumns = undefined;
                    this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
                    this.valueLabels.template.align = "left";
                }
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Legend.prototype, "useDefaultMarker", {
        /**
         * @return Use default marker?
         */
        get: function () {
            return this.getPropertyValue("useDefaultMarker");
        },
        /**
         * Should legend try to mirror the look of the related item when building
         * the marker for legend item?
         *
         * If set to `false` it will try to make the marker look like its related
         * item.
         *
         * E.g. if an item is for a Line Series, it will display a line of the
         * same thickness, color, and will use the same bullets if series have them.
         *
         * If set to `true`, all markers will be shown as squares, regardless of te
         * series type.
         *
         * @default false
         * @param value Use default marker?
         */
        set: function (value) {
            this.setPropertyValue("useDefaultMarker", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Legend.prototype, "scrollable", {
        /**
         * @return Legend Scrollable?
         */
        get: function () {
            return this.getPropertyValue("scrollable");
        },
        /**
         * If set to `true` the Legend will display a scrollbar if its contents do
         * not fit into its `maxHeight`.
         *
         * Please note that `maxHeight` is automatically set for Legend when its
         * `position` is set to `"left"` or `"right"`.
         *
         * @default false
         * @since 4.8.0
         * @param  value  Legend Scrollable?
         */
        set: function (value) {
            if (this.setPropertyValue("scrollable", value, true)) {
                if (value) {
                    var scrollbar = this.createChild(_core_elements_Scrollbar__WEBPACK_IMPORTED_MODULE_19__["Scrollbar"]);
                    this.scrollbar = scrollbar;
                    scrollbar.isMeasured = false;
                    scrollbar.orientation = "vertical";
                    scrollbar.endGrip.__disabled = true;
                    scrollbar.startGrip.__disabled = true;
                    scrollbar.visible = false;
                    scrollbar.marginLeft = 5;
                    this._mouseWheelDisposer = this.events.on("wheel", this.handleWheel, this, false);
                    this._disposers.push(this._mouseWheelDisposer);
                    this._disposers.push(scrollbar.events.on("rangechanged", this.updateMasks, this, false));
                }
                else {
                    if (this._mouseWheelDisposer) {
                        this._mouseWheelDisposer.dispose();
                        if (this.scrollbar) {
                            this.scrollbar.dispose();
                            this.scrollbar = undefined;
                        }
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Handles mouse wheel scrolling of legend.
     *
     * @param  event  Event
     */
    Legend.prototype.handleWheel = function (event) {
        var shift = event.shift.y;
        var scrollbar = this.scrollbar;
        if (scrollbar) {
            var ds = (shift / 1000 * this.measuredHeight / this.contentHeight);
            var delta = scrollbar.end - scrollbar.start;
            if (shift > 0) {
                scrollbar.start = _core_utils_Math__WEBPACK_IMPORTED_MODULE_14__["max"](0, scrollbar.start - ds);
                scrollbar.end = scrollbar.start + delta;
            }
            else {
                scrollbar.end = _core_utils_Math__WEBPACK_IMPORTED_MODULE_14__["min"](1, scrollbar.end - ds);
                scrollbar.start = scrollbar.end - delta;
            }
        }
    };
    /**
     * @ignore
     */
    Legend.prototype.updateMasks = function () {
        var _this = this;
        if (this.scrollbar) {
            this.itemContainers.each(function (itemContainer) {
                itemContainer.dy = -_this.scrollbar.thumb.pixelY * _this.contentHeight / _this.measuredHeight;
                itemContainer.maskRectangle = { x: 0, y: -itemContainer.dy, width: _this.measuredWidth, height: _this.measuredHeight };
            });
        }
    };
    /**
     * Toggles a legend item.
     *
     * @ignore Exclude from docs
     * @param item Legend item
     * @todo Maybe do it with togglable instead
     */
    Legend.prototype.toggleDataItem = function (item) {
        var dataContext = item.dataContext;
        if (!dataContext.visible || dataContext.isHiding || (dataContext instanceof _core_Sprite__WEBPACK_IMPORTED_MODULE_15__["Sprite"] && dataContext.isHidden)) {
            item.color = item.colorOrig;
            item.itemContainer.isActive = false;
            if (dataContext.hidden === true) {
                dataContext.hidden = false;
            }
            if (dataContext.show) {
                dataContext.show();
            }
            else {
                dataContext.visible = true;
            }
            this.svgContainer.readerAlert(this.language.translate("%1 shown", this.language.locale, item.label.readerTitle));
        }
        else {
            item.itemContainer.isActive = true;
            if (dataContext.hide) {
                dataContext.hide();
            }
            else {
                dataContext.visible = false;
            }
            this.svgContainer.readerAlert(this.language.translate("%1 hidden", this.language.locale, item.label.readerTitle));
            item.color = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_11__["InterfaceColorSet"]().getFor("disabledBackground");
        }
    };
    Object.defineProperty(Legend.prototype, "preloader", {
        /**
         * Override preloader method so that legend does not accidentally show its
         * own preloader.
         *
         * @ignore Exclude from docs
         * @return Always `undefined`
         */
        get: function () {
            return;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * [handleDataItemPropertyChange description]
     *
     * @ignore Exclude from docs
     */
    Legend.prototype.handleDataItemPropertyChange = function (dataItem, name) {
        dataItem.valueLabel.invalidate();
        dataItem.label.invalidate();
    };
    return Legend;
}(_core_Component__WEBPACK_IMPORTED_MODULE_1__["Component"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses["Legend"] = Legend;
/**
 * Add default responsive rules
 */
/**
 * Move legend to below the chart if chart is narrow
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_18__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_18__["ResponsiveBreakpoints"].widthXS,
    state: function (target, stateId) {
        if (target instanceof Legend && (target.position == "left" || target.position == "right")) {
            var state = target.states.create(stateId);
            state.properties.position = "bottom";
            return state;
        }
        return null;
    }
});
/**
 * Move legend to the right if chart is very short
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_18__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_18__["ResponsiveBreakpoints"].heightXS,
    state: function (target, stateId) {
        if (target instanceof Legend && (target.position == "top" || target.position == "bottom")) {
            var state = target.states.create(stateId);
            state.properties.position = "right";
            return state;
        }
        return null;
    }
});
/**
 * Disable legend altogether on small charts
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_18__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_18__["ResponsiveBreakpoints"].isXS,
    state: function (target, stateId) {
        if (target instanceof Legend) {
            var state = target.states.create(stateId);
            state.properties.disabled = true;
            return state;
        }
        return null;
    }
});
//# sourceMappingURL=Legend.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js ***!
  \************************************************************************/
/*! exports provided: AxisDataItem, AxisItemLocation, Axis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisDataItem", function() { return AxisDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisItemLocation", function() { return AxisItemLocation; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Axis", function() { return Axis; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Component */ "./node_modules/@amcharts/amcharts4/.internal/core/Component.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_DataItem__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/DataItem */ "./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js");
/* harmony import */ var _AxisBreak__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBreak.js");
/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _core_elements_Tooltip__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/elements/Tooltip */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Tooltip.js");
/* harmony import */ var _core_utils_SortedList__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/SortedList */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/SortedList.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Number__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Number */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Number.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../core/utils/Responsive */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Responsive.js");
/**
 * Base class for all Axis
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


















/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[Axis]].
 *
 * @see {@link DataItem}
 */
var AxisDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisDataItem, _super);
    /**
     * Constructor
     */
    function AxisDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "AxisDataItem";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(AxisDataItem.prototype, "grid", {
        /**
         * @return Grid element
         */
        get: function () {
            if (!this._grid) {
                var component_1 = this.component;
                if (component_1) {
                    var template = void 0;
                    var grid_1;
                    if (this.isRange) {
                        template = component_1.axisRanges.template.grid;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            grid_1 = template.clone();
                        }
                    }
                    else {
                        template = component_1.renderer.grid.template;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            grid_1 = component_1.renderer.grid.create();
                            this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                                component_1.renderer.grid.removeValue(grid_1);
                            }));
                        }
                    }
                    this.grid = grid_1;
                    grid_1.shouldClone = false;
                    this._disposers.push(grid_1);
                    grid_1.axis = this.component;
                }
            }
            return this._grid;
        },
        /**
         * A [[Grid]] element associated with this data item.
         *
         * If there is no grid element associated with data item, a new one is
         * created and returned.
         *
         * @param grid  Grid element
         */
        set: function (grid) {
            if (this._grid && this._grid != grid) {
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](this.sprites, this._grid);
                this._grid.dataItem = undefined;
            }
            if (grid) {
                if (grid.dataItem && grid.dataItem != this) {
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](grid.dataItem.sprites, grid);
                    grid.dataItem.grid = undefined;
                }
                this.addSprite(grid);
            }
            this._grid = grid;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "tick", {
        /**
         * @return Tick element
         */
        get: function () {
            if (!this._tick) {
                var component_2 = this.component;
                if (component_2) {
                    var template = void 0;
                    var tick_1;
                    if (this.isRange) {
                        template = component_2.axisRanges.template.tick;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            tick_1 = template.clone();
                        }
                    }
                    else {
                        template = component_2.renderer.ticks.template;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            tick_1 = component_2.renderer.ticks.create();
                            this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                                component_2.renderer.ticks.removeValue(tick_1);
                            }));
                        }
                    }
                    this.tick = tick_1;
                    tick_1.axis = this.component;
                    tick_1.shouldClone = false;
                    this._disposers.push(tick_1);
                }
            }
            return this._tick;
        },
        /**
         * An [[AxisTick]] element associated with this data item.
         *
         * If there is no tick element associated with data item, a new one is
         * created and returned.
         *
         * @param tick  Tick element
         */
        set: function (tick) {
            if (this._tick && this._tick != tick) {
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](this.sprites, this._tick);
                this._tick.dataItem = undefined;
            }
            if (tick) {
                if (tick.dataItem && tick.dataItem != this) {
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](tick.dataItem.sprites, tick);
                    tick.dataItem.tick = undefined;
                }
                this.addSprite(tick);
            }
            this._tick = tick;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "label", {
        /**
         * @return Label element
         */
        get: function () {
            if (!this._label) {
                var component_3 = this.component;
                if (component_3) {
                    var template = void 0;
                    var label_1;
                    if (this.isRange) {
                        template = component_3.axisRanges.template.label;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            label_1 = template.clone();
                        }
                    }
                    else {
                        template = component_3.renderer.labels.template;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            label_1 = component_3.renderer.labels.create();
                            this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                                component_3.renderer.labels.removeValue(label_1);
                            }));
                        }
                    }
                    this._disposers.push(label_1);
                    this.label = label_1;
                    label_1.shouldClone = false;
                    label_1.axis = this.component;
                    label_1.virtualParent = component_3;
                }
            }
            return this._label;
        },
        /**
         * An [[AxisLabel]] element associated with this data item.
         *
         * If there is no label element associated with data item, a new one is
         * created and returned.
         *
         * @param label Label element
         */
        set: function (label) {
            if (this._label && this._label != label) {
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](this.sprites, this._label);
                this._label.dataItem = undefined;
            }
            if (label) {
                if (label.dataItem && label.dataItem != this) {
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](label.dataItem.sprites, label);
                    label.dataItem.label = undefined;
                }
                this.addSprite(label);
            }
            this._label = label;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "axisFill", {
        /**
         * @return Label element
         */
        get: function () {
            if (!this._axisFill) {
                var component_4 = this.component;
                if (component_4) {
                    var template = void 0;
                    var axisFill_1;
                    if (this.isRange) {
                        template = component_4.axisRanges.template.axisFill;
                        if (!this.isTemplate && template.disabled) {
                            return;
                        }
                        else {
                            axisFill_1 = template.clone();
                        }
                    }
                    else {
                        template = component_4.renderer.axisFills.template;
                        if (template.disabled) {
                            return;
                        }
                        else {
                            axisFill_1 = component_4.renderer.axisFills.create();
                            this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                                component_4.renderer.axisFills.removeValue(axisFill_1);
                            }));
                        }
                    }
                    this.axisFill = axisFill_1;
                    axisFill_1.shouldClone = false;
                    this._disposers.push(axisFill_1);
                }
            }
            return this._axisFill;
        },
        /**
         * An [[AxisFill]] associated element with this data item.
         *
         * If there is no fill element associated with data item, a new one is
         * created and returned.
         *
         * @param label Label element
         */
        set: function (axisFill) {
            if (this._axisFill && this._axisFill != axisFill) {
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](this.sprites, this._axisFill);
                this._axisFill.dataItem = undefined;
            }
            if (axisFill) {
                if (axisFill.dataItem && axisFill.dataItem != this) {
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](axisFill.dataItem.sprites, axisFill);
                    axisFill.dataItem.axisFill = undefined;
                }
                axisFill.axis = this.component;
                this.addSprite(axisFill);
            }
            this._axisFill = axisFill;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "text", {
        /**
         * @return Text label
         */
        get: function () {
            return this._text;
        },
        /**
         * Text to be used as data item's label.
         *
         * @param text Text label
         */
        set: function (text) {
            this._text = text;
            if (this._label) { // do not use getter, it will create unwanted instances!
                this._label.text = text;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "mask", {
        /**
         * Data item's mask.
         *
         * @return Mask
         */
        get: function () {
            return this._mask;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "contents", {
        /**
         * Returns a [[Container]] to place all visual elements, related to data item
         * in.
         *
         * If there is no Container, a new one is created.
         *
         * @return Contents container
         */
        get: function () {
            if (!this._contents) {
                var contents = new _core_Container__WEBPACK_IMPORTED_MODULE_2__["Container"]();
                this.addSprite(contents);
                contents.isMeasured = false;
                this._contents = contents;
                var component = this.component;
                if (component) {
                    var mask = component.renderer.createFill(this.component);
                    mask.disabled = false;
                    mask.axis = component;
                    this.addSprite(mask);
                    this._mask = mask;
                    contents.mask = mask;
                }
            }
            return this._contents;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisDataItem.prototype, "axisBreak", {
        /**
         * @return Axis break
         */
        get: function () {
            return this._axisBreak;
        },
        /**
         * An [[AxisBreak]] this data item falls within.
         *
         * @param axisBreak Axis break
         */
        set: function (axisBreak) {
            if (this._axisBreak) {
                this._axisBreak.dataItems.removeValue(this);
            }
            if (axisBreak) {
                axisBreak.dataItems.push(this);
            }
            this._axisBreak = axisBreak;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Re-draws the element.
     *
     * @ignore Exclude from docs
     */
    AxisDataItem.prototype.validate = function () {
        if (this.component) {
            this.component.validateDataElement(this);
        }
    };
    /**
     * Appends data item's elements to the parent [[Container]].
     *
     * @ignore Exclude from docs
     */
    AxisDataItem.prototype.appendChildren = function () {
        if (this.component) {
            this.component.appendDataItem(this);
        }
    };
    /**
     * Checks if data item has particular property set.
     *
     * @param prop  Property name
     * @return Property set?
     */
    AxisDataItem.prototype.hasProperty = function (prop) {
        return prop == "component" ? true : _super.prototype.hasProperty.call(this, prop);
    };
    /**
     * Copies all parameters from another [[AxisDataItem]].
     *
     * @param source Source AxisDataItem
     */
    AxisDataItem.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.text = source.text;
        if (source.bullet) {
            this.bullet = source.bullet.clone();
        }
        this.minPosition = source.minPosition;
        this.maxPosition = source.maxPosition;
    };
    /**
     * Sets visibility of the Data Item.
     *
     * @param value Data Item
     */
    AxisDataItem.prototype.setVisibility = function (value, noChangeValues) {
        _super.prototype.setVisibility.call(this, value, noChangeValues);
        if (this._contents) {
            this._contents.visible = value;
        }
    };
    Object.defineProperty(AxisDataItem.prototype, "bullet", {
        /**
         * @return Bullet
         */
        get: function () {
            return this._bullet;
        },
        /**
         * Set it to an instance of any [[Sprite]]. It will be displayed as an axis
         * bullet in the middle of the cell, or specific value.
         *
         * If you need position bullet relatively to the cell, use [[AxisBullet]]
         * instead. It has a `location` property which can be used to indicate
         * precise relative location within cell/range.
         *
         * Also, [[AxisBullet]] is a [[Container]] so you can push any other element
         * into it.
         *
         * NOTE: `location` is relative to the parent axis range's scope, i.e.
         * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`
         * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).
         *
         * ```TypeScript
         * let range = dateAxis.axisRanges.create();
         * range.date = new Date(2018, 0, 5);
         *
         * let flag = new am4plugins_bullets.FlagBullet();
         * flag.label.text = "Hello";
         *
         * range.bullet = flag;
         * ```
         * ```JavaScript
         * var range = dateAxis.axisRanges.create();
         * range.date = new Date(2018, 0, 5);
         *
         * var flag = new am4plugins_bullets.FlagBullet();
         * flag.label.text = "Hello";
         *
         * range.bullet = flag;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "xAxes": [{
         *     "type": "DateAxis",
         *     // ...
         *     "axisRanges": [{
         *       "date": new Date(2018, 0, 5),
         *       "bullet: {
         *         "type": "FlagBullet",
         *         "label": {
         *           "text": "Hello"
         *         }
         *       }
         *     }]
         *   }]
         * }
         * ```
         *
         * @since 4.5.9
         * @param  value  Bullet
         */
        set: function (value) {
            if (this._bullet && this._bullet != value) {
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["remove"](this.sprites, this._bullet);
                this._bullet.dataItem = undefined;
            }
            this._bullet = value;
            if (value) {
                this.addSprite(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    return AxisDataItem;
}(_core_DataItem__WEBPACK_IMPORTED_MODULE_3__["DataItem"]));

/**
 * ============================================================================
 * REQUISITES
 * ============================================================================
 * @hidden
 */
/**
 * Defines named positions for data item's location within [[Axis]].
 */
var AxisItemLocation;
(function (AxisItemLocation) {
    AxisItemLocation[AxisItemLocation["Start"] = 0] = "Start";
    AxisItemLocation[AxisItemLocation["Middle"] = 0.5] = "Middle";
    AxisItemLocation[AxisItemLocation["End"] = 1] = "End";
})(AxisItemLocation || (AxisItemLocation = {}));
/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for all Axis elements.
 *
 * @see {@link IAxisEvents} for a list of available Events
 * @see {@link IAxisAdapters} for a list of available Adapters
 */
var Axis = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Axis, _super);
    /**
     * Constructor
     */
    function Axis() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Number of Grid elements on the axis.
         */
        _this._gridCount = 10;
        /**
         * A list of [[XYSeries]] that are using this Axis.
         */
        _this._series = new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["List"]();
        /**
         * Specifies if axis should be automatically disposed when removing from
         * chart's axis list.
         *
         * @default true
         */
        _this.autoDispose = true;
        /**
         * @ignore
         */
        _this._axisItemCount = 0;
        if (_this.constructor === Axis) {
            throw new Error("'Axis' cannot be instantiated directly. Please use a specific axis type.");
        }
        _this.hideTooltipWhileZooming = true;
        _this.minWidth = 0.0001;
        _this.minHeight = 0.0001;
        _this.className = "Axis";
        _this.shouldClone = false;
        _this.setPropertyValue("cursorTooltipEnabled", true);
        _this.toggleZoomOutButton = true;
        _this.zoomable = true;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_11__["InterfaceColorSet"]();
        // Create title
        _this.title = new _core_elements_Label__WEBPACK_IMPORTED_MODULE_5__["Label"]();
        _this.title.shouldClone = false;
        _this._disposers.push(_this.title);
        _this.setPropertyValue("startLocation", 0);
        _this.setPropertyValue("endLocation", 1);
        // Data item iterator
        _this._dataItemsIterator = new _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["ListIterator"](_this.dataItems, function () { return _this.dataItems.create(); });
        _this._dataItemsIterator.createNewItems = true;
        // Create tooltip
        var tooltip = new _core_elements_Tooltip__WEBPACK_IMPORTED_MODULE_6__["Tooltip"]();
        _this._disposers.push(tooltip);
        tooltip.label.padding(5, 10, 5, 10);
        tooltip.background.pointerLength = 5;
        tooltip.fitPointerToBounds = true;
        tooltip.background.filters.clear();
        // Set virtual parentfor the tooltip so that it can properly inheirt
        // formatters from the axis.
        tooltip.virtualParent = _this;
        // Create background element for the tooltip
        var background = tooltip.background;
        background.cornerRadius = 0;
        background.fill = interfaceColors.getFor("alternativeBackground");
        background.stroke = background.fill;
        background.strokeWidth = 1;
        background.fillOpacity = 1;
        tooltip.label.fill = interfaceColors.getFor("alternativeText");
        _this.tooltip = tooltip;
        // Accessibility
        _this.readerHidden = true;
        _this.events.on("rangechangestarted", function () {
            _this.series.each(function (series) {
                if (series.hideTooltipWhileZooming) {
                    series.tooltip.hide();
                    series.tooltip.preventShow = true;
                }
            });
            if (_this.hideTooltipWhileZooming) {
                _this.tooltip.hide();
                _this.tooltip.preventShow = true;
            }
        }, undefined, false);
        _this.events.on("rangechangeended", function () {
            _this.series.each(function (series) {
                if (series.hideTooltipWhileZooming) {
                    series.tooltip.hide();
                    series.tooltip.preventShow = false;
                }
            });
            if (_this.hideTooltipWhileZooming) {
                _this.tooltip.hide();
                _this.tooltip.preventShow = false;
            }
        }, undefined, false);
        _this.applyTheme();
        return _this;
    }
    /**
     * Holds reference to a function that accepts a DataItem and its index as
     * parameters.
     *
     * It can either return a fill opacity for a fill, or manipulate data item
     * directly, to create various highlighting scenarios.
     *
     * For example, you can set it up to highlight only weekends on a
     * [[DateAxis]].
     */
    Axis.prototype.fillRule = function (dataItem, index) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](index)) {
            index = dataItem.index;
        }
        if (index / 2 == Math.round(index / 2)) {
            dataItem.axisFill.__disabled = true;
            dataItem.axisFill.opacity = 0;
        }
        else {
            dataItem.axisFill.opacity = 1;
            dataItem.axisFill.__disabled = false;
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    Axis.prototype.createDataItem = function () {
        return new AxisDataItem();
    };
    /**
     * Invalidates layout.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.invalidateLayout = function () {
        _super.prototype.invalidateLayout.call(this);
        // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["each"](this.series.iterator(), function (series) {
            series.invalidateLayout();
        });
    };
    /**
     * Invalidates series of this axis.
     */
    Axis.prototype.invalidateSeries = function () {
        // this puts series after axis in invalidation order also makes series update it's data items in case widht/height of a series is not 100%
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["each"](this.series.iterator(), function (series) {
            series.invalidate();
        });
    };
    /**
     * Override to cancel super call for data element validation.
     * @ignore
     */
    Axis.prototype.validateDataElements = function () {
        this._axisItemCount = 0;
        if (this.ghostLabel) {
            this.renderer.updateLabelElement(this.ghostLabel, this.start, this.end);
            this.ghostLabel.validate();
        }
    };
    /**
     * Recalculates the number of grid items on the axis.
     */
    Axis.prototype.updateGridCount = function () {
        if (this.renderer) {
            var gridCount = this.axisLength / this.renderer.minGridDistance;
            if (gridCount != this._gridCount) {
                this._gridCount = gridCount;
                this.clearCache();
            }
        }
    };
    /**
     * Redraws the element.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.validateLayout = function () {
        this.axisFullLength = this.axisLength / (this.end - this.start);
        _super.prototype.validateLayout.call(this);
        this.updateGridCount();
        var renderer = this.renderer;
        if (renderer) {
            renderer.updateAxisLine();
            renderer.updateTooltip();
            renderer.updateBaseGridElement();
        }
        if (this._prevLength != this.axisLength) {
            this.dispatchImmediately("lengthchanged");
            this._prevLength = this.axisLength;
        }
    };
    /**
     * Initializes Axis' renderer.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.initRenderer = function () {
    };
    /**
     * Adds a data item to the Axis.
     *
     * @param dataItem Data item
     */
    Axis.prototype.appendDataItem = function (dataItem) {
        var renderer = this.renderer;
        var tick = dataItem.tick;
        if (tick) {
            if (tick.above) {
                tick.parent = renderer.bulletsContainer;
            }
            else {
                tick.parent = renderer.gridContainer;
            }
        }
        if (dataItem.label) {
            dataItem.label.parent = renderer;
        }
        var axisFill = dataItem.axisFill;
        if (axisFill) {
            if (axisFill.above) {
                axisFill.parent = renderer.bulletsContainer;
            }
            else {
                axisFill.parent = renderer.gridContainer;
            }
        }
        var grid = dataItem.grid;
        if (grid) {
            if (grid.above) {
                grid.parent = renderer.bulletsContainer;
            }
            else {
                grid.parent = renderer.gridContainer;
            }
        }
        if (dataItem.bullet) {
            dataItem.bullet.parent = renderer.bulletsContainer;
        }
    };
    /**
     * Redraws Axis' related items.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.validate = function () {
        _super.prototype.validate.call(this);
        this.validateLayout();
        this.renderer.updateGridContainer();
    };
    /**
     * Redars Axis ranges.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.validateAxisRanges = function () {
        var _this = this;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["each"](this.axisRanges.iterator(), function (axisRange) {
            _this.appendDataItem(axisRange);
            _this.validateDataElement(axisRange);
            if (axisRange.grid) {
                axisRange.grid.validate();
            }
            if (axisRange.tick) {
                axisRange.tick.validate();
            }
            if (axisRange.axisFill) {
                axisRange.axisFill.validate();
            }
            if (axisRange.label) {
                axisRange.label.validate();
            }
        });
    };
    /**
     * Invalidates all axis breaks, so they are redrawn.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.validateBreaks = function () {
        if (this._axisBreaks) {
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["each"](this._axisBreaks.iterator(), function (axisBreak) {
                axisBreak.invalidate();
            });
        }
    };
    /**
     * Associates an Axis break with this Axis, after it is inserted into
     * `axisBreaks`.
     *
     * @ignore Exclude from docs
     * @param event Event
     */
    Axis.prototype.processBreak = function (event) {
        var axisBreak = event.newValue;
        axisBreak.parent = this.renderer.breakContainer;
        axisBreak.axis = this;
    };
    /**
     * Registers a [[XYSeries]] element with this Axis.
     *
     * Returns a [[Disposer]] for all events, added to Series for watching
     * changes in Axis, and vice versa.
     * @ignore
     * @param series  Series
     * @return Event disposer
     */
    Axis.prototype.registerSeries = function (series) {
        var _this = this;
        this.series.moveValue(series);
        return new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["MultiDisposer"]([
            new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                _this.series.removeValue(series);
            }),
            this.events.on("lengthchanged", series.invalidate, series, false),
            this.events.on("lengthchanged", series.createMask, series, false),
            this.events.on("startchanged", series.invalidate, series, false),
            this.events.on("endchanged", series.invalidate, series, false),
        ]);
    };
    Object.defineProperty(Axis.prototype, "renderer", {
        /**
         * @return Renderer
         */
        get: function () {
            return this._renderer;
        },
        /**
         * An [[AxisRenderer]] to be used to render this Axis.
         *
         * Please note that most of the settings, related to Axis' appearance are set
         * via its renderer. Not directly on the Axis.
         *
         * E.g.:
         *
         * ```TypeScript
         * axis.renderer.inside = true;
         * axis.renderer.minLabelPosition = 0.1;
         * axis.renderer.maxLabelPosition = 0.9;
         * ```
         * ```JavaScript
         * axis.renderer.inside = true;
         * axis.renderer.minLabelPosition = 0.1;
         * axis.renderer.maxLabelPosition = 0.9;
         * ```
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/} for more info
         * @param renderer  Renderer
         */
        set: function (renderer) {
            if (renderer != this._renderer) {
                this._renderer = renderer;
                renderer.chart = this.chart;
                renderer.axis = this;
                renderer.parent = this;
                this.title.parent = this; // we add title to axis and set layout in renderer to avoid one extra container, as otherwise axis container would be used for holding renderer only
                this.initRenderer();
                this._disposers.push(renderer.gridContainer.events.on("maxsizechanged", this.invalidate, this, false));
                var ghostLabel_1 = this.renderer.labels.create();
                this._disposers.push(ghostLabel_1);
                ghostLabel_1.dataItem = this.dataItems.template.clone(); // just for the adapters not to fail
                ghostLabel_1.text = "L";
                ghostLabel_1.parent = this.renderer;
                ghostLabel_1.shouldClone = false;
                ghostLabel_1.fillOpacity = 0;
                ghostLabel_1.opacity = 0;
                ghostLabel_1.strokeOpacity = 0;
                ghostLabel_1.interactionsEnabled = false;
                ghostLabel_1.validate();
                this.ghostLabel = ghostLabel_1;
                this.events.on("beforedatavalidated", function () {
                    ghostLabel_1.text = "L";
                }, undefined, false);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts a relative position to angle. (for circular axes)
     *
     * @param position Position (0-1)
     * @return Angle
     */
    Axis.prototype.positionToAngle = function (position) {
        return this.renderer.positionToAngle(position);
    };
    /**
     * Converts pixel coordinates to a relative position. (0-1)
     *
     * @param point  Coorinates (px)
     * @return Position (0-1)
     */
    Axis.prototype.pointToPosition = function (point) {
        return this.renderer.pointToPosition(point);
    };
    /**
     * Converts relative position to coordinate.
     *
     * @since 4.7.15
     * @param position (0-1)
     * @return coordinate (px)
     */
    Axis.prototype.positionToCoordinate = function (position) {
        return this.renderer.positionToCoordinate(position);
    };
    /**
     * [getAnyRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param start  [description]
     * @param end    [description]
     * @return [description]
     */
    Axis.prototype.getAnyRangePath = function (start, end) {
        return this.renderer.getPositionRangePath(start, end);
    };
    /**
     * Converts any positional parameter to a relative position on axis.
     *
     * @todo Description (review)
     * @param value  Pisition
     * @return Position (0-1)
     */
    Axis.prototype.anyToPosition = function (value) {
        return 0;
    };
    /**
     * Converts any positional parameter to a relative position on axis.
     *
     * @todo Description (review)
     * @param value  Pisition
     * @return Orientation point
     */
    Axis.prototype.anyToPoint = function (value) {
        return { x: 0, y: 0, angle: 0 };
    };
    /**
     * [getPositionRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param startPosition [description]
     * @param endPosition   [description]
     * @return [description]
     */
    Axis.prototype.getPositionRangePath = function (startPosition, endPosition) {
        if (this.renderer) {
            return this.renderer.getPositionRangePath(startPosition, endPosition);
        }
        return "";
    };
    Object.defineProperty(Axis.prototype, "axisLength", {
        /**
         * Actual axis length in pixels.
         *
         * @return Axis length (px)
         */
        get: function () {
            if (this.renderer) {
                return this.renderer.axisLength;
            }
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Axis.prototype, "cursorTooltipEnabled", {
        /**
         * @return Display tooltip?
         */
        get: function () {
            return this.getPropertyValue("cursorTooltipEnabled");
        },
        /**
         * Indicates if axis should display a tooltip for chart's cursor.
         *
         * @param value Display tooltip?
         */
        set: function (value) {
            if (this.setPropertyValue("cursorTooltipEnabled", value)) {
                if (value && this.renderer) {
                    this.renderer.updateTooltip();
                }
                else if (this.tooltip) {
                    this.tooltip.hide(0);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Axis.prototype, "toggleZoomOutButton", {
        /**
         * @return Toggle zoom out button?
         */
        get: function () {
            return this.getPropertyValue("toggleZoomOutButton");
        },
        /**
         * Normally, when axis is zoomed in, a zoom out button is shown by a chart,
         * and vice versa: when axis is zoomed out completely, zoom out button is
         * hidden.
         *
         * Setting this to `false` will disable this behavior. Zooming in our out
         * this axis will not reveal or hide zoom out button.
         *
         * @default true
         * @since 4.6.2
         * @param  value  Toggle zoom out button?
         */
        set: function (value) {
            this.setPropertyValue("toggleZoomOutButton", value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Hides element's [[Tooltip]].
     *
     * @see {@link Tooltip}
     */
    Axis.prototype.hideTooltip = function (duration) {
        _super.prototype.hideTooltip.call(this, duration);
        this._tooltipPosition = undefined;
    };
    /**
     * Shows Axis tooltip at specific relative position within Axis. (0-1)
     *
     * @param position Position (0-1)
     * @param local or global position
     */
    Axis.prototype.showTooltipAtPosition = function (position, local) {
        var tooltip = this._tooltip;
        if (!tooltip || this.dataItems.length <= 0) {
            this._tooltipPosition = undefined;
        }
        else {
            if (!local) {
                position = this.toAxisPosition(position);
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](position) || position < this.start || position > this.end) {
                tooltip.hide(0);
                this._tooltipPosition = undefined;
                return;
            }
            var renderer = this.renderer;
            //@todo: think of how to solve this better
            if (!tooltip.parent) {
                tooltip.parent = this.tooltipContainer;
            }
            var tooltipLocation = renderer.tooltipLocation;
            var startPosition = this.getCellStartPosition(position);
            var endPosition = this.getCellEndPosition(position);
            if (this.tooltipPosition == "fixed") {
                position = startPosition + (endPosition - startPosition) * tooltipLocation;
            }
            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_13__["fitToRange"](position, this.start, this.end);
            if (this._tooltipPosition != position) {
                this._tooltipPosition = position;
                var tooltipLocation2 = renderer.tooltipLocation2;
                var startPoint = renderer.positionToPoint(startPosition, tooltipLocation2);
                var endPoint = renderer.positionToPoint(endPosition, tooltipLocation2);
                // save values so cursor could use them
                this.currentItemStartPoint = startPoint;
                this.currentItemEndPoint = endPoint;
                if (renderer.fullWidthTooltip) {
                    tooltip.width = endPoint.x - startPoint.x;
                    tooltip.height = endPoint.y - startPoint.y;
                }
                var point = renderer.positionToPoint(position, tooltipLocation2);
                var globalPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_14__["spritePointToSvg"](point, this.renderer.line);
                tooltip.text = this.getTooltipText(position);
                if (tooltip.text) {
                    tooltip.delayedPointTo(globalPoint);
                    tooltip.show();
                }
            }
            if (!this.cursorTooltipEnabled || this.tooltip.disabled) {
                tooltip.hide(0);
            }
        }
    };
    /**
     * Converts relative position (0-1) to Axis position with zoom level and
     * inversed taken into account.
     *
     * @param position Global position (0-1)
     * @return Position within Axis (0-1)
     */
    Axis.prototype.toAxisPosition = function (position) {
        position = this.renderer.toAxisPosition(position);
        if (position == undefined) {
            return;
        }
        position = position * (this.end - this.start);
        if (this.renderer.inversed) {
            position = this.end - position;
        }
        else {
            position = this.start + position;
        }
        return position;
    };
    /**
     * Converts position on the axis with zoom level and
     * inversed taken into account to global position.
     *
     * @param position Axis position (0-1)
     * @return Global position (0-1)
     */
    Axis.prototype.toGlobalPosition = function (position) {
        if (this.renderer.inversed) {
            position = this.end - position;
        }
        else {
            position = position - this.start;
        }
        return position / (this.end - this.start);
    };
    /**
     * Returns text to be used for cursor's Axis tooltip.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @param position  Position coordinate (px)
     * @return Label text
     */
    Axis.prototype.getTooltipText = function (position) {
        return;
    };
    /**
     * Updates Axis' tooltip's position and possibly size, and pointer (stem)
     * place.
     *
     * @ignore Exclude from docs
     * @param pointerOrientation  Pointer (stem) orientation
     * @param boundingRectangle   A rectangle for tooltip to fit within
     */
    Axis.prototype.updateTooltip = function (pointerOrientation, boundingRectangle) {
        var tooltip = this._tooltip;
        if (tooltip) {
            tooltip.fixDoc = false;
            tooltip.pointerOrientation = pointerOrientation;
            tooltip.setBounds(_core_utils_Utils__WEBPACK_IMPORTED_MODULE_14__["spriteRectToSvg"](boundingRectangle, this.renderer.line));
        }
    };
    /**
     * [roundPosition description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param position  Relative position
     * @param location  Location on axis
     * @return Rounded position
     */
    Axis.prototype.roundPosition = function (position, location, axisLocation) {
        return position;
    };
    /**
     * [getCellStartPosition description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param position [description]
     * @return [description]
     */
    Axis.prototype.getCellStartPosition = function (position) {
        return position;
    };
    /**
     * [getCellEndPosition description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param position [description]
     * @return [description]
     */
    Axis.prototype.getCellEndPosition = function (position) {
        return position;
    };
    Object.defineProperty(Axis.prototype, "axisRanges", {
        /**
         * A list of axis ranges for this Axis.
         *
         * @return Axis ranges
         */
        get: function () {
            if (!this._axisRanges) {
                var dataItem = this.createDataItem();
                dataItem.isRange = true;
                dataItem.axisFill = this.renderer.axisFills.template.clone();
                dataItem.grid = this.renderer.grid.template.clone();
                dataItem.tick = this.renderer.ticks.template.clone();
                dataItem.label = this.renderer.labels.template.clone();
                dataItem.isTemplate = true;
                dataItem.component = this;
                dataItem.axisFill.disabled = false;
                dataItem.tick.disabled = false;
                dataItem.grid.disabled = false;
                dataItem.label.disabled = false;
                this._axisRanges = new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListTemplate"](dataItem);
                this._axisRanges.events.on("inserted", this.processAxisRange, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListDisposer"](this._axisRanges));
                this._disposers.push(this._axisRanges.template);
            }
            return this._axisRanges;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Decorates an axis range after it has been added to the axis range list.
     *
     * @param event Event
     */
    Axis.prototype.processAxisRange = function (event) {
        var axisRange = event.newValue;
        axisRange.component = this;
        axisRange.isRange = true;
    };
    Object.defineProperty(Axis.prototype, "axisBreaks", {
        /**
         * A list of axis breaks on this Axis.
         *
         * @return Axis breaks.
         */
        get: function () {
            if (!this._axisBreaks) {
                this._axisBreaks = new _core_utils_SortedList__WEBPACK_IMPORTED_MODULE_7__["SortedListTemplate"](this.createAxisBreak(), function (a, b) {
                    return _core_utils_Number__WEBPACK_IMPORTED_MODULE_15__["order"](a.adjustedStartValue, b.adjustedStartValue);
                });
                this._axisBreaks.events.on("inserted", this.processBreak, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["ListDisposer"](this._axisBreaks));
                this._disposers.push(this._axisBreaks.template);
            }
            return this._axisBreaks;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates a new axis break.
     *
     * @return Axis break
     */
    Axis.prototype.createAxisBreak = function () {
        return new _AxisBreak__WEBPACK_IMPORTED_MODULE_4__["AxisBreak"]();
    };
    Object.defineProperty(Axis.prototype, "series", {
        /**
         * A list of Series currently associated with this Axis.
         *
         * @return Series
         */
        get: function () {
            if (!this._series) {
                this._series = new _core_utils_List__WEBPACK_IMPORTED_MODULE_8__["List"]();
            }
            return this._series;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Processes Series' data items.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.processSeriesDataItems = function () {
    };
    /**
     * Processes Series' single data item.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @param dataItem Data item
     */
    Axis.prototype.processSeriesDataItem = function (dataItem, axisLetter) {
    };
    /**
     * Post-processes Serie's data items.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.postProcessSeriesDataItems = function (series) {
    };
    /**
     * Post-processes Serie's single data item.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @param dataItem Data item
     */
    Axis.prototype.postProcessSeriesDataItem = function (dataItem) {
    };
    //
    /**
     * Updates Axis based on all Series that might influence it.
     *
     * Called by Series after Series data is validated.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.updateAxisBySeries = function () {
    };
    /**
     * Hides unused data items.
     *
     * @ignore Exclude from docs
     */
    Axis.prototype.hideUnusedDataItems = function () {
        var _this = this;
        // hide all unused
        var dataItemsIterator = this._dataItemsIterator;
        dataItemsIterator.createNewItems = false;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["each"](dataItemsIterator.iterator(), function (dataItem) {
            _this.validateDataElement(dataItem); // solves shrinking
            dataItem.__disabled = true;
        });
        dataItemsIterator.clear();
        dataItemsIterator.createNewItems = true;
    };
    /**
     * Returns a Series' data item that corresponds to specific position on Axis.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @param series    Series
     * @param position  Position (0-1)
     * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position
     * @return Data item
     */
    Axis.prototype.getSeriesDataItem = function (series, position, findNearest) {
        return;
    };
    /**
     * Returns an angle that corresponds to specific position on axis.
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param dataItem  Data item
     * @param key       ???
     * @param location  Location
     * @param stackKey  ???
     * @return Angle
     */
    Axis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {
        return;
    };
    /**
     * [getX description]
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param dataItem [description]
     * @param key      [description]
     * @param location [description]
     * @param stackKey [description]
     * @return [description]
     */
    Axis.prototype.getX = function (dataItem, key, location, stackKey, range) {
        return;
    };
    /**
     * [getX description]
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param dataItem [description]
     * @param key      [description]
     * @param location [description]
     * @param stackKey [description]
     * @return [description]
     */
    Axis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {
        return;
    };
    /**
     * [getY description]
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param dataItem [description]
     * @param key      [description]
     * @param location [description]
     * @param stackKey [description]
     * @return [description]
     */
    Axis.prototype.getY = function (dataItem, key, location, stackKey, range) {
        return;
    };
    /**
     * [getY description]
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param dataItem [description]
     * @param key      [description]
     * @param location [description]
     * @param stackKey [description]
     * @return [description]
     */
    Axis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {
        return;
    };
    Object.defineProperty(Axis.prototype, "basePoint", {
        /**
         * Coordinates of the actual axis start.
         *
         * @ignore Exclude from docs
         * @return Base point coordinates
         */
        get: function () {
            return { x: 0, y: 0 };
        },
        enumerable: true,
        configurable: true
    });
    /**
     * [dataChangeUpdate description]
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Axis.prototype.dataChangeUpdate = function () {
    };
    /**
     * [dataChangeUpdate description]
     *
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Axis.prototype.seriesDataChangeUpdate = function (series) {
    };
    /**
     * Removes axis breaks that fall between `min` and `max` (???)
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param min  Start value
     * @param max  End value
     * @return Spread o
     */
    Axis.prototype.adjustDifference = function (min, max) {
        var difference = max - min;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](difference)) {
            if (this._axisBreaks) {
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["eachContinue"](this._axisBreaks.iterator(), function (axisBreak) {
                    var startValue = axisBreak.adjustedStartValue;
                    var endValue = axisBreak.adjustedEndValue;
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](startValue) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](endValue)) {
                        // breaks are sorted, we don't need go further anymore
                        if (startValue > max) {
                            return false;
                        }
                        if (endValue >= min) {
                            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](startValue) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isNumber"](endValue)) {
                                var breakSize = axisBreak.breakSize;
                                var intersection = _core_utils_Math__WEBPACK_IMPORTED_MODULE_13__["intersection"]({ start: startValue, end: endValue }, { start: min, end: max });
                                if (intersection) {
                                    difference -= (intersection.end - intersection.start) * (1 - breakSize);
                                }
                            }
                        }
                        return true;
                    }
                });
            }
            return difference;
        }
    };
    /**
     * Checks if specific value falls within a break.
     *
     * Returns [[AxisBreak]] the value falls into.
     *
     * @param value  Value to check
     * @return Axis break
     */
    Axis.prototype.isInBreak = function (value) {
        if (this._axisBreaks) {
            return _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["find"](this._axisBreaks.iterator(), function (axisBreak) {
                return value >= axisBreak.adjustedStartValue &&
                    value <= axisBreak.adjustedEndValue;
            });
        }
    };
    /**
     * [fixAxisBreaks description]
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    Axis.prototype.fixAxisBreaks = function () {
        var _this = this;
        if (this._axisBreaks) {
            var axisBreaks = this._axisBreaks;
            if (axisBreaks.length > 0) {
                // first make sure that startValue is <= end value
                // This needs to make a copy of axisBreaks because it mutates the list while traversing
                // TODO very inefficient
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_16__["each"](_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["toArray"](axisBreaks.iterator()), function (axisBreak) {
                    var startValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_13__["min"](axisBreak.startValue, axisBreak.endValue);
                    var endValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_13__["max"](axisBreak.startValue, axisBreak.endValue);
                    axisBreak.adjustedStartValue = startValue;
                    axisBreak.adjustedEndValue = endValue;
                    _this._axisBreaks.update(axisBreak);
                });
                var firstAxisBreak = axisBreaks.first;
                var previousEndValue_1 = Math.min(firstAxisBreak.startValue, firstAxisBreak.endValue);
                // process breaks
                // TODO does this need to call axisBreaks.update ?
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_12__["each"](axisBreaks.iterator(), function (axisBreak) {
                    var startValue = axisBreak.adjustedStartValue;
                    var endValue = axisBreak.adjustedEndValue;
                    // breaks can't overlap
                    // if break starts before previous break ends
                    if (startValue < previousEndValue_1) {
                        startValue = previousEndValue_1;
                        if (endValue < previousEndValue_1) {
                            endValue = previousEndValue_1;
                        }
                    }
                    axisBreak.adjustedStartValue = startValue;
                    axisBreak.adjustedEndValue = endValue;
                });
            }
        }
    };
    Object.defineProperty(Axis.prototype, "startIndex", {
        /**
         * @ignore Exclude from docs
         * @return [description]
         */
        get: function () {
            return 0;
        },
        /**
         * We need start/end indexes of axes to be 0 - `dataItems.length`.
         *
         * Yes, also for category axis, this helps to avoid jumping of categories
         * while scrolling and does not do a lot of extra work as we use
         * protected `_startIndex` and `_endIndex` when working with items.
         *
         * @hidden
         */
        /**
         * [startIndex description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @param value [description]
         */
        set: function (value) {
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Axis.prototype, "endIndex", {
        /**
         * @ignore Exclude from docs
         * @return [description]
         */
        get: function () {
            return this.dataItems.length;
        },
        /**
         * [endIndex description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @param value [description]
         */
        set: function (value) {
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a formatted label based on position.
     *
     * Individual axis types should override this method to generate a label
     * that is relevant to axis type.
     *
     * Please note that `position` represents position within axis which may be
     * zoomed and not correspond to Cursor's `position`.
     *
     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.
     *
     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.
     * @param position  Relative position on axis (0-1)
     * @return Position label
     */
    Axis.prototype.getPositionLabel = function (position) {
        return Math.round(position * 100) + "%x";
    };
    Object.defineProperty(Axis.prototype, "chart", {
        /**
         * @return Chart
         */
        get: function () {
            return this._chart;
        },
        /**
         * A Chart this Axis belongs to.
         *
         * @param value  Chart
         */
        set: function (value) {
            this._chart = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates a data item for a Series range.
     *
     * @param series  Target Series
     * @return Range data item
     */
    Axis.prototype.createSeriesRange = function (series) {
        var range = this.axisRanges.create();
        range.component = this;
        range.axisFill = this.renderer.axisFills.template.clone();
        range.axisFill.disabled = false;
        range.axisFill.fillOpacity = 0;
        range.grid = this.renderer.grid.template.clone();
        range.grid.disabled = true;
        range.tick = this.renderer.ticks.template.clone();
        range.tick.disabled = true;
        range.label = this.renderer.labels.template.clone();
        range.label.disabled = true;
        range.addDisposer(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
            series.axisRanges.removeValue(range);
        }));
        series.axisRanges.push(range);
        return range;
    };
    /**
     * Copies all properties and related data from a different instance of Axis.
     *
     * @param source Source Axis
     */
    Axis.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        if (this.renderer) {
            this.renderer.copyFrom(source.renderer);
        }
        else {
            if (source.renderer) {
                this.renderer = source.renderer.clone();
                this._disposers.push(this.renderer);
            }
        }
        if (source.title) {
            if (!this.title) {
                this.title = source.title.clone();
                this.title.parent = this;
            }
            else {
                this.title.copyFrom(source.title);
            }
            this._disposers.push(this.title);
        }
    };
    /**
     * Resets internal iterator.
     */
    Axis.prototype.resetIterators = function () {
        this._dataItemsIterator.reset();
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    Axis.prototype.processConfig = function (config) {
        if (config) {
            // Set up axis ranges
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["hasValue"](config.axisRanges) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isArray"](config.axisRanges)) {
                for (var i = 0, len = config.axisRanges.length; i < len; i++) {
                    var range = config.axisRanges[i];
                    // If `series` is set, we know it's a series range
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["hasValue"](range["series"])) {
                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_17__["isString"](range["series"])) {
                            if (this.map.hasKey(range["series"])) {
                                //range["series"] = this.map.getKey(range["series"]);
                                config.axisRanges[i] = this.createSeriesRange(this.map.getKey(range["series"]));
                                delete (range["series"]);
                                config.axisRanges[i].config = range;
                            }
                        }
                    }
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    /**
     * Ordering function used in JSON setup.
     *
     * @param a  Item A
     * @param b  Item B
     * @return Order
     */
    Axis.prototype.configOrder = function (a, b) {
        if (a == b) {
            return 0;
        }
        // last
        else if (a == "title") {
            return 1;
        }
        else if (b == "title") {
            return -1;
        }
        // first
        else if (a == "component") {
            return -1;
        }
        else if (b == "component") {
            return 1;
        }
        else {
            return _super.prototype.configOrder.call(this, a, b);
        }
    };
    Object.defineProperty(Axis.prototype, "startLocation", {
        /**
         * @return Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("startLocation");
        },
        /**
         * Axis start location. Works on Date/Category axis, doesn't work on Value axis.
         *
         * * 0 - Full first cell is shown.
         * * 0.5 - Half of first cell is shown.
         * * 1 - None of the first cell is visible. (you probably don't want that)
         *
         * @param value Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("startLocation", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Axis.prototype, "endLocation", {
        /**
         * @return Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("endLocation");
        },
        /**
         * Axis end location. Works on Date/Category axis, doesn't work on Value axis.
         *
         * * 0 - None of the last cell is shown. (don't do that)
         * * 0.5 - Half of the last cell is shown.
         * * 1 - Full last cell is shown.
         *
         * @param value Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("endLocation", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Axis.prototype.setDisabled = function (value) {
        var changed = _super.prototype.setDisabled.call(this, value);
        if (this.renderer) {
            this.renderer.gridContainer.disabled = value;
        }
        return changed;
    };
    Object.defineProperty(Axis.prototype, "title", {
        /**
         * @return Title label
         */
        get: function () {
            return this._title;
        },
        /**
         * A reference to a [[Label]] element which serves as a title to the axis.
         *
         * When axis is created it aleready has an element, so you can just modify
         * it.
         *
         * Or you can replace it with your own instance of `Label`.
         *
         * @param  value  Title label
         */
        set: function (value) {
            if (this._title && this._title != value) {
                this._title.dispose();
            }
            if (value) {
                this._title = value;
                value.parent = this;
                value.shouldClone = false;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Axis.prototype, "hideTooltipWhileZooming", {
        /**
         * @return Hide tooltip while zooming?
         */
        get: function () {
            return this.getPropertyValue("hideTooltipWhileZooming");
        },
        /**
         * Indicates if axis' tooltip should be hidden while axis range is animating
         * (zooming)
         *
         * @default true
         * @since 4.7.16
         * @param  value  Hide tooltip while zooming?
         */
        set: function (value) {
            this.setPropertyValue("hideTooltipWhileZooming", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Axis.prototype, "zoomable", {
        /**
         * @return Zoomable?
         */
        get: function () {
            return this.getPropertyValue("zoomable");
        },
        /**
         * Should the axis be zoomed with scrollbar/cursor?
         *
         * @default true
         * @since 4.9.28
         * @param  value  Zoomable?
         */
        set: function (value) {
            this.setPropertyValue("zoomable", value);
        },
        enumerable: true,
        configurable: true
    });
    return Axis;
}(_core_Component__WEBPACK_IMPORTED_MODULE_1__["Component"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].registeredClasses["Axis"] = Axis;
_core_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].registeredClasses["AxisDataItem"] = AxisDataItem;
/**
 * Add default responsive rules
 */
/**
 * Disable axis tooltips.
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_18__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_18__["ResponsiveBreakpoints"].maybeXS,
    state: function (target, stateId) {
        if (target instanceof Axis && target.tooltip) {
            var state = target.states.create(stateId);
            state.properties.cursorTooltipEnabled = false;
            return state;
        }
        return null;
    }
});
//# sourceMappingURL=Axis.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBreak.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBreak.js ***!
  \*****************************************************************************/
/*! exports provided: AxisBreak */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisBreak", function() { return AxisBreak; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/WavedLine */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedLine.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/**
 * Axis break module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */







/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Base class to define "breaks" on axes.
 *
 * @see {@link IAxisBreakEvents} for a list of available events
 * @see {@link IAxisBreakAdapters} for a list of available Adapters
 * @important
 */
var AxisBreak = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisBreak, _super);
    /**
     * Constructor
     */
    function AxisBreak() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Reference to parent Axis.
         */
        _this._axis = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MutableValueDisposer"]();
        /**
         * A list of axis data items which fall within this break.
         */
        _this.dataItems = new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__["List"]();
        _this.className = "AxisBreak";
        // Set defaults
        _this.breakSize = 0.01;
        _this.marginLeft = -5;
        _this.marginRight = -5;
        _this.marginTop = -5;
        _this.marginBottom = -5;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__["InterfaceColorSet"]();
        // Create elements
        // (these won't be used actually, just for setting properties)
        var fillShape = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_3__["WavedLine"]();
        fillShape.fill = interfaceColors.getFor("background");
        fillShape.stroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_6__["color"])();
        fillShape.fillOpacity = 0.9;
        fillShape.zIndex = 0;
        _this._fillShape = fillShape;
        var startLine = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_3__["WavedLine"]();
        startLine.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_6__["color"])();
        startLine.stroke = interfaceColors.getFor("grid");
        startLine.strokeOpacity = 0.3;
        startLine.zIndex = 1;
        _this._startLine = startLine;
        var endLine = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_3__["WavedLine"]();
        endLine.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_6__["color"])();
        endLine.stroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_6__["color"])("#000000"); // interfaceColors.getFor("grid");
        endLine.strokeOpacity = 0.3;
        endLine.zIndex = 2;
        _this._endLine = endLine;
        _this._disposers.push(_this._axis);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    AxisBreak.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        if (this._fillShape) {
            this._fillShape.dispose();
        }
        if (this._startLine) {
            this._startLine.dispose();
        }
        if (this._endLine) {
            this._endLine.dispose();
        }
    };
    Object.defineProperty(AxisBreak.prototype, "startLine", {
        /**
         * @return Element
         */
        get: function () {
            return this._startLine;
        },
        /**
         * An element used for the starting line of the break.
         *
         * @param sprite  Element
         */
        set: function (sprite) {
            if (this._startLine) {
                this._startLine.dispose();
            }
            this._startLine = sprite;
            this.addBreakSprite(sprite);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "endLine", {
        /**
         * @return Element
         */
        get: function () {
            return this._endLine;
        },
        /**
         * An element used for the end line of the break.
         *
         * @param sprite Element
         */
        set: function (sprite) {
            if (this._endLine) {
                this._endLine.dispose();
            }
            this._endLine = sprite;
            this.addBreakSprite(sprite);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "fillShape", {
        /**
         * @return Element
         */
        get: function () {
            return this._fillShape;
        },
        /**
         * An element used for fill of the break.
         *
         * @param sprite Element
         */
        set: function (sprite) {
            if (this._fillShape) {
                this._fillShape.dispose();
            }
            this._fillShape = sprite;
            this.addBreakSprite(sprite);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Adds a break element (e.g. lines, fill) to the break, which is
     * [[Container]].
     *
     * @ignore Exclude from docs
     * @param sprite Element to add
     */
    AxisBreak.prototype.addBreakSprite = function (sprite) {
        sprite.parent = this;
        sprite.isMeasured = false;
        this._disposers.push(sprite);
    };
    Object.defineProperty(AxisBreak.prototype, "axis", {
        /**
         * @return Axis
         */
        get: function () {
            return this._axis.get();
        },
        /**
         * An Axis this Break is associated with.
         *
         * @param axis  Axis
         */
        set: function (axis) {
            if (this._axis.get() !== axis) {
                this._axis.set(axis, axis.renderer.gridContainer.events.on("transformed", this.invalidate, this, false));
                axis.renderer.createBreakSprites(this);
                // this can't go to copyFrom, as axis is set later
                var breakTemplate = axis.axisBreaks.template;
                this.startLine.copyFrom(breakTemplate.startLine);
                this.endLine.copyFrom(breakTemplate.endLine);
                this.fillShape.copyFrom(breakTemplate.fillShape);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "breakSize", {
        /**
         * @return Relative axis break
         */
        get: function () {
            return this.getPropertyValue("breakSize");
        },
        /**
         * A size of the break relative to the actual size of the scope break spans.
         *
         * For example, if `breakSize = 0.1` and unbroken scope of values it spans
         * would be 100 pixels, the break would be 10 pixels wide.
         *
         * 0 means the break will completely collapse and hide the values.
         * 1 means break would be not collapse at all, which would make it
         * effectively useless.
         *
         * @default 0.01
         * @param value  Relative axis break
         */
        set: function (value) {
            if (this.setPropertyValue("breakSize", value)) {
                if (this.axis) {
                    this.axis.invalidate();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "startPoint", {
        /**
         * Returns pixel coordinates of axis break's start.
         *
         * @return Start point
         */
        get: function () {
            var renderer = this.axis.renderer;
            if (renderer) {
                return renderer.positionToPoint(this.startPosition);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "endPoint", {
        /**
         * Returns pixel coordinates of axis break's end.
         *
         * @return End point
         */
        get: function () {
            var renderer = this.axis.renderer;
            if (renderer) {
                return renderer.positionToPoint(this.endPosition);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "startPosition", {
        /**
         * Returns a relative position at which axis break starts.
         *
         * This is a calculated position, meaning it shows relative position of the
         * break after break is applied.
         *
         * @return Start position
         */
        get: function () {
            return;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "endPosition", {
        /**
         * Returns a relative position at which axis break ends.
         *
         * This is a calculated position, meaning it shows relative position of the
         * break after break is applied.
         *
         * @return End position
         */
        get: function () {
            return;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Draws the axis break.
     *
     * @ignore Exclude from docs
     */
    AxisBreak.prototype.draw = function () {
        _super.prototype.draw.call(this);
        if (this.axis) {
            var renderer = this.axis.renderer;
            renderer.updateBreakElement(this);
        }
    };
    Object.defineProperty(AxisBreak.prototype, "startValue", {
        /**
         * @return Starting value
         */
        get: function () {
            return this.getPropertyValue("startValue");
        },
        /**
         * A starting value for the break.
         *
         * @param value  Starting value
         */
        set: function (value) {
            if (this.setPropertyValue("startValue", value)) {
                if (this.axis) {
                    this.axis.invalidate();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisBreak.prototype, "endValue", {
        /**
         * @return End value
         */
        get: function () {
            return this.getPropertyValue("endValue");
        },
        /**
         * An end value for the break.
         *
         * @param value  End value
         */
        set: function (value) {
            if (this.setPropertyValue("endValue", value)) {
                if (this.axis) {
                    this.axis.invalidate();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    return AxisBreak;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["AxisBreak"] = AxisBreak;
//# sourceMappingURL=AxisBreak.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBullet.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBullet.js ***!
  \******************************************************************************/
/*! exports provided: AxisBullet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisBullet", function() { return AxisBullet; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Axis Bullet module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw a positioned bullet (element) on an Axis.
 *
 * ```TypeScript
 * let range = dateAxis.axisRanges.create();
 * range.date = new Date(2018, 0, 5);
 *
 * let flag = new am4plugins_bullets.FlagBullet();
 * flag.label.text = "Hello";
 *
 * range.bullet = flag;
 * ```
 * ```JavaScript
 * var range = dateAxis.axisRanges.create();
 * range.date = new Date(2018, 0, 5);
 *
 * var flag = new am4plugins_bullets.FlagBullet();
 * flag.label.text = "Hello";
 *
 * range.bullet = flag;
 * ```
 * ```JSON
 * {
 *   // ...
 *   "xAxes": [{
 *     "type": "DateAxis",
 *     // ...
 *     "axisRanges": [{
 *       "date": new Date(2018, 0, 5),
 *       "bullet: {
 *         "type": "FlagBullet",
 *         "label": {
 *           "text": "Hello"
 *         }
 *       }
 *     }]
 *   }]
 * }
 * ```
 *
 * @since 4.5.9
 * @see {@link IAxisBulletEvents} for a list of available events
 * @see {@link IAxisBulletAdapters} for a list of available Adapters
 * @important
 */
var AxisBullet = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisBullet, _super);
    function AxisBullet() {
        var _this = _super.call(this) || this;
        _this.className = "AxisBullet";
        _this.location = 0.5;
        _this.isMeasured = false;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(AxisBullet.prototype, "location", {
        /**
         * @return Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("location");
        },
        /**
         * Relative position within cell/range.
         *
         * Value range is from from `0` (beginning) to `1` (end).
         *
         * NOTE: `location` is relative to the parent axis range's scope, i.e.
         * between its `date` and `endDate` for [[DateAxis]], or `value`/`endValue`
         * ([[ValueAxis]]), or `category`/`endCategory` ([[categoryAxis]]).
         *
         * ```TypeScript
         * let range = dateAxis.axisRanges.create();
         * range.date = new Date(2018, 0, 5);
         * range.endDate = new Date(2018, 0, 6);
         *
         * let bullet = new am4charts.AxisBullet();
         * bullet.location = 1;
         *
         * let flag = bullet.createChild(am4plugins_bullets.FlagBullet);
         * flag.label.text = "Hello";
         * ```
         * ```JavaScript
         * var range = dateAxis.axisRanges.create();
         * range.date = new Date(2018, 0, 5);
         * range.endDate = new Date(2018, 0, 6);
         *
         * var bullet = new am4charts.AxisBullet();
         * bullet.location = 1;
         *
         * var flag = bullet.createChild(am4plugins_bullets.FlagBullet);
         * flag.label.text = "Hello";
         * ```
         * ```JSON
         * {
         *   // ...
         *   "xAxes": [{
         *     "type": "DateAxis",
         *     // ...
         *     "axisRanges": [{
         *       "date": new Date(2018, 0, 5),
         *       "endDate": new Date(2018, 0, 6),
         *       "bullet: {
         *         "type": "AxisBullet",
         *         "location": 1,
         *         "children": [{
         *           "type": "FlagBullet",
         *           "label": {
         *             "text": "Hello"
         *           }
         *         }]
         *       }
         *     }]
         *   }]
         * }
         * ```
         *
         * @default 0.5
         * @param  value  Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("location", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    AxisBullet.prototype.setDisabled = function (value) {
        var changed = _super.prototype.setDisabled.call(this, value);
        if (this.axis) {
            this.axis.invalidateDataItems();
        }
        return changed;
    };
    return AxisBullet;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["AxisBullet"] = AxisBullet;
//# sourceMappingURL=AxisBullet.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFill.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFill.js ***!
  \****************************************************************************/
/*! exports provided: AxisFill */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisFill", function() { return AxisFill; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * AxisFill is a base class used to defines fill shapes for various
 * type-specific Axes.
 *
 * Axis fills are used to add fills to specific ranges of those axes.
 *
 * @see {@link IAxisFillEvents} for a list of available events
 * @see {@link IAxisFillAdapters} for a list of available Adapters
 * @important
 */
var AxisFill = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisFill, _super);
    /**
     * Constructor.
     *
     * @param axis Axis
     */
    function AxisFill(axis) {
        var _this = _super.call(this) || this;
        _this.axis = axis;
        _this.element = _this.paper.add("path");
        _this.className = "AxisFill";
        _this.isMeasured = false;
        _this.location = 0;
        _this.above = false;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__["InterfaceColorSet"]();
        _this.fill = interfaceColors.getFor("alternativeBackground");
        _this.fillOpacity = 0;
        _this.applyTheme();
        return _this;
    }
    /**
     * @ignore
     */
    AxisFill.prototype.setDisabled = function (value) {
        var changed = _super.prototype.setDisabled.call(this, value);
        if (this.axis) {
            this.axis.invalidateDataItems();
        }
        return changed;
    };
    /**
     * Draws the fill element.
     *
     * @ignore Exclude from docs
     */
    AxisFill.prototype.draw = function () {
        _super.prototype.draw.call(this);
        if (this.__disabled || this.disabled) {
            return;
        }
        if (this.axis && _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](this.startPosition) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](this.endPosition)) {
            this.fillPath = this.axis.getPositionRangePath(this.startPosition, this.endPosition);
            this.path = this.fillPath;
            if (this.isMeasured) {
                this.measure();
            }
        }
    };
    Object.defineProperty(AxisFill.prototype, "startPosition", {
        /**
         * @return Start position
         */
        get: function () {
            return this.getPropertyValue("startPosition");
        },
        /**
         * An actual starting position of the fill.
         *
         * @param value  Starting position
         */
        set: function (value) {
            this.setPropertyValue("startPosition", value);
            this.invalidate(); // this is needed as relative position might not change when zooming
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisFill.prototype, "endPosition", {
        /**
         * @return End position
         */
        get: function () {
            return this.getPropertyValue("endPosition");
        },
        /**
         * An actual end position of the fill.
         *
         * @param value End position
         */
        set: function (value) {
            this.setPropertyValue("endPosition", value);
            this.invalidate(); // this is needed as relative position might not change when zooming
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisFill.prototype, "location", {
        /**
         * @return Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("location");
        },
        /**
         * Relative location of the fill. (0-1)
         *
         * @param value Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("location", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    AxisFill.prototype.setPath = function (value) {
        if (this.setPropertyValue("path", value)) {
            this.element.attr({ "d": value });
            return true;
        }
        return false;
    };
    Object.defineProperty(AxisFill.prototype, "above", {
        /**
         * @return Draw above series?
         */
        get: function () {
            return this.getPropertyValue("above");
        },
        /**
         * Normally fill goes below series. Set this to `true` to go above.
         *
         * @default false
         * @since 4.5.9
         * @param  value  Draw above series?
         */
        set: function (value) {
            this.setPropertyValue("above", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return AxisFill;
}(_core_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["AxisFill"] = AxisFill;
//# sourceMappingURL=AxisFill.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFillCircular.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFillCircular.js ***!
  \************************************************************************************/
/*! exports provided: AxisFillCircular */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisFillCircular", function() { return AxisFillCircular; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AxisFill__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisFill */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFill.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Provides fill element functionality for circular Axes.
 *
 * @see {@link IAxisFillCircularEvents} for a list of available events
 * @see {@link IAxisFillCircularAdapters} for a list of available Adapters
 * @todo Needs description
 */
var AxisFillCircular = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisFillCircular, _super);
    /**
     * Constructor.
     *
     * @param axis Axis
     */
    function AxisFillCircular(axis) {
        var _this = _super.call(this, axis) || this;
        _this.className = "AxisFillCircular";
        _this.element = _this.paper.add("path");
        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(100);
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the fill element.
     *
     * @ignore Exclude from docs
     */
    AxisFillCircular.prototype.draw = function () {
        _super.prototype.draw.call(this);
        if (this.__disabled || this.disabled) {
            return;
        }
        if (this.axis) {
            var renderer = this.axis.renderer;
            this.fillPath = renderer.getPositionRangePath(this.startPosition, this.endPosition, this.radius, _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["hasValue"](this.innerRadius) ? this.innerRadius : renderer.innerRadius, this.cornerRadius);
            this.path = this.fillPath;
        }
    };
    Object.defineProperty(AxisFillCircular.prototype, "innerRadius", {
        /**
         * @return Inner radius
         */
        get: function () {
            return this.getPropertyValue("innerRadius");
        },
        /**
         * Inner radius of the fill. Relative ([[Percent]]) or absolute (pixels).
         *
         * @param value  Inner radius
         */
        set: function (value) {
            this.setPercentProperty("innerRadius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisFillCircular.prototype, "radius", {
        /**
         * @return Outer radius
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * Outer radius of the fill. Relative ([[Percent]]) or absolute (pixels).
         *
         * @param value  Outer radius
         */
        set: function (value) {
            this.setPercentProperty("radius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisFillCircular.prototype, "cornerRadius", {
        /**
         * @return Corner radius (px)
         */
        get: function () {
            return this.getPropertyValue("cornerRadius");
        },
        /**
         * Corner radius for the fill. In pixels.
         *
         * @param value  Corner radius (px)
         */
        set: function (value) {
            this.setPropertyValue("cornerRadius", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return AxisFillCircular;
}(_AxisFill__WEBPACK_IMPORTED_MODULE_1__["AxisFill"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["AxisFillCircular"] = AxisFillCircular;
//# sourceMappingURL=AxisFillCircular.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabel.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabel.js ***!
  \*****************************************************************************/
/*! exports provided: AxisLabel */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisLabel", function() { return AxisLabel; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Axis Label module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Use to create labels on Axis.
 *
 * @see {@link IAxisLabelEvents} for a list of available events
 * @see {@link IAxisLabelAdapters} for a list of available Adapters
 * @important
 */
var AxisLabel = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisLabel, _super);
    /**
     * Constructor
     */
    function AxisLabel() {
        var _this = _super.call(this) || this;
        _this.className = "AxisLabel";
        _this.isMeasured = false;
        _this.padding(10, 10, 10, 10);
        _this.location = 0.5;
        //this.nonScaling = true; // not good for perf
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(AxisLabel.prototype, "location", {
        /**
         * @return Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("location");
        },
        /**
         * Relative location of the label. (0-1)
         *
         * @param value  Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("location", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisLabel.prototype, "inside", {
        /**
         * Returns if label is set to be drawn inside axis.
         *
         * @return Inside?
         */
        get: function () {
            return this.getPropertyValue("inside");
        },
        /**
         * Sets if label should be drawn inside axis.
         *
         * @param value  Inside?
         */
        set: function (value) {
            this.setPropertyValue("inside", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    AxisLabel.prototype.setDisabled = function (value) {
        var changed = _super.prototype.setDisabled.call(this, value);
        if (this.axis) {
            this.axis.invalidateDataItems();
        }
        return changed;
    };
    return AxisLabel;
}(_core_elements_Label__WEBPACK_IMPORTED_MODULE_1__["Label"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["AxisLabel"] = AxisLabel;
//# sourceMappingURL=AxisLabel.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js ***!
  \*************************************************************************************/
/*! exports provided: AxisLabelCircular */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisLabelCircular", function() { return AxisLabelCircular; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AxisLabel__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisLabel */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabel.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/**
 * Axis Label module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */







/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Use to create labels on circular axis.
 *
 * @see {@link IAxisLabelCircularEvents} for a list of available events
 * @see {@link IAxisLabelCircularAdapters} for a list of available Adapters
 */
var AxisLabelCircular = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisLabelCircular, _super);
    /**
     * Constructor
     */
    function AxisLabelCircular() {
        var _this = _super.call(this) || this;
        /**
         *
         * @ignore
         */
        _this.fdx = 0;
        /**
         *
         * @ignore
         */
        _this.fdy = 0;
        _this.className = "AxisLabelCircular";
        _this.padding(0, 0, 0, 0);
        _this.location = 0.5;
        _this.locationOnPath = 0.5;
        _this.radius = 0;
        _this.isMeasured = false;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(AxisLabelCircular.prototype, "relativeRotation", {
        /**
         * @return Rotation angle
         */
        get: function () {
            return this.getPropertyValue("relativeRotation");
        },
        /**
         * Relative rotation of the label.
         *
         * It is an angle to circle. In case 90, labels will be positioned like rays
         * of light, if 0 - positioned along the circle.
         *
         * @param value Rotation angle
         */
        set: function (value) {
            this.setPropertyValue("relativeRotation", value, true);
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["hasValue"](value)) {
                this.rotation = undefined;
                var dataItem = this.dataItem;
                if (dataItem && dataItem.component) {
                    dataItem.component.invalidateDataItems();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisLabelCircular.prototype, "radius", {
        /**
         * @return Distance (px)
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * Distance from axis circle to label in pixels or percent.
         *
         * @param value Distance (px or percent)
         */
        set: function (value) {
            this.setPercentProperty("radius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisLabelCircular.prototype, "bent", {
        /**
         * @return Bent?
         */
        get: function () {
            return this.getPropertyValue("bent");
        },
        /**
         * Specifies if label should be bent along the circle.
         *
         * IMPORTANT: Use this with caution, since it is quite CPU-greedy.
         *
         * @since 4.1.2
         * @default false
         * @param  value  Bent?
         */
        set: function (value) {
            this.setPropertyValue("bent", value, true);
            this.setPropertyValue("wrap", false);
            this.setPropertyValue("horizontalCenter", "none");
            this.setPropertyValue("verticalCenter", "none");
            if (value) {
                this.setPropertyValue("dx", 0);
                this.setPropertyValue("dy", 0);
                this.setPropertyValue("x", 0);
                this.setPropertyValue("y", 0);
                this.setPropertyValue("rotation", 0);
                //this.setPropertyValue("relativeRotation", undefined);
                this.fdx = 0;
                this.fdy = 0;
                this.textAlign = "middle";
            }
            else {
                if (this.textPathElement) {
                    this.textPathElement.dispose();
                    this.textPathElement = undefined;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns label radius in pixels.
     *
     * @param   axisRadius  Radius
     * @return              Pixel radius
     */
    AxisLabelCircular.prototype.pixelRadius = function (axisRadius) {
        var sign = 1;
        if (this.inside) {
            sign = -1;
        }
        return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["relativeToValue"](this.radius, axisRadius) * sign;
    };
    /**
     * Returns label horizontal radius in pixels.
     *
     * @param   axisRadius   Radius
     * @param   axisRadiusY  Vertical radius
     * @return               Radius
     */
    AxisLabelCircular.prototype.pixelRadiusY = function (axisRadius, axisRadiusY) {
        var sign = 1;
        if (this.inside) {
            sign = -1;
        }
        var radius = this.radius;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](radius)) {
            radius *= axisRadiusY / axisRadius;
            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["relativeToValue"](radius, axisRadius) * sign;
        }
        else {
            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["relativeToValue"](radius, axisRadiusY) * sign;
        }
    };
    /**
     * [fixPosition description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param point       Label affixation point
     * @param axisRadius  Distance from point (px)
     */
    AxisLabelCircular.prototype.fixPosition = function (angle, axisRadius, axisRadiusY, dx, dy) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](axisRadiusY)) {
            axisRadiusY = axisRadius;
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](dx)) {
            dx = 0;
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](dy)) {
            dy = 0;
        }
        var point = { x: axisRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](angle), y: axisRadiusY * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](angle) };
        if (this.invalid) {
            this.validate(); //@todo" check if we need this
        }
        var isNegative = false;
        var realRadius = this.radius;
        if (realRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["Percent"] && realRadius.value < 0) {
            isNegative = true;
        }
        else if (realRadius < 0) {
            isNegative = true;
        }
        var relativeRotation = this.relativeRotation;
        var labelRadius = this.pixelRadius(axisRadius);
        if (this.bent) {
            var point_1 = { x: (axisRadius + labelRadius) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](angle + 180), y: (axisRadiusY + labelRadius * axisRadiusY / axisRadius) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](angle + 180) };
            this.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__["moveTo"](point_1) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__["arcTo"](angle + 180, 360, axisRadius + labelRadius, axisRadiusY + labelRadius * axisRadiusY / axisRadius);
            if (this.textPathElement) {
                this.textPathElement.attr({ "startOffset": (this.locationOnPath * 100) + "%" });
            }
            return;
        }
        // WHEN ROTATED
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](relativeRotation)) {
            this.horizontalCenter = "none";
            this.verticalCenter = "none";
            angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["fitAngleToRange"](angle, -180, 180);
            var pixelWidth = this.bbox.width;
            var pixelHeight = this.bbox.height;
            var pixelPaddingBottom = this.pixelPaddingBottom;
            var pixelPaddingTop = this.pixelPaddingTop;
            var pixelPaddingLeft = this.pixelPaddingLeft;
            var pixelPaddingRight = this.pixelPaddingRight;
            if (angle > 90 || angle < -90) {
                if (relativeRotation == -90) {
                    relativeRotation = 90;
                    pixelWidth = 0;
                }
            }
            else {
                if (relativeRotation == -90) {
                    pixelHeight = -pixelHeight;
                }
                if (relativeRotation == 90) {
                    relativeRotation = -90;
                    pixelWidth = -pixelPaddingLeft - pixelPaddingRight;
                    pixelHeight = -pixelHeight - pixelPaddingTop - pixelPaddingBottom;
                }
            }
            this.rotation = relativeRotation + angle + 90;
            var dH = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](relativeRotation) / 2;
            var dW = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](relativeRotation) / 2;
            var rotation = this.rotation;
            this.dx = pixelHeight * dH * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](rotation) - pixelWidth * dW * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](rotation);
            this.dy = -pixelHeight * dH * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](rotation) - pixelWidth * dW * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](rotation);
            if (!this.inside) {
                labelRadius += (pixelHeight + pixelPaddingBottom + pixelPaddingTop) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](relativeRotation) + (pixelWidth + pixelPaddingLeft + pixelPaddingRight) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](relativeRotation);
            }
            else {
                if (angle > 90 || angle < -90) {
                    labelRadius -= (pixelPaddingBottom + pixelPaddingTop) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](relativeRotation) + (pixelPaddingLeft + pixelPaddingRight) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](relativeRotation);
                }
                else {
                    labelRadius += (pixelPaddingBottom + this.bbox.height + pixelPaddingTop) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](relativeRotation) + (pixelPaddingLeft + pixelPaddingRight + this.bbox.width) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](relativeRotation);
                }
            }
            point.x += _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](angle) * labelRadius;
            point.y += _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](angle) * labelRadius * axisRadiusY / axisRadius;
        }
        else {
            // END OF ROTATED
            this.horizontalCenter = "middle";
            this.verticalCenter = "middle";
            if (isNegative) {
                this.dx = 0;
                this.dy = 0;
                point.x = (axisRadius + labelRadius) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](angle);
                point.y = (axisRadiusY + labelRadius * axisRadiusY / axisRadius) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](angle);
            }
            else {
                // we don't use valign for labels because then they would jump while animating. instead we modify dy depending on a y position
                // this math makes dy to be 1 at the top of the circle, 0.5 at the middle and 1 at the bottom
                // @todo with this math doesn't work well with inside = true
                this.dy = this._measuredHeight / 2 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](angle); //(1 - (point.y + axisRadiusY) / (2 * axisRadiusY));
                // simmilar with dx
                this.dx = this._measuredWidth / 2 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](angle); //(1 - (point.x + axisRadius) / (2 * axisRadius));
                point.x += _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](angle) * labelRadius;
                point.y += _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](angle) * labelRadius * axisRadiusY / axisRadius;
            }
        }
        point.x += dx;
        point.y += dy;
        this.fdx = this.dx;
        this.fdy = this.dy;
        this.moveTo(point);
    };
    return AxisLabelCircular;
}(_AxisLabel__WEBPACK_IMPORTED_MODULE_1__["AxisLabel"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["AxisLabelCircular"] = AxisLabelCircular;
//# sourceMappingURL=AxisLabelCircular.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLine.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLine.js ***!
  \****************************************************************************/
/*! exports provided: AxisLine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisLine", function() { return AxisLine; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/**
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw Axis line.
 *
 * @see {@link IAxisLineEvents} for a list of available events
 * @see {@link IAxisLineAdapters} for a list of available Adapters
 */
var AxisLine = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisLine, _super);
    /**
     * Constructor
     */
    function AxisLine() {
        var _this = _super.call(this) || this;
        _this.className = "AxisLine";
        _this.element = _this.paper.add("path");
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__["InterfaceColorSet"]();
        _this.stroke = interfaceColors.getFor("grid");
        _this.strokeOpacity = 0.15;
        _this.pixelPerfect = true;
        _this.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_3__["color"])();
        _this.applyTheme();
        _this.interactionsEnabled = false;
        return _this;
        //this.element.moveTo({ x: 0, y: 0 });
    }
    return AxisLine;
}(_core_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["AxisLine"] = AxisLine;
//# sourceMappingURL=AxisLine.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js ***!
  \********************************************************************************/
/*! exports provided: AxisRenderer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRenderer", function() { return AxisRenderer; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _Axis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./Axis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js");
/* harmony import */ var _AxisLine__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AxisLine */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLine.js");
/* harmony import */ var _AxisFill__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./AxisFill */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFill.js");
/* harmony import */ var _Grid__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./Grid */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/Grid.js");
/* harmony import */ var _AxisLabel__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./AxisLabel */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabel.js");
/* harmony import */ var _AxisTick__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./AxisTick */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisTick.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Module, defining base Axis Renderer.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */













/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for all axis renderers.
 *
 * @see {@link IAxisRendererEvents} for a list of available events
 * @see {@link IAxisRendererAdapters} for a list of available Adapters
 */
var AxisRenderer = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisRenderer, _super);
    /**
     * Constructor.
     *
     * @param axis Related axis
     */
    function AxisRenderer() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A related chart.
         */
        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MutableValueDisposer"]();
        _this.className = "AxisRenderer";
        // Set defaults
        _this.minGridDistance = 50;
        _this.inside = false;
        _this.inversed = false;
        _this.tooltipLocation = 0.5;
        _this.fullWidthTooltip = false;
        _this.cellStartLocation = 0;
        _this.cellEndLocation = 1;
        _this.minLabelPosition = 0;
        _this.maxLabelPosition = 1;
        _this.shouldClone = false;
        var gridContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]);
        gridContainer.shouldClone = false;
        gridContainer.layout = "none";
        //	gridContainer.isMeasured = false;
        gridContainer.virtualParent = _this;
        gridContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["percent"])(100);
        gridContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["percent"])(100);
        _this.gridContainer = gridContainer;
        // not good without this
        gridContainer.events.on("maxsizechanged", function () {
            if (_this.inited) {
                _this.invalidateAxisItems();
            }
        }, _this, false);
        var breakContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]);
        breakContainer.shouldClone = false;
        breakContainer.isMeasured = false;
        breakContainer.layout = "none";
        breakContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["percent"])(100);
        breakContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["percent"])(100);
        _this.breakContainer = breakContainer;
        var bulletsContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]);
        bulletsContainer.shouldClone = false;
        bulletsContainer.isMeasured = false;
        bulletsContainer.layout = "none";
        bulletsContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["percent"])(100);
        bulletsContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["percent"])(100);
        _this.bulletsContainer = bulletsContainer;
        _this.line = _this.createChild(_AxisLine__WEBPACK_IMPORTED_MODULE_4__["AxisLine"]);
        _this.line.shouldClone = false;
        _this.line.strokeOpacity = 0;
        var baseGrid = _this.createChild(_Grid__WEBPACK_IMPORTED_MODULE_6__["Grid"]);
        baseGrid.shouldClone = false;
        _this.baseGrid = baseGrid;
        // Make elements disposable
        var disposers = _this._disposers;
        disposers.push(baseGrid);
        disposers.push(_this.line);
        disposers.push(gridContainer);
        disposers.push(breakContainer);
        disposers.push(bulletsContainer);
        disposers.push(_this._chart);
        _this.ticks.template.disabled = true;
        _this.axisFills.template.disabled = true;
        _this.axisFills.template.interactionsEnabled = false;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(AxisRenderer.prototype, "axis", {
        /**
         * Axis of a renderer
         * @return axis Axis
         */
        get: function () {
            return this._axis;
        },
        /**
         * Axis of a renderer
         * @param axis Axis
         */
        set: function (axis) {
            this.setAxis(axis);
        },
        enumerable: true,
        configurable: true
    });
    /**
    * @ignore
    */
    AxisRenderer.prototype.setAxis = function (axis) {
        this._axis = axis;
        this.baseGrid.parent = axis;
        this.line.parent = axis;
        this.gridContainer.bind("opacity", axis);
    };
    /**
     * Called when rendered is attached to an Axis, as well as a property of
     * Axis that might affect the appearance is updated.
     *
     * E.g. `axis.opposite`, `axis.inside`, etc.
     *
     * This method is called **before** draw, so that any related setting
     * changed in this method can be changed.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    AxisRenderer.prototype.processRenderer = function () {
        this.events.on("sizechanged", this.updateTooltip, this, false);
        this.events.on("positionchanged", this.updateTooltip, this, false);
        this.labels.template.inside = this.inside;
        this.ticks.template.inside = this.inside;
    };
    /**
     * Updates Axis' tooltip.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    AxisRenderer.prototype.updateTooltip = function () {
        // This is a placeholder method for extending classes to override.
    };
    Object.defineProperty(AxisRenderer.prototype, "axisLength", {
        /**
         * Returns actual length of the Axis, in pixels.
         *
         * @return Length (px)
         */
        get: function () {
            // This is a placeholder method for extending classes to override.
            return 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Re-positions an element to new coordinates.
     *
     * @ignore Exclude from docs
     * @param item   A target element
     * @param point  New coordinates
     */
    AxisRenderer.prototype.positionItem = function (item, point) {
        if (item) {
            item.moveTo(point);
        }
    };
    /**
     * Converts relative position on axis to point coordinates.
     *
     * @param position  Position (0-1)
     * @return Point
     */
    AxisRenderer.prototype.positionToPoint = function (position, position2) {
        // This is a placeholder method for extending classes to override.
        return { x: 0, y: 0 };
    };
    /**
     * Converts relative position on axis to angle.
     *
     * @ignore Exclude from docs
     * @todo Description (review / units)
     * @param position  Position (0-1)
     * @return Angle
     */
    AxisRenderer.prototype.positionToAngle = function (position) {
        // This is a placeholder method for extending classes to override.
        return 0;
    };
    /**
     * Converts relative position (0-1) on axis to a pixel coordinate.
     *
     * @param position  Position (0-1)
     * @return Coordinate (px)
     */
    AxisRenderer.prototype.positionToCoordinate = function (position) {
        var coordinate;
        var axis = this.axis;
        var axisFullLength = axis.axisFullLength;
        if (axis.renderer.inversed) {
            coordinate = (axis.end - position) * axisFullLength;
        }
        else {
            coordinate = (position - axis.start) * axisFullLength;
        }
        return coordinate;
    };
    AxisRenderer.prototype.updateGridContainer = function () {
    };
    AxisRenderer.prototype.getHeight = function () {
        var gridContainer = this.gridContainer;
        if (gridContainer.parent) {
            return gridContainer.parent.pixelHeight;
        }
        return this.gridContainer.pixelHeight || 0;
    };
    AxisRenderer.prototype.getWidth = function () {
        var gridContainer = this.gridContainer;
        if (gridContainer.parent) {
            return gridContainer.parent.pixelWidth;
        }
        return this.gridContainer.pixelWidth || 0;
    };
    /**
     * Converts a coordinate in pixels to a relative position. (0-1)
     *
     * @param coordinate  Coordinate (px)
     * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)
     * @return Position (0-1)
     */
    AxisRenderer.prototype.coordinateToPosition = function (coordinate, coordinate2) {
        var position;
        var axis = this.axis;
        var axisFullLength = axis.axisFullLength;
        if (axis.renderer.inversed) {
            position = axis.end - coordinate / axisFullLength;
        }
        else {
            position = coordinate / axisFullLength + axis.start;
        }
        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"](position, 5);
    };
    /**
     * Converts a point at specific coordinates to a relative position (0-1)
     * on the axis.
     *
     * @ignore Exclude from docs
     * @param point  Point
     * @return Position (0-1)
     */
    AxisRenderer.prototype.pointToPosition = function (point) {
        // This is a placeholder method for extending classes to override.
        return 0;
    };
    /**
     * [getPositionRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param startPosition  Starting position
     * @param endPosition    End position
     * @return SVG path
     */
    AxisRenderer.prototype.getPositionRangePath = function (startPosition, endPosition) {
        return "";
    };
    /**
     * Invalidates all axis data items, effectively causing them re-evaluated.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     */
    AxisRenderer.prototype.invalidateAxisItems = function () {
        var axis = this.axis;
        if (axis) {
            axis.invalidateDataItems();
        }
    };
    /**
     * Updates and positions a grid element.
     *
     * @ignore Exclude from docs
     * @param grid         Grid element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRenderer.prototype.updateGridElement = function (grid, position, endPosition) {
        // This is a placeholder method for extending classes to override.
    };
    /**
     * Updates and positions a tick element.
     *
     * @ignore Exclude from docs
     * @param tick         Tick element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRenderer.prototype.updateTickElement = function (tick, position, endPosition) {
        // This is a placeholder method for extending classes to override.
    };
    /**
     * Updates and positions axis bullet.
     *
     * @ignore Exclude from docs
     * @param bullet       AxisBullet element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRenderer.prototype.updateBullet = function (bullet, position, endPosition) {
        // This is a placeholder method for extending classes to override.
    };
    /**
     * Updates and positions a label element.
     *
     * @ignore Exclude from docs
     * @param label        Label element
     * @param position     Starting position
     * @param endPosition  Ending position
     */
    AxisRenderer.prototype.updateLabelElement = function (label, position, endPosition, location) {
        // This is a placeholder method for extending classes to override.
    };
    /**
     * Updates and positions the axis fill element.
     *
     * @ignore Exclude from docs
     * @param fill         Fill element
     * @param position     Starting position
     * @param endPosition  Ending position
     */
    AxisRenderer.prototype.updateFillElement = function (fill, position, endPosition) {
        fill.startPosition = position;
        fill.endPosition = endPosition;
    };
    /**
     * Updates and positions the axis line element.
     *
     * @ignore Exclude from docs
     */
    AxisRenderer.prototype.updateAxisLine = function () {
        // This is a placeholder method for extending classes to override.
    };
    /**
     * Updates and positions the base grid element.
     *
     * @ignore Exclude from docs
     */
    AxisRenderer.prototype.updateBaseGridElement = function () {
        // This is a placeholder method for extending classes to override.
    };
    /**
     * Updates and positions an axis break element.
     *
     * @ignore Exclude from docs
     * @param axisBreak Break element
     */
    AxisRenderer.prototype.updateBreakElement = function (axisBreak) {
        this.positionItem(axisBreak.startLine, axisBreak.startPoint);
        this.toggleVisibility(axisBreak.startLine, axisBreak.startPosition, 0, 1);
        this.positionItem(axisBreak.endLine, axisBreak.endPoint);
        this.toggleVisibility(axisBreak.endLine, axisBreak.endPosition, 0, 1);
    };
    Object.defineProperty(AxisRenderer.prototype, "minGridDistance", {
        /**
         * @return Min distance (px)
         */
        get: function () {
            return this.getPropertyValue("minGridDistance");
        },
        /**
         * Minimum distance in pixels between grid elements.
         *
         * Use it to control density of the grid/labels on the axis.element.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} for more info
         * @param value  Min distance (px)
         */
        set: function (value) {
            if (this.setPropertyValue("minGridDistance", value)) {
                if (this.axis) {
                    this.axis.invalidateDataItems();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "chart", {
        /**
         * @ignore Exclude from docs
         * @return Chart
         */
        get: function () {
            return this._chart.get();
        },
        /**
         * A chart, associated with the Axis.
         *
         * @ignore Exclude from docs
         * @param value  Chart
         */
        set: function (value) {
            this._chart.set(value, null);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Toggles visibility of an element, based on its current position and
     * min/max position settings.
     *
     * E.g. labels based on `minLabelPosition` and `maxLabelPosition`.
     *
     * @ignore Exclude from docs
     * @param sprite       An element to toggle
     * @param position     Elements current position
     * @param minPosition  Min position setting
     * @param maxPosition  Max position setting
     */
    AxisRenderer.prototype.toggleVisibility = function (sprite, position, minPosition, maxPosition) {
        var axis = this.axis;
        var dataItem = sprite.dataItem;
        if (dataItem && dataItem instanceof _Axis__WEBPACK_IMPORTED_MODULE_3__["AxisDataItem"]) {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](dataItem.minPosition)) {
                minPosition = dataItem.minPosition;
            }
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](dataItem.maxPosition)) {
                maxPosition = dataItem.maxPosition;
            }
        }
        var updatedStart = axis.start + (axis.end - axis.start) * (minPosition - 0.0001);
        var updatedEnd = axis.start + (axis.end - axis.start) * (maxPosition + 0.0001);
        if (!sprite.disabled) {
            if (position < updatedStart || position > updatedEnd) {
                sprite.__disabled = true;
            }
            else {
                sprite.__disabled = false;
            }
        }
    };
    /**
     * Creates visual elements for and axis break.
     *
     * @ignore Exclude from docs
     * @param axisBreak Axis break
     */
    AxisRenderer.prototype.createBreakSprites = function (axisBreak) {
        // This is a placeholder method for extending classes to override.
    };
    Object.defineProperty(AxisRenderer.prototype, "axisFills", {
        /**
         * A list of Axis' Fill elements.
         *
         * Those are fill elements that cover the space between every second set
         * of grid lines, and can be configured to create striped charts.
         *
         * Please note that these are disabled by default. To enable them, set
         * template to true.
         *
         * ```TypeScript
         * categoryAxis.renderer.axisFills.template.disabled = false;
         * ```
         * ```JavaScript
         * categoryAxis.renderer.axisFills.template.disabled = false;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "xAxes": [{
         *     // ...
         *     "renderer": {
         *       "axisFills": {
         *         "disabled": false
         *       }
         *     }
         *   }]
         * }
         * ```
         *
         * @see {@link https://www.amcharts.com/docs/v4/tutorials/alternated-axis-fills/} this tutorial for more info.
         * @return Fill elements
         */
        get: function () {
            if (!this._axisFills) {
                var fill = this.createFill(this.axis);
                this._axisFills = new _core_utils_List__WEBPACK_IMPORTED_MODULE_9__["ListTemplate"](fill);
                fill.applyOnClones = true;
                fill.events.on("enabled", this.invalidateAxisItems, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_9__["ListDisposer"](this._axisFills));
                this._disposers.push(this._axisFills.template);
            }
            return this._axisFills;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a new fill element, suitable for this Axis Renderer type.
     *
     * @return Fill element
     */
    AxisRenderer.prototype.createFill = function (axis) {
        return new _AxisFill__WEBPACK_IMPORTED_MODULE_5__["AxisFill"](axis);
    };
    Object.defineProperty(AxisRenderer.prototype, "grid", {
        /**
         * A list of Axis' Grid elements.
         *
         * @return Grid elements
         */
        get: function () {
            if (!this._grid) {
                var grid = this.createGrid();
                this._grid = new _core_utils_List__WEBPACK_IMPORTED_MODULE_9__["ListTemplate"](grid);
                grid.applyOnClones = true;
                grid.events.on("enabled", this.invalidateAxisItems, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_9__["ListDisposer"](this._grid));
                this._disposers.push(this._grid.template);
            }
            return this._grid;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a new grid element, suitable for this Axis Renderer type.
     *
     * @return Grid element
     */
    AxisRenderer.prototype.createGrid = function () {
        return new _Grid__WEBPACK_IMPORTED_MODULE_6__["Grid"]();
    };
    Object.defineProperty(AxisRenderer.prototype, "ticks", {
        /**
         * A list of Axis' Tick elements.
         *
         * Please note that these are disabled by default. To enable ticks, you'll
         * need to set `disabled` and `strokeOpacity` properties of the tick template.
         *
         * ```TypeScript
         * categoryAxis.renderer.ticks.template.disabled = false;
         * categoryAxis.renderer.ticks.template.strokeOpacty = 0.5;
         * ```
         * ```JavaScript
         * categoryAxis.renderer.ticks.template.disabled = false;
         * categoryAxis.renderer.ticks.template.strokeOpacty = 0.5;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "xAxes": [{
         *     // ...
         *     "renderer": {
         *       "ticks": {
         *         "disabled": false,
         *         "strokeOpacty": 0.5
         *       }
         *     }
         *   }]
         * }
         * ```
         *
         * @return Tick elements
         */
        get: function () {
            if (!this._ticks) {
                var tick = this.createTick();
                tick.applyOnClones = true;
                tick.isMeasured = false;
                tick.events.on("enabled", this.invalidateAxisItems, this, false);
                this._ticks = new _core_utils_List__WEBPACK_IMPORTED_MODULE_9__["ListTemplate"](tick);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_9__["ListDisposer"](this._ticks));
                this._disposers.push(this._ticks.template);
            }
            return this._ticks;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a new tick element, suitable for this Axis Renderer type.
     *
     * @return Tick element
     */
    AxisRenderer.prototype.createTick = function () {
        return new _AxisTick__WEBPACK_IMPORTED_MODULE_8__["AxisTick"]();
    };
    Object.defineProperty(AxisRenderer.prototype, "labels", {
        /**
         * A list of Axis' Label elements.
         *
         * @return Label elements
         */
        get: function () {
            if (!this._labels) {
                var label = this.createLabel();
                this._labels = new _core_utils_List__WEBPACK_IMPORTED_MODULE_9__["ListTemplate"](label);
                label.applyOnClones = true;
                label.events.on("enabled", this.invalidateAxisItems, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_9__["ListDisposer"](this._labels));
                this._disposers.push(this._labels.template);
            }
            return this._labels;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a new label element, suitable for this Axis Renderer type.
     *
     * @return Label element
     */
    AxisRenderer.prototype.createLabel = function () {
        return new _AxisLabel__WEBPACK_IMPORTED_MODULE_7__["AxisLabel"]();
    };
    Object.defineProperty(AxisRenderer.prototype, "inside", {
        /**
         * @return Labels inside?
         */
        get: function () {
            return this.getPropertyValue("inside");
        },
        /**
         * Indicates whether Axis' labels and ticks should be drawn inside Plot area.
         *
         * Does not work with all renderers, like AxisRendererRadial.
         *
         * @param value  Labels inside?
         */
        set: function (value) {
            if (this.setPropertyValue("inside", value)) {
                if (this.axis) {
                    this.axis.invalidate();
                }
            }
            if (value) {
                this.width = 0;
                this.height = 0;
            }
            else {
                this.width = undefined;
                this.height = undefined;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "opposite", {
        /**
         * @return Draw axis on opposite side?
         */
        get: function () {
            return this.getPropertyValue("opposite");
        },
        /**
         * Indicates whether Axis should be drawn on the opposite side of the plot
         * area than it would normally be drawn based on chart's settings.
         *
         * Does not work with all renderers, like [[AxisRendererRadial]] and
         * [[AxisRenderer Circular].
         *
         * @param value  Draw axis on opposite side?
         */
        set: function (value) {
            this.setPropertyValue("opposite", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "fullWidthTooltip", {
        /**
         * @return Full width tooltip?
         */
        get: function () {
            return this.getPropertyValue("fullWidthTooltip");
        },
        /**
         * Indicates if Axis tooltip should take the whole width of the axis cell.
         * (between two grid lines)
         *
         * NOTE: this setting is ignored on circular axis types.
         *
         * @param value Full width tooltip?
         */
        set: function (value) {
            this.setPropertyValue("fullWidthTooltip", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "tooltipLocation", {
        /**
         * @return Tooltip location
         */
        get: function () {
            return this.getPropertyValue("tooltipLocation");
        },
        /**
         * Location within axis cell to show tooltip on. (0-1)
         *
         * 0 - show at the start
         * 0.5 - show right in the middle
         * 1 - show at the end
         *
         * @param value Tooltip location
         */
        set: function (value) {
            this.setPropertyValue("tooltipLocation", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "tooltipLocation2", {
        /**
         * @return Tooltip location
         */
        get: function () {
            return this.getPropertyValue("tooltipLocation2");
        },
        /**
         * Location within secondary axis cell to show tooltip on. (0-1)
         *
         * 0 - show at the start
         * 0.5 - show right in the middle
         * 1 - show at the end
         *
         * @param value Tooltip location
         */
        set: function (value) {
            this.setPropertyValue("tooltipLocation2", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "cellStartLocation", {
        /**
         * @return Cell start (0-1)
         */
        get: function () {
            return this.getPropertyValue("cellStartLocation");
        },
        /**
         * Location for the cell start.
         *
         * Normally a "cell" is the whole available width in a category.
         *
         * If there are several clustered column-like series available, the whole
         * space is divided between each clustered column, or column stacks.
         *
         * `cellStartLocation` identifies where, within available space, the actual
         * cell starts.
         *
         * This, together with column series' `width` will affect actual width of
         * columns, and thus gaps between them.
         *
         * This will affect category-like axes only, like [[DateAxis]], or
         * [[CategoryAxis]].
         *
         * This is used to limit a space occupied by series like column.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.
         * @param value Cell start (0-1)
         */
        set: function (value) {
            if (this.setPropertyValue("cellStartLocation", value)) {
                if (this.axis) {
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "cellEndLocation", {
        /**
         * @return Cell end (0-1)
         */
        get: function () {
            return this.getPropertyValue("cellEndLocation");
        },
        /**
         * Location for the cell end.
         *
         * Normally a "cell" is the whole available width in a category.
         *
         * If there are several clustered column-like series available, the whole
         * space is divided between each clustered column, or column stacks.
         *
         * `cellEndLocation` identifies where, within available space, the actual
         * cell ends.
         *
         * This, together with column series' `width` will affect actual width of
         * columns, and thus gaps between them.
         *
         * This will affect category-like axes only, like [[DateAxis]], or
         * [[CategoryAxis]].
         *
         * This is used to limit a space occupied by series like column.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.
         * @param value Cell end (0-1)
         */
        set: function (value) {
            if (this.setPropertyValue("cellEndLocation", value)) {
                if (this.axis) {
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "inversed", {
        /**
         * @return Flip axis?
         */
        get: function () {
            return this.getPropertyValue("inversed");
        },
        /**
         * Indicates if the scale of the axis should be flipped.
         *
         * @param value Flip axis?
         */
        set: function (value) {
            this.setPropertyValue("inversed", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "minLabelPosition", {
        /**
         * @return Min label position (0-1)
         */
        get: function () {
            return this.getPropertyValue("minLabelPosition");
        },
        /**
         * Minimum position along the Axis, for labels.
         *
         * Labels, which have their position closer to the start of the Axis, will be
         * automatically hidden.
         *
         * E.g., setting this to 0.05 (5% of total axis length) would hide labels,
         * that would otherwise be drawn very near start of the Axis.
         *
         * This is especially usefull with `inside = true`, or if the chart hasn't
         * got any extra margins.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.
         * @param value  Min label position (0-1)
         */
        set: function (value) {
            this.setPropertyValue("minLabelPosition", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRenderer.prototype, "maxLabelPosition", {
        /**
         * @return Max label position (0-1)
         */
        get: function () {
            return this.getPropertyValue("maxLabelPosition");
        },
        /**
         * Maximum position along the Axis, for labels.
         *
         * Labels, which have their position closer to the and of the Axis, will be
         * automatically hidden.
         *
         * E.g., setting this to 0.95 (95% of total axis length) would hide labels,
         * that would otherwise be drawn very near end of the Axis.
         *
         * This is especially usefull with `inside = true`, or if the chart hasn't
         * got any extra margins.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/} for more info.
         * @param value  Max label position (0-1)
         */
        set: function (value) {
            this.setPropertyValue("maxLabelPosition", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all settings and related items from another object of the same
     * type.
     *
     * @param source  Source object
     */
    AxisRenderer.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.grid.template.copyFrom(source.grid.template);
        this.ticks.template.copyFrom(source.ticks.template);
        this.labels.template.copyFrom(source.labels.template);
        this.axisFills.template.copyFrom(source.axisFills.template);
        this.line.copyFrom(source.line);
        this.baseGrid.copyFrom(source.baseGrid);
    };
    /**
     * @ignore
     */
    AxisRenderer.prototype.toAxisPosition = function (value) {
        return value;
    };
    /**
     * Sets `visibility` property:
     *
     * * `true` - visible
     * * `false` - hidden
     *
     * @param value  true - visible, false - hidden
     * @return Current visibility
     */
    AxisRenderer.prototype.setVisibility = function (value) {
        _super.prototype.setVisibility.call(this, value);
        this.bulletsContainer.visible = value;
    };
    return AxisRenderer;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].registeredClasses["AxisRenderer"] = AxisRenderer;
//# sourceMappingURL=AxisRenderer.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererCircular.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererCircular.js ***!
  \****************************************************************************************/
/*! exports provided: AxisRendererCircular */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRendererCircular", function() { return AxisRendererCircular; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AxisRenderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisRenderer */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js");
/* harmony import */ var _AxisFillCircular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AxisFillCircular */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFillCircular.js");
/* harmony import */ var _GridCircular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./GridCircular */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/GridCircular.js");
/* harmony import */ var _AxisLabelCircular__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./AxisLabelCircular */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _AxisBullet__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./AxisBullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBullet.js");
/**
 * Module, defining Axis Renderer for circular axes.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */











/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A renderer for circular axis.
 */
var AxisRendererCircular = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisRendererCircular, _super);
    /**
     * Constructor.
     *
     * @param axis Related axis
     */
    function AxisRendererCircular() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * @ignore
         */
        _this.pixelRadiusReal = 0;
        // axis.layout = "none"; // does not trigger redraw when size changes
        _this.layout = "none";
        _this.className = "AxisRendererCircular";
        _this.isMeasured = false;
        _this.startAngle = -90;
        _this.endAngle = 270;
        _this.useChartAngles = true;
        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
        _this.isMeasured = false;
        _this.grid.template.location = 0;
        _this.labels.template.location = 0;
        _this.labels.template.radius = 15;
        _this.ticks.template.location = 0;
        _this.ticks.template.pixelPerfect = false;
        _this.tooltipLocation = 0;
        _this.line.strokeOpacity = 0;
        _this.applyTheme();
        return _this;
    }
    /**
    * @ignore
    */
    AxisRendererCircular.prototype.setAxis = function (axis) {
        var _this = this;
        _super.prototype.setAxis.call(this, axis);
        axis.isMeasured = false;
        // modify x and y so that tooltip would always be on circle
        var tooltip = axis.tooltip;
        tooltip.adapter.add("dx", function (x, target) {
            var point = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["svgPointToSprite"]({ x: target.pixelX, y: target.pixelY }, _this);
            return _this.pixelRadius * Math.cos(Math.atan2(point.y, point.x)) - point.x;
        });
        tooltip.adapter.add("dy", function (y, target) {
            var point = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["svgPointToSprite"]({ x: target.pixelX, y: target.pixelY }, _this);
            return _this.pixelRadius * Math.sin(Math.atan2(point.y, point.x)) - point.y;
        });
    };
    /**
     * Validates Axis renderer.
     *
     * @ignore Exclude from docs
     */
    AxisRendererCircular.prototype.validate = function () {
        // so that radius would be updated
        if (this.chart && this.chart.invalid) {
            this.chart.validate();
        }
        _super.prototype.validate.call(this);
    };
    Object.defineProperty(AxisRendererCircular.prototype, "axisLength", {
        /**
         * Returns actual length of the Axis, in pixels.
         *
         * @return Length (px)
         */
        get: function () {
            return 2 * Math.PI * this.pixelRadius;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRendererCircular.prototype, "radius", {
        /**
         * @return Outer radius
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * Outer radius of the axis.
         *
         * Can be absolute (px) or relative ([[Percent]]).
         *
         * @param value  Outer radius
         */
        set: function (value) {
            if (this.setPercentProperty("radius", value, false, false, 10, false)) {
                if (this.axis) {
                    this.axis.invalidate();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRendererCircular.prototype, "pixelRadius", {
        /**
         * Outer radius in pixels.
         *
         * @return Outer radius (px)
         */
        get: function () {
            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["relativeRadiusToValue"](this.radius, this.pixelRadiusReal) || 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRendererCircular.prototype, "innerRadius", {
        /**
         * @return Inner radius
         */
        get: function () {
            var chart = this.chart;
            var innerRadius = this.getPropertyValue("innerRadius");
            if (chart) {
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["hasValue"](innerRadius)) {
                    innerRadius = chart.innerRadius;
                    if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["Percent"] && chart) {
                        innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(innerRadius.value * chart.innerRadiusModifyer * 100);
                    }
                }
                else {
                    if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["Percent"] && chart) {
                        var mr = chart.mr;
                        var value = innerRadius.value;
                        value = Math.max(mr * value, mr - Math.min(chart.plotContainer.innerHeight, chart.plotContainer.innerWidth)) / mr;
                        innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(value * 100);
                    }
                }
                return innerRadius;
            }
        },
        /**
         * Inner radius of the axis.
         *
         * Can be absolute (px) or relative ([[Percent]]).
         *
         * @param value  Inner radius
         */
        set: function (value) {
            if (this.setPercentProperty("innerRadius", value, false, false, 10, false)) {
                if (this.axis) {
                    this.axis.invalidate();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRendererCircular.prototype, "useChartAngles", {
        /**
         * @return Use chart angles
         */
        get: function () {
            return this.getPropertyValue("useChartAngles");
        },
        /**
         * Specifies if axis should use its own `startAngle` and `endAngle` or
         * inherit them from relative properties from chart.
         *
         * @default false
         * @param value  Use chart's angles
         */
        set: function (value) {
            this.setPropertyValue("useChartAngles", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRendererCircular.prototype, "pixelInnerRadius", {
        /**
         * Inner radius in pixels.
         *
         * @return Inner radius (px)
         */
        get: function () {
            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["relativeRadiusToValue"](this.innerRadius, this.pixelRadiusReal) || 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts relative position on axis to point coordinates.
     *
     * @param position  Position (0-1)
     * @param position2  Position (0-1) Position on the second axis
     * @return Point
     */
    AxisRendererCircular.prototype.positionToPoint = function (position, position2) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["isNumber"](position2)) {
            position2 = 1;
        }
        var coordinate = this.positionToCoordinate(position);
        var angle = this.startAngle + (this.endAngle - this.startAngle) * coordinate / this.axisLength;
        var radius = this.pixelRadius;
        var innerRadius = this.pixelInnerRadius;
        if (this.axisRendererY) {
            var realRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](this.axisRendererY.positionToCoordinate(position2), 0, Infinity);
            var point = { x: realRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: realRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) };
            return point;
        }
        return { x: _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle) * innerRadius + (radius - innerRadius) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle) * position2, y: _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) * innerRadius + (radius - innerRadius) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) * position2 };
    };
    /**
     * Converts relative position (0-1) on axis to angle in degrees (0-360).
     *
     * @param position  Position (0-1)
     * @return Angle (0-360)
     */
    AxisRendererCircular.prototype.positionToAngle = function (position) {
        var axis = this.axis;
        var arc = (this.endAngle - this.startAngle) / (axis.end - axis.start);
        var angle;
        if (axis.renderer.inversed) {
            angle = this.startAngle + (axis.end - position) * arc;
        }
        else {
            angle = this.startAngle + (position - axis.start) * arc;
        }
        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["round"](angle, 3);
    };
    /**
     * Converts angle on axis to relative position(0-1).
     *
     * @param angle Angle in degrees
     * @return Position (0-1)
     */
    AxisRendererCircular.prototype.angleToPosition = function (angle) {
        var axis = this.axis;
        var arc = (this.endAngle - this.startAngle) / (axis.end - axis.start);
        var position;
        if (axis.renderer.inversed) {
            position = axis.end - (angle - this.startAngle) / arc;
        }
        else {
            position = (angle - this.startAngle) / arc + axis.start;
        }
        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["round"](position, 5);
    };
    /**
     * Updates and positions the axis line element.
     *
     * @ignore Exclude from docs
     */
    AxisRendererCircular.prototype.updateAxisLine = function () {
        var radius = this.pixelRadius;
        var startAngle = this.startAngle;
        var endAngle = this.endAngle;
        var arc = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["min"](360, endAngle - startAngle);
        this.line.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](startAngle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](startAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["arcTo"](startAngle, arc, radius, radius);
    };
    /**
     * Updates and positions a grid element.
     *
     * @ignore Exclude from docs
     * @param grid         Grid element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRendererCircular.prototype.updateGridElement = function (grid, position, endPosition) {
        position = position + (endPosition - position) * grid.location;
        var point = this.positionToPoint(position);
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["isNumber"](point.x) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["isNumber"](point.y) && grid.element) {
            var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["DEGREES"] * Math.atan2(point.y, point.x);
            var radius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["relativeRadiusToValue"](_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["hasValue"](grid.radius) ? grid.radius : Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100), this.pixelRadius);
            var gridInnerRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["relativeRadiusToValue"](grid.innerRadius, this.pixelRadius);
            grid.zIndex = 0;
            var innerRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["relativeRadiusToValue"](_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["isNumber"](gridInnerRadius) ? gridInnerRadius : this.innerRadius, this.pixelRadiusReal, true);
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["isNumber"](innerRadius)) {
                innerRadius = 0;
            }
            grid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) });
        }
        this.toggleVisibility(grid, position, 0, 1);
    };
    /**
     * Updates and positions a tick element.
     *
     * @ignore Exclude from docs
     * @param tick         Tick element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRendererCircular.prototype.updateTickElement = function (tick, position, endPosition) {
        position = position + (endPosition - position) * tick.location;
        var point = this.positionToPoint(position);
        if (tick.element) {
            var radius = this.pixelRadius;
            var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["DEGREES"] * Math.atan2(point.y, point.x);
            var tickLength = tick.length;
            if (tick.inside) {
                tickLength = -tickLength;
            }
            tick.zIndex = 1;
            tick.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: (radius + tickLength) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: (radius + tickLength) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) });
        }
        this.toggleVisibility(tick, position, 0, 1);
    };
    /**
     * Updates and positions axis bullet.
     *
     * @ignore Exclude from docs
     * @param bullet       AxisBullet element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRendererCircular.prototype.updateBullet = function (bullet, position, endPosition) {
        var location = 0.5;
        if (bullet instanceof _AxisBullet__WEBPACK_IMPORTED_MODULE_11__["AxisBullet"]) {
            location = bullet.location;
        }
        position = position + (endPosition - position) * location;
        var point = this.positionToPoint(position);
        var radius = this.pixelRadius;
        var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["DEGREES"] * Math.atan2(point.y, point.x);
        point = { x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) };
        this.positionItem(bullet, point);
        this.toggleVisibility(bullet, position, 0, 1);
    };
    /**
     * Updates and positions a label element.
     *
     * @ignore Exclude from docs
     * @param label        Label element
     * @param position     Starting position
     * @param endPosition  Ending position
     */
    AxisRendererCircular.prototype.updateLabelElement = function (label, position, endPosition, location) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["hasValue"](location)) {
            location = label.location;
        }
        position = position + (endPosition - position) * location;
        label.fixPosition(this.positionToAngle(position), this.pixelRadius);
        label.zIndex = 2;
        this.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);
    };
    /**
     * Checks if point is within bounds of a container.
     *
     * @ignore Exclude from docs
     * @param point Point coordinates
     * @return Fits?
     */
    AxisRendererCircular.prototype.fitsToBounds = function (point) {
        return true;
    };
    Object.defineProperty(AxisRendererCircular.prototype, "startAngle", {
        /**
         * @return Start angle
         */
        get: function () {
            return this.getPropertyValue("startAngle");
        },
        /**
         * Start angle of the axis in degrees (0-360).
         *
         * @param value  Start angle
         */
        set: function (value) {
            // do not normalize angel here!
            if (this.setPropertyValue("startAngle", value)) {
                this.invalidateAxisItems();
                if (this.axis) {
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRendererCircular.prototype, "endAngle", {
        /**
         * @return End angle
         */
        get: function () {
            return this.getPropertyValue("endAngle");
        },
        /**
         * End angle of the axis in degrees (0-360).
         *
         * @param value  End angle
         */
        set: function (value) {
            // do not normalize angel here!
            if (this.setPropertyValue("endAngle", value)) {
                this.invalidateAxisItems();
                if (this.axis) {
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * [getPositionRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param startPosition  Starting position
     * @param endPosition    End position
     * @return SVG path
     */
    AxisRendererCircular.prototype.getPositionRangePath = function (startPosition, endPosition, radius, innerRadius, cornerRadius) {
        var path = "";
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["isNumber"](startPosition) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["isNumber"](endPosition)) {
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["hasValue"](radius)) {
                radius = this.radius;
            }
            startPosition = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["max"](startPosition, this.axis.start);
            endPosition = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["min"](endPosition, this.axis.end);
            if (endPosition < startPosition) {
                endPosition = startPosition;
            }
            var pixelRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["relativeRadiusToValue"](radius, this.pixelRadius);
            var pixelInnerRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["relativeRadiusToValue"](innerRadius, this.pixelRadius, true);
            var startAngle = this.positionToAngle(startPosition);
            var endAngle = this.positionToAngle(endPosition);
            var arc = endAngle - startAngle;
            path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["arc"](startAngle, arc, pixelRadius, pixelInnerRadius, pixelRadius, cornerRadius);
        }
        return path;
    };
    /**
     * Returns a new grid element, suitable for this Axis Renderer type.
     *
     * @return Grid element
     */
    AxisRendererCircular.prototype.createGrid = function () {
        return new _GridCircular__WEBPACK_IMPORTED_MODULE_3__["GridCircular"]();
    };
    /**
     * Returns a new fill element, suitable for this Axis Renderer type.
     *
     * @return Fill element
     */
    AxisRendererCircular.prototype.createFill = function (axis) {
        return new _AxisFillCircular__WEBPACK_IMPORTED_MODULE_2__["AxisFillCircular"](axis);
    };
    /**
     * Returns a new label element, suitable for this Axis Renderer type.
     *
     * @return Label element
     */
    AxisRendererCircular.prototype.createLabel = function () {
        return new _AxisLabelCircular__WEBPACK_IMPORTED_MODULE_4__["AxisLabelCircular"]();
    };
    /**
     * Converts a point at specific coordinates to a relative position (0-1)
     * on the axis.
     *
     * @param point  Point
     * @return Position (0-1)
     */
    AxisRendererCircular.prototype.pointToPosition = function (point) {
        var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitAngleToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getAngle"](point), this.startAngle, this.endAngle);
        return this.coordinateToPosition((angle - this.startAngle) / 360 * this.axisLength);
    };
    return AxisRendererCircular;
}(_AxisRenderer__WEBPACK_IMPORTED_MODULE_1__["AxisRenderer"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["AxisRendererCircular"] = AxisRendererCircular;
//# sourceMappingURL=AxisRendererCircular.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererRadial.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererRadial.js ***!
  \**************************************************************************************/
/*! exports provided: AxisRendererRadial */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRendererRadial", function() { return AxisRendererRadial; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AxisRendererY__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisRendererY */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js");
/* harmony import */ var _CategoryAxis__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./CategoryAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js");
/* harmony import */ var _core_elements_WavedCircle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/WavedCircle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedCircle.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _AxisBullet__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./AxisBullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBullet.js");
/**
 * Module, defining Axis Renderer for radial axes.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */











/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A renderer for radial axis.
 */
var AxisRendererRadial = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisRendererRadial, _super);
    /**
     * Constructor.
     *
     * @param axis Related axis
     */
    function AxisRendererRadial() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A related chart.
         */
        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MutableValueDisposer"]();
        /**
         * @ignore
         */
        _this.pixelRadiusReal = 0;
        _this.className = "AxisRendererRadial";
        _this.isMeasured = false;
        _this.startAngle = -90;
        _this.endAngle = 270;
        _this.minGridDistance = 30;
        _this.gridType = "circles";
        _this.axisAngle = -90;
        _this.isMeasured = false;
        _this.layout = "none";
        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        _this.line.strokeOpacity = 0;
        _this.labels.template.horizontalCenter = "middle";
        _this._disposers.push(_this._chart);
        _this.applyTheme();
        return _this;
    }
    /**
     * Validates Axis renderer.
     *
     * @ignore Exclude from docs
     */
    AxisRendererRadial.prototype.validate = function () {
        // so that radius would be updated
        if (this.chart && this.chart.invalid) {
            this.chart.validate();
        }
        _super.prototype.validate.call(this);
    };
    Object.defineProperty(AxisRendererRadial.prototype, "axisLength", {
        /**
         * Returns actual length of the Axis, in pixels.
         *
         * @return Length (px)
         */
        get: function () {
            return this.pixelRadius - this.pixelInnerRadius;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRendererRadial.prototype, "radius", {
        /**
         * @return Outer radius
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * Outer radius of the axis.
         *
         * Can be absolute (px) or relative ([[Percent]]).
         *
         * @param value  Outer radius
         */
        set: function (value) {
            this.setPercentProperty("radius", value, false, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRendererRadial.prototype, "pixelRadius", {
        /**
         * Outer radius in pixels.
         *
         * @return Outer radius (px)
         */
        get: function () {
            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["relativeRadiusToValue"](this.radius, this.pixelRadiusReal) || 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRendererRadial.prototype, "innerRadius", {
        /**
         * @return Inner radius
         */
        get: function () {
            var chart = this.chart;
            var innerRadius = this.getPropertyValue("innerRadius");
            if (chart) {
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["hasValue"](innerRadius)) {
                    innerRadius = chart.innerRadius;
                    if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["Percent"] && chart) {
                        innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(innerRadius.value * chart.innerRadiusModifyer * 100);
                    }
                }
                else {
                    if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["Percent"] && chart) {
                        var mr = chart.mr;
                        var value = innerRadius.value;
                        value = Math.max(mr * value, mr - Math.min(chart.plotContainer.innerHeight, chart.plotContainer.innerWidth)) / mr;
                        innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(value * 100);
                    }
                }
            }
            return innerRadius;
        },
        /**
         * Inner radius of the axis.
         *
         * Can be absolute (px) or relative ([[Percent]]).
         *
         * @param value  Outer radius
         */
        set: function (value) {
            this.setPercentProperty("innerRadius", value, false, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRendererRadial.prototype, "pixelInnerRadius", {
        /**
         * Inner radius in pixels.
         *
         * @return Inner radius (px)
         */
        get: function () {
            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["relativeRadiusToValue"](this.innerRadius, this.pixelRadiusReal) || 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts relative position on axis to point coordinates.
     *
     * @param position  Position (0-1)
     * @param position2  Position (0-1) Position on the second axis
     * @return Point
     */
    AxisRendererRadial.prototype.positionToPoint = function (position, position2) {
        var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](this.positionToCoordinate(position), 0, Infinity);
        return { x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](this.axisAngle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](this.axisAngle) };
    };
    /**
     * Updates and positions the axis line element.
     *
     * @ignore Exclude from docs
     */
    AxisRendererRadial.prototype.updateAxisLine = function () {
        this.line.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: this.pixelInnerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](this.axisAngle), y: this.pixelInnerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](this.axisAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: this.pixelRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](this.axisAngle), y: this.pixelRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](this.axisAngle) });
        var title = this.axis.title;
        title.valign = "none";
        title.horizontalCenter = "middle";
        title.verticalCenter = "bottom";
        title.y = -this.axisLength / 2;
        var rotation = 90;
        if (this.opposite) {
            if (!this.inside) {
                rotation = -90;
            }
        }
        else {
            if (this.inside) {
                rotation = -90;
            }
        }
        title.rotation = rotation;
    };
    /**
     * Updates and positions a grid element.
     *
     * @ignore Exclude from docs
     * @param grid         Grid element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRendererRadial.prototype.updateGridElement = function (grid, position, endPosition) {
        position = position + (endPosition - position) * grid.location;
        var point = this.positionToPoint(position);
        var path;
        var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getDistance"](point);
        var startAngle = this.startAngle;
        var endAngle = this.endAngle;
        var chart = this.chart;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["isNumber"](radius) && grid.element && chart) {
            var xAxis = chart.xAxes.getIndex(0);
            var count = 0;
            var series = chart.series.getIndex(0);
            if (series) {
                count = series.dataItems.length;
            }
            // polygons are only possible if x axis is present
            // @todo: review this
            if (this.gridType == "polygons" && count > 0 && series && xAxis && xAxis instanceof _CategoryAxis__WEBPACK_IMPORTED_MODULE_2__["CategoryAxis"]) {
                var gridLocation = xAxis.renderer.grid.template.location;
                var angle = xAxis.getAngle(series.dataItems.getIndex(0), "categoryX", gridLocation);
                path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) });
                for (var i = 1; i < count; i++) {
                    angle = xAxis.getAngle(series.dataItems.getIndex(i), "categoryX", gridLocation);
                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) });
                }
                angle = xAxis.getAngle(series.dataItems.getIndex(count - 1), "categoryX", xAxis.renderer.cellEndLocation);
                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) });
            }
            else {
                path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](startAngle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](startAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["arcTo"](startAngle, endAngle - startAngle, radius, radius);
            }
            grid.path = path;
        }
        this.toggleVisibility(grid, position, 0, 1);
    };
    /**
     * Updates and positions a label element.
     *
     * @ignore Exclude from docs
     * @param label        Label element
     * @param position     Starting position
     * @param endPosition  Ending position
     */
    AxisRendererRadial.prototype.updateLabelElement = function (label, position, endPosition, location) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["hasValue"](location)) {
            location = label.location;
        }
        position = position + (endPosition - position) * location;
        var point = this.positionToPoint(position);
        this.positionItem(label, point);
        this.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);
    };
    /**
     * Updates and positions the base grid element.
     *
     * @ignore Exclude from docs
     */
    AxisRendererRadial.prototype.updateBaseGridElement = function () {
        // @todo? zero grid for radar chart, is it needed?
    };
    /**
     * Checks if point is within bounds of a container.
     *
     * @ignore Exclude from docs
     * @param point Point coordinates
     * @return Fits?
     */
    AxisRendererRadial.prototype.fitsToBounds = function (point) {
        return true;
    };
    Object.defineProperty(AxisRendererRadial.prototype, "startAngle", {
        /**
         * @return Start angle
         */
        get: function () {
            return this.getPropertyValue("startAngle");
        },
        /**
         * Start angle of the axis in degrees. (0-360)
         *
         * @param value  Start angle
         */
        set: function (value) {
            // do not normalize angle here!
            if (this.setPropertyValue("startAngle", value)) {
                this.invalidateAxisItems();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRendererRadial.prototype, "endAngle", {
        /**
         * @return End angle
         */
        get: function () {
            return this.getPropertyValue("endAngle");
        },
        /**
         * End angle of the axis in degrees. (0-360)
         *
         * @param value  End angle
         */
        set: function (value) {
            // do not normalize angel here!
            if (this.setPropertyValue("endAngle", value)) {
                this.invalidateAxisItems();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRendererRadial.prototype, "axisAngle", {
        /**
         * @return Axis angle
         */
        get: function () {
            return this.getPropertyValue("axisAngle");
            //return $math.fitToRange(this.getPropertyValue("axisAngle"), this.startAngle, this.endAngle); // no good, as less flexible
        },
        /**
         * Angle of the radial axis in degrees. (0-360)
         *
         * @param value  Axis angle
         */
        set: function (value) {
            this.setPropertyValue("axisAngle", _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["normalizeAngle"](value));
            this.invalidateAxisItems();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisRendererRadial.prototype, "gridType", {
        /**
         * Grid type
         */
        get: function () {
            var axis = this.chart.xAxes.getIndex(0);
            if (axis instanceof _CategoryAxis__WEBPACK_IMPORTED_MODULE_2__["CategoryAxis"]) {
                return this.getPropertyValue("gridType");
            }
            else {
                return "circles";
            }
        },
        // polygons grid type is only possible under these conditions: xAxis is available and it is CategoryAxis, also at least one series should be added to a chart
        /**
         * Grid type for radial axis.
         *
         * A grid on radia axis can either be perfect circles ("circles"), or
         * straight lines ("polygons").
         *
         * @default "circles"
         * @param value  Grid type
         */
        set: function (value) {
            this.setPropertyValue("gridType", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * [getPositionRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param startPosition  Starting position
     * @param endPosition    End position
     * @return SVG path
     */
    AxisRendererRadial.prototype.getPositionRangePath = function (startPosition, endPosition) {
        var pixelInnerRadius = this.pixelInnerRadius;
        var pixelRadius = this.axisLength + pixelInnerRadius;
        var innerRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](this.positionToCoordinate(startPosition), pixelInnerRadius, pixelRadius);
        var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](this.positionToCoordinate(endPosition), pixelInnerRadius, pixelRadius);
        //let angleCount: number = this.angleCount;
        var startAngle = this.startAngle;
        var endAngle = this.endAngle;
        var arc = endAngle - startAngle;
        var path;
        var chart = this.chart;
        var xAxis = chart.xAxes.getIndex(0);
        var series = chart.series.getIndex(0);
        var count = 0;
        if (series) {
            count = series.dataItems.length;
        }
        // polygons are only possible if x axis is present
        // @todo: review this
        if (this.gridType == "polygons" && count > 0 && series && xAxis && xAxis instanceof _CategoryAxis__WEBPACK_IMPORTED_MODULE_2__["CategoryAxis"]) {
            var gridLocation = xAxis.renderer.grid.template.location;
            var angle = xAxis.getAngle(series.dataItems.getIndex(0), "categoryX", gridLocation);
            path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) });
            for (var i = 1; i < count; i++) {
                angle = xAxis.getAngle(series.dataItems.getIndex(i), "categoryX", gridLocation);
                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) });
            }
            angle = xAxis.getAngle(series.dataItems.getIndex(count - 1), "categoryX", xAxis.renderer.cellEndLocation);
            path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) });
            path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) });
            for (var i = count - 1; i >= 0; i--) {
                angle = xAxis.getAngle(series.dataItems.getIndex(i), "categoryX", gridLocation);
                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) });
            }
        }
        else {
            path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["arc"](startAngle, arc, radius, innerRadius);
        }
        return path;
    };
    /**
     * Updates and positions an axis break element.
     *
     * @ignore Exclude from docs
     * @param axisBreak Break element
     */
    AxisRendererRadial.prototype.updateBreakElement = function (axisBreak) {
        // @todo: someday we might need axis break when gridType is polygons
        var startLine = axisBreak.startLine;
        var endLine = axisBreak.endLine;
        var fillShape = axisBreak.fillShape;
        var startPoint = axisBreak.startPoint;
        var endPoint = axisBreak.endPoint;
        startLine.radius = Math.abs(startPoint.y);
        endLine.radius = Math.abs(endPoint.y);
        fillShape.radius = Math.abs(endPoint.y);
        fillShape.innerRadius = Math.abs(startPoint.y);
    };
    /**
     * Creates visual elements for and axis break.
     *
     * @ignore Exclude from docs
     * @param axisBreak Axis break
     */
    AxisRendererRadial.prototype.createBreakSprites = function (axisBreak) {
        axisBreak.startLine = new _core_elements_WavedCircle__WEBPACK_IMPORTED_MODULE_3__["WavedCircle"]();
        axisBreak.endLine = new _core_elements_WavedCircle__WEBPACK_IMPORTED_MODULE_3__["WavedCircle"]();
        axisBreak.fillShape = new _core_elements_WavedCircle__WEBPACK_IMPORTED_MODULE_3__["WavedCircle"]();
    };
    /**
     * Updates some of the Axis tooltip's visual properties, related to
     * rendering of the Axis.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    AxisRendererRadial.prototype.updateTooltip = function () {
        var axis = this.axis;
        if (axis) {
            var bigNum = 4000;
            var bbx = -4000;
            var bby = -4000;
            var bbw = bigNum * 2;
            var bbh = bigNum * 2;
            var axisAngle = this.axisAngle;
            if (axisAngle < 0) {
                axisAngle += 360;
            }
            var tooltipOrientation = "vertical";
            if ((axisAngle > 45 && axisAngle < 135) || (axisAngle > 225 && axisAngle < 315)) {
                tooltipOrientation = "horizontal";
            }
            this.axis.updateTooltip(tooltipOrientation, { x: bbx, y: bby, width: bbw, height: bbh });
        }
    };
    /**
     * Updates and positions a tick element.
     *
     * @ignore Exclude from docs
     * @param tick      Tick element
     * @param position  Position
     */
    AxisRendererRadial.prototype.updateTickElement = function (tick, position, endPosition) {
        position = position + (endPosition - position) * tick.location;
        var point = this.positionToPoint(position);
        if (tick.element) {
            var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["normalizeAngle"](this.axisAngle + 90);
            if (angle / 90 != Math.round(angle / 90)) {
                tick.pixelPerfect = false;
            }
            else {
                tick.pixelPerfect = true;
            }
            var tickLength = -tick.length;
            if (tick.inside) {
                tickLength *= -1;
            }
            tick.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: tickLength * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: tickLength * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) });
        }
        this.positionItem(tick, point);
        this.toggleVisibility(tick, position, 0, 1);
    };
    /**
     * Updates and positions axis bullet.
     *
     * @ignore Exclude from docs
     * @param bullet       AxisBullet element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRendererRadial.prototype.updateBullet = function (bullet, position, endPosition) {
        var location = 0.5;
        if (bullet instanceof _AxisBullet__WEBPACK_IMPORTED_MODULE_11__["AxisBullet"]) {
            location = bullet.location;
        }
        position = position + (endPosition - position) * location;
        var point = this.positionToPoint(position);
        this.positionItem(bullet, point);
        this.toggleVisibility(bullet, position, 0, 1);
    };
    /**
     * Converts a position on the axis to a coordinate in pixels.
     *
     * @ignore Exclude from docs
     * @param position  Position (0-1)
     * @return Coordinate (px)
     */
    AxisRendererRadial.prototype.positionToCoordinate = function (position) {
        var coordinate;
        var axis = this.axis;
        var axisFullLength = axis.axisFullLength;
        var innerRadius = this.pixelInnerRadius;
        if (axis.renderer.inversed) {
            coordinate = (axis.end - position) * axisFullLength + innerRadius;
        }
        else {
            coordinate = (position - axis.start) * axisFullLength + innerRadius;
        }
        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["round"](coordinate, 1);
    };
    /**
     * Converts a point at specific coordinates to a relative position (0-1)
     * on the axis.
     *
     * @param point  Point
     * @return Position (0-1)
     */
    AxisRendererRadial.prototype.pointToPosition = function (point) {
        var coordinate = (_core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getDistance"](point) - this.pixelInnerRadius);
        return this.coordinateToPosition(coordinate);
    };
    Object.defineProperty(AxisRendererRadial.prototype, "chart", {
        /**
         * @ignore Exclude from docs
         * @return Chart
         */
        get: function () {
            return this._chart.get();
        },
        /**
         * A chart, associated with the Axis.
         *
         * @ignore Exclude from docs
         * @param value  Chart
         */
        set: function (value) {
            this._chart.set(value, null);
        },
        enumerable: true,
        configurable: true
    });
    return AxisRendererRadial;
}(_AxisRendererY__WEBPACK_IMPORTED_MODULE_1__["AxisRendererY"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_6__["registry"].registeredClasses["AxisRendererRadial"] = AxisRendererRadial;
//# sourceMappingURL=AxisRendererRadial.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js ***!
  \*********************************************************************************/
/*! exports provided: AxisRendererX */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRendererX", function() { return AxisRendererX; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AxisRenderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisRenderer */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js");
/* harmony import */ var _AxisBullet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AxisBullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBullet.js");
/* harmony import */ var _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/WavedLine */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedLine.js");
/* harmony import */ var _core_elements_WavedRectangle__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/elements/WavedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedRectangle.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Responsive */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Responsive.js");
/**
 * Module, defining Axis Renderer for vertical axes.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */











/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A renderer for horizontal axis.
 *
 * @see {@link IAxisRendererEvents} for a list of available events
 * @see {@link IAxisRendererAdapters} for a list of available Adapters
 */
var AxisRendererX = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisRendererX, _super);
    /**
     * Constructor.
     *
     * @param axis Related axis
     */
    function AxisRendererX() {
        var _this = _super.call(this) || this;
        _this.className = "AxisRendererX";
        _this.minGridDistance = 120;
        _this.opposite = false;
        _this.rotation = 0;
        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
        _this.labels.template.horizontalCenter = "middle";
        _this.applyTheme();
        return _this;
    }
    /**
    * @ignore
    */
    AxisRendererX.prototype.setAxis = function (axis) {
        _super.prototype.setAxis.call(this, axis);
        axis.layout = "vertical";
    };
    /**
     * @ignore
     */
    AxisRendererX.prototype.updateGridContainer = function () {
        var axis = this.axis;
        if (axis) {
            var gridContainer = this.gridContainer;
            gridContainer.x = axis.pixelX;
            gridContainer.width = axis.axisLength;
        }
    };
    /**
     * Called when rendered is attached to an Axis, as well as a property of
     * Axis that might affect the appearance is updated.
     *
     * E.g. `axis.opposite`, `axis.inside`, etc.
     *
     * This method is called **before** draw, so that any related setting
     * changed in this method can be changed.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    AxisRendererX.prototype.processRenderer = function () {
        _super.prototype.processRenderer.call(this);
        // can not do this in init, as axis is set later
        var axis = this.axis;
        if (axis) {
            if (!(axis.width instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["Percent"])) {
                axis.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
            }
            // @todo Is thi sneeded?
            _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["used"](this.line);
            var title = axis.title;
            title.rotation = 0;
            title.align = "center";
            if (this.opposite) {
                this.line.toFront();
                title.toBack();
            }
            else {
                title.toFront();
                this.toBack();
                this.line.toBack();
            }
        }
    };
    /**
     * Updates some of the Axis tooltip's visual properties, related to
     * rendering of the Axis.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    AxisRendererX.prototype.updateTooltip = function () {
        var axis = this.axis;
        if (axis) {
            var bigNum = 1000;
            var bbx = this.line.pixelX;
            var bby = this.line.pixelY;
            var bbw = this.axisLength;
            var bbh = bigNum;
            // top
            if (this.opposite) {
                if (!this.inside) {
                    bby = -bigNum;
                    bbh = bigNum;
                }
            }
            // bottom
            else {
                if (this.inside) {
                    bby = -bigNum;
                    bbh = bigNum;
                }
            }
            this.axis.updateTooltip("vertical", { x: bbx, y: bby, width: bbw, height: bbh });
        }
    };
    /**
     * Updates and positions a label element.
     *
     * @ignore Exclude from docs
     * @param label        Label element
     * @param position     Starting position
     * @param endPosition  Ending position
     */
    AxisRendererX.prototype.updateLabelElement = function (label, position, endPosition, location) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["hasValue"](location)) {
            location = label.location;
        }
        position = position + (endPosition - position) * location;
        var point = this.positionToPoint(position);
        label.isMeasured = !label.inside;
        var deltaY = 0;
        var verticalCenter;
        var maxHeight = this.gridContainer.maxHeight;
        if (this.opposite) {
            if (label.inside) {
                verticalCenter = "top";
                if (label.valign == "bottom") {
                    deltaY = maxHeight;
                    verticalCenter = "bottom";
                }
                if (label.valign == "middle") {
                    deltaY = maxHeight / 2;
                    verticalCenter = "middle";
                }
            }
            else {
                verticalCenter = "bottom";
            }
            point.y = deltaY;
        }
        else {
            if (label.inside) {
                verticalCenter = "bottom";
                if (label.valign == "top") {
                    deltaY = -maxHeight;
                    verticalCenter = "top";
                }
                if (label.valign == "middle") {
                    deltaY = -maxHeight / 2;
                    verticalCenter = "middle";
                }
            }
            else {
                verticalCenter = "top";
            }
            point.y += deltaY;
        }
        if (label.rotation == 0) {
            // Apply fuzzy logic to verticalCenter only if labels are not rotated
            label.verticalCenter = verticalCenter;
        }
        this.positionItem(label, point);
        this.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);
    };
    Object.defineProperty(AxisRendererX.prototype, "axisLength", {
        /**
         * Returns actual length of the Axis, in pixels.
         *
         * @return Length (px)
         */
        get: function () {
            var axis = this.axis;
            return (axis.measuredWidth - axis.pixelPaddingRight - axis.pixelPaddingLeft) || 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts relative position on axis to point coordinates.
     *
     * @param position  Position (0-1)
     * @param position2  Position (0-1) Position on the second axis
     * @return Point
     */
    AxisRendererX.prototype.positionToPoint = function (position, position2) {
        return { x: this.positionToCoordinate(position), y: 0 };
    };
    /**
     * Converts a point at specific coordinates to a relative position (0-1)
     * on the axis.
     *
     * @param point  Point
     * @return Position (0-1)
     */
    AxisRendererX.prototype.pointToPosition = function (point) {
        return this.coordinateToPosition(point.x, point.y);
    };
    /**
     * [getPositionRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param startPosition  Starting position
     * @param endPosition    End position
     * @return SVG path
     */
    AxisRendererX.prototype.getPositionRangePath = function (startPosition, endPosition) {
        var x1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](this.positionToCoordinate(startPosition), 0, this.axisLength);
        var x2 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](this.positionToCoordinate(endPosition), 0, this.axisLength);
        var w = Math.abs(x2 - x1);
        var h = this.getHeight();
        var x = Math.min(x1, x2);
        var y = 0;
        return _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["rectToPath"]({
            x: x,
            y: y,
            width: w,
            height: h
        }, true);
    };
    /**
     * Updates and positions an axis break element.
     *
     * @ignore Exclude from docs
     * @param axisBreak Break element
     */
    AxisRendererX.prototype.updateBreakElement = function (axisBreak) {
        _super.prototype.updateBreakElement.call(this, axisBreak);
        var startLine = axisBreak.startLine;
        var endLine = axisBreak.endLine;
        var fillShape = axisBreak.fillShape;
        var startPoint = axisBreak.startPoint;
        var endPoint = axisBreak.endPoint;
        var y1 = axisBreak.pixelMarginLeft;
        var y2 = this.getHeight() - axisBreak.pixelMarginTop - axisBreak.pixelMarginBottom;
        startPoint.x = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](startPoint.x, -1, this.axisLength + 1);
        endPoint.x = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](endPoint.x, -1, this.axisLength + 1);
        if (startPoint.x == endPoint.x && (startPoint.x < 0 || startPoint.x > this.axisLength)) {
            axisBreak.fillShape.__disabled = true;
        }
        else {
            axisBreak.fillShape.__disabled = false;
        }
        startLine.y = y1;
        startLine.width = 0;
        startLine.height = y2;
        endLine.y = y1;
        endLine.width = 0;
        endLine.height = y2;
        fillShape.height = y2;
        fillShape.width = Math.abs(endPoint.x - startPoint.x);
        fillShape.y = y1;
        fillShape.x = startPoint.x;
    };
    /**
     * Updates and positions a grid element.
     *
     * @ignore Exclude from docs
     * @param grid         Grid element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRendererX.prototype.updateGridElement = function (grid, position, endPosition) {
        position = position + (endPosition - position) * grid.location;
        var point = this.positionToPoint(position);
        //point.x = $utils.spritePointToSprite({x:point.x, y:0}, this, this.gridContainer).x;
        grid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: 0, y: this.getHeight() });
        this.positionItem(grid, point);
        this.toggleVisibility(grid, position, 0, 1);
    };
    /**
     * Updates and positions a tick element.
     *
     * @ignore Exclude from docs
     * @param tick         Tick element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRendererX.prototype.updateTickElement = function (tick, position, endPosition) {
        position = position + (endPosition - position) * tick.location;
        var point = this.positionToPoint(position);
        var tickLength = tick.length;
        point.y = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["spritePointToSprite"]({ x: 0, y: this.line.pixelY }, this.line.parent, this.gridContainer).y;
        if (this.opposite) {
            tickLength *= (tick.inside ? 1 : -1);
        }
        else {
            tickLength *= (tick.inside ? -1 : 1);
        }
        tick.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: 0, y: tickLength });
        this.positionItem(tick, point);
        this.toggleVisibility(tick, position, 0, 1);
    };
    /**
     * Updates and positions the axis line element.
     *
     * @ignore Exclude from docs
     */
    AxisRendererX.prototype.updateAxisLine = function () {
        this.line.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: this.axisLength, y: 0 });
    };
    /**
     * Updates and positions the base grid element.
     *
     * @ignore Exclude from docs
     */
    AxisRendererX.prototype.updateBaseGridElement = function () {
        _super.prototype.updateBaseGridElement.call(this);
        var axis = this.axis;
        var h = this.getHeight();
        var w = this.axisLength;
        var baseGrid = this.baseGrid;
        var x = axis.basePoint.x;
        if (x < -0.2 || x > w + 0.2) {
            baseGrid.hide(0);
        }
        else {
            var y = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["spritePointToSprite"]({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).y;
            baseGrid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: 0, y: h });
            baseGrid.moveTo({ x: x, y: y });
            baseGrid.show(0);
        }
    };
    /**
     * Creates visual elements for and axis break.
     *
     * @ignore Exclude from docs
     * @param axisBreak Axis break
     */
    AxisRendererX.prototype.createBreakSprites = function (axisBreak) {
        axisBreak.startLine = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_3__["WavedLine"]();
        axisBreak.endLine = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_3__["WavedLine"]();
        var wavedRectangle = new _core_elements_WavedRectangle__WEBPACK_IMPORTED_MODULE_4__["WavedRectangle"]();
        wavedRectangle.setWavedSides(false, true, false, true);
        axisBreak.fillShape = wavedRectangle;
    };
    /**
     * @ignore
     */
    AxisRendererX.prototype.toAxisPosition = function (value) {
        var inversedPosition = value;
        var axis = this.axis;
        if (axis) {
            var relativePositionSprite = axis.relativePositionSprite;
            var x = axis.pixelX;
            if (relativePositionSprite) {
                x = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["spritePointToSprite"]({ x: this.pixelX, y: 0 }, this.parent, relativePositionSprite).x;
            }
            else {
                relativePositionSprite = axis.parent;
            }
            if (relativePositionSprite) {
                var relativeX = x / relativePositionSprite.innerWidth;
                var relativeWidth = axis.axisLength / relativePositionSprite.innerWidth;
                return (inversedPosition - relativeX) / relativeWidth;
            }
        }
        return value;
    };
    /**
     * Updates and positions axis bullets.
     *
     * @ignore Exclude from docs
     * @param bullet       AxisBullet element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRendererX.prototype.updateBullet = function (bullet, position, endPosition) {
        var location = 0.5;
        if (bullet instanceof _AxisBullet__WEBPACK_IMPORTED_MODULE_2__["AxisBullet"]) {
            location = bullet.location;
        }
        position = position + (endPosition - position) * location;
        var point = this.positionToPoint(position);
        point.y = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["spritePointToSprite"]({ x: 0, y: this.line.pixelY }, this.line.parent, this.gridContainer).y;
        this.positionItem(bullet, point);
        this.toggleVisibility(bullet, position, 0, 1);
    };
    return AxisRendererX;
}(_AxisRenderer__WEBPACK_IMPORTED_MODULE_1__["AxisRenderer"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["AxisRendererX"] = AxisRendererX;
/**
 * Add default responsive rules
 */
/**
 * Put labels inside plot area.
 * Disable first and last labels.
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_11__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_11__["ResponsiveBreakpoints"].heightXS,
    state: function (target, stateId) {
        if (target instanceof AxisRendererX) {
            var state = target.states.create(stateId);
            state.properties.inside = true;
            state.properties.maxLabelPosition = 0.9;
            state.properties.minLabelPosition = 0.1;
            return state;
        }
        return null;
    }
});
/**
 * Disable labels altogather on very small charts
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_11__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_11__["ResponsiveBreakpoints"].heightXXS,
    state: function (target, stateId) {
        if (target instanceof AxisRendererX) {
            var state = target.states.create(stateId);
            state.properties.disabled = true;
            return state;
        }
        return null;
    }
});
//# sourceMappingURL=AxisRendererX.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX3D.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX3D.js ***!
  \***********************************************************************************/
/*! exports provided: AxisRendererX3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRendererX3D", function() { return AxisRendererX3D; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../axes/AxisRendererX */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Module, defining Axis Renderer for horizontal 3D axes.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Renderer for horizontal 3D axis.
 *
 * @see {@link IAxisRendererX3DEvents} for a list of available events
 * @see {@link IAxisRendererX3DAdapters} for a list of available Adapters
 */
var AxisRendererX3D = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisRendererX3D, _super);
    /**
     * Constructor.
     *
     * @param axis Related axis
     */
    function AxisRendererX3D() {
        var _this = _super.call(this) || this;
        /**
         * A related chart.
         *
         * @todo Description
         */
        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MutableValueDisposer"]();
        _this.className = "AxisRendererX3D";
        _this._disposers.push(_this._chart);
        _this.applyTheme();
        return _this;
    }
    /**
     * Updates and positions a grid element.
     *
     * @ignore Exclude from docs
     * @param grid         Grid element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRendererX3D.prototype.updateGridElement = function (grid, position, endPosition) {
        position = position + (endPosition - position) * grid.location;
        var point = this.positionToPoint(position);
        if (grid.element) {
            var dx = this.chart.dx3D || 0;
            var dy = this.chart.dy3D || 0;
            var h = this.getHeight();
            grid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: dx, y: dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: dx, y: h + dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: 0, y: h });
        }
        this.positionItem(grid, point);
        this.toggleVisibility(grid, position, 0, 1);
    };
    /**
     * Updates and positions the base grid element.
     *
     * @ignore Exclude from docs
     */
    AxisRendererX3D.prototype.updateBaseGridElement = function () {
        _super.prototype.updateBaseGridElement.call(this);
        var h = this.getHeight();
        var dx = this.chart.dx3D || 0;
        var dy = this.chart.dy3D || 0;
        this.baseGrid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: dx, y: dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: 0, y: h });
    };
    Object.defineProperty(AxisRendererX3D.prototype, "chart", {
        /**
         * @ignore Exclude from docs
         * @return Chart
         */
        get: function () {
            return this._chart.get();
        },
        /**
         * Chart, associated with the Axis.
         *
         * @ignore Exclude from docs
         * @param value Chart
         */
        set: function (chart) {
            if (chart) {
                this._chart.set(chart, chart.events.on("propertychanged", this.handle3DChanged, this, false));
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Invoked when 3D-related settings change, like depth or angle.
     *
     * @param event Event
     */
    AxisRendererX3D.prototype.handle3DChanged = function (event) {
        if (event.property == "depth" || event.property == "angle") {
            this.invalidate();
        }
    };
    return AxisRendererX3D;
}(_axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_1__["AxisRendererX"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["AxisRendererX3D"] = AxisRendererX3D;
//# sourceMappingURL=AxisRendererX3D.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js ***!
  \*********************************************************************************/
/*! exports provided: AxisRendererY */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRendererY", function() { return AxisRendererY; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AxisRenderer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisRenderer */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js");
/* harmony import */ var _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/WavedLine */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedLine.js");
/* harmony import */ var _core_elements_WavedRectangle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/WavedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/WavedRectangle.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Responsive */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Responsive.js");
/* harmony import */ var _AxisBullet__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./AxisBullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBullet.js");
/**
 * Module, defining Axis Renderer for vertical axes.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */











/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A renderer for vertical axis.
 *
 * @see {@link IAxisRendererYEvents} for a list of available events
 * @see {@link IAxisRendererYAdapters} for a list of available Adapters
 */
var AxisRendererY = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisRendererY, _super);
    /**
     * Constructor.
     *
     * @param axis Related axis
     */
    function AxisRendererY() {
        var _this = _super.call(this) || this;
        _this.className = "AxisRendererY";
        _this.minGridDistance = 40;
        _this.opposite = false;
        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        _this.labels.template.verticalCenter = "middle";
        _this.applyTheme();
        return _this;
    }
    /**
    * @ignore
    */
    AxisRendererY.prototype.setAxis = function (axis) {
        _super.prototype.setAxis.call(this, axis);
        axis.layout = "horizontal";
    };
    /**
     * @ignore
     */
    AxisRendererY.prototype.updateGridContainer = function () {
        var axis = this.axis;
        if (axis) {
            var gridContainer = this.gridContainer;
            gridContainer.y = axis.pixelY;
            gridContainer.height = axis.axisLength;
        }
    };
    /**
     * @ignore
     */
    AxisRendererY.prototype.toAxisPosition = function (value) {
        var axis = this.axis;
        if (axis) {
            var inversedPosition = 1 - value;
            var relativePositionSprite = axis.relativePositionSprite;
            var y = axis.pixelY;
            if (relativePositionSprite) {
                y = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__["spritePointToSprite"]({ x: 0, y: this.pixelY }, this.parent, relativePositionSprite).y;
            }
            else {
                relativePositionSprite = axis.parent;
            }
            if (relativePositionSprite) {
                var relativeY = y / relativePositionSprite.innerHeight;
                var relativeHeight = axis.axisLength / relativePositionSprite.innerHeight;
                return 1 - (inversedPosition - relativeY) / relativeHeight;
            }
        }
        return value;
    };
    /**
     * Called when rendered is attached to an Axis, as well as a property of
     * Axis that might affect the appearance is updated.
     *
     * E.g. `axis.opposite`, `axis.inside`, etc.
     *
     * This method is called **before** draw, so that any related setting
     * changed in this method can be changed.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    AxisRendererY.prototype.processRenderer = function () {
        _super.prototype.processRenderer.call(this);
        var axis = this.axis;
        if (axis) {
            var title = axis.title;
            title.valign = "middle";
            if (!(axis.height instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["Percent"])) {
                axis.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
            }
            if (this.opposite) {
                title.rotation = 90;
                this.line.toBack();
                title.toFront();
            }
            else {
                title.rotation = -90;
                title.toBack();
                this.line.toFront();
            }
        }
    };
    /**
     * Updates some of the Axis tooltip's visual properties, related to
     * rendering of the Axis.
     *
     * @todo Description (review)
     * @ignore Exclude from docs
     */
    AxisRendererY.prototype.updateTooltip = function () {
        var axis = this.axis;
        if (axis) {
            var bigNum = 2000;
            var bbx = 0;
            var bby = 0;
            var bbw = bigNum;
            var bbh = this.axisLength;
            // right
            if (this.opposite) {
                if (this.inside) {
                    bbx = -bigNum;
                    bbw = bigNum;
                }
            }
            // left
            else {
                if (!this.inside) {
                    bbx = -bigNum;
                    bbw = bigNum;
                }
            }
            this.axis.updateTooltip("horizontal", { x: bbx, y: bby, width: bbw, height: bbh });
        }
    };
    Object.defineProperty(AxisRendererY.prototype, "axisLength", {
        /**
         * Returns actual length of the Axis, in pixels.
         *
         * @return Length (px)
         */
        get: function () {
            var axis = this.axis;
            return (axis.measuredHeight - axis.pixelPaddingTop - axis.pixelPaddingBottom) || 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts relative position on axis to point coordinates.
     *
     * @param position  Position (0-1)
     * @param position2  Position (0-1) Position on the second axis
     * @return Point
     */
    AxisRendererY.prototype.positionToPoint = function (position, position2) {
        return { x: 0, y: this.positionToCoordinate(position) };
    };
    /**
     * Converts a point at specific coordinates to a relative position (0-1)
     * on the axis.
     *
     * @param point  Point
     * @return Position (0-1)
     */
    AxisRendererY.prototype.pointToPosition = function (point) {
        return this.coordinateToPosition(point.y, point.x);
    };
    /**
     * Converts a coordinate in pixels to a relative position. (0-1)
     *
     * @param coordinate  Coordinate (px)
     * @param coordinate2  Coordinate of a second axis, only needed for complex axes systems, like timeline (px)
     * @return Position (0-1)
     */
    AxisRendererY.prototype.coordinateToPosition = function (coordinate, coordinate2) {
        var position;
        var axis = this.axis;
        var axisFullLength = axis.axisFullLength;
        if (axis.renderer.inversed) {
            position = (1 - axis.start) - coordinate / axisFullLength;
        }
        else {
            position = coordinate / axisFullLength + (1 - axis.end);
        }
        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](position, 5);
    };
    /**
     * [getPositionRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param startPosition  Starting position
     * @param endPosition    End position
     * @return SVG path
     */
    AxisRendererY.prototype.getPositionRangePath = function (startPosition, endPosition) {
        var y1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](this.positionToCoordinate(startPosition), 0, this.axisLength);
        var y2 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](this.positionToCoordinate(endPosition), 0, this.axisLength);
        var h = Math.abs(y2 - y1);
        var w = this.getWidth();
        var y = Math.min(y1, y2);
        var x = 0;
        return _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["rectToPath"]({
            x: x,
            y: y,
            width: w,
            height: h
        }, true);
    };
    /**
     * Updates and positions a grid element.
     *
     * @ignore Exclude from docs
     * @param grid         Grid element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRendererY.prototype.updateGridElement = function (grid, position, endPosition) {
        position = position + (endPosition - position) * grid.location;
        var point = this.positionToPoint(position);
        //	point.y = $utils.spritePointToSprite({ x: 0, y: point.y }, this, this.gridContainer).y;
        grid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: this.getWidth(), y: 0 });
        this.positionItem(grid, point);
        this.toggleVisibility(grid, position, 0, 1);
    };
    /**
     * Updates and positions a tick element.
     *
     * @ignore Exclude from docs
     * @param tick         Tick element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRendererY.prototype.updateTickElement = function (tick, position, endPosition) {
        position = position + (endPosition - position) * tick.location;
        var point = this.positionToPoint(position);
        var tickLength = tick.length;
        try {
            _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__["used"](this.axis.title.measuredWidth);
        }
        catch (_a) {
            // void
        }
        point.x = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__["spritePointToSprite"]({ x: this.line.pixelX, y: 0 }, this.line.parent, this.gridContainer).x;
        if (!this.opposite) {
            tickLength *= (tick.inside ? 1 : -1);
        }
        else {
            tickLength *= (tick.inside ? -1 : 1);
        }
        tick.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: tickLength, y: 0 });
        this.positionItem(tick, point);
        this.toggleVisibility(tick, position, 0, 1);
    };
    /**
     * Updates and positions the axis line element.
     *
     * @ignore Exclude from docs
     */
    AxisRendererY.prototype.updateAxisLine = function () {
        this.line.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: 0, y: this.axisLength });
    };
    /**
     * Updates and positions the base grid element.
     *
     * @ignore Exclude from docs
     */
    AxisRendererY.prototype.updateBaseGridElement = function () {
        _super.prototype.updateBaseGridElement.call(this);
        var axis = this.axis;
        var w = this.getWidth();
        var h = this.axisLength;
        var y = axis.basePoint.y;
        var baseGrid = this.baseGrid;
        if (y < -0.2 || y > h + 0.2) {
            baseGrid.hide(0);
        }
        else {
            var x = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__["spritePointToSprite"]({ x: 0, y: 0 }, this.gridContainer, baseGrid.parent).x;
            baseGrid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_7__["lineTo"]({ x: w, y: 0 });
            baseGrid.moveTo({ x: x, y: y });
            baseGrid.show(0);
        }
    };
    /**
     * Updates and positions a label element.
     *
     * @ignore Exclude from docs
     * @param label        Label element
     * @param position     Starting position
     * @param endPosition  Ending position
     */
    AxisRendererY.prototype.updateLabelElement = function (label, position, endPosition, location) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](location)) {
            location = label.location;
        }
        position = position + (endPosition - position) * location;
        label.isMeasured = !label.inside;
        var point = this.positionToPoint(position);
        var horizontalCenter;
        var deltaX = 0;
        var maxWidth = this.gridContainer.maxWidth;
        if (this.opposite) {
            if (label.inside) {
                horizontalCenter = "right";
                if (label.align == "left") {
                    deltaX = -maxWidth;
                    horizontalCenter = "left";
                }
                if (label.align == "center") {
                    deltaX = -maxWidth / 2;
                    horizontalCenter = "middle";
                }
            }
            else {
                horizontalCenter = "left";
            }
            point.x = 0 + deltaX;
        }
        else {
            if (label.inside) {
                horizontalCenter = "left";
                if (label.align == "right") {
                    deltaX = maxWidth;
                    horizontalCenter = "right";
                }
                if (label.align == "center") {
                    deltaX = maxWidth / 2;
                    horizontalCenter = "middle";
                }
            }
            else {
                horizontalCenter = "right";
            }
            point.x = this.measuredWidth + deltaX;
        }
        if (label.rotation == 0) {
            // Apply fuzzy logic to verticalCenter only if labels are not rotated
            label.horizontalCenter = horizontalCenter;
        }
        this.positionItem(label, point);
        this.toggleVisibility(label, position, this.minLabelPosition, this.maxLabelPosition);
    };
    /**
     * Updates and positions an axis break element.
     *
     * @ignore Exclude from docs
     * @param axisBreak Break element
     */
    AxisRendererY.prototype.updateBreakElement = function (axisBreak) {
        _super.prototype.updateBreakElement.call(this, axisBreak);
        var startLine = axisBreak.startLine;
        var endLine = axisBreak.endLine;
        var fillShape = axisBreak.fillShape;
        var startPoint = axisBreak.startPoint;
        var endPoint = axisBreak.endPoint;
        var x1 = axisBreak.pixelMarginLeft;
        var x2 = this.getWidth() - axisBreak.pixelMarginLeft - axisBreak.pixelMarginRight;
        startPoint.y = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](startPoint.y, -1, this.axisLength + 1);
        endPoint.y = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](endPoint.y, -1, this.axisLength + 1);
        if (startPoint.y == endPoint.y && (startPoint.y < 0 || startPoint.y > this.axisLength)) {
            axisBreak.fillShape.__disabled = true;
        }
        else {
            axisBreak.fillShape.__disabled = false;
        }
        var w = Math.abs(x2 - x1);
        startLine.x = x1;
        startLine.height = 0;
        startLine.width = w;
        endLine.x = x1;
        endLine.height = 0;
        endLine.width = w;
        fillShape.width = w;
        fillShape.height = Math.abs(endPoint.y - startPoint.y);
        fillShape.x = x1;
        fillShape.y = endPoint.y;
    };
    /**
     * Creates visual elements for and axis break.
     *
     * @ignore Exclude from docs
     * @param axisBreak Axis break
     */
    AxisRendererY.prototype.createBreakSprites = function (axisBreak) {
        axisBreak.startLine = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_2__["WavedLine"]();
        axisBreak.endLine = new _core_elements_WavedLine__WEBPACK_IMPORTED_MODULE_2__["WavedLine"]();
        var wavedRectangle = new _core_elements_WavedRectangle__WEBPACK_IMPORTED_MODULE_3__["WavedRectangle"]();
        wavedRectangle.setWavedSides(true, false, true, false);
        axisBreak.fillShape = wavedRectangle;
    };
    /**
     * Converts a position on the axis to a coordinate in pixels.
     *
     * @ignore Exclude from docs
     * @param position  Position (0-1)
     * @return Coordinate (px)
     */
    AxisRendererY.prototype.positionToCoordinate = function (position) {
        var coordinate;
        var axis = this.axis;
        var axisFullLength = axis.axisFullLength;
        if (!axis.renderer.inversed) {
            coordinate = (axis.end - position) * axisFullLength;
        }
        else {
            coordinate = (position - axis.start) * axisFullLength;
        }
        return coordinate;
    };
    /**
     * Updates and positions axis bullets.
     *
     * @ignore Exclude from docs
     * @param bullet       AxisBullet element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRendererY.prototype.updateBullet = function (bullet, position, endPosition) {
        var location = 0.5;
        if (bullet instanceof _AxisBullet__WEBPACK_IMPORTED_MODULE_11__["AxisBullet"]) {
            location = bullet.location;
        }
        position = position + (endPosition - position) * location;
        var point = this.positionToPoint(position);
        point.x = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__["spritePointToSprite"]({ x: this.line.pixelX, y: 0 }, this.line.parent, this.gridContainer).x;
        this.positionItem(bullet, point);
        this.toggleVisibility(bullet, position, 0, 1);
    };
    return AxisRendererY;
}(_AxisRenderer__WEBPACK_IMPORTED_MODULE_1__["AxisRenderer"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["AxisRendererY"] = AxisRendererY;
/**
 * Add default responsive rules
 */
/**
 * Put labels inside plot area.
 * Disable first and last labels.
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_10__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_10__["ResponsiveBreakpoints"].widthS,
    state: function (target, stateId) {
        if (target instanceof AxisRendererY) {
            var state = target.states.create(stateId);
            state.properties.inside = true;
            state.properties.maxLabelPosition = 0.9;
            state.properties.minLabelPosition = 0.1;
            return state;
        }
        return null;
    }
});
/**
 * Disable labels altogather on very small charts
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_10__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_10__["ResponsiveBreakpoints"].widthXS,
    state: function (target, stateId) {
        if (target instanceof AxisRendererY) {
            var state = target.states.create(stateId);
            state.properties.disabled = true;
            return state;
        }
        return null;
    }
});
//# sourceMappingURL=AxisRendererY.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY3D.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY3D.js ***!
  \***********************************************************************************/
/*! exports provided: AxisRendererY3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisRendererY3D", function() { return AxisRendererY3D; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../axes/AxisRendererY */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Module, defining Axis Renderer for vertical 3D axes.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Renderer for vertical 3D axis.
 *
 * @see {@link IAxisRendererY3DEvents} for a list of available events
 * @see {@link IAxisRendererY3DAdapters} for a list of available Adapters
 */
var AxisRendererY3D = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisRendererY3D, _super);
    /**
     * Constructor.
     *
     * @param axis Related axis
     */
    function AxisRendererY3D() {
        var _this = _super.call(this) || this;
        /**
         * A related chart.
         *
         * @todo Description
         */
        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MutableValueDisposer"]();
        _this.className = "AxisRendererY3D";
        _this._disposers.push(_this._chart);
        _this.applyTheme();
        return _this;
    }
    /**
     * Updates and positions a grid element.
     *
     * @ignore Exclude from docs
     * @param grid         Grid element
     * @param position     Starting position
     * @param endPosition  End position
     */
    AxisRendererY3D.prototype.updateGridElement = function (grid, position, endPosition) {
        position = position + (endPosition - position) * grid.location;
        var point = this.positionToPoint(position);
        if (grid.element) {
            var dx = this.chart.dx3D || 0;
            var dy = this.chart.dy3D || 0;
            var w = this.getWidth();
            grid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"]({ x: dx, y: dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"]({ x: w + dx, y: dy });
        }
        this.positionItem(grid, point);
        this.toggleVisibility(grid, position, 0, 1);
    };
    /**
     * Updates and positions the base grid element.
     *
     * @ignore Exclude from docs
     */
    AxisRendererY3D.prototype.updateBaseGridElement = function () {
        _super.prototype.updateBaseGridElement.call(this);
        var dx = this.chart.dx3D || 0;
        var dy = this.chart.dy3D || 0;
        var w = this.getWidth();
        this.baseGrid.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"]({ x: 0, y: 0 })
            + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"]({ x: w, y: 0 })
            + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"]({ x: w + dx, y: dy });
    };
    Object.defineProperty(AxisRendererY3D.prototype, "chart", {
        /**
         * @ignore Exclude from docs
         * @return Chart
         */
        get: function () {
            return this._chart.get();
        },
        /**
         * Chart, associated with the Axis.
         *
         * @ignore Exclude from docs
         * @param value  Chart
         */
        set: function (chart) {
            if (chart) {
                this._chart.set(chart, chart.events.on("propertychanged", this.handle3DChanged, this, false));
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Invoked when 3D-related settings change, like depth or angle.
     *
     * @param event Event
     */
    AxisRendererY3D.prototype.handle3DChanged = function (event) {
        if (event.property == "depth" || event.property == "angle") {
            this.invalidate();
        }
    };
    return AxisRendererY3D;
}(_axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_1__["AxisRendererY"]));

//# sourceMappingURL=AxisRendererY3D.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisTick.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisTick.js ***!
  \****************************************************************************/
/*! exports provided: AxisTick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AxisTick", function() { return AxisTick; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _elements_Tick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../elements/Tick */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Axis Tick module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws an axis tick
 * @see {@link IAxisTickEvents} for a list of available events
 * @see {@link IAxisTickAdapters} for a list of available Adapters
 */
var AxisTick = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AxisTick, _super);
    function AxisTick() {
        var _this = _super.call(this) || this;
        _this.className = "AxisTick";
        _this.element = _this.paper.add("path");
        _this.location = 0.5;
        _this.above = false;
        _this.isMeasured = false;
        _this.pixelPerfect = true;
        _this.strokeOpacity = 0;
        _this.length = 5;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(AxisTick.prototype, "location", {
        /**
         * @return Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("location");
        },
        /**
         * Relative location of the tick. (0-1)
         *
         * @param value  Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("location", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisTick.prototype, "inside", {
        /**
         * Returns if label is set to be drawn inside axis.
         *
         * @return Inside?
         */
        get: function () {
            return this.getPropertyValue("inside");
        },
        /**
         * Sets if tick should be drawn inside axis.
         *
         * @param value  Inside?
         */
        set: function (value) {
            this.setPropertyValue("inside", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(AxisTick.prototype, "above", {
        /**
         * @return Draw above series?
         */
        get: function () {
            return this.getPropertyValue("above");
        },
        /**
         * Normally tick goes below series. Set this to `true` to go above.
         *
         * @default false
         * @since 4.5.9
         * @param  value  Draw above series?
         */
        set: function (value) {
            this.setPropertyValue("above", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    AxisTick.prototype.setDisabled = function (value) {
        var changed = _super.prototype.setDisabled.call(this, value);
        if (this.axis) {
            this.axis.invalidateDataItems();
        }
        return changed;
    };
    return AxisTick;
}(_elements_Tick__WEBPACK_IMPORTED_MODULE_1__["Tick"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["AxisTick"] = AxisTick;
//# sourceMappingURL=AxisTick.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js ***!
  \********************************************************************************/
/*! exports provided: CategoryAxisDataItem, CategoryAxis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CategoryAxisDataItem", function() { return CategoryAxisDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CategoryAxis", function() { return CategoryAxis; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Axis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js");
/* harmony import */ var _AxisRendererX__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AxisRendererX */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js");
/* harmony import */ var _AxisRendererY__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./AxisRendererY */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _CategoryAxisBreak__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./CategoryAxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxisBreak.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/**
 * Category axis module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[CategoryAxis]].
 *
 * @see {@link DataItem}
 */
var CategoryAxisDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CategoryAxisDataItem, _super);
    /**
     * Constructor
     */
    function CategoryAxisDataItem() {
        var _this = _super.call(this) || this;
        _this.seriesDataItems = {};
        _this.className = "CategoryAxisDataItem";
        _this.text = "{category}";
        _this.locations.category = 0;
        _this.locations.endCategory = 1;
        _this.deltaPosition = 0;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(CategoryAxisDataItem.prototype, "category", {
        /**
         * @return Category
         */
        get: function () {
            if (this._adapterO) {
                if (this._adapterO.isEnabled("category")) {
                    return this._adapterO.apply("category", this.properties.category);
                }
            }
            return this.properties.category;
        },
        /**
         * Category.
         *
         * @param value  Category
         */
        set: function (value) {
            var oldCategory = this.properties.category;
            this.setProperty("category", value);
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](oldCategory) && oldCategory != value) {
                if (this.component) {
                    this.component.validateDataElement(this);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryAxisDataItem.prototype, "endCategory", {
        /**
         * @return End category
         */
        get: function () {
            return this.properties.endCategory;
        },
        /**
         * End category.
         *
         * Used for items that span several categories, like [[CategoryAxisBreak]].
         *
         * @param value  End category
         */
        set: function (value) {
            this.setProperty("endCategory", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryAxisDataItem.prototype, "deltaPosition", {
        get: function () {
            return this.properties.deltaCoordinate;
        },
        set: function (value) {
            if (value != this.properties.deltaCoordinate) {
                this.setProperty("deltaCoordinate", value);
                if (this.component) {
                    this.component.invalidateDataItems();
                    this.component.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    return CategoryAxisDataItem;
}(_Axis__WEBPACK_IMPORTED_MODULE_1__["AxisDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to create a category-based axis for the chart.
 *
 * ```TypeScript
 * // Create the axis
 * let xAxis = chart.xAxes.push(new am4charts.CategoryAxis());
 *
 * // Set settings
 * xAxis.title.text = "Clients";
 * ```
 * ```JavaScript
 * // Create the axis
 * var valueAxis = chart.xAxes.push(new am4charts.CategoryAxis());
 *
 * // Set settings
 * valueAxis.title.text = "Clients";
 * ```
 * ```JSON
 * "xAxes": [{
 *   "type": "CategoryAxis",
 *   "title": {
 *     "text": "Clients"
 *   }
 * }]
 * ```
 *
 * @see {@link ICategoryAxisEvents} for a list of available Events
 * @see {@link ICategoryAxisAdapters} for a list of available Adapters
 * @important
 */
var CategoryAxis = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CategoryAxis, _super);
    /**
     * Constructor
     */
    function CategoryAxis() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A collection that holds Axis' data items sorted by each category.
         */
        _this.dataItemsByCategory = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__["Dictionary"]();
        _this.className = "CategoryAxis";
        // Set field name
        _this.axisFieldName = "category";
        _this._lastDataItem = _this.createDataItem();
        _this._lastDataItem.component = _this;
        _this._disposers.push(_this._lastDataItem);
        // Apply theme
        _this.applyTheme();
        var dataItemsByCategory = _this.dataItemsByCategory;
        _this.addDisposer(_this.mainDataSet.events.on("removed", function (event) {
            dataItemsByCategory.removeKey(event.oldValue.category);
        }));
        return _this;
    }
    /**
     * Returns a new/empty [[DataItem]] of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    CategoryAxis.prototype.createDataItem = function () {
        return new CategoryAxisDataItem();
    };
    /**
     * Returns a new/empty [[AxisBreak]] of the appropriate type.
     *
     * @return Axis break
     */
    CategoryAxis.prototype.createAxisBreak = function () {
        return new _CategoryAxisBreak__WEBPACK_IMPORTED_MODULE_6__["CategoryAxisBreak"]();
    };
    /**
     * Processes a related series' data item.
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param dataItem  Data item
     */
    CategoryAxis.prototype.processSeriesDataItem = function (dataItem, axisLetter) {
        _super.prototype.processSeriesDataItem.call(this, dataItem, axisLetter);
        var category = dataItem["category" + this.axisLetter];
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](category)) {
            var categoryAxisDataItem = this.dataItemsByCategory.getKey(category);
            if (categoryAxisDataItem) {
                var seriesId = dataItem.component.uid;
                var seriesDataItems = categoryAxisDataItem.seriesDataItems[seriesId];
                if (!seriesDataItems) {
                    seriesDataItems = [];
                    categoryAxisDataItem.seriesDataItems[seriesId] = seriesDataItems;
                }
                seriesDataItems.push(dataItem);
            }
        }
        else {
            dataItem.component.dataItems.remove(dataItem);
        }
    };
    /**
     * Validates the data range.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     */
    CategoryAxis.prototype.validateDataRange = function () {
        var _this = this;
        _super.prototype.validateDataRange.call(this);
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_9__["each"](this._series.iterator(), function (series) {
            if ((series.xAxis instanceof CategoryAxis) && (series.yAxis instanceof CategoryAxis)) {
                series.invalidateDataRange();
            }
            else {
                var startIndex = _this.positionToIndex(_this.start);
                var endIndex = _this.positionToIndex(_this.end);
                if (endIndex >= _this.dataItems.length) {
                    endIndex--;
                }
                var seriesId = series.uid;
                var minIndex = void 0;
                var maxIndex = void 0;
                for (var i = startIndex; i <= endIndex; i++) {
                    var axisDataItem = _this.dataItems.getIndex(i);
                    if (axisDataItem) {
                        var seriesDataItems = axisDataItem.seriesDataItems[seriesId];
                        if (seriesDataItems) {
                            for (var i_1 = 0; i_1 < seriesDataItems.length; i_1++) {
                                var seriesDataItem = seriesDataItems[i_1];
                                if (seriesDataItem) {
                                    var index = seriesDataItem.index;
                                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](minIndex) || index < minIndex) {
                                        minIndex = index;
                                    }
                                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](maxIndex) || index > maxIndex) {
                                        maxIndex = index;
                                    }
                                }
                            }
                        }
                    }
                }
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](minIndex)) {
                    series.startIndex = minIndex;
                }
                else {
                    series.start = _this.start;
                }
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](maxIndex)) {
                    series.endIndex = maxIndex + 1;
                }
                else {
                    series.end = _this.end;
                }
                // range might not change, but axis breaks might.
                if (_this._axisBreaks && _this._axisBreaks.length > 0) {
                    series.invalidateDataRange();
                }
            }
        });
    };
    /**
     * Validates the whole axis. Causes it to redraw.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     */
    CategoryAxis.prototype.validate = function () {
        var _this = this;
        _super.prototype.validate.call(this);
        var dataCount = this.dataItems.length;
        var startIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](Math.floor(this.start * dataCount - 1), 0, dataCount);
        var endIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](Math.ceil(this.end * dataCount), 0, dataCount);
        if (this.renderer.invalid) {
            this.renderer.validate();
        }
        // find frequency at which we'll show items
        var maxCount = this.renderer.axisLength / Math.max(this.renderer.minGridDistance, 1 / Number.MAX_SAFE_INTEGER);
        var frequency = Math.min(this.dataItems.length, Math.ceil((endIndex - startIndex) / maxCount));
        this._startIndex = Math.floor(startIndex / frequency) * frequency;
        this._endIndex = Math.ceil(this.end * dataCount);
        this.fixAxisBreaks();
        if (this._startIndex == this._endIndex) {
            this._endIndex++;
        }
        this._frequency = frequency;
        if (this.axisLength <= 0) {
            return;
        }
        this.maxZoomFactor = this.dataItems.length;
        if (this.dataItems.length <= 0) {
            this.maxZoomFactor = 1;
        }
        this.resetIterators();
        // it's important to use protected variables here, as getters will return 0 - length
        // TODO use iterator instead
        // @ todo: not solved cat axis item fading
        startIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["max"](0, this._startIndex - this._frequency);
        endIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["min"](this.dataItems.length, this._endIndex + this._frequency);
        var itemIndex = 0;
        for (var i = 0; i < startIndex; i++) {
            var dataItem = this.dataItems.getIndex(i);
            dataItem.__disabled = true;
        }
        for (var i = endIndex, len = this.dataItems.length; i < len; i++) {
            var dataItem = this.dataItems.getIndex(i);
            dataItem.__disabled = true;
        }
        for (var i = startIndex; i < endIndex; i++) {
            if (i < this.dataItems.length) {
                var dataItem = this.dataItems.getIndex(i);
                if (i / this._frequency == Math.round(i / this._frequency)) {
                    var axisBreak = this.isInBreak(i);
                    if (!axisBreak) {
                        this.appendDataItem(dataItem);
                        this.validateDataElement(dataItem, itemIndex);
                    }
                    itemIndex++;
                }
                else {
                    //previously we disabled all before, but this is better for cpu
                    //this.validateDataElement(dataItem, itemIndex); // helps to solve shrinking // not good - creates all items
                    dataItem.__disabled = true;
                }
            }
        }
        this.appendDataItem(this._lastDataItem);
        this.validateDataElement(this._lastDataItem, itemIndex + 1, this.dataItems.length);
        if (this._axisBreaks) {
            var axisBreaks = this._axisBreaks;
            axisBreaks.each(function (axisBreak) {
                var adjustedStartValue = axisBreak.adjustedStartValue;
                var adjustedEndValue = axisBreak.adjustedEndValue;
                if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["intersect"]({ start: adjustedStartValue, end: adjustedEndValue }, { start: _this._startIndex, end: _this._endIndex })) {
                    for (var b = adjustedStartValue; b <= adjustedEndValue; b++) {
                        var dataItem = _this.dataItems.getIndex(b);
                        dataItem.__disabled = true;
                    }
                    var frequency_1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](Math.ceil(_this._frequency / axisBreak.breakSize), 1, adjustedEndValue - adjustedStartValue);
                    var itemIndex_1 = 0;
                    if (axisBreak.breakSize > 0) {
                        // TODO use iterator instead
                        for (var b = adjustedStartValue; b <= adjustedEndValue; b = b + frequency_1) {
                            var dataItem = _this.dataItems.getIndex(b);
                            dataItem.__disabled = false;
                            _this.appendDataItem(dataItem);
                            _this.validateDataElement(dataItem, itemIndex_1);
                            itemIndex_1++;
                        }
                    }
                }
            });
        }
        this.validateBreaks();
        this.validateAxisRanges();
        this.ghostLabel.invalidate(); // solves font issue
        this.renderer.invalidateLayout();
    };
    /**
     * [validateDataElement description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param dataItem   [description]
     * @param itemIndex  [description]
     */
    CategoryAxis.prototype.validateDataElement = function (dataItem, itemIndex, index) {
        _super.prototype.validateDataElement.call(this, dataItem);
        dataItem.itemIndex = this._axisItemCount;
        this._axisItemCount++;
        //dataItem.__disabled = false;
        var renderer = this.renderer;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](index)) {
            index = this.categoryToIndex(dataItem.category);
        }
        var endIndex = this.categoryToIndex(dataItem.endCategory);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](endIndex)) {
            endIndex = index;
        }
        var position = this.indexToPosition(index, dataItem.locations.category);
        var endPosition = this.indexToPosition(endIndex, dataItem.locations.endCategory);
        dataItem.position = position;
        var fillEndIndex;
        var fillPosition;
        var fillEndPosition;
        if (dataItem.isRange) {
            fillEndIndex = endIndex;
            fillPosition = this.indexToPosition(index, dataItem.locations.category);
            fillEndPosition = this.indexToPosition(fillEndIndex, dataItem.locations.endCategory);
        }
        dataItem.point = renderer.positionToPoint(position);
        var tick = dataItem.tick;
        if (tick && !tick.disabled) {
            renderer.updateTickElement(tick, position, endPosition);
        }
        var grid = dataItem.grid;
        if (grid && !grid.disabled) {
            renderer.updateGridElement(grid, position, endPosition);
        }
        var label = dataItem.label;
        if (label && !label.disabled) {
            // theorethically this might result problems if category text changes, the range text won't change. But otherwise range.label.text = "custom text" won't work, which is not intuitive.
            if (!dataItem.isRange || label.text == undefined) {
                dataItem.text = dataItem.text;
            }
            renderer.updateLabelElement(label, position, endPosition);
            if ((renderer instanceof _AxisRendererY__WEBPACK_IMPORTED_MODULE_3__["AxisRendererY"] && dataItem.label.measuredWidth > this.ghostLabel.measuredWidth) || (renderer instanceof _AxisRendererX__WEBPACK_IMPORTED_MODULE_2__["AxisRendererX"] && dataItem.label.measuredHeight > this.ghostLabel.measuredHeight)) {
                if (dataItem.label.html) {
                    this.ghostLabel.html = dataItem.label.currentText;
                }
                else {
                    this.ghostLabel.text = dataItem.label.currentText;
                }
            }
        }
        var fill = dataItem.axisFill;
        if (fill && !fill.disabled) {
            if (!dataItem.isRange) {
                fillEndIndex = index + this._frequency;
                fillPosition = this.indexToPosition(index, fill.location);
                fillEndPosition = this.indexToPosition(fillEndIndex, fill.location);
            }
            renderer.updateFillElement(fill, fillPosition, fillEndPosition);
            if (!dataItem.isRange) {
                this.fillRule(dataItem, itemIndex);
            }
        }
        if (dataItem.bullet) {
            renderer.updateBullet(dataItem.bullet, position, endPosition);
        }
        var mask = dataItem.mask;
        if (mask) {
            renderer.updateFillElement(mask, fillPosition, fillEndPosition);
        }
    };
    /**
     * @ignore
     */
    CategoryAxis.prototype.disposeData = function () {
        this.dataItemsByCategory.clear();
        _super.prototype.disposeData.call(this);
    };
    /**
     * Processes the axis data item.
     *
     * @ignore Exclude from docs
     * @param dataItem     Data item
     * @param dataContext  The raw data that corresponds to this data item
     */
    CategoryAxis.prototype.processDataItem = function (dataItem, dataContext) {
        if (dataItem) {
            // creat a collection for fast access
            _super.prototype.processDataItem.call(this, dataItem, dataContext);
            // check if such category already exists
            //let existingDataItem: CategoryAxisDataItem = this.dataItemsByCategory.getKey(dataItem.category);
            //if (existingDataItem && existingDataItem != dataItem) {
            //	this.dataItems.remove(existingDataItem);
            //}
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](dataItem.category)) {
                this.dataItemsByCategory.setKey(dataItem.category, dataItem);
            }
        }
    };
    CategoryAxis.prototype.getDataItem = function (dataContext) {
        var category = (dataContext[this.dataFields.category]);
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](category)) {
            var dataItem = this.dataItemsByCategory.getKey(category);
            if (dataItem) {
                return dataItem;
            }
            else {
                return this.dataItems.create();
            }
        }
    };
    /**
     * Converts a category index to an actual screen coordinate on the axis.
     *
     * `location` identifies relative location within category. 0 - beginning,
     * 0.5 - middle, 1 - end, and anything inbetween.
     *
     * @param index     Index
     * @param location  Location (0-1)
     * @return Position (px)
     */
    CategoryAxis.prototype.indexToPosition = function (index, location) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](location)) {
            location = 0.5;
        }
        var startIndex = this.startIndex;
        var endIndex = this.endIndex;
        var difference = this.adjustDifference(startIndex, endIndex);
        var startLocation = this.startLocation;
        var endLocation = this.endLocation;
        difference -= startLocation;
        difference -= (1 - endLocation);
        if (this._axisBreaks) {
            var axisBreaks = this._axisBreaks;
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_9__["eachContinue"](axisBreaks.iterator(), function (axisBreak) {
                var breakStartIndex = axisBreak.adjustedStartValue;
                var breakEndIndex = axisBreak.adjustedEndValue;
                if (index < startIndex || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](breakStartIndex) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](breakEndIndex)) {
                    return false;
                }
                if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["intersect"]({ start: breakStartIndex, end: breakEndIndex }, { start: startIndex, end: endIndex })) {
                    breakStartIndex = Math.max(startIndex, breakStartIndex);
                    breakEndIndex = Math.min(endIndex, breakEndIndex);
                    var breakSize = axisBreak.breakSize;
                    // value to the right of break end
                    if (index > breakEndIndex) {
                        startIndex += (breakEndIndex - breakStartIndex) * (1 - breakSize);
                    }
                    // value to the left of break start
                    else if (index < breakStartIndex) {
                    }
                    // value within break
                    else {
                        index = breakStartIndex + (index - breakStartIndex) * breakSize;
                    }
                }
                return true;
            });
        }
        var deltaPosition = 0;
        var dataItem = this.dataItems.getIndex(index);
        if (dataItem) {
            deltaPosition = dataItem.deltaPosition;
        }
        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["round"](deltaPosition + (index + location - startLocation - startIndex) / difference, 5);
    };
    /**
     * Converts a string category name to relative position on axis.
     *
     * `location` identifies relative location within category. 0 - beginning,
     * 0.5 - middle, 1 - end, and anything inbetween.
     *
     * @param category  Category name
     * @param location  Location (0-1)
     * @return Position
     */
    CategoryAxis.prototype.categoryToPosition = function (category, location) {
        var index = this.categoryToIndex(category);
        return this.indexToPosition(index, location);
    };
    /**
     * Converts a string category name to a orientation point (x, y, angle) on axis
     *
     * `location` identifies relative location within category. 0 - beginning,
     * 0.5 - middle, 1 - end, and anything inbetween.
     * @param category  Category name
     * @param location  Location (0-1)
     * @return Orientation point
     */
    CategoryAxis.prototype.categoryToPoint = function (category, location) {
        var position = this.categoryToPosition(category, location);
        var point = this.renderer.positionToPoint(position);
        var angle = this.renderer.positionToAngle(position);
        return { x: point.x, y: point.y, angle: angle };
    };
    /**
     * Converts a string category name to a orientation point (x, y, angle) on axis
     *
     * `location` identifies relative location within category. 0 - beginning,
     * 0.5 - middle, 1 - end, and anything inbetween.
     * @param category  Category name
     * @param location  Location (0-1)
     * @return Orientation point
     */
    CategoryAxis.prototype.anyToPoint = function (category, location) {
        return this.categoryToPoint(category, location);
    };
    /**
     * Converts a string category name to relative position on axis.
     *
     * An alias to `categoryToPosition()`.
     *
     * @param category  Category name
     * @param location  Location (0-1)
     * @return Relative position
     */
    CategoryAxis.prototype.anyToPosition = function (category, location) {
        return this.categoryToPosition(category, location);
    };
    /**
     * Converts named category to an index of data item it corresponds to.
     *
     * @param category  Category
     * @return Data item index
     */
    CategoryAxis.prototype.categoryToIndex = function (category) {
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](category)) {
            var dataItem = this.dataItemsByCategory.getKey(category);
            if (dataItem) {
                return dataItem.index;
            }
        }
    };
    /**
     * Zooms the axis to specific named ctaegories.
     *
     * @param startCategory  Start category
     * @param endCategory    End category
     */
    CategoryAxis.prototype.zoomToCategories = function (startCategory, endCategory) {
        this.zoomToIndexes(this.categoryToIndex(startCategory), this.categoryToIndex(endCategory) + 1);
    };
    /**
     * [getAnyRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param start         [description]
     * @param end           [description]
     * @param startLocation [description]
     * @param endLocation   [description]
     * @return [description]
     */
    CategoryAxis.prototype.getAnyRangePath = function (start, end, startLocation, endLocation) {
        var startPos = this.categoryToPosition(start, startLocation);
        var endPos = this.categoryToPosition(end, endLocation);
        return this.getPositionRangePath(startPos, endPos); // Base class (Axis) gets range shape from AxisRenderer
    };
    /**
     * Takes an absolute position (px) within axis and adjust it to a specific
     * `location` within category it corresponds to.
     *
     * @param position  Source position (px)
     * @param location  Location within category (0-1)
     * @return Adjusted position (px)
     */
    CategoryAxis.prototype.roundPosition = function (position, location) {
        var index = this.positionToIndex(position);
        return this.indexToPosition(index, location);
    };
    /**
     * Finds and returns first series data item with specific category
     * @param series    Target series
     * @param category  Category
     * @return XYSeriesDataItem data item
     */
    CategoryAxis.prototype.getFirstSeriesDataItem = function (series, category) {
        for (var i = 0; i < series.dataItems.length; i++) {
            var dataItem = series.dataItems.getIndex(i);
            if (series.xAxis == this) {
                if (dataItem.categoryX == category) {
                    return dataItem;
                }
            }
            if (series.yAxis == this) {
                if (dataItem.categoryY == category) {
                    return dataItem;
                }
            }
        }
    };
    /**
     * Finds and returns last series data item with specific category.
     * @param series    Target series
     * @param category  Category
     * @return XYSeriesDataItem data item
     */
    CategoryAxis.prototype.getLastSeriesDataItem = function (series, category) {
        for (var i = series.dataItems.length - 1; i >= 0; i--) {
            var dataItem = series.dataItems.getIndex(i);
            if (series.xAxis == this) {
                if (dataItem.categoryX == category) {
                    return dataItem;
                }
            }
            if (series.yAxis == this) {
                if (dataItem.categoryY == category) {
                    return dataItem;
                }
            }
        }
    };
    // todo: optimize
    CategoryAxis.prototype.getSeriesDataItemByCategory = function (category, series) {
        var _this = this;
        var seriesDataItem;
        series.dataItems.each(function (dataItem) {
            if (series.xAxis == _this) {
                if (dataItem.categoryX == category) {
                    seriesDataItem = dataItem;
                }
            }
            else if (series.yAxis == _this) {
                if (dataItem.categoryY == category) {
                    seriesDataItem = dataItem;
                }
            }
        });
        return seriesDataItem;
    };
    /**
     * Returns a data item from Series that corresponds to a specific absolute
     * position on the Axis.
     *
     * @param series    Target series
     * @param position  Position (px)
     * @return XYSeriesDataItem data item
     */
    CategoryAxis.prototype.getSeriesDataItem = function (series, position, findNearest) {
        var _this = this;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](position)) {
            var index_1 = this.positionToIndex(position);
            if (index_1 >= this.dataItems.length) {
                index_1--;
            }
            var dataItem = this.dataItems.getIndex(index_1);
            if (dataItem) {
                var category_1 = dataItem.category;
                var sdi_1;
                var seriesDataItem = series.dataItems.getIndex(index_1);
                if (seriesDataItem) {
                    if (series.xAxis == this) {
                        if (seriesDataItem.categoryX == category_1) {
                            return seriesDataItem;
                        }
                    }
                    if (series.yAxis == this) {
                        if (seriesDataItem.categoryY == category_1) {
                            return seriesDataItem;
                        }
                    }
                }
                series.dataItems.each(function (dataItem) {
                    if (series.xAxis == _this) {
                        if (dataItem.categoryX == category_1) {
                            if (!sdi_1) {
                                sdi_1 = dataItem;
                            }
                            if (Math.abs(index_1 - sdi_1.index) > Math.abs(index_1 - dataItem.index)) {
                                sdi_1 = dataItem;
                            }
                        }
                    }
                    if (series.yAxis == _this) {
                        if (dataItem.categoryY == category_1) {
                            if (!sdi_1) {
                                sdi_1 = dataItem;
                            }
                            if (Math.abs(index_1 - sdi_1.index) > Math.abs(index_1 - dataItem.index)) {
                                sdi_1 = dataItem;
                            }
                        }
                    }
                });
                //@todo
                if (findNearest) {
                }
                return sdi_1;
            }
        }
    };
    /**
     * Returns the X coordinate for series' data item.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param dataItem  Data item
     * @param key       Category
     * @param location  Location (0-1)
     * @return X coordinate (px)
     */
    CategoryAxis.prototype.getX = function (dataItem, key, location, stackKey, range) {
        var position = this.getPositionX(dataItem, key, location, stackKey, range);
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNaN"](position)) {
            return this.basePoint.x;
        }
        else {
            return this.renderer.positionToPoint(position).x;
        }
    };
    /**
     * Returns relative position on axis for series' data item.
     *
     * @since 4.5.14
     * @param  dataItem  Data item
     * @param  key       Category
     * @param  location  Location (0-1)
     * @return           Relative position
     */
    CategoryAxis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {
        var position;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](key)) {
            position = this.categoryToPosition(dataItem.categories[key], location);
        }
        if (range) {
            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](position, range.start, range.end);
        }
        return position;
    };
    /**
     * Returns the Y coordinate for series' data item.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param dataItem  Data item
     * @param key       Category
     * @param location  Location (0-1)
     * @return Y coordinate (px)
     */
    CategoryAxis.prototype.getY = function (dataItem, key, location, stackKey, range) {
        var position = this.getPositionY(dataItem, key, location, stackKey, range);
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNaN"](position)) {
            return this.basePoint.y;
        }
        else {
            return this.renderer.positionToPoint(position).y;
        }
    };
    /**
     * Returns relative position on axis for series' data item.
     *
     * @since 4.5.14
     * @param  dataItem  Data item
     * @param  key       Category
     * @param  location  Location (0-1)
     * @return           Relative position
     */
    CategoryAxis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {
        var position;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](key)) {
            position = this.categoryToPosition(dataItem.categories[key], location);
        }
        if (range) {
            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](position, range.start, range.end);
        }
        return position;
    };
    /**
     * Returns an angle for series data item.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param dataItem  Data item
     * @param key       Category
     * @param location  Location (0-1)
     * @param stackKey  Stack key (?)
     * @param range Range to fit in
     * @return Angle
     */
    CategoryAxis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {
        var position = this.categoryToPosition(dataItem.categories[key], location);
        if (range) {
            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](position, range.start, range.end);
        }
        return this.positionToAngle(position);
    };
    /**
     * Returns an absolute pixel coordinate of the start of the cell (category),
     * that specific position value falls into.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param position  Position (px)
     * @return Cell start position (px)
     */
    CategoryAxis.prototype.getCellStartPosition = function (position) {
        return this.roundPosition(position, 0);
    };
    /**
     * Returns an absolute pixel coordinate of the end of the cell (category),
     * that specific position value falls into.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param position  Position (px)
     * @return Cell end position (px)
     */
    CategoryAxis.prototype.getCellEndPosition = function (position) {
        return this.roundPosition(position, 1);
    };
    /**
     * Returns text to show in a category tooltip, based on specific position
     * within axis.
     *
     * @ignore Exclude from docs
     * @param position  Position (px)
     * @return Label (category)
     */
    CategoryAxis.prototype.getTooltipText = function (position) {
        var dataItem = this.dataItems.getIndex(this.positionToIndex(position));
        if (dataItem) {
            this.tooltipDataItem = dataItem;
            this.tooltip.dataItem = dataItem;
            if (this.tooltipText) {
                return this.tooltipText;
            }
            if (!this._adapterO) {
                return dataItem.category;
            }
            else {
                return this._adapterO.apply("getTooltipText", dataItem.category);
            }
        }
    };
    /**
     * Returns an index of the category that corresponds to specific pixel
     * position within axis.
     *
     * @param position  Position (px)
     * @return Category index
     */
    CategoryAxis.prototype.positionToIndex = function (position) {
        position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["round"](position, 10);
        if (position < 0) {
            position = 0;
        }
        if (position > 1) {
            position = 1;
        }
        var startIndex = this.startIndex;
        var endIndex = this.endIndex;
        var difference = endIndex - startIndex - this.startLocation - (1 - this.endLocation);
        position += 1 / difference * this.startLocation;
        var index = null;
        if (this._axisBreaks) {
            var axisBreaks = this._axisBreaks;
            // in case we have some axis breaks
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_9__["eachContinue"](axisBreaks.iterator(), function (axisBreak) {
                var breakStartPosition = axisBreak.startPosition;
                var breakEndPosition = axisBreak.endPosition;
                var breakStartIndex = axisBreak.adjustedStartValue;
                var breakEndIndex = axisBreak.adjustedEndValue;
                breakStartIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["max"](breakStartIndex, startIndex);
                breakEndIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["min"](breakEndIndex, endIndex);
                var breakSize = axisBreak.breakSize;
                difference -= (breakEndIndex - breakStartIndex) * (1 - breakSize);
                // position to the right of break end
                if (position > breakEndPosition) {
                    startIndex += (breakEndIndex - breakStartIndex) * (1 - breakSize);
                }
                // position to the left of break start
                else if (position < breakStartPosition) {
                }
                // value within break
                else {
                    var breakPosition = (position - breakStartPosition) / (breakEndPosition - breakStartPosition);
                    index = breakStartIndex + Math.round(breakPosition * (breakEndIndex - breakStartIndex));
                    return false;
                }
                return true;
            });
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](index)) {
            index = Math.floor(position * difference + startIndex);
        }
        if (index >= this.dataItems.length) {
            index = this.dataItems.length - 1;
        }
        // not good, when panning out of bounds, each time one less item gets selected
        //if (index >= endIndex) {
        //	index--;
        //}
        return index;
    };
    /**
     * Returns category based on position.
     *
     * Please note that `position` represents position within axis which may be
     * zoomed and not correspond to Cursor's `position`.
     *
     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.
     *
     * This is a synonim of `getPositionLabel()` implemented here for consistentcy.
     *
     * @since 4.3.8
     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.
     * @param position  Relative position on axis (0-1)
     * @return Position label
     */
    CategoryAxis.prototype.positionToCategory = function (position) {
        return this.getPositionLabel(position);
    };
    /**
     * Returns category based on position.
     *
     * Please note that `position` represents position within axis which may be
     * zoomed and not correspond to Cursor's `position`.
     *
     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.
     *
     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.
     * @param position  Relative position on axis (0-1)
     * @return Position label
     */
    CategoryAxis.prototype.getPositionLabel = function (position) {
        var dataItem = this.dataItems.getIndex(this.positionToIndex(position));
        if (dataItem) {
            return dataItem.category;
        }
    };
    Object.defineProperty(CategoryAxis.prototype, "basePoint", {
        /**
         * Coordinates of the actual axis start.
         *
         * @ignore Exclude from docs
         * @return Base point
         */
        get: function () {
            // This makes base grid to be drawn at the end of the axis and adds extra
            // grid which we need to nicely close the chart.
            return this.renderer.positionToPoint(1);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Initializes Axis' renderer.
     *
     * @ignore Exclude from docs
     */
    CategoryAxis.prototype.initRenderer = function () {
        _super.prototype.initRenderer.call(this);
        var renderer = this.renderer;
        renderer.baseGrid.disabled = true;
    };
    Object.defineProperty(CategoryAxis.prototype, "frequency", {
        /**
         * Current frequency of labels of the axis.
         *
         * Normally it would be 1, but when labels start to be hidden due
         * to `minGridDistance` this read-only property will increase.
         *
         * @readonly
         * @since 4.2.0
         * @return Label frequency
         */
        get: function () {
            return this._frequency;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryAxis.prototype, "sortBySeries", {
        /**
         * @return Sort categories?
         */
        get: function () {
            return this.getPropertyValue("sortBySeries");
        },
        /**
         * If set to a reference of [[ColumnSeries]] the categories will be sorted
         * by actual values.
         *
         * The categories are ordered in descending order (from highest values to
         * lowest). To reverse the order, use axis renderer's `inversed` setting.
         * E.g.:
         *
         * ```TypeScript
         * categoryAxis.sortBySeries = series;
         * categoryAxis.renderer.inversed = true;
         * ```
         * ```JavaScript
         * categoryAxis.sortBySeries = series;
         * categoryAxis.renderer.inversed = true;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "xAxes": [{
         *     // ...
         *     "sortBySeries": "s1",
         *     "renderer": {
         *       // ...
         *       "inversed": true
         *     }
         *   }]
         * }
         * ```
         *
         * @since 4.8.7
         * @param  value  Sort categories?
         */
        set: function (value) {
            this.setPropertyValue("sortBySeries", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    CategoryAxis.prototype.processConfig = function (config) {
        if (config) {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](config.sortBySeries) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isString"](config.sortBySeries)) {
                if (this.map.hasKey(config.sortBySeries)) {
                    config.sortBySeries = this.map.getKey(config.sortBySeries);
                }
                else {
                    this.addDelayedMap("sortBySeries", config.sortBySeries);
                    delete config.sortBySeries;
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    return CategoryAxis;
}(_Axis__WEBPACK_IMPORTED_MODULE_1__["Axis"]));

/**
 * Register class, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["CategoryAxis"] = CategoryAxis;
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["CategoryAxisDataItem"] = CategoryAxisDataItem;
//# sourceMappingURL=CategoryAxis.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxisBreak.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxisBreak.js ***!
  \*************************************************************************************/
/*! exports provided: CategoryAxisBreak */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CategoryAxisBreak", function() { return CategoryAxisBreak; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AxisBreak__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBreak.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * A module which defines functionality related to Category Axis Break.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Base class to define "breaks" in axes
 * @see {@link ICategoryAxisBreakEvents} for a list of available events
 * @see {@link ICategoryAxisBreakAdapters} for a list of available Adapters
 */
var CategoryAxisBreak = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CategoryAxisBreak, _super);
    /**
     * Constructor
     */
    function CategoryAxisBreak() {
        var _this = _super.call(this) || this;
        _this.className = "CategoryAxisBreak";
        _this.properties.startLocation = 0.5;
        _this.properties.endLocation = 0.5;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(CategoryAxisBreak.prototype, "startPosition", {
        /**
         * Pixel position of the break's start.
         *
         * @return Position (px)
         * @readonly
         */
        get: function () {
            if (this.axis) {
                return this.axis.indexToPosition(this.adjustedStartValue, this.startLocation);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryAxisBreak.prototype, "endPosition", {
        /**
         * Pixel position of the break's end.
         *
         * @return Position (px)
         * @readonly
         */
        get: function () {
            if (this.axis) {
                return this.axis.indexToPosition(this.adjustedEndValue, this.endLocation);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryAxisBreak.prototype, "startCategory", {
        /**
         * @return Start category
         */
        get: function () {
            return this.getPropertyValue("startCategory");
        },
        /**
         * A category break starts on.
         *
         * @param value Start category
         */
        set: function (value) {
            if (this.setPropertyValue("startCategory", value)) {
                if (this.axis) {
                    this.axis.invalidateDataItems();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryAxisBreak.prototype, "endCategory", {
        /**
         * @return End category
         */
        get: function () {
            return this.getPropertyValue("endCategory");
        },
        /**
         * A category break ends on.
         *
         * @param value  End category
         */
        set: function (value) {
            if (this.setPropertyValue("endCategory", value)) {
                if (this.axis) {
                    this.axis.invalidateDataItems();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryAxisBreak.prototype, "startValue", {
        /**
         * @return Value
         */
        get: function () {
            var category = this.getPropertyValue("startCategory");
            if (category) {
                return this.axis.categoryToIndex(category);
            }
            else {
                return this.getPropertyValue("startValue");
            }
        },
        /**
         * An index of start category.
         *
         * @param value  Value
         */
        set: function (value) {
            if (this.setPropertyValue("startValue", value)) {
                if (this.axis) {
                    this.axis.invalidateDataItems();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryAxisBreak.prototype, "endValue", {
        /**
         * @return Value
         */
        get: function () {
            var category = this.getPropertyValue("endCategory");
            if (category) {
                return this.axis.categoryToIndex(category);
            }
            else {
                return this.getPropertyValue("endValue");
            }
        },
        /**
         * An index of end category or a end value.
         *
         * @param value  Value
         */
        set: function (value) {
            if (this.setPropertyValue("endValue", value)) {
                if (this.axis) {
                    this.axis.invalidateDataItems();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryAxisBreak.prototype, "startLocation", {
        /**
         * @return Break start location
         */
        get: function () {
            return this.getPropertyValue("startLocation");
        },
        /**
         * Indicates where within starting category break should begin.
         *
         * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).
         *
         * E.g. if you want to a break to fully encompass start and end categories,
         * you should set `startLocation = 0` and `endLocation = 1`.
         *
         * @since 4.9.17
         * @default 0.5
         * @param  value  Break start location
         */
        set: function (value) {
            if (this.setPropertyValue("startLocation", value)) {
                if (this.axis) {
                    this.axis.invalidateDataItems();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CategoryAxisBreak.prototype, "endLocation", {
        /**
         * @return Break end location
         */
        get: function () {
            return this.getPropertyValue("endLocation");
        },
        /**
         * Indicates where within ending category break should end.
         *
         * Values range from `0` (start) to `1` (end), with default being `0.5` (middle).
         *
         * E.g. if you want to a break to fully encompass start and end categories,
         * you should set `startLocation = 0` and `endLocation = 1`.
         *
         * @since 4.9.17
         * @default 0.5
         * @param  value  Break end location
         */
        set: function (value) {
            if (this.setPropertyValue("endLocation", value)) {
                if (this.axis) {
                    this.axis.invalidateDataItems();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    return CategoryAxisBreak;
}(_AxisBreak__WEBPACK_IMPORTED_MODULE_1__["AxisBreak"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["CategoryAxisBreak"] = CategoryAxisBreak;
//# sourceMappingURL=CategoryAxisBreak.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js ***!
  \****************************************************************************/
/*! exports provided: DateAxisDataItem, DateAxis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateAxisDataItem", function() { return DateAxisDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateAxis", function() { return DateAxis; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _ValueAxis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ValueAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _DateAxisBreak__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./DateAxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxisBreak.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Time */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Time.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_SortedList__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/SortedList */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/SortedList.js");
/**
 * DateAxis module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */













/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines data item for [[DateAxis]].
 *
 * @see {@link DataItem}
 */
var DateAxisDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(DateAxisDataItem, _super);
    /**
     * Constructor
     */
    function DateAxisDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "DateAxisDataItem";
        _this.applyTheme();
        _this.values.date = {};
        _this.values.endDate = {};
        return _this;
    }
    Object.defineProperty(DateAxisDataItem.prototype, "date", {
        /**
         * @return Date
         */
        get: function () {
            return this.dates["date"];
        },
        /**
         * Date position of the data item.
         *
         * @param date  Date
         */
        set: function (date) {
            this.setDate("date", date);
            this.value = date.getTime();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateAxisDataItem.prototype, "endDate", {
        /**
         * @return End date
         */
        get: function () {
            return this.dates["endDate"];
        },
        /**
         * End date for data item.
         *
         * @param date End date
         */
        set: function (date) {
            this.setDate("endDate", date);
            this.endValue = date.getTime();
        },
        enumerable: true,
        configurable: true
    });
    return DateAxisDataItem;
}(_ValueAxis__WEBPACK_IMPORTED_MODULE_1__["ValueAxisDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to create a date/time-based axis for the chart.
 *
 * ```TypeScript
 * // Create the axis
 * let xAxis = chart.xAxes.push(new am4charts.DateAxis());
 *
 * // Set settings
 * xAxis.title.text = "Time";
 * ```
 * ```JavaScript
 * // Create the axis
 * var valueAxis = chart.xAxes.push(new am4charts.DateAxis());
 *
 * // Set settings
 * valueAxis.title.text = "Time";
 * ```
 * ```JSON
 * "xAxes": [{
 *   "type": "DateAxis",
 *   "title": {
 *     "text": "Time"
 *   }
 * }]
 * ```
 *
 * @see {@link IDateAxisEvents} for a list of available Events
 * @see {@link IDateAxisAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/} got `DateAxis` documention
 * @important
 */
var DateAxis = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(DateAxis, _super);
    /**
     * Constructor
     */
    function DateAxis() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this._gapBreaks = false;
        /**
         * A list of date/time intervals for Date axis.
         *
         * This define various granularities available for the axis. For example
         * if you have an axis spanning an hour, and space for 6 grid lines / labels
         * the axis will choose the granularity of 10 minutes, displaying a label
         * every 10 minutes.
         *
         * Default intervals:
         *
         * ```JSON
         * [
         *  { timeUnit: "millisecond", count: 1 },
         *  { timeUnit: "millisecond", count: 5 },
         *  { timeUnit: "millisecond", count: 10 },
         *  { timeUnit: "millisecond", count: 50 },
         *  { timeUnit: "millisecond", count: 100 },
         *  { timeUnit: "millisecond", count: 500 },
         *  { timeUnit: "second", count: 1 },
         *  { timeUnit: "second", count: 5 },
         *  { timeUnit: "second", count: 10 },
         *  { timeUnit: "second", count: 30 },
         *  { timeUnit: "minute", count: 1 },
         *  { timeUnit: "minute", count: 5 },
         *  { timeUnit: "minute", count: 10 },
         *  { timeUnit: "minute", count: 30 },
         *  { timeUnit: "hour", count: 1 },
         *  { timeUnit: "hour", count: 3 },
         *  { timeUnit: "hour", count: 6 },
         *  { timeUnit: "hour", count: 12 },
         *  { timeUnit: "day", count: 1 },
         *  { timeUnit: "day", count: 2 },
         *  { timeUnit: "day", count: 3 },
         *  { timeUnit: "day", count: 4 },
         *  { timeUnit: "day", count: 5 },
         *  { timeUnit: "week", count: 1 },
         *  { timeUnit: "month", count: 1 },
         *  { timeUnit: "month", count: 2 },
         *  { timeUnit: "month", count: 3 },
         *  { timeUnit: "month", count: 6 },
         *  { timeUnit: "year", count: 1 },
         *  { timeUnit: "year", count: 2 },
         *  { timeUnit: "year", count: 5 },
         *  { timeUnit: "year", count: 10 },
         *  { timeUnit: "year", count: 50 },
         *  { timeUnit: "year", count: 100 }
         * ]
         * ```
         */
        _this.gridIntervals = new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__["List"]();
        /**
         * If data aggregation is enabled by setting Axis' `groupData = true`, the
         * chart will try to aggregate data items into grouped data items.
         *
         * If there are more data items in selected period than `groupCount`, it will
         * group data items into bigger period.
         *
         * For example seconds might be grouped into 10-second aggregate data items.
         *
         * This setting indicates what group intervals can the chart group to.
         *
         * Default intervals:
         *
         * ```JSON
         * [
         *   { timeUnit: "millisecond", count: 1},
         *   { timeUnit: "millisecond", count: 10 },
         *   { timeUnit: "millisecond", count: 100 },
         *   { timeUnit: "second", count: 1 },
         *   { timeUnit: "second", count: 10 },
         *   { timeUnit: "minute", count: 1 },
         *   { timeUnit: "minute", count: 10 },
         *   { timeUnit: "hour", count: 1 },
         *   { timeUnit: "day", count: 1 },
         *   { timeUnit: "week", count: 1 },
         *   { timeUnit: "month", count: 1 },
         *   { timeUnit: "year", count: 1 }
         * ]
         * ```
         * `groupData = true` does not work in combination with `skipEmptyPeriods = true`.
         *
         * @since 4.7.0
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.
         */
        _this.groupIntervals = new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__["List"]();
        /**
         * A collection of date formats to use when formatting different time units
         * on Date/time axis.
         *
         * Actual defaults will depend on the language locale set for the chart.
         *
         * To override format for a specific time unit, say days, you need to set
         * the appropriate key to a format string. E.g.:
         *
         * ```TypeScript
         * axis.dateFormats.setKey("day", "MMMM d, yyyy");
         * ```
         * ```JavaScript
         * axis.dateFormats.setKey("day", "MMMM d, yyyy");
         * ```
         * ```JSON
         * "xAxes": [{
         *   "type": "DateAxis",
         *   "dateFormats": {
         *     "day": "MMMM d, yyyy"
         *   }
         * }]
         * ```
         *
         * @see {@link DateFormatter}
         */
        _this.dateFormats = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__["Dictionary"]();
        /**
         * These formats are applied to labels that are first in a larger unit.
         *
         * For example, if we have a DateAxis with days on it, the first day of month
         * indicates a break in month - a start of the bigger period.
         *
         * For those labels, `periodChangeDateFormats` are applied instead of
         * `dateFormats`.
         *
         * This allows us implement convenient structures, like instead of:
         *
         * `Jan 1 - Jan 2 - Jan 3 - ...`
         *
         * We can have:
         *
         * `Jan - 1 - 2 - 3 - ...`
         *
         * This can be disabled by setting `markUnitChange = false`.
         */
        _this.periodChangeDateFormats = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__["Dictionary"]();
        /**
         * Actual interval (granularity) derived from the actual data.
         */
        _this._baseIntervalReal = { timeUnit: "day", count: 1 };
        /**
         */
        _this._prevSeriesTime = {};
        /**
         * [_minDifference description]
         *
         * @todo Description
         */
        _this._minDifference = {};
        /**
         * @ignore
         */
        _this._firstWeekDay = 1;
        /**
         * A collection of start timestamps to use as axis' min timestamp for
         * particular data item item periods.
         *
         * @since 4.7.0
         * @readonly
         */
        _this.groupMin = {};
        /**
         * A collection of start timestamps to use as axis' max timestamp for
         * particular data item item periods.
         *
         * @since 4.7.0
         * @readonly
         */
        _this.groupMax = {};
        _this.className = "DateAxis";
        _this.setPropertyValue("markUnitChange", true);
        _this.snapTooltip = true;
        _this.tooltipPosition = "pointer";
        _this.setPropertyValue("groupData", false);
        _this.groupCount = 200;
        _this.events.on("parentset", _this.getDFFormatter, _this, false);
        // Translatable defaults are applied in `applyInternalDefaults()`
        // ...
        // Define default intervals
        _this.gridIntervals.pushAll([
            { timeUnit: "millisecond", count: 1 },
            { timeUnit: "millisecond", count: 5 },
            { timeUnit: "millisecond", count: 10 },
            { timeUnit: "millisecond", count: 50 },
            { timeUnit: "millisecond", count: 100 },
            { timeUnit: "millisecond", count: 500 },
            { timeUnit: "second", count: 1 },
            { timeUnit: "second", count: 5 },
            { timeUnit: "second", count: 10 },
            { timeUnit: "second", count: 30 },
            { timeUnit: "minute", count: 1 },
            { timeUnit: "minute", count: 5 },
            { timeUnit: "minute", count: 10 },
            { timeUnit: "minute", count: 15 },
            { timeUnit: "minute", count: 30 },
            { timeUnit: "hour", count: 1 },
            { timeUnit: "hour", count: 3 },
            { timeUnit: "hour", count: 6 },
            { timeUnit: "hour", count: 12 },
            { timeUnit: "day", count: 1 },
            { timeUnit: "day", count: 2 },
            { timeUnit: "day", count: 3 },
            { timeUnit: "day", count: 4 },
            { timeUnit: "day", count: 5 },
            { timeUnit: "week", count: 1 },
            { timeUnit: "month", count: 1 },
            { timeUnit: "month", count: 2 },
            { timeUnit: "month", count: 3 },
            { timeUnit: "month", count: 6 },
            { timeUnit: "year", count: 1 },
            { timeUnit: "year", count: 2 },
            { timeUnit: "year", count: 5 },
            { timeUnit: "year", count: 10 },
            { timeUnit: "year", count: 50 },
            { timeUnit: "year", count: 100 },
            { timeUnit: "year", count: 200 },
            { timeUnit: "year", count: 500 },
            { timeUnit: "year", count: 1000 },
            { timeUnit: "year", count: 2000 },
            { timeUnit: "year", count: 5000 },
            { timeUnit: "year", count: 10000 },
            { timeUnit: "year", count: 100000 }
        ]);
        _this.groupIntervals.pushAll([
            { timeUnit: "millisecond", count: 1 },
            { timeUnit: "millisecond", count: 10 },
            { timeUnit: "millisecond", count: 100 },
            { timeUnit: "second", count: 1 },
            { timeUnit: "second", count: 10 },
            { timeUnit: "minute", count: 1 },
            { timeUnit: "minute", count: 10 },
            { timeUnit: "hour", count: 1 },
            { timeUnit: "day", count: 1 },
            { timeUnit: "week", count: 1 },
            { timeUnit: "month", count: 1 },
            { timeUnit: "year", count: 1 }
        ]);
        // Set field name
        _this.axisFieldName = "date";
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * A function which applies fills to axis cells.
     *
     * Default function fills every second fill. You can set this to a function
     * that follows some other logic.
     *
     * Function should accept a [[DateAxisDataItem]] and modify its `axisFill`
     * property accordingly.
     */
    DateAxis.prototype.fillRule = function (dataItem) {
        var value = dataItem.value;
        var axis = dataItem.component;
        var gridInterval = axis._gridInterval;
        var gridDuration = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](gridInterval.timeUnit, gridInterval.count);
        if (Math.round((value - axis.min) / gridDuration) / 2 == Math.round(Math.round((value - axis.min) / gridDuration) / 2)) {
            dataItem.axisFill.__disabled = true;
        }
        else {
            dataItem.axisFill.__disabled = false;
        }
    };
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    DateAxis.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Set default date formats
        if (!this.dateFormats.hasKey("millisecond")) {
            this.dateFormats.setKey("millisecond", this.language.translate("_date_millisecond"));
        }
        if (!this.dateFormats.hasKey("second")) {
            this.dateFormats.setKey("second", this.language.translate("_date_second"));
        }
        if (!this.dateFormats.hasKey("minute")) {
            this.dateFormats.setKey("minute", this.language.translate("_date_minute"));
        }
        if (!this.dateFormats.hasKey("hour")) {
            this.dateFormats.setKey("hour", this.language.translate("_date_hour"));
        }
        if (!this.dateFormats.hasKey("day")) {
            this.dateFormats.setKey("day", this.language.translate("_date_day"));
        }
        if (!this.dateFormats.hasKey("week")) {
            this.dateFormats.setKey("week", this.language.translate("_date_day")); // not a mistake
        }
        if (!this.dateFormats.hasKey("month")) {
            this.dateFormats.setKey("month", this.language.translate("_date_month"));
        }
        if (!this.dateFormats.hasKey("year")) {
            this.dateFormats.setKey("year", this.language.translate("_date_year"));
        }
        if (!this.periodChangeDateFormats.hasKey("millisecond")) {
            this.periodChangeDateFormats.setKey("millisecond", this.language.translate("_date_millisecond"));
        }
        if (!this.periodChangeDateFormats.hasKey("second")) {
            this.periodChangeDateFormats.setKey("second", this.language.translate("_date_second"));
        }
        if (!this.periodChangeDateFormats.hasKey("minute")) {
            this.periodChangeDateFormats.setKey("minute", this.language.translate("_date_minute"));
        }
        if (!this.periodChangeDateFormats.hasKey("hour")) {
            this.periodChangeDateFormats.setKey("hour", this.language.translate("_date_day"));
        }
        if (!this.periodChangeDateFormats.hasKey("day")) {
            this.periodChangeDateFormats.setKey("day", this.language.translate("_date_day"));
        }
        if (!this.periodChangeDateFormats.hasKey("week")) {
            this.periodChangeDateFormats.setKey("week", this.language.translate("_date_day"));
        }
        if (!this.periodChangeDateFormats.hasKey("month")) {
            this.periodChangeDateFormats.setKey("month", this.language.translate("_date_month") + " " + this.language.translate("_date_year"));
        }
    };
    /**
     * Returns a new/empty [[DataItem]] of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    DateAxis.prototype.createDataItem = function () {
        return new DateAxisDataItem();
    };
    /**
     * Returns a new/empty [[AxisBreak]] of the appropriate type.
     *
     * @return Axis break
     */
    DateAxis.prototype.createAxisBreak = function () {
        return new _DateAxisBreak__WEBPACK_IMPORTED_MODULE_4__["DateAxisBreak"]();
    };
    /**
     * Validates Axis' data items.
     *
     * @ignore Exclude from docs
     */
    DateAxis.prototype.validateDataItems = function () {
        // allows to keep selection of the same size
        var start = this.start;
        var end = this.end;
        var baseDuration = this.baseDuration;
        var periodCount = (this.max - this.min) / baseDuration;
        this._firstWeekDay = this.getFirstWeekDay();
        this.getDFFormatter();
        _super.prototype.validateDataItems.call(this);
        var mainBaseDuration = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](this.mainBaseInterval.timeUnit, this.mainBaseInterval.count);
        this.maxZoomFactor = Math.max(1, (this.max - this.min) / mainBaseDuration);
        this._deltaMinMax = this.baseDuration / 2;
        // allows to keep selection of the same size
        var newPeriodCount = (this.max - this.min) / baseDuration;
        start = start + (end - start) * (1 - periodCount / newPeriodCount);
        this.zoom({ start: start, end: end }, false, true); // added instantlyto solve zoomout problem when we have axes gaps. @todo: check how this affects maxZoomFactor
    };
    /**
     * Handles process after zoom.
     *
     * @ignore Exclude from docs
     * @todo Does nothing?
     */
    DateAxis.prototype.handleSelectionExtremesChange = function () {
    };
    /**
     * Calculates all positions, related to axis as per current zoom.
     *
     * @ignore Exclude from docs
     */
    DateAxis.prototype.calculateZoom = function () {
        var _this = this;
        _super.prototype.calculateZoom.call(this);
        var difference = this.adjustDifference(this._minZoomed, this._maxZoomed);
        var dataSetChanged = false;
        // if data has to be grouped, choose interval and set dataset
        if (this.groupData && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](difference)) {
            var mainBaseInterval = this.mainBaseInterval;
            var modifiedDifference = difference + (this.startLocation + (1 - this.endLocation)) * this.baseDuration;
            var groupInterval = void 0;
            if (this.groupInterval) {
                groupInterval = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, this.groupInterval);
            }
            else {
                groupInterval = this.chooseInterval(0, modifiedDifference, this.groupCount, this.groupIntervals);
                if (_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](groupInterval.timeUnit, groupInterval.count) < _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](mainBaseInterval.timeUnit, mainBaseInterval.count)) {
                    groupInterval = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, mainBaseInterval);
                }
            }
            this._groupInterval = groupInterval;
            var newId = groupInterval.timeUnit + groupInterval.count;
            if (this._currentDataSetId != newId) {
                this._currentDataSetId = newId;
                this.dispatch("groupperiodchanged");
            }
            this.series.each(function (series) {
                if (series.baseAxis == _this) {
                    if (series.setDataSet(_this._currentDataSetId)) {
                        dataSetChanged = true;
                    }
                }
            });
        }
        var gridInterval = this.chooseInterval(0, difference, this._gridCount);
        if (_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](gridInterval.timeUnit, gridInterval.count) < this.baseDuration) {
            gridInterval = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, this.baseInterval);
        }
        this._gridInterval = gridInterval;
        this._nextGridUnit = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getNextUnit"](gridInterval.timeUnit);
        // the following is needed to avoid grid flickering while scrolling
        this._intervalDuration = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](gridInterval.timeUnit, gridInterval.count);
        this._gridDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](new Date(this.minZoomed - _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](gridInterval.timeUnit, gridInterval.count)), gridInterval.timeUnit, gridInterval.count, this._firstWeekDay, this._df.utc, new Date(this.min), this._df.timezoneMinutes, this._df.timezone);
        // tell series start/end
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.series.iterator(), function (series) {
            if (series.baseAxis == _this) {
                var field_1 = series.getAxisField(_this);
                var minZoomed = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](new Date(_this._minZoomed + _this.baseDuration * 0.05), _this.baseInterval.timeUnit, _this.baseInterval.count, _this._firstWeekDay, _this._df.utc, undefined, _this._df.timezoneMinutes, _this._df.timezone).getTime();
                var minZoomedStr = minZoomed.toString();
                var startDataItem = series.dataItemsByAxis.getKey(_this.uid).getKey(minZoomedStr + series.currentDataSetId);
                var startIndex = 0;
                if (_this.start != 0) {
                    if (startDataItem) {
                        startDataItem = _this.findFirst(startDataItem, minZoomed, field_1);
                        startIndex = startDataItem.index;
                    }
                    else {
                        startIndex = series.dataItems.findClosestIndex(_this._minZoomed, function (x) { return x[field_1]; }, "left");
                    }
                }
                // 1 millisecond is removed so that if only first item is selected, it would not count in the second.
                var baseInterval = _this.baseInterval;
                var maxZoomed = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](new Date(_this._maxZoomed), baseInterval.timeUnit, baseInterval.count, _this._firstWeekDay, _this._df.utc, undefined, _this._df.timezoneMinutes, _this._df.timezone), baseInterval.timeUnit, baseInterval.count, _this._df.utc).getTime();
                var maxZoomedStr = maxZoomed.toString();
                var endDataItem = series.dataItemsByAxis.getKey(_this.uid).getKey(maxZoomedStr + series.currentDataSetId);
                var endIndex = series.dataItems.length;
                if (_this.end != 1) {
                    if (endDataItem) {
                        endIndex = endDataItem.index;
                    }
                    else {
                        maxZoomed -= 1;
                        endIndex = series.dataItems.findClosestIndex(maxZoomed, function (x) { return x[field_1]; }, "right");
                        // not good - if end is in the gap, indexes go like 5,4,3,4,2,1
                        //if (endIndex < series.dataItems.length) {
                        endIndex++;
                        //}
                    }
                }
                if (series.max(_this) < minZoomed) {
                    series.startIndex = series.dataItems.length;
                    series.endIndex = series.dataItems.length;
                    series.outOfRange = true;
                }
                else if (series.min(_this) > maxZoomed) {
                    series.startIndex = 0;
                    series.endIndex = 0;
                    series.outOfRange = true;
                }
                else {
                    series.outOfRange = false;
                    series.startIndex = startIndex;
                    series.endIndex = endIndex;
                }
                //	console.log(series.name, startIndex, endIndex);
                if (!dataSetChanged && series.dataRangeInvalid) {
                    series.validateDataRange();
                }
            }
        });
    };
    DateAxis.prototype.findFirst = function (dataItem, time, key) {
        var index = dataItem.index;
        if (index > 0) {
            var series = dataItem.component;
            var previousDataItem = series.dataItems.getIndex(index - 1);
            var previousDate = previousDataItem[key];
            if (!previousDate || previousDate.getTime() < time) {
                return dataItem;
            }
            else {
                return this.findFirst(previousDataItem, time, key);
            }
        }
        else {
            return dataItem;
        }
    };
    /**
     * (Re)validates data.
     *
     * @ignore Exclude from docs
     */
    DateAxis.prototype.validateData = function () {
        _super.prototype.validateData.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](this.baseInterval.count)) {
            this.baseInterval.count = 1;
        }
    };
    Object.defineProperty(DateAxis.prototype, "minDifference", {
        /**
         * @ignore
         */
        get: function () {
            var _this = this;
            var minDifference = Number.MAX_VALUE;
            this.series.each(function (series) {
                if (minDifference > _this._minDifference[series.uid]) {
                    minDifference = _this._minDifference[series.uid];
                }
            });
            if (minDifference == Number.MAX_VALUE || minDifference == 0) {
                minDifference = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"]("day");
            }
            return minDifference;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * [dataChangeUpdate description]
     *
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    DateAxis.prototype.seriesDataChangeUpdate = function (series) {
        this._minDifference[series.uid] = Number.MAX_VALUE;
    };
    /**
     * [postProcessSeriesDataItems description]
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    DateAxis.prototype.postProcessSeriesDataItems = function (series) {
        var _this = this;
        this._firstWeekDay = this.getFirstWeekDay();
        if (series) {
            this.seriesGroupUpdate(series);
        }
        else {
            this.series.each(function (series) {
                _this.seriesGroupUpdate(series);
            });
        }
        this.addEmptyUnitsBreaks();
    };
    DateAxis.prototype.seriesGroupUpdate = function (series) {
        var _this = this;
        if (JSON.stringify(series._baseInterval[this.uid]) != JSON.stringify(this.mainBaseInterval)) {
            series._baseInterval[this.uid] = this.mainBaseInterval;
            series.mainDataSet.each(function (dataItem) {
                _this.postProcessSeriesDataItem(dataItem);
            });
            if (this.groupData) {
                this.groupSeriesData(series);
            }
        }
    };
    /**
     * Calculates series group data.
     *
     * @param  series  Series
     * @ignore
     */
    DateAxis.prototype.groupSeriesData = function (series) {
        var _this = this;
        if (series.baseAxis == this && series.dataItems.length > 0 && !series.dataGrouped) {
            series.bulletsContainer.removeChildren();
            // make array of intervals which will be used;
            var intervals_1 = [];
            var mainBaseInterval = this.mainBaseInterval;
            var mainIntervalDuration_1 = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](mainBaseInterval.timeUnit, mainBaseInterval.count);
            this.groupIntervals.each(function (interval) {
                var intervalDuration = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](interval.timeUnit, interval.count);
                if ((intervalDuration > mainIntervalDuration_1 && intervalDuration < (_this.max - _this.min)) || _this.groupInterval) {
                    intervals_1.push(interval);
                }
            });
            if (series._dataSets) {
                series._dataSets.each(function (key, dataItems) {
                    dataItems.each(function (dataItem) {
                        dataItem.dispose();
                    });
                    dataItems.clear();
                });
                series._dataSets.clear();
            }
            series.dataGrouped = true;
            _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](intervals_1, function (interval) {
                //let mainBaseInterval = this._mainBaseInterval;
                var key = "date" + _this.axisLetter;
                // create data set
                var dataSetId = interval.timeUnit + interval.count;
                // todo: check where this clone goes
                var dataSet = new _core_utils_SortedList__WEBPACK_IMPORTED_MODULE_13__["OrderedListTemplate"](series.mainDataSet.template.clone());
                series.dataSets.setKey(dataSetId, dataSet);
                var dataItems = series.mainDataSet;
                var previousTime = Number.NEGATIVE_INFINITY;
                var i = 0;
                var newDataItem;
                var dataFields = [];
                _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__["each"](series.dataFields, function (dfkey, df) {
                    var dfk = dfkey;
                    if (dfk != key && dfk.indexOf("Show") == -1) {
                        dataFields.push(dfk);
                    }
                });
                var roundedDate;
                dataItems.each(function (dataItem) {
                    var date = dataItem.getDate(key);
                    if (date) {
                        var time = date.getTime();
                        roundedDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](new Date(time), interval.timeUnit, interval.count, _this._df.firstDayOfWeek, _this._df.utc, undefined, _this._df.timezoneMinutes, _this._df.timezone);
                        var currentTime = roundedDate.getTime();
                        // changed period								
                        if (previousTime < currentTime) {
                            if (newDataItem && series._adapterO) {
                                _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](dataFields, function (vkey) {
                                    newDataItem.values[vkey].value = series._adapterO.apply("groupDataItem", {
                                        dataItem: newDataItem,
                                        interval: interval,
                                        dataField: vkey,
                                        date: roundedDate,
                                        value: newDataItem.values[vkey].value
                                    }).value;
                                    newDataItem.values[vkey].workingValue = newDataItem.values[vkey].value;
                                });
                            }
                            newDataItem = dataSet.create();
                            newDataItem.dataContext = {};
                            newDataItem.setWorkingLocation("dateX", series.dataItems.template.locations.dateX, 0);
                            newDataItem.setWorkingLocation("openDateX", series.dataItems.template.locations.openDateX, 0);
                            newDataItem.setWorkingLocation("dateY", series.dataItems.template.locations.dateY, 0);
                            newDataItem.setWorkingLocation("openDateY", series.dataItems.template.locations.openDateY, 0);
                            newDataItem.component = series;
                            // other Dates?
                            newDataItem.setDate(key, roundedDate);
                            newDataItem._index = i;
                            i++;
                            _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](dataFields, function (vkey) {
                                //let groupFieldName = vkey + "Group";
                                var dvalues = dataItem.values[vkey];
                                if (dvalues) {
                                    var value = dvalues.value;
                                    if (series._adapterO) {
                                        value = series._adapterO.apply("groupValue", {
                                            dataItem: dataItem,
                                            interval: interval,
                                            dataField: vkey,
                                            date: roundedDate,
                                            value: value
                                        }).value;
                                    }
                                    var values = newDataItem.values[vkey];
                                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](value)) {
                                        values.value = value;
                                        values.workingValue = value;
                                        values.open = value;
                                        values.close = value;
                                        values.low = value;
                                        values.high = value;
                                        values.sum = value;
                                        values.average = value;
                                        values.count = 1;
                                    }
                                    else {
                                        values.count = 0;
                                    }
                                }
                            });
                            _this.postProcessSeriesDataItem(newDataItem, interval);
                            _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__["each"](series.propertyFields, function (key, fieldValue) {
                                var f = key;
                                var value = dataItem.properties[key];
                                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](value)) {
                                    newDataItem.hasProperties = true;
                                    newDataItem.setProperty(f, value);
                                }
                            });
                            newDataItem.groupDataItems = [dataItem];
                            previousTime = currentTime;
                        }
                        else {
                            if (newDataItem) {
                                _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](dataFields, function (vkey) {
                                    var groupFieldName = series.groupFields[vkey];
                                    var dvalues = dataItem.values[vkey];
                                    if (dvalues) {
                                        var value = dvalues.value;
                                        if (series._adapterO) {
                                            value = series._adapterO.apply("groupValue", {
                                                dataItem: dataItem,
                                                interval: interval,
                                                dataField: vkey,
                                                date: roundedDate,
                                                value: value
                                            }).value;
                                        }
                                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](value)) {
                                            var values = newDataItem.values[vkey];
                                            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](values.open)) {
                                                values.open = value;
                                            }
                                            values.close = value;
                                            if (values.low > value || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](values.low)) {
                                                values.low = value;
                                            }
                                            if (values.high < value || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](values.high)) {
                                                values.high = value;
                                            }
                                            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](values.sum)) {
                                                values.sum += value;
                                            }
                                            else {
                                                values.sum = value;
                                            }
                                            values.count++;
                                            values.average = values.sum / values.count;
                                            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](values[groupFieldName])) {
                                                values.value = values[groupFieldName];
                                                values.workingValue = values.value;
                                            }
                                        }
                                    }
                                });
                                _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__["copyProperties"](dataItem.properties, newDataItem.properties);
                                _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__["each"](series.propertyFields, function (key, fieldValue) {
                                    var f = key;
                                    var value = dataItem.properties[key];
                                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](value)) {
                                        newDataItem.hasProperties = true;
                                        newDataItem.setProperty(f, value);
                                    }
                                });
                                newDataItem.groupDataItems.push(dataItem);
                            }
                        }
                    }
                    if (newDataItem) {
                        _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__["copyProperties"](dataItem.dataContext, newDataItem.dataContext);
                    }
                });
                if (newDataItem && series._adapterO) {
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](dataFields, function (vkey) {
                        newDataItem.values[vkey].value = series._adapterO.apply("groupDataItem", {
                            dataItem: newDataItem,
                            interval: interval,
                            dataField: vkey,
                            date: roundedDate,
                            value: newDataItem.values[vkey].value
                        }).value;
                        newDataItem.values[vkey].workingValue = newDataItem.values[vkey].value;
                    });
                }
            });
            this.calculateZoom();
        }
    };
    /**
     * @ignore
     */
    DateAxis.prototype.getDFFormatter = function () {
        this._df = this.dateFormatter;
    };
    /**
     * [postProcessSeriesDataItem description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param dataItem Data item
     */
    DateAxis.prototype.postProcessSeriesDataItem = function (dataItem, interval) {
        var _this = this;
        // we need to do this for all series data items not only added recently, as baseInterval might change
        var intervalID = "";
        if (interval) {
            intervalID = interval.timeUnit + interval.count;
        }
        else {
            interval = this.mainBaseInterval;
        }
        var series = dataItem.component;
        var dataItemsByAxis = series.dataItemsByAxis.getKey(this.uid);
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__["each"](dataItem.dates, function (key) {
            var date = dataItem.getDate(key);
            var time = date.getTime();
            var startDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](new Date(time), interval.timeUnit, interval.count, _this._firstWeekDay, _this._df.utc, undefined, _this._df.timezoneMinutes, _this._df.timezone);
            var startTime = startDate.getTime();
            var endDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](new Date(startTime), interval.timeUnit, interval.count, _this._df.utc);
            dataItem.setCalculatedValue(key, startTime, "open");
            dataItem.setCalculatedValue(key, endDate.getTime(), "close");
            dataItemsByAxis.setKey(startTime + intervalID, dataItem);
        });
    };
    /**
     * Collapses empty stretches of date/time scale by creating [[AxisBreak]]
     * elements for them.
     *
     * Can be used to automatically remove strethes without data, like weekends.
     *
     * No, need to call this manually. It will automatically be done if
     * `skipEmptyPeriods = true`.
     *
     * @ignore Exclude from docs
     */
    DateAxis.prototype.addEmptyUnitsBreaks = function () {
        var _this = this;
        if (this.skipEmptyPeriods && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](this.min) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](this.max)) {
            var timeUnit = this.baseInterval.timeUnit;
            var count = this.baseInterval.count;
            if (this._axisBreaks) {
                this._axisBreaks.clear(); // TODO: what about breaks added by user?
            }
            var date = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](new Date(this.min), timeUnit, count, this._firstWeekDay, this._df.utc, undefined, this._df.timezoneMinutes, this._df.timezone);
            var axisBreak = void 0;
            var _loop_1 = function () {
                _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](date, timeUnit, count, this_1._df.utc);
                var startTime = date.getTime();
                var startTimeStr = startTime.toString();
                var hasData = _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["contains"](this_1.series.iterator(), function (series) {
                    return !!series.dataItemsByAxis.getKey(_this.uid).getKey(startTimeStr + series.currentDataSetId);
                });
                // open break if not yet opened
                if (!hasData) {
                    if (!axisBreak) {
                        axisBreak = this_1.axisBreaks.create();
                        axisBreak.startDate = new Date(startTime);
                        this_1._gapBreaks = true;
                    }
                }
                else {
                    // close if already opened
                    if (axisBreak) {
                        // close at end time minus one millisecond
                        axisBreak.endDate = new Date(startTime - 1);
                        axisBreak = undefined;
                    }
                }
            };
            var this_1 = this;
            while (date.getTime() < this.max - this.baseDuration) {
                _loop_1();
            }
        }
    };
    /**
     * Updates positioning of Axis breaks after something changes.
     *
     * @ignore Exclude from docs
     */
    DateAxis.prototype.fixAxisBreaks = function () {
        var _this = this;
        _super.prototype.fixAxisBreaks.call(this);
        var axisBreaks = this._axisBreaks;
        if (axisBreaks) {
            if (axisBreaks.length > 0) {
                // process breaks
                axisBreaks.each(function (axisBreak) {
                    var breakGridCount = Math.ceil(_this._gridCount * (Math.min(_this.end, axisBreak.endPosition) - Math.max(_this.start, axisBreak.startPosition)) / (_this.end - _this.start));
                    axisBreak.gridInterval = _this.chooseInterval(0, axisBreak.adjustedEndValue - axisBreak.adjustedStartValue, breakGridCount);
                    var gridDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](new Date(axisBreak.adjustedStartValue), axisBreak.gridInterval.timeUnit, axisBreak.gridInterval.count, _this._firstWeekDay, _this._df.utc, undefined, _this._df.timezoneMinutes, _this._df.timezone);
                    if (gridDate.getTime() > axisBreak.startDate.getTime()) {
                        _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](gridDate, axisBreak.gridInterval.timeUnit, axisBreak.gridInterval.count, _this._df.utc);
                    }
                    axisBreak.gridDate = gridDate;
                });
            }
        }
    };
    /**
     * @ignore
     */
    DateAxis.prototype.getFirstWeekDay = function () {
        if (this._df) {
            return this._df.firstDayOfWeek;
        }
        return 1;
    };
    /**
     * [getGridDate description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param date           [description]
     * @param intervalCount  [description]
     * @return [description]
     */
    DateAxis.prototype.getGridDate = function (date, intervalCount) {
        var timeUnit = this._gridInterval.timeUnit;
        var realIntervalCount = this._gridInterval.count;
        // round date
        _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](date, timeUnit, 1, this._firstWeekDay, this._df.utc, undefined, this._df.timezoneMinutes, this._df.timezone);
        var prevTimestamp = date.getTime();
        var newDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["copy"](date);
        // modify date by adding intervalcount
        var timestamp = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](newDate, timeUnit, intervalCount, this._df.utc).getTime();
        // if it's axis break, get first rounded date which is not in a break
        var axisBreak = this.isInBreak(timestamp);
        if (axisBreak && axisBreak.endDate) {
            newDate = new Date(axisBreak.endDate.getTime());
            _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](newDate, timeUnit, realIntervalCount, this._firstWeekDay, this._df.utc, undefined, this._df.timezoneMinutes, this._df.timezone);
            if (newDate.getTime() < axisBreak.endDate.getTime()) {
                _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](newDate, timeUnit, realIntervalCount, this._df.utc);
            }
            timestamp = newDate.getTime();
        }
        // get duration between grid lines with break duration removed
        var durationBreaksRemoved = this.adjustDifference(prevTimestamp, timestamp);
        // calculate how many time units fit to this duration
        var countBreaksRemoved = Math.round(durationBreaksRemoved / _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](timeUnit));
        // if less units fit, add one and repeat
        if (countBreaksRemoved < realIntervalCount) {
            return this.getGridDate(date, intervalCount + realIntervalCount);
        }
        return newDate;
    };
    /**
     * [getBreaklessDate description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param axisBreak  [description]
     * @param timeUnit   [description]
     * @param count      [description]
     * @return [description]
     */
    DateAxis.prototype.getBreaklessDate = function (axisBreak, timeUnit, count) {
        var date = new Date(axisBreak.endValue);
        _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](date, timeUnit, count, this._firstWeekDay, this._df.utc, undefined, this._df.timezoneMinutes, this._df.timezone);
        _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](date, timeUnit, count, this._df.utc);
        var timestamp = date.getTime();
        axisBreak = this.isInBreak(timestamp);
        if (axisBreak) {
            return this.getBreaklessDate(axisBreak, timeUnit, count);
        }
        return date;
    };
    /**
     * (Re)validates all Axis elements.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     */
    DateAxis.prototype.validateAxisElements = function () {
        var _this = this;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](this.max) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](this.min)) {
            this.calculateZoom();
            // first regular items
            var timestamp = this._gridDate.getTime();
            var timeUnit = this._gridInterval.timeUnit;
            var intervalCount = this._gridInterval.count;
            var prevGridDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["copy"](this._gridDate);
            var dataItemsIterator_1 = this._dataItemsIterator;
            this.resetIterators();
            var _loop_2 = function () {
                var date = this_2.getGridDate(_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["copy"](prevGridDate), intervalCount);
                timestamp = date.getTime();
                var endDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["copy"](date); // you might think it's easier to add intervalduration to timestamp, however it won't work for months or years which are not of the same length
                endDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](endDate, timeUnit, intervalCount, this_2._df.utc);
                var format = this_2.dateFormats.getKey(timeUnit);
                if (this_2.markUnitChange && prevGridDate) {
                    if (_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["checkChange"](date, prevGridDate, this_2._nextGridUnit, this_2._df.utc)) {
                        if (timeUnit !== "year") {
                            format = this_2.periodChangeDateFormats.getKey(timeUnit);
                        }
                    }
                }
                var text = this_2._df.format(date, format);
                var dataItem = dataItemsIterator_1.find(function (x) { return x.text === text; });
                if (dataItem.__disabled) {
                    dataItem.__disabled = false;
                }
                this_2.appendDataItem(dataItem);
                dataItem.axisBreak = undefined;
                dataItem.date = date;
                dataItem.endDate = endDate;
                dataItem.text = text;
                this_2.validateDataElement(dataItem);
                prevGridDate = date;
            };
            var this_2 = this;
            while (timestamp <= this._maxZoomed) {
                _loop_2();
            }
            // breaks later
            var renderer_1 = this.renderer;
            if (this._axisBreaks) {
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this._axisBreaks.iterator(), function (axisBreak) {
                    if (axisBreak.breakSize > 0) {
                        var timeUnit_1 = axisBreak.gridInterval.timeUnit;
                        var intervalCount_1 = axisBreak.gridInterval.count;
                        // only add grid if gap is bigger then minGridDistance
                        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_9__["getDistance"](axisBreak.startPoint, axisBreak.endPoint) > renderer_1.minGridDistance * 4) {
                            var timestamp_1 = axisBreak.gridDate.getTime();
                            var prevGridDate_1;
                            var count = 0;
                            var _loop_3 = function () {
                                var date = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["copy"](axisBreak.gridDate);
                                timestamp_1 = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](date, timeUnit_1, intervalCount_1 * count, _this._df.utc).getTime();
                                count++;
                                if (timestamp_1 > axisBreak.adjustedStartValue && timestamp_1 < axisBreak.adjustedEndValue) {
                                    var endDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["copy"](date); // you might think it's easier to add intervalduration to timestamp, however it won't work for months or years which are not of the same length
                                    endDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](endDate, timeUnit_1, intervalCount_1, _this._df.utc);
                                    var format = _this.dateFormats.getKey(timeUnit_1);
                                    if (_this.markUnitChange && prevGridDate_1) {
                                        if (_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["checkChange"](date, prevGridDate_1, _this._nextGridUnit, _this._df.utc)) {
                                            if (timeUnit_1 !== "year") {
                                                format = _this.periodChangeDateFormats.getKey(timeUnit_1);
                                            }
                                        }
                                    }
                                    var text_1 = _this._df.format(date, format);
                                    var dataItem = dataItemsIterator_1.find(function (x) { return x.text === text_1; });
                                    if (dataItem.__disabled) {
                                        dataItem.__disabled = false;
                                    }
                                    //this.processDataItem(dataItem);
                                    _this.appendDataItem(dataItem);
                                    dataItem.axisBreak = axisBreak;
                                    axisBreak.dataItems.moveValue(dataItem);
                                    dataItem.date = date;
                                    dataItem.endDate = endDate;
                                    dataItem.text = text_1;
                                    prevGridDate_1 = date;
                                    _this.validateDataElement(dataItem);
                                }
                            };
                            while (timestamp_1 <= axisBreak.adjustedMax) {
                                _loop_3();
                            }
                        }
                    }
                });
            }
        }
    };
    /**
     * Validates Axis data item.
     *
     * @ignore Exclude from docs
     * @param dataItem Data item
     */
    DateAxis.prototype.validateDataElement = function (dataItem) {
        dataItem.itemIndex = this._axisItemCount;
        this._axisItemCount++;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](this.max) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](this.min)) {
            var renderer = this.renderer;
            var timestamp = dataItem.value;
            var endTimestamp = dataItem.endValue;
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](endTimestamp)) {
                endTimestamp = timestamp;
            }
            var position = this.valueToPosition(timestamp);
            var endPosition = this.valueToPosition(endTimestamp);
            var fillEndPosition = endPosition;
            if (!dataItem.isRange && this._gridInterval.count > this.baseInterval.count) {
                endPosition = position + (endPosition - position) / (this._gridInterval.count / this.baseInterval.count);
            }
            dataItem.position = position;
            var tick = dataItem.tick;
            if (tick && !tick.disabled) {
                renderer.updateTickElement(tick, position, endPosition);
            }
            var grid = dataItem.grid;
            if (grid && !grid.disabled) {
                renderer.updateGridElement(grid, position, endPosition);
            }
            var fill = dataItem.axisFill;
            if (fill && !fill.disabled) {
                renderer.updateFillElement(fill, position, fillEndPosition);
                if (!dataItem.isRange) {
                    this.fillRule(dataItem);
                }
            }
            var mask = dataItem.mask;
            if (mask) {
                renderer.updateFillElement(mask, position, endPosition);
            }
            if (dataItem.bullet) {
                renderer.updateBullet(dataItem.bullet, position, endPosition);
            }
            var label = dataItem.label;
            if (label && !label.disabled) {
                var location_1 = label.location;
                if (location_1 == 0) {
                    if (this._gridInterval.count == 1 && this._gridInterval.timeUnit != "week" && !dataItem.isRange) {
                        location_1 = 0.5;
                    }
                    else {
                        location_1 = 0;
                    }
                }
                renderer.updateLabelElement(label, position, endPosition, location_1);
            }
        }
    };
    Object.defineProperty(DateAxis.prototype, "baseDuration", {
        /**
         * A duration in milliseconds of the `baseInterval`.
         *
         * @return Duration (ms)
         */
        get: function () {
            return _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](this.baseInterval.timeUnit, this.baseInterval.count);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Adjusts min/max values.
     *
     * @ignore Exclude from docs.
     * @todo Description (review)
     * @param min  Min timestamp
     * @param max  Max timestamp
     * @return Adjusted min/max step
     */
    DateAxis.prototype.adjustMinMax = function (min, max) {
        return { min: min, max: max, step: this.baseDuration };
    };
    /**
     * Adjusts the minimum timestamp as per cell start location.
     *
     * @param value  Value
     * @return Adjusted value
     */
    DateAxis.prototype.fixMin = function (value) {
        // like this because months are not equal
        var interval = this.baseInterval;
        var startTime = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](new Date(value), interval.timeUnit, interval.count, this._firstWeekDay, this._df.utc, undefined, this._df.timezoneMinutes, this._df.timezone).getTime();
        var endTime = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](new Date(startTime), interval.timeUnit, interval.count, this._df.utc).getTime();
        return startTime + (endTime - startTime) * this.startLocation;
    };
    /**
     * Adjusts the maximum timestamp as per cell start location.
     *
     * @param value  Value
     * @return Adjusted value
     */
    DateAxis.prototype.fixMax = function (value) {
        // like this because months are not equal
        var interval = this.baseInterval;
        var startTime = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](new Date(value), interval.timeUnit, interval.count, this._firstWeekDay, this._df.utc, undefined, this._df.timezoneMinutes, this._df.timezone).getTime();
        var endTime = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](new Date(startTime), interval.timeUnit, interval.count, this._df.utc).getTime();
        return startTime + (endTime - startTime) * this.endLocation;
    };
    /**
     * [chooseInterval description]
     *
     * @ignore Exclude from docs.
     * @todo Description
     * @param index      [description]
     * @param duration   [description]
     * @param gridCount  [description]
     * @return [description]
     */
    DateAxis.prototype.chooseInterval = function (index, duration, gridCount, intervals) {
        if (!intervals) {
            intervals = this.gridIntervals;
        }
        var gridInterval = intervals.getIndex(index);
        var intervalDuration = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](gridInterval.timeUnit, gridInterval.count);
        var lastIndex = intervals.length - 1;
        if (index >= lastIndex) {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, intervals.getIndex(lastIndex));
        }
        var count = Math.ceil(duration / intervalDuration);
        if (duration < intervalDuration && index > 0) {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, intervals.getIndex(index - 1));
        }
        if (count <= gridCount) {
            return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, intervals.getIndex(index));
        }
        else {
            if (index + 1 < intervals.length) {
                return this.chooseInterval(index + 1, duration, gridCount, intervals);
            }
            else {
                return Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, intervals.getIndex(index));
            }
        }
    };
    /**
     * Formats the value according to axis' own [[DateFormatter]].
     *
     * @param value  Source value
     * @return Formatted value
     */
    DateAxis.prototype.formatLabel = function (value) {
        return this._df.format(value);
    };
    /**
     * Converts a Date to an asbolute pixel position within Axis.
     *
     * @param date  Date
     * @return Position (px)
     */
    DateAxis.prototype.dateToPosition = function (date) {
        return this.valueToPosition(date.getTime());
    };
    /**
     * Converts a numeric timestamp or a `Date` to a relative position on axis.
     *
     * @param date  Date or a timestamp
     * @return Relative position
     */
    DateAxis.prototype.anyToPosition = function (date) {
        if (date instanceof Date) {
            return this.dateToPosition(date);
        }
        else {
            return this.valueToPosition(date);
        }
    };
    /**
     * Converts date to orientation point (x, y, angle) on axis
     *
     * @param date Date
     * @return IOrientationPoint
     */
    DateAxis.prototype.dateToPoint = function (date) {
        var position = this.dateToPosition(date);
        var point = this.renderer.positionToPoint(position);
        var angle = this.renderer.positionToAngle(position);
        return { x: point.x, y: point.y, angle: angle };
    };
    /**
     * Converts a numeric value to orientation (x, y, angle) point on axis
     *
     * @param value  Value
     * @return Orientation point
     */
    DateAxis.prototype.anyToPoint = function (date) {
        if (date instanceof Date) {
            return this.dateToPoint(date);
        }
        else {
            return this.valueToPoint(date);
        }
    };
    /**
     * Converts pixel position within Axis to a corresponding Date.
     *
     * @param position  Position (px)
     * @return Date
     */
    DateAxis.prototype.positionToDate = function (position) {
        return new Date(this.positionToValue(position));
    };
    /**
     * Returns the relative position on axis for series' data item's value.
     *
     * @since 4.5.14
     * @param  dataItem  Data item
     * @param  key       Data field to get value from
     * @param  location  Location (0-1)
     * @return           Relative position
     */
    DateAxis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {
        var value = this.getTimeByLocation(dataItem, key, location);
        //let stack: number = dataItem.getValue("valueX", "stack");
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](value)) {
            value = this.baseValue;
        }
        var position = this.valueToPosition(value);
        if (range) {
            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__["fitToRange"](position, range.start, range.end);
        }
        return position;
    };
    /**
     * Returns relative position on axis for series' data item's value.
     *
     * @since 4.5.14
     * @param  dataItem  Data item
     * @param  key       Data field to get value from
     * @param  location  Location (0-1)
     * @return           Relative position
     */
    DateAxis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {
        var value = this.getTimeByLocation(dataItem, key, location);
        var stack = dataItem.getValue("valueX", "stack");
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](value)) {
            value = this.baseValue;
        }
        var position = this.valueToPosition(value + stack);
        if (range) {
            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__["fitToRange"](position, range.start, range.end);
        }
        return position;
    };
    /**
     * Returns an angle for series data item.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param dataItem  Data item
     * @param key       Data field to get value from
     * @param location  Location (0-1)
     * @param stackKey  Stack ID
     * @param range Range to fit in
     * @return Angle
     */
    DateAxis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {
        var value = this.getTimeByLocation(dataItem, key, location);
        var stack = dataItem.getValue(stackKey, "stack");
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](value)) {
            value = this.baseValue;
        }
        var position = this.valueToPosition(value + stack);
        if (range) {
            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__["fitToRange"](position, range.start, range.end);
        }
        return this.positionToAngle(position);
    };
    /**
     * [getTimeByLocation description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param dataItem  [description]
     * @param key       [description]
     * @param location  [description]
     * @return [description]
     */
    DateAxis.prototype.getTimeByLocation = function (dataItem, key, location) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](key)) {
            return;
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](location)) {
            location = dataItem.workingLocations[key];
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](location)) {
                location = 0;
            }
        }
        var startTime = dataItem.values[key]["open"];
        var endTime = dataItem.values[key]["close"];
        var workingValue = dataItem.values[key].workingValue;
        var value = dataItem.values[key].value;
        var difference = value - workingValue;
        startTime -= difference;
        endTime -= difference;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](startTime) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](endTime)) {
            return startTime + (endTime - startTime) * location;
        }
    };
    /**
     * Processes a related series' data item.
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param dataItem  Data item
     */
    DateAxis.prototype.processSeriesDataItem = function (dataItem, axisLetter) {
        var series = dataItem.component;
        var time;
        var date = dataItem["date" + axisLetter];
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](this.timezoneOffset)) {
            date.setTime(date.getTime() + (date.getTimezoneOffset() - this.timezoneOffset) * 60000);
            dataItem.setValue("date" + axisLetter, date.getTime(), 0);
        }
        else if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](this.timezone)) {
            date = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["setTimezone"](date, this.timezone);
            dataItem.setValue("date" + axisLetter, date.getTime(), 0);
            dataItem["date" + axisLetter] = date;
        }
        if (date) {
            time = date.getTime();
        }
        else {
            return;
        }
        var openDate = dataItem["openDate" + axisLetter];
        var prevSeriesTime = this._prevSeriesTime[series.uid];
        var openTime;
        if (openDate) {
            openTime = openDate.getTime();
        }
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](openTime)) {
            var difference = Math.abs(time - openTime);
            if (this._minDifference[series.uid] > difference) {
                this._minDifference[series.uid] = difference;
            }
        }
        var differece = time - prevSeriesTime;
        if (differece > 0) {
            if (this._minDifference[series.uid] > differece) {
                this._minDifference[series.uid] = differece;
            }
        }
        this._prevSeriesTime[series.uid] = time;
        if (series._baseInterval[this.uid]) {
            this.postProcessSeriesDataItem(dataItem);
        }
    };
    /**
     * [updateAxisBySeries description]
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    DateAxis.prototype.updateAxisBySeries = function () {
        _super.prototype.updateAxisBySeries.call(this);
        var baseInterval = this.chooseInterval(0, this.minDifference, 1);
        // handle short months
        if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"]("day", 27) && baseInterval.timeUnit == "week") {
            baseInterval.timeUnit = "month";
            baseInterval.count = 1;
        }
        if (baseInterval.timeUnit == "month") {
            if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"]("day", 29 * 2) && baseInterval.count == 1) {
                baseInterval.count = 2;
            }
            if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"]("day", 29 * 3) && baseInterval.count == 2) {
                baseInterval.count = 3;
            }
            if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"]("day", 29 * 6) && baseInterval.count == 5) {
                baseInterval.count = 6;
            }
        }
        // handle daylight saving
        if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"]("hour", 23) && baseInterval.timeUnit == "hour") {
            baseInterval.timeUnit = "day";
            baseInterval.count = 1;
        }
        if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"]("week", 1) - _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"]("hour", 1) && baseInterval.timeUnit == "day") {
            baseInterval.timeUnit = "week";
            baseInterval.count = 1;
        }
        if (this.minDifference >= _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"]("year", 1) - _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"]("day", 1.01) && baseInterval.timeUnit == "month") {
            baseInterval.timeUnit = "year";
            baseInterval.count = 1;
        }
        this._baseIntervalReal = baseInterval;
        this._mainBaseInterval = baseInterval;
        // no need to invalidate
    };
    Object.defineProperty(DateAxis.prototype, "baseInterval", {
        /**
         * @return Base interval
         */
        get: function () {
            if (this._groupInterval) {
                return this._groupInterval;
            }
            else if (this._baseInterval) {
                return this._baseInterval;
            }
            else {
                return this._baseIntervalReal;
            }
        },
        /**
         * A base interval (granularity) of data.
         *
         * Used to indicate what are the base units of your data.
         *
         * For example, if you have a data set that has a data point every 5 minutes,
         * you may want to set this to `{ timeUnit: "minute", count: 5 }`.
         *
         * If not set, the Axis will try to determine the setting by its own, looking
         * at actual data.
         *
         * For best results, try to follow these values for `count`:
         *
         * When unit is "month", use 12 / count = round number
         * When unit is "hour", use 24 / count = round number
         * When unit is "second" and "minute", use 60 / count = round number
         *
         * @param timeInterval base interval
         */
        set: function (timeInterval) {
            if (JSON.stringify(this._baseInterval) != JSON.stringify(timeInterval)) {
                this._baseInterval = timeInterval;
                this._mainBaseInterval = timeInterval;
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](timeInterval.count)) {
                    timeInterval.count = 1;
                }
                this.invalidate();
                this.postProcessSeriesDataItems();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateAxis.prototype, "mainBaseInterval", {
        /**
         * Indicates granularity of the data of source (unaggregated) data.
         *
         * @since 4.7.0
         * @return Granularity of the main data set
         */
        get: function () {
            if (this._baseInterval) {
                return this._baseInterval;
            }
            else if (this._mainBaseInterval) {
                return this._mainBaseInterval;
            }
            else {
                return this._baseIntervalReal;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateAxis.prototype, "skipEmptyPeriods", {
        /**
         * @return Remove empty stretches of time?
         */
        get: function () {
            return this.getPropertyValue("skipEmptyPeriods");
        },
        /**
         * If enabled, axis will automatically collapse empty (without data points)
         * periods of time, i.e. weekends.
         *
         * An "empty" period is considered a stretch of time in the length of current
         * `baseInterval` without a single data point in it.
         *
         * For each such empty period, axis will automatically create an
         * [[AxisBreak]]. By default they will be invisible. You can still configure
         * them by accessing `axis.breaks.template`.
         *
         * [More info about breaks](https://www.amcharts.com/docs/v4/concepts/axes/#Breaks).
         *
         * Important notes:
         * * If you set this property to `true`, you can not add your custom axis breaks to this axis anymore.
         * * Using this feature affects performance. Use only if you need it.
         * * Setting this to `true` will reset appearance of breaks. If you want to modify appearance, do it *after* you set `skipEmptyPeriods`.
         * * Some axis label overlapping might happen.
         * * This setting is not compatible with `groupData = true`.
         *
         * @default false
         * @param value  Remove empty stretches of time?
         */
        set: function (value) {
            if (value) {
                var breakTemplate = this.axisBreaks.template;
                breakTemplate.startLine.disabled = true;
                breakTemplate.endLine.disabled = true;
                breakTemplate.fillShape.disabled = true;
                breakTemplate.breakSize = 0;
            }
            else {
                if (this._gapBreaks) {
                    this.axisBreaks.clear();
                    this._gapBreaks = false;
                }
            }
            if (this.setPropertyValue("skipEmptyPeriods", value)) {
                this.invalidate();
                this.postProcessSeriesDataItems();
                this.invalidateSeries();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateAxis.prototype, "tooltipDateFormat", {
        /**
         * @return Date format
         */
        get: function () {
            return this.getPropertyValue("tooltipDateFormat");
        },
        /**
         * A special date format to apply axis tooltips.
         *
         * Will use same format as for labels, if not set.
         *
         * @param value  Date format
         */
        set: function (value) {
            this.setPropertyValue("tooltipDateFormat", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateAxis.prototype, "markUnitChange", {
        /**
         * @return Use different format for period beginning?
         */
        get: function () {
            return this.getPropertyValue("markUnitChange");
        },
        /**
         * Use `periodChangeDateFormats` to apply different formats to the first
         * label in bigger time unit.
         *
         * @default true
         * @param value  Use different format for period beginning?
         */
        set: function (value) {
            if (this.setPropertyValue("markUnitChange", value)) {
                this.invalidateData();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns text to show in a tooltip, based on specific relative position
     * within axis.
     *
     * The label will be formatted as per [[DateFormatter]] set for the whole
     * chart, or explicitly for this Axis.
     *
     * @ignore Exclude from docs
     * @param position  Position
     * @return Label (formatted date)
     */
    DateAxis.prototype.getTooltipText = function (position) {
        var text;
        var date = this.positionToDate(position);
        date = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](date, this.baseInterval.timeUnit, this.baseInterval.count, this._firstWeekDay, this._df.utc, new Date(this.min), this._df.timezoneMinutes, this._df.timezone);
        this.tooltipDate = date;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](this.tooltipDateFormat)) {
            text = this._df.format(date, this.tooltipDateFormat);
        }
        else {
            var dateFormat = this.dateFormats.getKey(this.baseInterval.timeUnit);
            if (dateFormat) {
                text = this._df.format(date, dateFormat);
            }
            else {
                text = this.getPositionLabel(position);
            }
        }
        if (!this._adapterO) {
            return text;
        }
        else {
            return this._adapterO.apply("getTooltipText", text);
        }
    };
    /**
     * Takes an absolute position within axis and adjust it to a specific position within base interval. (cell)
     *
     * @ignore Exclude from docs
     * @param position Source position
     * @param location  Location in the cell
     * @return Adjusted position
     */
    DateAxis.prototype.roundPosition = function (position, location, axisLocation) {
        var baseInterval = this.baseInterval;
        var timeUnit = baseInterval.timeUnit;
        var count = baseInterval.count;
        var date = this.positionToDate(position);
        _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](date, timeUnit, count, this._firstWeekDay, this._df.utc, undefined, this._df.timezoneMinutes, this._df.timezone);
        if (location > 0) {
            _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](date, timeUnit, location * count, this._df.utc);
        }
        if (axisLocation > 0 && axisLocation < 1) {
            date.setTime(date.getTime() + this.baseDuration * axisLocation);
        }
        if (this.isInBreak(date.getTime())) {
            while (date.getTime() < this.max) {
                _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](date, timeUnit, count, this._df.utc);
                if (!this.isInBreak(date.getTime())) {
                    break;
                }
            }
        }
        return this.dateToPosition(date);
    };
    /**
     * Returns an relative position of the start of the cell (period), that specific position value falls into.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param position  Relative position
     * @return Cell start relative position
     */
    DateAxis.prototype.getCellStartPosition = function (position) {
        return this.roundPosition(position, 0);
    };
    /**
     * Returns an relative position of the end of the cell (period), that specific position value falls into.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param position  Relative position
     * @return Cell end relative position
     */
    DateAxis.prototype.getCellEndPosition = function (position) {
        return this.roundPosition(position, 1);
        //return this.dateToPosition($time.add(this.positionToDate(this.roundPosition(position, 1)), this.baseInterval.timeUnit, this.baseInterval.count));
    };
    /**
     * Returns a Series data item that corresponds to the specific pixel position
     * of the Axis.
     *
     * If `findNearest` (third parameter) is set to `true`, the method will try
     * to locate nearest available data item if none is found directly under
     * `position`.
     *
     * @param series       Series
     * @param position     Position (px)
     * @param findNearest  Should axis try to find nearest tooltip if there is no data item at exact position
     * @return Data item
     */
    DateAxis.prototype.getSeriesDataItem = function (series, position, findNearest) {
        var value = this.positionToValue(position);
        var location = 0.5;
        if (this.axisLetter == "Y") {
            location = series.dataItems.template.locations.dateY;
        }
        else {
            location = series.dataItems.template.locations.dateX;
        }
        var deltaValue = value - location * this.baseDuration;
        var date = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](new Date(value), this.baseInterval.timeUnit, this.baseInterval.count, this._firstWeekDay, this._df.utc, undefined, this._df.timezoneMinutes, this._df.timezone);
        var nextDate = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](new Date(value + this.baseDuration), this.baseInterval.timeUnit, this.baseInterval.count, this._firstWeekDay, this._df.utc, undefined, this._df.timezoneMinutes, this._df.timezone);
        if (nextDate.getTime() > date.getTime()) {
            if (Math.abs(nextDate.getTime() - deltaValue) < Math.abs(deltaValue - date.getTime())) {
                date = nextDate;
            }
        }
        var dataItemsByAxis = series.dataItemsByAxis.getKey(this.uid);
        var dataItem = dataItemsByAxis.getKey(date.getTime() + series.currentDataSetId);
        // todo:  alternatively we can find closiest here
        if (!dataItem && findNearest) {
            var key_1;
            if (this.axisLetter == "Y") {
                key_1 = "dateY";
            }
            else {
                key_1 = "dateX";
            }
            dataItem = series.dataItems.getIndex(series.dataItems.findClosestIndex(date.getTime(), function (x) {
                if (x[key_1]) {
                    return x[key_1].getTime();
                }
                else {
                    return -Infinity;
                }
            }, "any"));
        }
        return dataItem;
    };
    /**
     * Returns a formatted date based on position in axis scale.
     *
     * Please note that `position` represents position within axis which may be
     * zoomed and not correspond to Cursor's `position`.
     *
     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.
     *
     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.
     * @param position  Relative position on axis (0-1)
     * @return Position label
     */
    DateAxis.prototype.getPositionLabel = function (position) {
        // @todo Better format recognition
        var date = this.positionToDate(position);
        return this._df.format(date, this.getCurrentLabelFormat());
    };
    /**
     * Returns label date format based on currently used time units
     *
     * @return Format
     */
    DateAxis.prototype.getCurrentLabelFormat = function () {
        return this.dateFormats.getKey(this._gridInterval ? this._gridInterval.timeUnit : "day");
    };
    /**
     * Initializes an Axis renderer.
     *
     * @ignore Exclude from docs
     */
    DateAxis.prototype.initRenderer = function () {
        _super.prototype.initRenderer.call(this);
        var renderer = this.renderer;
        if (renderer) {
            // Set defaults
            renderer.ticks.template.location = 0;
            renderer.grid.template.location = 0;
            renderer.labels.template.location = 0;
            renderer.baseGrid.disabled = true;
        }
    };
    Object.defineProperty(DateAxis.prototype, "basePoint", {
        /**
         * Coordinates of the actual axis start.
         *
         * @ignore Exclude from docs
         * @return Base point
         */
        get: function () {
            return { x: 0, y: 0 };
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    DateAxis.prototype.animateMinMax = function (min, max) {
        var _this = this;
        var animation = this.animate([{ property: "_minAdjusted", from: this._minAdjusted, to: min }, { property: "_maxAdjusted", from: this._maxAdjusted, to: max }], this.rangeChangeDuration, this.rangeChangeEasing);
        animation.events.on("animationprogress", function () {
            _this.dispatch("extremeschanged");
        });
        return animation;
    };
    /**
     * Invalidates axis data items when series extremes change
     */
    DateAxis.prototype.handleExtremesChange = function () {
        _super.prototype.handleExtremesChange.call(this);
        if (this.groupData) {
            var id = this.baseInterval.timeUnit + this.baseInterval.count;
            this.groupMin[id] = this._finalMin;
            this.groupMax[id] = this._finalMax;
        }
    };
    /**
     * Zooms axis to specific Dates.
     *
     * @param startDate       Start date
     * @param endValue        End date
     * @param skipRangeEvent  Do not invoke events
     * @param instantly       Do not play zoom animations
     */
    DateAxis.prototype.zoomToDates = function (startDate, endDate, skipRangeEvent, instantly, adjust) {
        startDate = this._df.parse(startDate);
        endDate = this._df.parse(endDate);
        this.zoomToValues(startDate.getTime(), endDate.getTime(), skipRangeEvent, instantly, adjust);
    };
    /**
     * Zooms axis to specific values.
     *
     * @param startValue      Start value
     * @param endValue        End value
     * @param skipRangeEvent  Do not invoke events
     * @param instantly       Do not play zoom animations
     */
    DateAxis.prototype.zoomToValues = function (startValue, endValue, skipRangeEvent, instantly, adjust) {
        var _this = this;
        if (!this.groupData) {
            var start = (startValue - this.min) / (this.max - this.min);
            var end = (endValue - this.min) / (this.max - this.min);
            this.zoom({ start: start, end: end }, skipRangeEvent, instantly);
        }
        else {
            var difference = this.adjustDifference(startValue, endValue);
            var isEnd = false;
            if (endValue == this.max) {
                isEnd = true;
            }
            var isStart = false;
            if (startValue == this.min) {
                isStart = true;
            }
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](difference)) {
                var mainBaseInterval = this.mainBaseInterval;
                var groupInterval_1 = this.chooseInterval(0, difference, this.groupCount, this.groupIntervals);
                if ((groupInterval_1.timeUnit == mainBaseInterval.timeUnit && groupInterval_1.count < mainBaseInterval.count) || _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](groupInterval_1.timeUnit, 1) < _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["getDuration"](mainBaseInterval.timeUnit, 1)) {
                    groupInterval_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, mainBaseInterval);
                }
                var id = groupInterval_1.timeUnit + groupInterval_1.count;
                var min_1 = this.groupMin[id];
                var max_1 = this.groupMax[id];
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](min_1) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](max_1)) {
                    min_1 = Number.POSITIVE_INFINITY;
                    max_1 = Number.NEGATIVE_INFINITY;
                    this.series.each(function (series) {
                        var seriesMin = series.min(_this);
                        var seriesMax = series.max(_this);
                        if (series._dataSets) {
                            var ds = series._dataSets.getKey(groupInterval_1.timeUnit + groupInterval_1.count);
                            if (ds) {
                                var mindi = ds.getIndex(0);
                                var maxdi = ds.getIndex(ds.length - 1);
                                if (mindi) {
                                    if (series.xAxis == _this) {
                                        seriesMin = mindi.dateX.getTime();
                                    }
                                    else if (series.yAxis == _this) {
                                        seriesMin = mindi.dateY.getTime();
                                    }
                                }
                                if (maxdi) {
                                    if (series.xAxis == _this) {
                                        seriesMax = maxdi.dateX.getTime();
                                    }
                                    else if (series.yAxis == _this) {
                                        seriesMax = maxdi.dateY.getTime();
                                    }
                                }
                            }
                        }
                        seriesMax = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](_core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["add"](new Date(seriesMax), groupInterval_1.timeUnit, 1, _this._df.utc), groupInterval_1.timeUnit, 1, _this._df.firstDayOfWeek, _this._df.utc, undefined, _this._df.timezoneMinutes, _this._df.timezone).getTime();
                        if (seriesMin < min_1) {
                            min_1 = seriesMin;
                        }
                        if (seriesMax > max_1) {
                            max_1 = seriesMax;
                        }
                    });
                    this.groupMin[id] = min_1;
                    this.groupMax[id] = max_1;
                }
                startValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__["fitToRange"](startValue, min_1, max_1);
                endValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__["fitToRange"](endValue, min_1, max_1);
                if (adjust) {
                    if (isEnd) {
                        startValue = endValue - difference;
                        startValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__["fitToRange"](startValue, min_1, max_1);
                    }
                    if (isStart) {
                        endValue = startValue + difference;
                        endValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__["fitToRange"](endValue, min_1, max_1);
                    }
                }
                var start = (startValue - min_1) / (max_1 - min_1);
                var end = (endValue - min_1) / (max_1 - min_1);
                this.zoom({ start: start, end: end }, skipRangeEvent, instantly);
            }
        }
    };
    /**
     * Adds `baseInterval` to "as is" fields.
     *
     * @param field  Field name
     * @return Assign as is?
     */
    DateAxis.prototype.asIs = function (field) {
        return field == "baseInterval" || _super.prototype.asIs.call(this, field);
    };
    /**
     * Copies all properties and related data from a different instance of Axis.
     *
     * @param source Source Axis
     */
    DateAxis.prototype.copyFrom = function (source) {
        var _this = this;
        _super.prototype.copyFrom.call(this, source);
        this.dateFormats = source.dateFormats;
        this.periodChangeDateFormats = source.periodChangeDateFormats;
        this.groupIntervals.clear();
        source.groupIntervals.each(function (interval) {
            _this.groupIntervals.push(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, interval));
        });
        this.gridIntervals.clear();
        source.gridIntervals.each(function (interval) {
            _this.gridIntervals.push(Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__assign"])({}, interval));
        });
        if (source._baseInterval) {
            this.baseInterval = source._baseInterval;
        }
    };
    /**
     * Shows Axis tooltip at specific relative position within Axis. (0-1)
     *
     * @param position Position (0-1)
     * @param local or global position
     */
    DateAxis.prototype.showTooltipAtPosition = function (position, local) {
        var _this = this;
        if (!local) {
            position = this.toAxisPosition(position);
        }
        if (this.snapTooltip) {
            // rounding is not good, pen/aac4e7f66f019d36b2447f050c600c13 (no last tootltip shown)
            var actualDate = this.positionToDate(position); //$time.round(this.positionToDate(position), this.baseInterval.timeUnit, 1, this.getFirstWeekDay(), this.dateFormatter.utc, undefined, this._df.timezoneMinutes, this._df.timezone);
            var actualTime_1 = actualDate.getTime();
            var closestDate_1;
            this.series.each(function (series) {
                if (series.baseAxis == _this) {
                    var dataItem = _this.getSeriesDataItem(series, position, true);
                    if (dataItem) {
                        var date = void 0;
                        if (series.xAxis == _this) {
                            date = dataItem.dateX;
                        }
                        if (series.yAxis == _this) {
                            date = dataItem.dateY;
                        }
                        if (!closestDate_1) {
                            closestDate_1 = date;
                        }
                        else {
                            if (Math.abs(closestDate_1.getTime() - actualTime_1) > Math.abs(date.getTime() - actualTime_1)) {
                                closestDate_1 = date;
                            }
                        }
                    }
                }
            });
            if (closestDate_1) {
                var closestTime_1 = closestDate_1.getTime();
                closestDate_1 = _core_utils_Time__WEBPACK_IMPORTED_MODULE_6__["round"](new Date(closestTime_1), this.baseInterval.timeUnit, this.baseInterval.count, this._firstWeekDay, this._df.utc, undefined, this._df.timezoneMinutes, this._df.timezone);
                closestTime_1 = closestDate_1.getTime();
                var tooltipLocation = this.renderer.tooltipLocation;
                if (tooltipLocation == 0) {
                    tooltipLocation = 0.0001;
                }
                closestDate_1 = new Date(closestDate_1.getTime() + this.baseDuration * tooltipLocation);
                position = this.dateToPosition(closestDate_1);
                if (this.chart.cursor && this.chart.cursor.snapToSeries) {
                    //void
                }
                else {
                    this.series.each(function (series) {
                        var dataItem = series.dataItemsByAxis.getKey(_this.uid).getKey(closestTime_1 + series.currentDataSetId);
                        var point = series.showTooltipAtDataItem(dataItem);
                        if (point) {
                            _this.chart._seriesPoints.push({ series: series, point: point });
                        }
                        else {
                            // check, otherwise column tooltip will be hidden
                            if (series.tooltipText || series.tooltipHTML) {
                                series.hideTooltip();
                            }
                        }
                    });
                }
                //this.chart.sortSeriesTooltips(seriesPoints);
            }
        }
        _super.prototype.showTooltipAtPosition.call(this, position, true);
    };
    Object.defineProperty(DateAxis.prototype, "snapTooltip", {
        /**
         * @return Should snap?
         */
        get: function () {
            return this.getPropertyValue("snapTooltip");
        },
        /**
         * Should the nearest tooltip be shown if no data item is found on the
         * current cursor position.
         *
         * @default true
         * @param value  Should snap?
         */
        set: function (value) {
            this.setPropertyValue("snapTooltip", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateAxis.prototype, "groupData", {
        /**
         * @return Group data points?
         */
        get: function () {
            return this.getPropertyValue("groupData");
        },
        /**
         * Indicates if data should be aggregated to composide data items if there
         * are more data items in selected range than `groupCount`.
         *
         * Grouping will occur automatically, based on current selection range, and
         * will change dynamically when user zooms in/out the chart.
         *
         * NOTE: This works only if [[DateAxis]] is base axis of an [[XYSeries]].
         *
         * The related [[XYSeries]] also needs to be set up to take advantage of, by
         * setting its [`groupFields`](https://www.amcharts.com/docs/v4/reference/xyseries/#groupFields_property).
         *
         * The group intervals to aggregate data to is defined by `groupIntervals`
         * property.
         *
         * ```TypeScript
         * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());
         * dateAxis.groupData = true;
         *
         * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());
         *
         * let series = chart.series.push(new am4charts.LineSeries());
         * series.dataFields.dateX = "date";
         * series.dataFields.valueY = "value";
         * series.groupFields.valueY = "average";
         * ```
         * ```JavaScript
         * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
         * dateAxis.groupData = true;
         *
         * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());
         *
         * var series = chart.series.push(new am4charts.LineSeries());
         * series.dataFields.dateX = "date";
         * series.dataFields.valueY = "value";
         * series.groupFields.valueY = "average";
         * ```
         * ```JSON
         * {
         *   // ...
         *   "xAxes": [{
         *     "type": "DateAxis",
         *     "groupData": true
         *   }],
         *   "yAxes": [{
         *     "type": "ValueAxis"
         *   }],
         *   "series": [{
         *     "type": "LineSeries",
         *     "dataFields": {
         *       "dateX": "date",
         *       "valueY": "value"
         *     },
         *     "groupFields": {
         *       "valueY": "average"
         *     }
         *   }]
         * }
         * ```
         *
         * @default false
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.
         * @since 4.7.0
         * @param  value  Group data points?
         */
        set: function (value) {
            var _this = this;
            if (this.setPropertyValue("groupData", value)) {
                this.series.each(function (series) {
                    series.setDataSet("");
                    if (value && !series.dataGrouped && series.inited) {
                        series._baseInterval[_this.uid] = _this.mainBaseInterval;
                        _this.groupSeriesData(series);
                    }
                });
                this._currentDataSetId = "";
                this._groupInterval = undefined;
                this.invalidate();
                this.invalidateSeries();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateAxis.prototype, "groupInterval", {
        /**
         * @return Interval
         */
        get: function () {
            return this.getPropertyValue("groupInterval");
        },
        /**
         * Disables automatic selection of data grouping intervals and always uses
         * `groupInterval` if set. Works only if `groupData = true`.
         *
         * @since 4.9.24
         * @param  value  Interval
         */
        set: function (value) {
            if (this.setPropertyValue("groupInterval", value)) {
                this.invalidate();
                this.invalidateSeries();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateAxis.prototype, "groupCount", {
        /**
         * @return Number of data items
         */
        get: function () {
            return this.getPropertyValue("groupCount");
        },
        /**
         * Indicates threshold of data items in selected range at which to start
         * aggregating data items if `groupData = true`.
         *
         * @default 200
         * @since 4.7.0
         * @param  value  Number of data items
         */
        set: function (value) {
            this.setPropertyValue("groupCount", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateAxis.prototype, "timezoneOffset", {
        /**
         * @todo Timezone offset in minutes
         */
        get: function () {
            return this.getPropertyValue("timezoneOffset");
        },
        /**
         * If set will recalculate all timestamps in data by applying specific offset
         * in minutes.
         *
         * IMPORTANT: do not set `timezoneOffset` on both `DateAxis` and `dateFormatter`. It
         * will skew your results by applying offset twice.
         *
         * @since 4.8.5
         * @param  value Time zone offset in minutes
         */
        set: function (value) {
            this.setPropertyValue("timezoneOffset", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateAxis.prototype, "timezone", {
        /**
         * @return Timezone
         */
        get: function () {
            return this.getPropertyValue("timezone");
        },
        /**
         * If set will recalculate all timestamps in data to specific named timezone,
         * e.g. `"America/Vancouver"`, `"Australia/Sydney"`, `"UTC"`, etc.
         *
         * IMPORTANT: it is no longer recommended to use this setting. Please
         * set`timezone` on `dateFormatter`.
         *
         * @deprecated
         * @since 4.10.1
         * @param  value Time zone
         */
        set: function (value) {
            this.setPropertyValue("timezone", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateAxis.prototype, "gridInterval", {
        /**
         * Current grid interval.
         *
         * @return Grid interval
         */
        get: function () {
            return this._gridInterval;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    DateAxis.prototype.makeGap = function (dataItem, previous) {
        var series = dataItem.component;
        if (dataItem && previous) {
            if (!series.connect && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](series.autoGapCount)) {
                if (series.baseAxis == this) {
                    var date = dataItem.dates["date" + this.axisLetter];
                    var prevDate = previous.dates["date" + this.axisLetter];
                    if (date && prevDate) {
                        var time = date.getTime();
                        var prevTime = prevDate.getTime();
                        if (time - prevTime > series.autoGapCount * this.baseDuration) {
                            return true;
                        }
                    }
                }
            }
        }
        return false;
    };
    Object.defineProperty(DateAxis.prototype, "baseValue", {
        /**
         * @return base value
         */
        get: function () {
            return this.min;
        },
        enumerable: true,
        configurable: true
    });
    return DateAxis;
}(_ValueAxis__WEBPACK_IMPORTED_MODULE_1__["ValueAxis"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["DateAxis"] = DateAxis;
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["DateAxisDataItem"] = DateAxisDataItem;
//# sourceMappingURL=DateAxis.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxisBreak.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxisBreak.js ***!
  \*********************************************************************************/
/*! exports provided: DateAxisBreak */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DateAxisBreak", function() { return DateAxisBreak; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _ValueAxisBreak__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ValueAxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxisBreak.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * DateAxisBreak includes functionality to add breaks on a [[DateAxis]].
 *
 * A "break" can be used to "cut out" specific ranges of the axis scale, e.g.
 * weekends and holidays out of the Date-based axis.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Class used to define breaks for [[DateAxis]].
 *
 * A "break" can be used to "cut out" specific ranges of the axis scale, e.g.
 * weekends and holidays out of the Date-based axis.
 *
 * @see {@link IDateAxisBreakEvents} for a list of available events
 * @see {@link IDateAxisBreakAdapters} for a list of available Adapters
 * @important
 */
var DateAxisBreak = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(DateAxisBreak, _super);
    /**
     * Constructor
     */
    function DateAxisBreak() {
        var _this = _super.call(this) || this;
        _this.className = "DateAxisBreak";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(DateAxisBreak.prototype, "startDate", {
        /**
         * @return Start date
         */
        get: function () {
            return this.getPropertyValue("startDate");
        },
        /**
         * Starting date for the break.
         *
         * @param value Start date
         */
        set: function (value) {
            if (this.setPropertyValue("startDate", value)) {
                this.startValue = value.getTime();
                if (this.axis) {
                    this.axis.invalidate();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DateAxisBreak.prototype, "endDate", {
        /**
         * @return End date
         */
        get: function () {
            return this.getPropertyValue("endDate");
        },
        /**
         * Ending date for the break.
         *
         * @param value End date
         */
        set: function (value) {
            if (this.setPropertyValue("endDate", value)) {
                this.endValue = value.getTime();
                if (this.axis) {
                    this.axis.invalidate();
                    this.axis.invalidateSeries();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    return DateAxisBreak;
}(_ValueAxisBreak__WEBPACK_IMPORTED_MODULE_1__["ValueAxisBreak"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["DateAxisBreak"] = DateAxisBreak;
//# sourceMappingURL=DateAxisBreak.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DurationAxis.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/DurationAxis.js ***!
  \********************************************************************************/
/*! exports provided: DurationAxisDataItem, DurationAxis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DurationAxisDataItem", function() { return DurationAxisDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "DurationAxis", function() { return DurationAxis; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _ValueAxis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ValueAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * DurationAxis module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines data item for [[DurationAxis]].
 *
 * @see {@link DataItem}
 */
var DurationAxisDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(DurationAxisDataItem, _super);
    /**
     * Constructor
     */
    function DurationAxisDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "DurationAxisDataItem";
        _this.applyTheme();
        return _this;
    }
    return DurationAxisDataItem;
}(_ValueAxis__WEBPACK_IMPORTED_MODULE_1__["ValueAxisDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to create an axis that shows time durations.
 *
 * ```TypeScript
 * // Create the axis
 * let xAxis = chart.xAxes.push(new am4charts.DurationAxis());
 *
 * // Set settings
 * xAxis.title.text = "Time";
 * ```
 * ```JavaScript
 * // Create the axis
 * var valueAxis = chart.xAxes.push(new am4charts.DurationAxis());
 *
 * // Set settings
 * valueAxis.title.text = "Time";
 * ```
 * ```JSON
 * "xAxes": [{
 *   "type": "DurationAxis",
 *   "title": {
 *     "text": "Time"
 *   }
 * }]
 * ```
 *
 * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} for mor information about duration formatters.
 * @see {@link IDurationAxisEvents} for a list of available Events
 * @see {@link IDurationAxisAdapters} for a list of available Adapters
 * @important
 */
var DurationAxis = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(DurationAxis, _super);
    /**
     * Constructor
     */
    function DurationAxis() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A base unit (granularity) of data.
         *
         * Used to indicate what are the base units of your data.
         */
        _this._baseUnit = "second";
        _this.className = "DurationAxis";
        _this.setPropertyValue("maxZoomFactor", 1000000);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Formats the value according to axis' own [[DurationFormatter]].
     *
     * @param value  Source value
     * @return Formatted value
     */
    DurationAxis.prototype.formatLabel = function (value, format) {
        return this.durationFormatter.format(value, format || this.axisDurationFormat);
    };
    /**
     * Adjusts actual min and max scale values so that the axis starts and ends
     * at "nice" values, unless `strictMinMax` is set.
     *
     * The `difference` can be something else than `max - min`, because of the
     * axis breaks.
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param min        [description]
     * @param max        [description]
     * @param difference [description]
     * @param gridCount  [description]
     * @param strictMode [description]
     * @return [description]
     */
    DurationAxis.prototype.adjustMinMax = function (min, max, difference, gridCount, strictMode) {
        var e_1, _a;
        var minMaxStep;
        var timeUnit = this.baseUnit;
        // we don't allow to go to smaller units, setting so to avoid invalidation
        this.setPropertyValue("maxPrecision", 0);
        if (timeUnit == "millisecond" || timeUnit == "second" || timeUnit == "minute" || timeUnit == "hour") {
            // will fail if 0
            if (gridCount <= 1) {
                gridCount = 1;
            }
            gridCount = Math.round(gridCount);
            var initialMin = min;
            var initialMax = max;
            // in case min and max is the same, use max
            if (difference === 0) {
                difference = Math.abs(max);
            }
            var step = difference / gridCount;
            var divisors = [60, 30, 20, 15, 10, 2, 1];
            var realDivisor = 1;
            if (timeUnit == "hour") {
                divisors = [24, 12, 6, 4, 2, 1];
            }
            try {
                for (var divisors_1 = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(divisors), divisors_1_1 = divisors_1.next(); !divisors_1_1.done; divisors_1_1 = divisors_1.next()) {
                    var divisor = divisors_1_1.value;
                    if (difference / divisor > gridCount) {
                        realDivisor = divisor;
                        break;
                    }
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (divisors_1_1 && !divisors_1_1.done && (_a = divisors_1.return)) _a.call(divisors_1);
                }
                finally { if (e_1) throw e_1.error; }
            }
            var count = Math.ceil(((max - min) / realDivisor) / gridCount);
            var exponent = Math.log(Math.abs(count)) * Math.LOG10E;
            var power = Math.pow(10, Math.floor(exponent)) / 10;
            var reducedCount = count / power;
            // find closest to divisor
            var closest = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["closest"](divisors, reducedCount);
            count = closest * power;
            step = realDivisor * count;
            // TODO can this be removed ?
            this.durationFormatter.getValueUnit(step, this.baseUnit);
            min = Math.floor(min / step) * step;
            max = Math.ceil(max / step) * step;
            if (strictMode) {
                min -= step;
                if (min < 0 && initialMin >= 0) {
                    min = 0;
                }
                max += step;
                if (max > 0 && initialMax <= 0) {
                    max = 0;
                }
            }
            minMaxStep = { min: min, max: max, step: step };
        }
        else {
            minMaxStep = _super.prototype.adjustMinMax.call(this, min, max, difference, gridCount, strictMode);
        }
        // choose duration formatter based on step
        this.axisDurationFormat = this.durationFormatter.getFormat(minMaxStep.step, minMaxStep.max, this.baseUnit);
        return minMaxStep;
    };
    Object.defineProperty(DurationAxis.prototype, "tooltipDurationFormat", {
        /**
         * @return Duration format for axis labels
         */
        get: function () {
            return this._tooltipDurationFormat;
        },
        /**
         * A special duration format to apply axis tooltips.
         *
         * Will use same format as for labels, if not set.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-duration/} for mor information.
         * @param value  Duration format for axis labels
         */
        set: function (value) {
            this._tooltipDurationFormat = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns text to show in a axis tooltip, based on specific position within
     * axis.
     *
     * The label will be formatted as per [[NumberFormatter]] set for the whole
     * chart, or explicitly for this Axis.
     *
     * @ignore Exclude from docs
     * @param position  Position (px)
     * @return Label (numeric value)
     */
    DurationAxis.prototype.getTooltipText = function (position) {
        var value = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["round"](this.positionToValue(position), this._stepDecimalPlaces);
        var valueStr = this.formatLabel(value, this.tooltipDurationFormat);
        if (!this._adapterO) {
            return valueStr;
        }
        else {
            return this._adapterO.apply("getTooltipText", valueStr);
        }
    };
    Object.defineProperty(DurationAxis.prototype, "baseUnit", {
        /**
         * @return Base unit
         */
        get: function () {
            return this._baseUnit;
        },
        /**
         * A base unit (granularity) of data.
         *
         * Used to indicate what are the base units of your data.
         *
         * Available options: "millisecond", "second" (default), "minute", "hour",
         * "day", "week", "month", "year".
         *
         * @default "second"
         * @param timeUnit
         */
        set: function (timeUnit) {
            if (this._baseUnit != timeUnit) {
                this._baseUnit = timeUnit;
                this.durationFormatter.baseUnit = timeUnit;
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all properties and related data from a different instance of Axis.
     *
     * @param source Source Axis
     */
    DurationAxis.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.baseUnit = source.baseUnit;
    };
    return DurationAxis;
}(_ValueAxis__WEBPACK_IMPORTED_MODULE_1__["ValueAxis"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["DurationAxis"] = DurationAxis;
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["DurationAxisDataItem"] = DurationAxisDataItem;
//# sourceMappingURL=DurationAxis.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/Grid.js":
/*!************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/Grid.js ***!
  \************************************************************************/
/*! exports provided: Grid */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Grid", function() { return Grid; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Responsive */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Responsive.js");
/**
 * A module defining functionality for axis grid elements.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Displays an axis grid line.
 *
 * @see {@link IGridEvents} for a list of available events
 * @see {@link IGridAdapters} for a list of available Adapters
 * @todo Review: container is better, as we'll be able to attach something to the grid, also with 3d charts we might need some additional elements
 * @important
 */
var Grid = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Grid, _super);
    /**
     * Constructor
     */
    function Grid() {
        var _this = _super.call(this) || this;
        _this.className = "Grid";
        _this.element = _this.paper.add("path");
        _this.location = 0.5;
        _this.isMeasured = false;
        _this.above = false;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__["InterfaceColorSet"]();
        _this.stroke = interfaceColors.getFor("grid");
        _this.pixelPerfect = true;
        _this.strokeOpacity = 0.15;
        _this.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_3__["color"])(); // "none";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(Grid.prototype, "location", {
        /**
         * @return Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("location");
        },
        /**
         * Location within axis cell to place grid line on.
         *
         * * 0 - start
         * * 0.5 - middle
         * * 1 - end
         *
         * @param value  Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("location", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Grid.prototype, "above", {
        /**
         * @return Draw above series?
         */
        get: function () {
            return this.getPropertyValue("above");
        },
        /**
         * Normally fill goes below series. Set this to `true` to go above.
         *
         * @default false
         * @since 4.5.9
         * @param  value  Draw above series?
         */
        set: function (value) {
            this.setPropertyValue("above", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    Grid.prototype.setDisabled = function (value) {
        var changed = _super.prototype.setDisabled.call(this, value);
        if (this.axis) {
            this.axis.invalidateDataItems();
        }
        return changed;
    };
    return Grid;
}(_core_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Grid"] = Grid;
/**
 * Add default responsive rules
 */
/**
 * Disable grid on smaller charts
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_5__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_5__["ResponsiveBreakpoints"].maybeXS,
    state: function (target, stateId) {
        if (target instanceof Grid) {
            var state = target.states.create(stateId);
            state.properties.disabled = true;
            return state;
        }
        return null;
    }
});
//# sourceMappingURL=Grid.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/GridCircular.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/GridCircular.js ***!
  \********************************************************************************/
/*! exports provided: GridCircular */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GridCircular", function() { return GridCircular; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Grid__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Grid */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/Grid.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * A module defining functionality for circular axis grid elements.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a circular grid element for circular-type axis.
 *
 * @see {@link IGridCircularEvents} for a list of available events
 * @see {@link IGridCircularAdapters} for a list of available Adapters
 * @todo Review: container is better, as we'll be able to attach something to the GridCircular, also with 3d charts we might need some additional elements
 */
var GridCircular = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(GridCircular, _super);
    /**
     * Constructor
     */
    function GridCircular() {
        var _this = _super.call(this) || this;
        _this.className = "GridCircular";
        _this.pixelPerfect = false;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(GridCircular.prototype, "innerRadius", {
        /**
         * @return Inner radius
         */
        get: function () {
            return this.getPropertyValue("innerRadius");
        },
        /**
         * Inner radius of the circular grid. (absolute or relative)
         *
         * @param value Inner radius
         */
        set: function (value) {
            this.setPercentProperty("innerRadius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GridCircular.prototype, "radius", {
        /**
         * @return Outer radius
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * Outer radius of the circular grid. (absolute or relative)
         *
         * @param value Outer radius
         */
        set: function (value) {
            this.setPercentProperty("radius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    return GridCircular;
}(_Grid__WEBPACK_IMPORTED_MODULE_1__["Grid"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["GridCircular"] = GridCircular;
//# sourceMappingURL=GridCircular.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js ***!
  \*****************************************************************************/
/*! exports provided: ValueAxisDataItem, ValueAxis */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueAxisDataItem", function() { return ValueAxisDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueAxis", function() { return ValueAxis; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Axis__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Axis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js");
/* harmony import */ var _AxisRendererY__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AxisRendererY */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _ValueAxisBreak__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./ValueAxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxisBreak.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/**
 * Value Axis module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */










/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[ValueAxis]].
 *
 * @see {@link DataItem}
 */
var ValueAxisDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ValueAxisDataItem, _super);
    /**
     * Constructor
     */
    function ValueAxisDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "ValueAxisDataItem";
        _this.values.value = {};
        _this.values.endValue = {};
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(ValueAxisDataItem.prototype, "value", {
        /**
         * @return Value
         */
        get: function () {
            return this.values["value"].value;
        },
        /**
         * A data point's numeric value.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("value", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxisDataItem.prototype, "endValue", {
        /**
         * @return Value
         */
        get: function () {
            return this.values["endValue"].value;
        },
        /**
         * Data point's numeric end value.
         *
         * @param value  End value
         */
        set: function (value) {
            this.setValue("endValue", value);
        },
        enumerable: true,
        configurable: true
    });
    return ValueAxisDataItem;
}(_Axis__WEBPACK_IMPORTED_MODULE_1__["AxisDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to create a value axis for the chart.
 *
 * ```TypeScript
 * // Create the axis
 * let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
 *
 * // Set settings
 * valueAxis.title.text = "Monthly Sales";
 * ```
 * ```JavaScript
 * // Create the axis
 * var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
 *
 * // Set settings
 * valueAxis.title.text = "Monthly Sales";
 * ```
 * ```JSON
 * "yAxes": [{
 *   "type": "ValueAxis",
 *   "title": {
 *     "text": "Monthly Sales"
 *   }
 * }]
 * ```
 *
 * @see {@link IValueAxisEvents} for a list of available Events
 * @see {@link IValueAxisAdapters} for a list of available Adapters
 * @important
 */
var ValueAxis = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ValueAxis, _super);
    /**
     * Constructor
     */
    function ValueAxis() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * [_stepDecimalPlaces description]
         *
         * @todo Description
         */
        _this._stepDecimalPlaces = 0;
        _this._prevStepDecimalPlaces = 0;
        _this._adjustLabelPrecision = true;
        /**
         * Base value for the axis.
         */
        _this._baseValue = 0;
        /**
         * Adjusted start in case we have breaks.
         *
         * @todo Description
         */
        _this._adjustedStart = 0;
        /**
         * Adjusted end in case we have breaks.
         *
         * @todo Description
         */
        _this._adjustedEnd = 1;
        _this._extremesChanged = false;
        _this._deltaMinMax = 1;
        _this._dsc = false;
        /**
         * As calculating totals is expensive operation and not often needed, we
         * don't do it by default.
         *
         * In case you use `totalPercent` or `total` in your charts, this must be set
         * to `true`.
         *
         * @default false
         * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/#100_stacks} For using `calculateTotals` for 100% stacked series.
         * @see {@link https://www.amcharts.com/docs/v4/concepts/formatters/formatting-strings/#Placeholders_for_numeric_values} For using `calculateTotals` in labels.
         */
        _this.calculateTotals = false;
        _this.className = "ValueAxis";
        // Set field name
        _this.axisFieldName = "value";
        // Set defaults
        _this.setPropertyValue("maxZoomFactor", 1000);
        _this.setPropertyValue("extraMin", 0);
        _this.setPropertyValue("extraMax", 0);
        _this.setPropertyValue("strictMinMax", false);
        _this.setPropertyValue("maxPrecision", Number.MAX_VALUE);
        _this.setPropertyValue("adjustLabelPrecision", true);
        _this.setPropertyValue("extraTooltipPrecision", 0);
        _this.keepSelection = false;
        _this.includeRangesInMinMax = false;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Holds reference to a function that accepts a DataItem as parameter.
     *
     * It can either return a fill opacity for a fill, or manipulate data item
     * directly, to create various highlighting scenarios.
     */
    ValueAxis.prototype.fillRule = function (dataItem) {
        var value = dataItem.value;
        var axis = dataItem.component;
        if (!dataItem.axisFill.disabled) {
            // rounding in left to solve floating point number
            if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](value / axis.step / 2, 5) == Math.round(value / axis.step / 2)) {
                dataItem.axisFill.__disabled = true;
            }
            else {
                dataItem.axisFill.__disabled = false;
            }
        }
    };
    /**
     * Returns a new/empty [[DataItem]] of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    ValueAxis.prototype.createDataItem = function () {
        return new ValueAxisDataItem();
    };
    /**
     * Returns a new/empty [[AxisBreak]] of the appropriate type.
     *
     * @return Axis break
     */
    ValueAxis.prototype.createAxisBreak = function () {
        return new _ValueAxisBreak__WEBPACK_IMPORTED_MODULE_5__["ValueAxisBreak"]();
    };
    /**
     * [dataChangeUpdate description]
     *
     * This is a placeholder to override for extending classes.
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    ValueAxis.prototype.dataChangeUpdate = function () {
        this.clearCache();
        if (!this.keepSelection) {
            if (this._start != 0 || this._end != 1) {
                this._start = 0;
                this._end = 1;
                this.dispatchImmediately("startendchanged");
            }
        }
        else {
            if (this._start != 0) {
                this.dispatchImmediately("startchanged");
            }
            if (this._end != 1) {
                this.dispatchImmediately("endchanged");
            }
            if (this._start != 0 || this._end != 1) {
                this.dispatchImmediately("startendchanged");
            }
        }
        this._maxZoomed = this._maxDefined;
        this._minZoomed = this._minDefined;
        this._maxAdjusted = this._maxDefined;
        this._minAdjusted = this._minDefined;
    };
    /**
     * Processes data items of the related Series.
     *
     * @ignore Exclude from docs
     */
    ValueAxis.prototype.processSeriesDataItems = function () {
        // @todo: add some boolean (maybe autodedect) if we need these calculations or not. this place uses a lot of cpu
        if (this.calculateTotals) {
            var series = this.series.getIndex(0);
            var startIndex = series.startIndex;
            if (series.dataItems.length > 0) {
                if (startIndex > 0) {
                    startIndex--;
                }
                var endIndex = series.endIndex;
                if (endIndex < series.dataItems.length) {
                    endIndex++;
                }
                var _loop_1 = function (i) {
                    // This has to be `var` in order to avoid garbage collection
                    var total = {};
                    var sum = {};
                    this_1.series.each(function (series) {
                        if (!series.excludeFromTotal) {
                            var dataItem_1 = series.dataItems.getIndex(i);
                            if (dataItem_1) {
                                _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__["each"](dataItem_1.values, function (key) {
                                    var value = dataItem_1.values[key].workingValue; // can not use getWorkingValue here!
                                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value)) {
                                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](total[key])) {
                                            total[key] = Math.abs(value);
                                        }
                                        else {
                                            total[key] += Math.abs(value);
                                        }
                                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](sum[key])) {
                                            sum[key] = value;
                                        }
                                        else {
                                            sum[key] += value;
                                        }
                                    }
                                });
                            }
                        }
                    });
                    this_1.series.each(function (series) {
                        if (!series.excludeFromTotal) {
                            var dataItem_2 = series.dataItems.getIndex(i);
                            if (dataItem_2) {
                                _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__["each"](dataItem_2.values, function (key) {
                                    var value = dataItem_2.values[key].workingValue; // can not use getWorkingValue here!
                                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value)) {
                                        dataItem_2.setCalculatedValue(key, total[key], "total");
                                        dataItem_2.setCalculatedValue(key, 100 * value / total[key], "totalPercent");
                                        dataItem_2.setCalculatedValue(key, sum[key], "sum");
                                    }
                                });
                            }
                        }
                    });
                };
                var this_1 = this;
                // This has to be `var` in order to avoid garbage collection
                for (var i = startIndex; i < endIndex; ++i) {
                    _loop_1(i);
                }
            }
        }
    };
    /**
     * Validates the whole axis. Causes it to redraw.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     */
    ValueAxis.prototype.validate = function () {
        if (this.axisLength <= 0) {
            return;
        }
        _super.prototype.validate.call(this);
        this.getMinMax();
        this.fixAxisBreaks();
        this.calculateZoom();
        this.validateAxisElements();
        this.validateAxisRanges();
        this.validateBreaks();
        this.hideUnusedDataItems();
        this.renderer.invalidateLayout();
        // hide too close
        //this.hideTooCloseDataItems();
    };
    /**
     * Calculates all positions, related to axis as per current zoom.
     *
     * @ignore Exclude from docs
     */
    ValueAxis.prototype.calculateZoom = function () {
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this.min) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this.max)) {
            var min = this.positionToValue(this.start);
            var max = this.positionToValue(this.end);
            var differece = this.adjustDifference(min, max);
            var minMaxStep = this.adjustMinMax(min, max, differece, this._gridCount, true);
            var stepDecimalPlaces = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_10__["decimalPlaces"](minMaxStep.step);
            this._stepDecimalPlaces = stepDecimalPlaces;
            min = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](min, stepDecimalPlaces);
            max = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](max, stepDecimalPlaces);
            minMaxStep = this.adjustMinMax(min, max, differece, this._gridCount, true);
            var step = minMaxStep.step;
            if (this.syncWithAxis) {
                var calculated = this.getCache(min + "-" + max);
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](calculated)) {
                    step = calculated;
                }
            }
            else {
                min = minMaxStep.min;
                max = minMaxStep.max;
            }
            if (this._minZoomed != min || this._maxZoomed != max || this._step != step || this._dsc) {
                this._dsc = false;
                this._minZoomed = min;
                this._maxZoomed = max;
                this._step = step;
                this.dispatchImmediately("selectionextremeschanged");
            }
        }
    };
    ValueAxis.prototype.fixSmallStep = function (step) {
        if (1 + step == 1) {
            step *= 2;
            return this.fixSmallStep(step);
        }
        return step;
    };
    /**
     * Validates Axis elements.
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    ValueAxis.prototype.validateAxisElements = function () {
        var _this = this;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this.max) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this.min)) {
            // first regular items
            var value_1 = this.minZoomed - this._step * 2;
            if (!this.logarithmic) {
                value_1 = Math.floor(value_1 / this._step) * this._step;
            }
            else {
                var differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;
                if (differencePower > 1) {
                    value_1 = Math.pow(10, Math.log(this.min) * Math.LOG10E);
                }
                else {
                    value_1 = Math.floor(this.minZoomed / this._step) * this._step;
                    if (value_1 == 0) {
                        value_1 = this.minZoomed;
                    }
                }
            }
            var maxZoomed = this._maxZoomed + this._step;
            this.resetIterators();
            var dataItemsIterator_1 = this._dataItemsIterator;
            if (this._step == 0) {
                return;
            }
            this._step = this.fixSmallStep(this._step);
            var i = 0;
            var precisionChanged = this._prevStepDecimalPlaces != this._stepDecimalPlaces;
            this._prevStepDecimalPlaces = this._stepDecimalPlaces;
            while (value_1 <= maxZoomed) {
                var axisBreak = this.isInBreak(value_1);
                if (!axisBreak) {
                    var dataItem = dataItemsIterator_1.find(function (x) { return x.value === value_1; });
                    if (dataItem.__disabled) {
                        dataItem.__disabled = false;
                    }
                    //this.processDataItem(dataItem);
                    this.appendDataItem(dataItem);
                    dataItem.axisBreak = undefined;
                    if (dataItem.value != value_1 || precisionChanged) {
                        dataItem.value = value_1;
                        dataItem.text = this.formatLabel(value_1);
                        if (dataItem.label && dataItem.label.invalid) {
                            dataItem.label.validate();
                        }
                        if (dataItem.value >= this.min && dataItem.value <= this.max) {
                            if (dataItem.label) {
                                if ((this.axisLetter == "Y" && dataItem.label.measuredWidth > this.ghostLabel.measuredWidth) || (this.axisLetter == "X" && dataItem.label.measuredHeight > this.ghostLabel.measuredHeight)) {
                                    this.ghostLabel.text = dataItem.label.currentText;
                                    this.ghostLabel.validate();
                                }
                            }
                        }
                    }
                    this.validateDataElement(dataItem);
                }
                i++;
                var oldValue = value_1;
                if (!this.logarithmic) {
                    value_1 += this._step;
                }
                else {
                    var differencePower = Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E;
                    if (differencePower > 1) {
                        value_1 = Math.pow(10, Math.log(this.min) * Math.LOG10E + i);
                    }
                    else {
                        value_1 += this._step;
                    }
                }
                var stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(this._step)) * Math.LOG10E));
                if (stepPower < 1) {
                    // exponent is less then 1 too. Count decimals of exponent
                    var decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 2;
                    decCount = Math.min(13, decCount);
                    // round value to avoid floating point issues
                    value_1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["ceil"](value_1, decCount);
                    if (oldValue == value_1) {
                        value_1 = maxZoomed;
                        break;
                    }
                }
            }
            var axisBreaks = this._axisBreaks;
            if (axisBreaks) {
                // breaks later
                var renderer_1 = this.renderer;
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](axisBreaks.iterator(), function (axisBreak) {
                    if (axisBreak.breakSize > 0) {
                        // only add grid if gap is bigger then minGridDistance
                        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["getDistance"](axisBreak.startPoint, axisBreak.endPoint) > renderer_1.minGridDistance) {
                            var breakValue_1 = axisBreak.adjustedMin;
                            while (breakValue_1 <= axisBreak.adjustedMax) {
                                if (breakValue_1 >= axisBreak.adjustedStartValue && breakValue_1 <= axisBreak.adjustedEndValue) {
                                    var dataItem = dataItemsIterator_1.find(function (x) { return x.value === breakValue_1; });
                                    if (dataItem.__disabled) {
                                        dataItem.__disabled = false;
                                    }
                                    //this.processDataItem(dataItem);
                                    _this.appendDataItem(dataItem);
                                    dataItem.axisBreak = axisBreak;
                                    if (dataItem.value != breakValue_1) {
                                        dataItem.value = breakValue_1;
                                        dataItem.text = _this.formatLabel(breakValue_1);
                                        if (dataItem.label && dataItem.label.invalid) {
                                            dataItem.label.validate();
                                        }
                                    }
                                    _this.validateDataElement(dataItem);
                                }
                                breakValue_1 += axisBreak.adjustedStep;
                            }
                        }
                    }
                });
            }
        }
    };
    /**
     * Validates axis data item.
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param dataItem  Data item
     */
    ValueAxis.prototype.validateDataElement = function (dataItem) {
        _super.prototype.validateDataElement.call(this, dataItem);
        //dataItem.__disabled = false;
        dataItem.itemIndex = this._axisItemCount;
        this._axisItemCount++;
        var renderer = this.renderer;
        var value = dataItem.value;
        var endValue = dataItem.endValue;
        var position = this.valueToPosition(value);
        dataItem.position = position;
        var endPosition = position;
        var fillEndPosition = this.valueToPosition(value + this._step);
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](endValue)) {
            endPosition = this.valueToPosition(endValue);
            fillEndPosition = endPosition;
        }
        // this point is needed to calculate distance to satisfy minGridDistance
        dataItem.point = renderer.positionToPoint(position);
        var tick = dataItem.tick;
        if (tick && !tick.disabled) {
            renderer.updateTickElement(tick, position, endPosition);
        }
        var grid = dataItem.grid;
        if (grid && !grid.disabled) {
            renderer.updateGridElement(grid, position, endPosition);
        }
        var label = dataItem.label;
        if (label && !label.disabled) {
            renderer.updateLabelElement(label, position, endPosition);
        }
        var fill = dataItem.axisFill;
        if (fill && !fill.disabled) {
            renderer.updateFillElement(fill, position, fillEndPosition);
            if (!dataItem.isRange) {
                this.fillRule(dataItem);
            }
        }
        if (dataItem.bullet) {
            renderer.updateBullet(dataItem.bullet, position, endPosition);
        }
        var mask = dataItem.mask;
        if (mask) {
            renderer.updateFillElement(mask, position, fillEndPosition);
        }
    };
    /**
     * Formats the value according to axis' own [[NumberFormatter]].
     *
     * @param value  Source value
     * @return Formatted value
     */
    ValueAxis.prototype.formatLabel = function (value) {
        if (this.adjustLabelPrecision && value != 0) {
            return this.numberFormatter.format(value, undefined, this._stepDecimalPlaces);
        }
        else {
            return this.numberFormatter.format(value);
        }
    };
    Object.defineProperty(ValueAxis.prototype, "basePoint", {
        /**
         * Coordinates of the actual axis start.
         *
         * @ignore Exclude from docs
         * @return Base point
         */
        get: function () {
            var baseValue = this.baseValue;
            var position = this.valueToPosition(baseValue);
            var basePoint = this.renderer.positionToPoint(position);
            return basePoint;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "baseValue", {
        /**
         * @return base value
         */
        get: function () {
            var baseValue = this._baseValue;
            if (this.logarithmic) {
                baseValue = this.min;
            }
            if (!this._adapterO) {
                return baseValue;
            }
            else {
                return this._adapterO.apply("baseValue", baseValue);
            }
        },
        /**
         * A base value.
         *
         * This is a threshold value that will divide "positive" and "negative"
         * value ranges.
         *
         * Other scale-related functionality also depend on base value. E.g. stacks,
         * value-dependent coloring, etc.
         *
         * @param value Base value
         */
        set: function (value) {
            this._baseValue = value;
            this.invalidateLayout();
            this.invalidateSeries();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts a numeric value to relative position on axis
     *
     * An alias to `valueToPosition()`.
     *
     * @param value  Value
     * @return Position
     */
    ValueAxis.prototype.anyToPosition = function (value) {
        return this.valueToPosition(value);
    };
    /**
     * Converts a numeric value to orientation point (x, y, angle) on axis
     *
     * @param value  Value
     * @return Orientation point
     */
    ValueAxis.prototype.valueToPoint = function (value) {
        var position = this.valueToPosition(value);
        var point = this.renderer.positionToPoint(position);
        var angle = this.renderer.positionToAngle(position);
        return { x: point.x, y: point.y, angle: angle };
    };
    /**
     * Converts a numeric value to orientation (x, y, angle) point on axis
     *
     * @param value  Value
     * @return Orientation point
     */
    ValueAxis.prototype.anyToPoint = function (value) {
        return this.valueToPoint(value);
    };
    /**
     * Converts a numeric value to relative position on axis.
     *
     * @param value  Value
     * @return relative position
     */
    ValueAxis.prototype.valueToPosition = function (value) {
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value)) {
            // todo: think if possible to take previous value and do not go through all previous breaks
            var min_1 = this.min;
            var max_1 = this.max;
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min_1) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max_1)) {
                var difference = this._difference;
                var axisBreaks = this._axisBreaks;
                if (axisBreaks && axisBreaks.length > 0) {
                    _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["eachContinue"](axisBreaks.iterator(), function (axisBreak) {
                        var startValue = axisBreak.adjustedStartValue;
                        var endValue = axisBreak.adjustedEndValue;
                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](startValue) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](endValue)) {
                            if (value < startValue) {
                                return false;
                            }
                            if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["intersect"]({ start: startValue, end: endValue }, { start: min_1, end: max_1 })) { // todo: check this once and set some flag in axisBreak
                                startValue = Math.max(startValue, min_1);
                                endValue = Math.min(endValue, max_1);
                                var breakSize = axisBreak.breakSize;
                                // value to the right of break end
                                if (value > endValue) {
                                    min_1 += (endValue - startValue) * (1 - breakSize); // todo: maybe this can be done differently?
                                }
                                // value to the left of break start
                                else if (value < startValue) {
                                }
                                // value within break
                                else {
                                    value = startValue + (value - startValue) * breakSize;
                                }
                            }
                        }
                        return true;
                    });
                }
                var position = void 0;
                if (!this.logarithmic) {
                    position = (value - min_1) / difference;
                }
                else {
                    var treatZeroAs = this.treatZeroAs;
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](treatZeroAs)) {
                        if (value <= treatZeroAs) {
                            value = treatZeroAs;
                        }
                    }
                    position = (Math.log(value) * Math.LOG10E - Math.log(this.min) * Math.LOG10E) / ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E));
                }
                //position = $math.round(position, 10);
                return position;
            }
        }
        return 0;
    };
    /**
     * When fontSize of fontFamily changes we need to hard-invalidate all Labels of this container to position them properly.
     */
    ValueAxis.prototype.invalidateLabels = function () {
        _super.prototype.invalidateLabels.call(this);
        if (this.dataItems) {
            this.dataItems.each(function (dataItem) {
                dataItem.value = undefined;
            });
            this.invalidate();
        }
    };
    /**
     * Converts an relative position to a corresponding value within
     * axis' scale.
     *
     * @param position  Position (px)
     * @return Value
     */
    ValueAxis.prototype.positionToValue = function (position) {
        var min = this.min;
        var max = this.max;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max)) {
            var difference_1 = max - min; //no need to adjust!
            var value_2 = null;
            var axisBreaks = this._axisBreaks;
            if (axisBreaks) {
                // in case we have some axis breaks
                if (axisBreaks.length > 0) {
                    _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["eachContinue"](axisBreaks.iterator(), function (axisBreak) {
                        var breakStartPosition = axisBreak.startPosition;
                        var breakEndPosition = axisBreak.endPosition;
                        var breakStartValue = axisBreak.adjustedStartValue;
                        var breakEndValue = axisBreak.adjustedEndValue;
                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](breakStartValue) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](breakEndValue)) {
                            if (breakStartValue > max) {
                                return false;
                            }
                            if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["intersect"]({ start: breakStartValue, end: breakEndValue }, { start: min, end: max })) {
                                breakStartValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](breakStartValue, min);
                                breakEndValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["min"](breakEndValue, max);
                                var breakSize = axisBreak.breakSize;
                                difference_1 -= (breakEndValue - breakStartValue) * (1 - breakSize);
                                // position to the right of break end
                                if (position > breakEndPosition) {
                                    min += (breakEndValue - breakStartValue) * (1 - breakSize);
                                }
                                // position to the left of break start
                                else if (position < breakStartPosition) {
                                }
                                // value within break
                                else {
                                    var breakPosition = (position - breakStartPosition) / (breakEndPosition - breakStartPosition);
                                    value_2 = breakStartValue + breakPosition * (breakEndValue - breakStartValue);
                                    return false;
                                }
                            }
                            return true;
                        }
                    });
                }
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value_2)) {
                if (this.logarithmic) {
                    value_2 = Math.pow(Math.E, (position * ((Math.log(this.max) * Math.LOG10E - Math.log(this.min) * Math.LOG10E)) + Math.log(this.min) * Math.LOG10E) / Math.LOG10E);
                }
                else {
                    value_2 = position * difference_1 + min;
                }
            }
            return value_2;
        }
        //}
    };
    /**
     * Converts an X coordinate to a relative value in axis' scale.
     *
     * @param x  X (px)
     * @return Value
     */
    ValueAxis.prototype.xToValue = function (x) {
        return this.positionToValue(this.pointToPosition({ x: x, y: 0 }));
    };
    /**
     * Converts an Y coordinate to a relative value in axis' scale.
     *
     * @param y  Y (px)
     * @return Value
     */
    ValueAxis.prototype.yToValue = function (y) {
        return this.positionToValue(this.pointToPosition({ x: 0, y: y }));
    };
    /**
     * Converts pixel coordinates to a relative position. (0-1)
     *
     * @param point  Coorinates (px)
     * @return Position (0-1)
     */
    ValueAxis.prototype.pointToPosition = function (point) {
        if (this.renderer instanceof _AxisRendererY__WEBPACK_IMPORTED_MODULE_2__["AxisRendererY"]) {
            return 1 - this.renderer.pointToPosition(point);
        }
        else {
            return this.renderer.pointToPosition(point);
        }
    };
    /**
     * @ignore
     */
    ValueAxis.prototype.animateMinMax = function (min, max) {
        return this.animate([{ property: "_minAdjusted", from: this._minAdjusted, to: min }, { property: "_maxAdjusted", from: this._maxAdjusted, to: max }], this.rangeChangeDuration, this.rangeChangeEasing);
    };
    /**
     * Calculates smallest and biggest value for the axis scale.
     * @ignore
     * @todo Description (review)
     */
    ValueAxis.prototype.getMinMax = function () {
        var _this = this;
        this.updateGridCount();
        var min = Number.POSITIVE_INFINITY;
        var max = Number.NEGATIVE_INFINITY;
        // only if min and max are not set from outside, we go through min and max influencers
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._minDefined) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._maxDefined)) {
            this.series.each(function (series) {
                if (!series.ignoreMinMax) {
                    // check min
                    var seriesMin = series.min(_this);
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](seriesMin) && (seriesMin < min)) {
                        min = seriesMin;
                    }
                    // check max
                    var seriesMax = series.max(_this);
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](seriesMax) && (seriesMax > max)) {
                        max = seriesMax;
                    }
                }
            });
            if (this.includeRangesInMinMax) {
                this.axisRanges.each(function (range) {
                    if (!range.ignoreMinMax) {
                        var minValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["min"](range.value, range.endValue);
                        var maxValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](range.value, range.endValue);
                        if (minValue < min || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min)) {
                            min = minValue;
                        }
                        if (maxValue > max || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max)) {
                            max = maxValue;
                        }
                    }
                });
            }
        }
        if (this.logarithmic) {
            var treatZeroAs = this.treatZeroAs;
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](treatZeroAs)) {
                if (min <= 0) {
                    min = treatZeroAs;
                }
            }
            if (min <= 0) {
                this.raiseCriticalError(new Error("Logarithmic value axis can not have values <= 0."), true);
            }
        }
        if (min == 0 && max == 0) {
            max = 0.9;
            min = -0.9;
        }
        // if defined from outside
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._minDefined)) {
            min = this._minDefined;
        }
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._maxDefined)) {
            max = this._maxDefined;
        }
        if (this._adapterO) {
            min = this._adapterO.apply("min", min);
        }
        if (this._adapterO) {
            max = this._adapterO.apply("max", max);
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max)) {
            return;
        }
        this._minReal = min;
        this._maxReal = max;
        if (min == Number.POSITIVE_INFINITY) {
            min = undefined;
        }
        if (max == Number.NEGATIVE_INFINITY) {
            max = undefined;
        }
        var dif = this.adjustDifference(min, max); // previously it was max-min, but not worked well
        min = this.fixMin(min);
        max = this.fixMax(max);
        // this happens if starLocation and endLocation are 0.5 and DateAxis has only one date
        if (max - min <= 1 / Math.pow(10, 15)) {
            if (max - min != 0) {
                this._deltaMinMax = (max - min) / 2;
            }
            else {
                // the number by which we need to raise 10 to get difference
                var exponent = Math.log(Math.abs(max)) * Math.LOG10E;
                // here we find a number which is power of 10 and has the same count of numbers as difference has
                var power = Math.pow(10, Math.floor(exponent));
                // reduce this number by 10 times
                power = power / 10;
                this._deltaMinMax = power;
            }
            min -= this._deltaMinMax;
            max += this._deltaMinMax;
        }
        min -= (max - min) * this.extraMin;
        max += (max - min) * this.extraMax;
        var strict = this.strictMinMax;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._maxDefined)) {
            strict = true;
        }
        var minMaxStep = this.adjustMinMax(min, max, dif, this._gridCount, strict);
        min = minMaxStep.min;
        max = minMaxStep.max;
        dif = max - min; //new
        // do it for the second time (importat!)
        minMaxStep = this.adjustMinMax(min, max, max - min, this._gridCount, true);
        min = minMaxStep.min;
        max = minMaxStep.max;
        // return min max if strict
        if (this.strictMinMax) {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._minDefined)) {
                min = this._minDefined;
            }
            else {
                min = this._minReal;
            }
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._maxDefined)) {
                max = this._maxDefined;
            }
            else {
                max = this._maxReal;
            }
            if (max - min <= 0.00000001) {
                min -= this._deltaMinMax;
                max += this._deltaMinMax;
            }
            min -= (max - min) * this.extraMin;
            max += (max - min) * this.extraMax;
        }
        if (this._adapterO) {
            min = this._adapterO.apply("min", min);
        }
        if (this._adapterO) {
            max = this._adapterO.apply("max", max);
        }
        this._step = minMaxStep.step;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max)) {
            this.start = 0;
            this.end = 1;
            this.renderer.labels.each(function (label) {
                label.dataItem.text = "";
            });
        }
        // checking isNumber is good when all series are hidden
        if ((this._minAdjusted != min || this._maxAdjusted != max) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max)) {
            var animation = this._minMaxAnimation;
            if (this._extremesChanged && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._minAdjusted) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._maxAdjusted) && this.inited) {
                if ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {
                    return;
                }
                else {
                    this._finalMin = min;
                    this._finalMax = max;
                    animation = this.animateMinMax(min, max);
                    if (animation && !animation.isFinished()) {
                        animation.events.on("animationprogress", this.validateDataItems, this);
                        animation.events.on("animationended", function () {
                            //this.validateDataItems();
                            _this.series.each(function (series) {
                                series.validate();
                            });
                            _this.validateDataItems();
                            _this.handleSelectionExtremesChange();
                        });
                        this._minMaxAnimation = animation;
                    }
                    else {
                        this.series.each(function (series) {
                            series.invalidate();
                        });
                    }
                    this.validateDataItems();
                    this.dispatchImmediately("extremeschanged");
                    this.handleSelectionExtremesChange();
                }
            }
            else {
                if ((animation && !animation.isFinished()) && this._finalMax == max && this._finalMin == min) {
                    return;
                }
                else {
                    this._minAdjusted = min;
                    this._maxAdjusted = max;
                    this._finalMin = min;
                    this._finalMax = max;
                    this.invalidateDataItems();
                    this.dispatchImmediately("extremeschanged");
                }
            }
        }
        this._extremesChanged = false;
        this._difference = this.adjustDifference(min, max);
    };
    /**
     * Adjusts the minimum value.
     *
     * This is a placeholder method for extending classes to override.
     *
     * For numeric values this does nothing, however for more complex types, like
     * dates, it may be necessary to adjust.
     *
     * @param value  Value
     * @return Adjusted value
     */
    ValueAxis.prototype.fixMin = function (value) {
        return value;
    };
    /**
     * Adjusts the maximum value.
     *
     * This is a placeholder method for extending classes to override.
     *
     * For numeric values this does nothing, however for more complex types, like
     * dates, it may be necessary to adjust.
     *
     * @param value  Value
     * @return Adjusted value
     */
    ValueAxis.prototype.fixMax = function (value) {
        return value;
    };
    /**
     * Adjusts actual min and max scale values so that the axis starts and ends
     * at "nice" values, unless `strictMinMax` is set.
     *
     * The `difference` can be something else than `max - min`, because of the
     * axis breaks.
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param min        [description]
     * @param max        [description]
     * @param difference [description]
     * @param gridCount  [description]
     * @param strictMode [description]
     * @return [description]
     */
    ValueAxis.prototype.adjustMinMax = function (min, max, difference, gridCount, strictMode) {
        // will fail if 0
        if (gridCount <= 1) {
            gridCount = 1;
        }
        gridCount = Math.round(gridCount);
        var initialMin = min;
        var initialMax = max;
        // in case min and max is the same, use max
        if (difference === 0) {
            difference = Math.abs(max);
        }
        // the number by which we need to raise 10 to get difference
        var exponent = Math.log(Math.abs(difference)) * Math.LOG10E;
        // here we find a number which is power of 10 and has the same count of numbers as difference has
        var power = Math.pow(10, Math.floor(exponent));
        // reduce this number by 10 times
        power = power / 10;
        var extra = power;
        if (strictMode) {
            extra = 0;
        }
        if (!this.logarithmic) {
            // round down min
            if (strictMode) {
                min = Math.floor(min / power) * power;
                // round up max
                max = Math.ceil(max / power) * power;
            }
            else {
                min = Math.ceil(min / power) * power - extra;
                // round up max
                max = Math.floor(max / power) * power + extra;
            }
            // don't let min go below 0 if real min is >= 0
            if (min < 0 && initialMin >= 0) {
                min = 0;
            }
            // don't let max go above 0 if real max is <= 0
            if (max > 0 && initialMax <= 0) {
                max = 0;
            }
        }
        else {
            if (min <= 0) {
                //throw Error("Logarithmic value axis can not have values <= 0.");
                min = this.baseValue;
            }
            // @todo: think of a better way or to restrict zooming when no series are selected
            if (min == Infinity) {
                min = 1;
            }
            if (max == -Infinity) {
                max = 10;
            }
            if (this.strictMinMax) {
                if (this._minDefined > 0) {
                    min = this._minDefined;
                }
                else {
                    min = min;
                }
                if (this._maxDefined > 0) {
                    max = max;
                }
            }
            else {
                min = Math.pow(10, Math.floor(Math.log(Math.abs(min)) * Math.LOG10E));
                max = Math.pow(10, Math.ceil(Math.log(Math.abs(max)) * Math.LOG10E));
            }
        }
        // repeat diff, exponent and power again with rounded values
        //difference = this.adjustDifference(min, max);
        /*

                if(min > initialMin){
                    min = initialMin;
                }

                if(max < initialMax){
                    max = initialMax;
                }
        */
        exponent = Math.log(Math.abs(difference)) * Math.LOG10E;
        power = Math.pow(10, Math.floor(exponent));
        power = power / 10;
        // approximate difference between two grid lines
        var step = Math.ceil((difference / gridCount) / power) * power;
        var stepPower = Math.pow(10, Math.floor(Math.log(Math.abs(step)) * Math.LOG10E));
        // TODO: in v3 I had fixStepE here, ommiting it for a while, need to think about other solution
        // the step should divide by  2, 5, and 10.
        var stepDivisor = Math.ceil(step / stepPower); // number 0 - 10
        if (stepDivisor > 5) {
            stepDivisor = 10;
        }
        else if (stepDivisor <= 5 && stepDivisor > 2) {
            stepDivisor = 5;
        }
        // now get real step
        step = Math.ceil(step / (stepPower * stepDivisor)) * stepPower * stepDivisor;
        if (this.maxPrecision < Number.MAX_VALUE && step != _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["ceil"](step, this.maxPrecision)) {
            step = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["ceil"](step, this.maxPrecision);
        }
        var decCount = 0;
        // in case numbers are smaller than 1
        if (stepPower < 1) {
            // exponent is less then 1 too. Count decimals of exponent
            decCount = Math.round(Math.abs(Math.log(Math.abs(stepPower)) * Math.LOG10E)) + 1;
            // round step
            step = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](step, decCount);
        }
        if (!this.logarithmic) {
            // final min and max
            var minCount = Math.floor(min / step);
            min = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](step * minCount, decCount);
            var maxCount = void 0;
            if (!strictMode) {
                maxCount = Math.ceil(max / step);
            }
            else {
                maxCount = Math.floor(max / step);
            }
            if (maxCount == minCount) {
                maxCount++;
            }
            max = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](step * maxCount, decCount);
            if (max < initialMax) {
                max = max + step;
            }
            if (min > initialMin) {
                min = min - step;
            }
        }
        return { min: min, max: max, step: step };
    };
    Object.defineProperty(ValueAxis.prototype, "min", {
        /**
         * @return Min value
         */
        get: function () {
            var min = this._minAdjusted;
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min)) {
                min = this._minDefined;
            }
            return min;
        },
        /**
         * A minimum value for the axis scale.
         *
         * This value might be auto-adjusted by the Axis in order to accomodate the
         * grid nicely, i.e. plot area is divided by grid in nice equal cells.
         *
         * The above might be overridden by `strictMinMax` which will force exact
         * user-defined min and max values to be used for scale.
         *
         * @param value  Min value
         */
        set: function (value) {
            if (this._minDefined != value) {
                this._minDefined = value;
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "minDefined", {
        /**
         * Min value as defined by user's code, not auto-calculated.
         *
         * @readonly
         * @return Min value
         */
        get: function () {
            return this._minDefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "maxDefined", {
        /**
         * Max value as defined by user's code, not auto-calculated.
         *
         * @readonly
         * @return Man value
         */
        get: function () {
            return this._maxDefined;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "extraMin", {
        /**
         * @return {number}
         */
        get: function () {
            return this.getPropertyValue("extraMin");
        },
        /**
         * Allows relatively adjusting minimum value of the axis' scale.
         *
         * The value is relative to the actual range of values currently displayed
         * on the axis.
         *
         * E.g.: 0.5 will mean half of the current range. If we have axis displaying
         * from 100 to 200, we will now have axis displaying from 50 to 200 because
         * we asked to expand minimum value by 50% (0.5).
         *
         * @param {number}
         */
        set: function (value) {
            if (this.setPropertyValue("extraMin", value)) {
                this.invalidateDataItems();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "extraMax", {
        /**
         * @return Min multiplier
         */
        get: function () {
            return this.getPropertyValue("extraMax");
        },
        /**
         * Allows relatively adjusting maximum value of the axis' scale.
         *
         * The value is relative to the actual range of values currently displayed
         * on the axis.
         *
         * E.g.: 0.5 will mean half of the current range. If we have axis displaying
         * from 100 to 200, we will now have axis displaying from 100 to 250 because
         * we asked to expand maximum value by 50% (0.5).
         *
         * @param {number}
         */
        set: function (value) {
            if (this.setPropertyValue("extraMax", value)) {
                this.invalidateDataItems();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "step", {
        /**
         * Current calculated delta in values between two adjacent grid lines (step).
         *
         * This is a read-only value and cannot be used to set actual step.
         *
         * @readonly
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/positioning-axis-elements/#Setting_the_density_of_the_the_grid_labels} For more information about modifying density of labels
         * @return [description]
         */
        get: function () {
            return this._step;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "max", {
        /**
         * @return Max value
         */
        get: function () {
            var max = this._maxAdjusted;
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max)) {
                max = this._maxDefined;
            }
            return max;
        },
        /**
         * A maximum value for the axis scale.
         *
         * This value might be auto-adjusted by the Axis in order to accomodate the
         * grid nicely, i.e. plot area is divided by grid in nice equal cells.
         *
         * The above might be overridden by `strictMinMax` which will force exact
         * user-defined min and max values to be used for scale.
         *
         * @param value  Max value
         */
        set: function (value) {
            if (this._maxDefined != value) {
                this._maxDefined = value;
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "adjustLabelPrecision", {
        /**
         * @return Adjust precision
         */
        get: function () {
            return this.getPropertyValue("adjustLabelPrecision");
        },
        /**
         * By default the axis will adjust precision of all numbers to match number
         * of decimals in all its labels, e.g.: `1.0`, `1.5`, `2.0`.
         *
         * To disable set `adjustLabelPrecision` to `false`, to use whatever other
         * precision or number format settings are set.
         *
         * IMPORTANT: This setting will be ignored if your number format uses
         * modifiers, e.g. `"#a"`.
         *
         * @default true
         * @since 4.9.14
         * @param  value  Adjust precision
         */
        set: function (value) {
            if (this.setPropertyValue("adjustLabelPrecision", value)) {
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Used for the Series to register itself as the user of this Axis.
     *
     * This will also decorate both the Series and Axis with event handlers, used
     * to redraw on Axis position/zoom change.
     *
     * A disposer for those events is returned, so that they can be disposed
     * together with Series.
     *
     * @ignore Exclude from docs
     * @param series  Series
     * @return Disposer for events
     */
    ValueAxis.prototype.registerSeries = function (series) {
        return new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["MultiDisposer"]([
            _super.prototype.registerSeries.call(this, series),
            series.events.on("extremeschanged", this.handleExtremesChange, this, false),
            series.events.on("selectionextremeschanged", this.handleSelectionExtremesChange, this, false),
            this.events.on("extremeschanged", series.invalidate, series, false)
        ]);
    };
    /**
     * Perform tasks after Axis zoom.
     */
    ValueAxis.prototype.handleSelectionExtremesChange = function () {
        var _this = this;
        var selectionMin;
        var selectionMax;
        var allHidden = true;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this.series.iterator(), function (series) {
            if (!series.ignoreMinMax && !series.isHidden && !series.outOfRange) {
                if (series.visible && !series.isHiding) {
                    allHidden = false;
                }
                var seriesSelectionMin = series.selectionMin(_this);
                var seriesSelectionMax = series.selectionMax(_this);
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](seriesSelectionMin)) {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](selectionMin) || (seriesSelectionMin < selectionMin)) {
                        selectionMin = seriesSelectionMin;
                    }
                }
                // check max
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](seriesSelectionMax)) {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](selectionMax) || (seriesSelectionMax > selectionMax)) {
                        selectionMax = seriesSelectionMax;
                    }
                }
            }
        });
        if (this.includeRangesInMinMax) {
            this.axisRanges.each(function (range) {
                if (!range.ignoreMinMax) {
                    var minValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["min"](range.value, range.endValue);
                    var maxValue = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](range.value, range.endValue);
                    if (minValue < selectionMin) {
                        selectionMin = minValue;
                    }
                    if (maxValue > selectionMax) {
                        selectionMax = maxValue;
                    }
                }
            });
        }
        // this is not good, as if date axis is initially zoomed, selection of y axis is reset to 0, 1 at the end of this method
        //$iter.each(this.series.iterator(), (series) => {
        //	if (!series.appeared) {
        //		allHidden = true;
        //	}
        //})
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._minDefined)) {
            if (this.strictMinMax) {
                selectionMin = this._minDefined;
            }
            else {
                selectionMin = this.min;
            }
        }
        else if (this.strictMinMax) {
            selectionMin = this._minReal;
        }
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this._maxDefined)) {
            if (this.strictMinMax) {
                selectionMax = this._maxDefined;
            }
            else {
                selectionMax = this.max;
            }
        }
        else if (this.strictMinMax) {
            selectionMax = this._maxReal;
        }
        if (selectionMin == selectionMax) {
            selectionMin -= this._deltaMinMax;
            selectionMax += this._deltaMinMax;
            var minMaxStep2 = this.adjustMinMax(selectionMin, selectionMax, 0, this._gridCount, this.strictMinMax);
            selectionMin = minMaxStep2.min;
            selectionMax = minMaxStep2.max;
        }
        var dif = this.adjustDifference(selectionMin, selectionMax);
        var minMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount);
        selectionMin = minMaxStep.min;
        selectionMax = minMaxStep.max;
        selectionMin -= (selectionMax - selectionMin) * this.extraMin;
        selectionMax += (selectionMax - selectionMin) * this.extraMax;
        selectionMin = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](selectionMin, this.min, this.max);
        selectionMax = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](selectionMax, this.min, this.max);
        // do it for the second time !important
        dif = this.adjustDifference(selectionMin, selectionMax);
        minMaxStep = this.adjustMinMax(selectionMin, selectionMax, dif, this._gridCount, true);
        selectionMin = minMaxStep.min;
        selectionMax = minMaxStep.max;
        if (this.strictMinMax) {
            selectionMin = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](selectionMin, this._minDefined);
            selectionMax = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["min"](selectionMax, this._maxDefined);
        }
        var step = minMaxStep.step;
        if (this.syncWithAxis) {
            minMaxStep = this.syncAxes(selectionMin, selectionMax, step);
            selectionMin = minMaxStep.min;
            selectionMax = minMaxStep.max;
            this.invalidate();
        }
        step = minMaxStep.step;
        // needed because of grouping
        this._difference = this.adjustDifference(this.min, this.max);
        var start = this.valueToPosition(selectionMin);
        var end = this.valueToPosition(selectionMax);
        // in case all series are hidden or hiding, full zoomout
        if (allHidden && !this.syncWithAxis) {
            start = 0;
            end = 1;
        }
        var declination = 0;
        if (this.syncWithAxis) {
            declination = 5;
            this.setCache(selectionMin + "-" + selectionMax, step);
        }
        else {
            if (this._step != step || this._minZoomed != selectionMin || this._maxZoomed != selectionMax) {
                this._dsc = true;
            }
            this._step = step;
            this._minZoomed = selectionMin;
            this._maxZoomed = selectionMax;
        }
        if (!this.keepSelection) {
            this.zoom({ start: start, end: end }, false, false, declination);
        }
    };
    Object.defineProperty(ValueAxis.prototype, "strictMinMax", {
        /**
         * @return Use exact values?
         */
        get: function () {
            return this.getPropertyValue("strictMinMax");
        },
        /**
         * Indicates whether to blindly use exact `min` and `max` values set by user
         * when generating Axis scale.
         *
         * If not set, the Axis might slightly adjust those values to accomodate a
         * better looking grid.
         *
         * NOTE: if `min` and `max` are not set, setting `strictMinMax` to `true`
         * will result in fixing the scale of the axis to actual lowest and highest
         * values in the series within currently selected scope.
         *
         * @default false
         * @param value Use exact values?
         */
        set: function (value) {
            if (this.setPropertyValue("strictMinMax", value)) {
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "logarithmic", {
        /**
         * @return Logarithmic scale?
         */
        get: function () {
            return this.getPropertyValue("logarithmic");
        },
        /**
         * Indicates if this axis should use a logarithmic scale.
         *
         * Please note that logarithmic axis can **only** accommodate values bigger
         * than zero.
         *
         * Having zero or negative values will result in error and failure of the
         * whole chart.
         *
         * @param value Logarithmic scale?
         */
        set: function (value) {
            if (this.setPropertyValue("logarithmic", value)) {
                this.invalidate();
                this.series.each(function (series) {
                    series.invalidateDataItems();
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "keepSelection", {
        /**
         * @return Preseve zoom after data update?
         */
        get: function () {
            return this.getPropertyValue("keepSelection");
        },
        /**
         * Indicates if a current selection (zoom) should be kept across data updates.
         *
         * If your axis is zoomed while chart's data is updated, the axis will try
         * to retain the same start and end values.
         *
         * You can also use this to initially pre-zoom axis:
         *
         * ```TypeScript
         * axis.keepSelection = true;
         * axis.start = 0.5;
         * axis.end = 0.7;
         * ```
         * ```JavaScript
         * axis.keepSelection = true;
         * axis.start = 0.5;
         * axis.end = 0.7;
         * ```
         * ```JSON
         * {
         *   "xAxes": [{
         *     // ...
         *     "keepSelection": true,
         *     "start": 0.5,
         *     "end": 0.7
         *   }]
         * }
         * ```
         *
         * The above will start the chart zoomed from the middle of the actual scope
         * to 70%.
         *
         * @since 4.1.1
         * @default false
         * @param  value  Preseve zoom after data update?
         */
        set: function (value) {
            this.setPropertyValue("keepSelection", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "includeRangesInMinMax", {
        /**
         * @return Include ranges?
         */
        get: function () {
            return this.getPropertyValue("includeRangesInMinMax");
        },
        /**
         * If set to `true`, values of axis ranges will be included when calculating
         * range of values / scale of the [[ValueAxis]].
         *
         * @default false
         * @since 4.4.9
         * @param  value  Include ranges?
         */
        set: function (value) {
            this.setPropertyValue("includeRangesInMinMax", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "maxPrecision", {
        /**
         * @return max precision
         */
        get: function () {
            return this.getPropertyValue("maxPrecision");
        },
        /**
         * Maximum number of decimals to allow when placing grid lines and labels
         * on axis.
         *
         * Set it to `0` (zero) to force integer-only axis labels.
         *
         * @param {number}
         */
        set: function (value) {
            if (this.setPropertyValue("maxPrecision", value)) {
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "extraTooltipPrecision", {
        /**
         * @return Extra decimals
         */
        get: function () {
            return this.getPropertyValue("extraTooltipPrecision");
        },
        /**
         * This setting allows using bigger precision for numbers displayed in axis
         * tooltip.
         *
         * Please note that this setting indicates additional decimal places to
         * automatically-calculated axis number precision.
         *
         * So if your axis displays numbers like 0.1, 0.2, etc. (one decimal place),
         * and you set `extraTooltipPrecision = 1`, tooltips will display numbers
         * like 0.12, 0.25, etc. (two decimal places).
         *
         * @default 0
         * @since 4.8.3
         * @param  value  Extra decimals
         */
        set: function (value) {
            if (this.setPropertyValue("extraTooltipPrecision", value)) {
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Invalidates axis data items when series extremes change
     */
    ValueAxis.prototype.handleExtremesChange = function () {
        var _this = this;
        this._extremesChanged = true;
        this.getMinMax();
        if (this.ghostLabel) {
            var mw_1 = 0;
            this.dataItems.each(function (dataItem) {
                if (dataItem.label && dataItem.label.pixelWidth > mw_1) {
                    _this.ghostLabel.text = dataItem.label.currentText;
                }
            });
        }
    };
    /**
     * Returns relative position on axis for series' data item's value.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param dataItem  Data item
     * @param key       Data field to get value from
     * @param location  Location (0-1)
     * @param stackKey  ?
     * @return X coordinate (px)
     */
    ValueAxis.prototype.getX = function (dataItem, key, location, stackKey, range) {
        return this.renderer.positionToPoint(this.getPositionX(dataItem, key, location, stackKey, range)).x;
    };
    /**
     * Returns the X coordinate for series' data item's value.
     *
     * @since 4.5.14
     * @param  dataItem  Data item
     * @param  key       Data field to get value from
     * @param  location  Location (0-1)
     * @param  stackKey  ?
     * @return           Relative position
     */
    ValueAxis.prototype.getPositionX = function (dataItem, key, location, stackKey, range) {
        var value = dataItem.getWorkingValue(key);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](stackKey)) {
            stackKey = "valueX";
        }
        var stack = dataItem.getValue(stackKey, "stack");
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value)) {
            value = this.baseValue;
            if (this.logarithmic) {
                if (stack > 0) {
                    value = 0;
                }
            }
        }
        var position = this.valueToPosition(value + stack);
        if (range) {
            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](position, range.start, range.end);
        }
        return position;
    };
    /**
     * Returns the Y coordinate for series' data item's value.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param dataItem  Data item
     * @param key       Data field to get value from
     * @param location  Location (0-1)
     * @param stackKey  Stack ID
     * @return Y coordinate (px)
     */
    ValueAxis.prototype.getY = function (dataItem, key, location, stackKey, range) {
        return this.renderer.positionToPoint(this.getPositionY(dataItem, key, location, stackKey, range)).y;
    };
    /**
     * Returns relative position on axis for series' data item's value.
     *
     * @since 4.5.14
     * @param  dataItem  Data item
     * @param  key       Data field to get value from
     * @param  location  Location (0-1)
     * @param  stackKey  Stack ID
     * @return           Relative position
     */
    ValueAxis.prototype.getPositionY = function (dataItem, key, location, stackKey, range) {
        var value = dataItem.getWorkingValue(key);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](stackKey)) {
            stackKey = "valueY";
        }
        var stack = dataItem.getValue(stackKey, "stack");
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value)) {
            value = this.baseValue;
            if (this.logarithmic) {
                if (stack > 0) {
                    value = 0;
                }
            }
        }
        var position = this.valueToPosition(value + stack);
        if (range) {
            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](position, range.start, range.end);
        }
        return position;
    };
    /**
     * Returns an angle for series data item.
     *
     * @ignore Exclude from docs
     * @todo Description (review)
     * @param dataItem  Data item
     * @param key       Data field to get value from
     * @param location  Location (0-1)
     * @param stackKey  Stack ID
     * @param range Range to fit in
     * @return Angle
     */
    ValueAxis.prototype.getAngle = function (dataItem, key, location, stackKey, range) {
        var value = dataItem.getWorkingValue(key);
        var stack = dataItem.getValue(stackKey, "stack");
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](value)) {
            value = this.baseValue;
        }
        var position = this.valueToPosition(value + stack);
        if (range) {
            position = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["fitToRange"](position, range.start, range.end);
        }
        return this.positionToAngle(position);
    };
    /**
     * [getAnyRangePath description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param start     [description]
     * @param end       [description]
     * @param location  [description]
     * @return [description]
     */
    ValueAxis.prototype.getAnyRangePath = function (start, end, location) {
        var startPosition = this.valueToPosition(start);
        var endPosition = this.valueToPosition(end);
        return this.getPositionRangePath(startPosition, endPosition); // Base class (Axis) gets range shape from AxisRenderer
    };
    /**
     * Returns text to show in a axis tooltip, based on specific position within
     * axis.
     *
     * The label will be formatted as per [[NumberFormatter]] set for the whole
     * chart, or explicitly for this Axis.
     *
     * @ignore Exclude from docs
     * @param position  Position (px)
     * @return Label (numeric value)
     */
    ValueAxis.prototype.getTooltipText = function (position) {
        var value = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](this.positionToValue(position), this._stepDecimalPlaces + this.extraTooltipPrecision);
        var valueStr = this.tooltip.numberFormatter.format(value);
        if (!this._adapterO) {
            return valueStr;
        }
        else {
            return this._adapterO.apply("getTooltipText", valueStr);
        }
    };
    /**
     * Zooms axis to specific values.
     *
     * @param startValue      Start value
     * @param endValue        End value
     * @param skipRangeEvent  Do not invoke events
     * @param instantly       Do not play zoom animations
     */
    ValueAxis.prototype.zoomToValues = function (startValue, endValue, skipRangeEvent, instantly) {
        var start = (startValue - this.min) / (this.max - this.min);
        var end = (endValue - this.min) / (this.max - this.min);
        this.zoom({ start: start, end: end }, skipRangeEvent, instantly);
    };
    Object.defineProperty(ValueAxis.prototype, "minZoomed", {
        /**
         * A smallest value in axis scale within current zoom.
         *
         * @return Min zoom value
         */
        get: function () {
            if (!this.syncWithAxis) {
                return _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](this.min, this._minZoomed);
            }
            else {
                return this._minZoomed;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "maxZoomed", {
        /**
         * A biggest value in axis scale within current zoom.
         * @return [description]
         */
        get: function () {
            if (!this.syncWithAxis) {
                return _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["min"](this.max, this._maxZoomed);
            }
            else {
                return this._maxZoomed;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates positioning of Axis breaks after something changes.
     *
     * @ignore Exclude from docs
     */
    ValueAxis.prototype.fixAxisBreaks = function () {
        var _this = this;
        _super.prototype.fixAxisBreaks.call(this);
        var axisBreaks = this._axisBreaks;
        if (axisBreaks && axisBreaks.length > 0) {
            // process breaks
            axisBreaks.each(function (axisBreak) {
                var startValue = axisBreak.adjustedStartValue;
                var endValue = axisBreak.adjustedEndValue;
                // break difference
                var axisBreakDif = endValue - startValue;
                var axisBreakGridCount = Math.ceil(axisBreakDif * axisBreak.breakSize) * _this._gridCount / (_this.max - _this.min);
                // calculate min, max and step for axis break
                var breakMinMaxStep = _this.adjustMinMax(startValue, endValue, axisBreakDif, axisBreakGridCount, true);
                axisBreak.adjustedStep = breakMinMaxStep.step;
                axisBreak.adjustedMin = breakMinMaxStep.min;
                axisBreak.adjustedMax = breakMinMaxStep.max;
            });
        }
        this._difference = this.adjustDifference(this.min, this.max);
    };
    /**
     * Returns value based on position.
     *
     * Please note that `position` represents position within axis which may be
     * zoomed and not correspond to Cursor's `position`.
     *
     * To convert Cursor's `position` to Axis' `position` use `toAxisPosition()` method.
     *
     * @see {@link https://www.amcharts.com/docs/v4/tutorials/tracking-cursors-position-via-api/#Tracking_Cursor_s_position} For more information about cursor tracking.
     * @param position  Relative position on axis (0-1)
     * @return Position label
     */
    ValueAxis.prototype.getPositionLabel = function (position) {
        var value = this.positionToValue(position);
        return this.numberFormatter.format(value);
    };
    /**
     * Shows Axis tooltip at specific value
     *
     * @param value Value
     */
    ValueAxis.prototype.showTooltipAt = function (value) {
        this.showTooltipAtPosition(this.valueToPosition(value));
    };
    /**
     * Copies all properties and related data from a different instance of Axis.
     *
     * @param source Source Axis
     */
    ValueAxis.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.min = source.min;
        this.max = source.max;
        this.calculateTotals = source.calculateTotals;
        this._baseValue = source.baseValue;
    };
    Object.defineProperty(ValueAxis.prototype, "syncWithAxis", {
        /**
         * @return Target axis
         */
        get: function () {
            return this.getPropertyValue("syncWithAxis");
        },
        /**
         * Enables syncing of grid with another axis.
         *
         * To enable, set to a reference of the other `ValueAxis`. This axis will try
         * to maintain its scale in such way that its grid matches target axis grid.
         *
         * IMPORTANT #1: At this stage it's an experimental feature. Use it at your
         * own risk, as it may not work in 100% of the scenarios.
         *
         * IMPORTANT #2: `syncWithAxis` is not compatible with `strictMinMax` and
         * `sequencedInterpolation` settings.
         *
         * IMPORTANT #3: `syncWithAxis` is not compatible with scrollbars. Make sure
         * you do not add a scrollbar in the same direction as synced axes. For
         * example, if you have vertical synced axes, do not add `scrollbarY` on
         * your chart. It will create anomalies when used.
         *
         * IMPORTANT #4: `syncWithAxis` is not compatible with `XYCursor` if it has
         * its `behavior` set to either `zoomY` or `zoomXY`.
         *
         * @since 4.8.1
         * @param  axis  Target axis
         */
        set: function (axis) {
            var _this = this;
            if (this.setPropertyValue("syncWithAxis", axis, true)) {
                if (axis) {
                    this._disposers.push(axis.events.on("extremeschanged", this.handleSelectionExtremesChange, this, false));
                    this._disposers.push(axis.events.on("selectionextremeschanged", this.handleSelectionExtremesChange, this, false));
                    this._disposers.push(axis.events.on("startendchanged", this.handleSelectionExtremesChange, this, false));
                    this.events.on("shown", this.handleSelectionExtremesChange, this, false);
                    this.events.on("maxsizechanged", function () {
                        _this.clearCache();
                        _this._disposers.push(_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].events.once("exitframe", function () {
                            _this.handleSelectionExtremesChange();
                        }));
                    }, this, false);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxis.prototype, "treatZeroAs", {
        /**
         * @return Zero replacement value
         */
        get: function () {
            return this.getPropertyValue("treatZeroAs");
        },
        /**
         * If set, zero values will be treated as this value.
         *
         * It is useful if you need to use data with zero-values on a logarithmic
         * axis scale.
         *
         * @since 4.9.34
         * @param  value  Zero replacement value
         */
        set: function (value) {
            this.setPropertyValue("treatZeroAs", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Syncs with a target axis.
     *
     * @param  min  Min
     * @param  max  Max
     * @param  step Step
     */
    ValueAxis.prototype.syncAxes = function (min, max, step) {
        var axis = this.syncWithAxis;
        if (axis) {
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](min)) {
                min = this.min;
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](max)) {
                max = this.max;
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](step)) {
                step = this._step;
            }
            var count = Math.round((axis.maxZoomed - axis.minZoomed) / axis.step);
            var currentCount = Math.round((max - min) / step);
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](count) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](currentCount)) {
                var synced = false;
                var c = 0;
                var diff = (max - min) * 0.01;
                var omin = min;
                var omax = max;
                var ostep = step;
                while (synced != true) {
                    synced = this.checkSync(omin, omax, ostep, count);
                    c++;
                    if (c > 1000) {
                        synced = true;
                    }
                    if (!synced) {
                        //omin = min - diff * c;
                        if (c / 3 == Math.round(c / 3)) {
                            omin = min - diff * c;
                            if (min >= 0 && omin < 0) {
                                omin = 0;
                            }
                        }
                        else {
                            omax = max + diff * c;
                            if (omax <= 0 && omax > 0) {
                                omax = 0;
                            }
                        }
                        var minMaxStep = this.adjustMinMax(omin, omax, omax - omin, this._gridCount, true);
                        omin = minMaxStep.min;
                        omax = minMaxStep.max;
                        ostep = minMaxStep.step;
                    }
                    else {
                        min = omin;
                        max = omax;
                        step = ostep;
                    }
                }
            }
        }
        return { min: min, max: max, step: step };
    };
    /**
     * Returns `true` if axis needs to be resunced with some other axis.
     */
    ValueAxis.prototype.checkSync = function (min, max, step, count) {
        var currentCount = (max - min) / step;
        for (var i = 1; i < count; i++) {
            if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](currentCount / i, 1) == count || currentCount * i == count) {
                return true;
            }
        }
        return false;
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    ValueAxis.prototype.processConfig = function (config) {
        if (config) {
            // Set up axes
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](config.syncWithAxis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isString"](config.syncWithAxis)) {
                if (this.map.hasKey(config.syncWithAxis)) {
                    config.syncWithAxis = this.map.getKey(config.syncWithAxis);
                }
                else {
                    this.processingErrors.push("[ValueAxis] No axis with id \"" + config.syncWithAxis + "\" found for `syncWithAxis`");
                    delete config.xAxis;
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    return ValueAxis;
}(_Axis__WEBPACK_IMPORTED_MODULE_1__["Axis"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["ValueAxis"] = ValueAxis;
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["ValueAxisDataItem"] = ValueAxisDataItem;
//# sourceMappingURL=ValueAxis.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxisBreak.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxisBreak.js ***!
  \**********************************************************************************/
/*! exports provided: ValueAxisBreak */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ValueAxisBreak", function() { return ValueAxisBreak; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _AxisBreak__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./AxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBreak.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * A module which defines functionality related to Value Axis Break.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Base class to define "breaks" on value axis.
 *
 * A "break" can be used to "cut out" specific ranges of the axis scale, e.g.
 * when comparing columns with relatively similar values, it would make sense
 * to cut out their mid section, so that their tip differences are more
 * prominent.
 *
 * @see {@link IValueAxisBreakEvents} for a list of available events
 * @see {@link IValueAxisBreakAdapters} for a list of available Adapters
 * @important
 */
var ValueAxisBreak = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ValueAxisBreak, _super);
    /**
     * Constructor
     */
    function ValueAxisBreak() {
        var _this = _super.call(this) || this;
        _this.className = "ValueAxisBreak";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(ValueAxisBreak.prototype, "startPosition", {
        /**
         * Pixel position of the break's start.
         *
         * @return Position (px)
         * @readonly
         */
        get: function () {
            if (this.axis) {
                return this.axis.valueToPosition(this.adjustedStartValue);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ValueAxisBreak.prototype, "endPosition", {
        /**
         * Pixel position of the break's end.
         *
         * @return Position (px)
         * @readonly
         */
        get: function () {
            if (this.axis) {
                return this.axis.valueToPosition(this.adjustedEndValue);
            }
        },
        enumerable: true,
        configurable: true
    });
    return ValueAxisBreak;
}(_AxisBreak__WEBPACK_IMPORTED_MODULE_1__["AxisBreak"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["ValueAxisBreak"] = ValueAxisBreak;
//# sourceMappingURL=ValueAxisBreak.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/cursors/Cursor.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/cursors/Cursor.js ***!
  \*****************************************************************************/
/*! exports provided: Cursor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Cursor", function() { return Cursor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/interaction/Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/interaction/Mouse */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_DOM__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/DOM */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/DOM.js");
/* harmony import */ var _core_System__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/System */ "./node_modules/@amcharts/amcharts4/.internal/core/System.js");
/**
 * Cursor module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */










/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Main Cursor class with common cursor functionality.
 *
 * Chart-specific cursors must extend this class.
 *
 * @see {@link ICursorEvents} for a list of available events
 * @see {@link ICursorAdapters} for a list of available Adapters
 * @todo Add description, examples
 * @todo Should we allow changing `_generalBehavior`?
 */
var Cursor = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Cursor, _super);
    /**
     * Constructor
     */
    function Cursor() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Current cursor position during selection.
         *
         * @todo Better description
         */
        _this.point = { x: 0, y: 0 };
        /**
         * Specifies the rules when cursor needs to be moved or hidden.
         */
        _this._stick = "none";
        _this.className = "Cursor";
        // Set defaults
        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__["percent"])(100);
        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__["percent"])(100);
        _this.shouldClone = false;
        _this.hide(0);
        _this.trackable = true;
        _this.clickable = true;
        _this.isMeasured = false;
        // Add events on body to trigger down and up events (to start zooming or
        // selection)
        var interaction = Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__["getInteraction"])();
        _this._disposers.push(interaction.body.events.on("down", _this.handleCursorDown, _this));
        _this._disposers.push(interaction.body.events.on("up", _this.handleCursorUp, _this));
        _this._disposers.push(interaction.body.events.on("track", _this.handleCursorMove, _this));
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Handle pointer movement in document and update cursor position as needed.
     *
     * @ignore Exclude from docs
     * @param event Event
     */
    Cursor.prototype.handleCursorMove = function (event) {
        if (!this.interactionsEnabled || (this.interactions.isTouchProtected && event.touch)) {
            return;
        }
        if (((this._generalBehavior != "zoom" && this._generalBehavior != "pan") || !this.downPoint) && !Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__["getInteraction"])().isLocalElement(event.pointer, this.paper.svg, this.uid)) {
            // We want to let zoom/pan continue even if cursor is outside chart area
            if (!this.isHidden || !this.isHiding) {
                this.hide();
            }
            return;
        }
        var local = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["documentPointToSprite"](event.pointer.point, this);
        if (this._stick == "hard" && this._stickPoint) {
            local = this._stickPoint;
        }
        if (this._stick == "soft" && this._stickPoint) {
            if (!this.fitsToBounds(local)) {
                local = this._stickPoint;
            }
        }
        if (this._adapterO) {
            this._adapterO.apply("cursorPoint", local);
        }
        this.triggerMove(local);
        return local;
    };
    /**
     * Hides actual SVG elements and handles hiding animations.
     *
     * @param duration  Fade out duration (ms)
     * @return Fade out duration (ms)
     * @ignore
     */
    Cursor.prototype.hideReal = function (duration) {
        if ((this._stick == "hard" || this._stick == "soft") && this._stickPoint) {
            return;
        }
        return _super.prototype.hideReal.call(this, duration);
    };
    /**
     * Places the cursor at specific point.
     *
     * The second parameter has following options:
     *
     * `"none"` - placed cursor will only be there until mouse/touch moves, then
     * it either moves to a new place (if pointer over plot area) or is hidden.
     *
     * `"soft"` - cursor will stay in the place if mouse/touch is happening
     * outside chart, but will move to a new place whe plot area is hovered or
     * touched.
     *
     * `"hard"` - cursor will stay in place no matter what, until it is moved by
     * another `triggerMove()` call.
     *
     * The third parameter - `force` (since `4.9.5`) - if set to `true` will
     * make cursor execute all of the actions associated with cursor move,
     * including line redraws, tooltip updates, etc. Useful when underlying
     * chart data is dynamically being updated.
     *
     * @param point  Point to place cursor at
     * @param stick  Level of cursor stickiness to the place
     * @param force  Force cursor move
     */
    Cursor.prototype.triggerMove = function (point, stick, force) {
        point.x = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](point.x, 1);
        point.y = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["round"](point.y, 1);
        if (stick) {
            this._stick = stick;
        }
        if (stick == "hard" || stick == "soft") {
            this._stickPoint = point;
        }
        this.triggerMoveReal(point, force);
    };
    /**
     * Places the cursor at specific point.
     *
     * @param point Point to place cursor at
     */
    Cursor.prototype.triggerMoveReal = function (point, force) {
        if (this.point.x != point.x || this.point.y != point.y || force) {
            this.point = point;
            this.invalidatePosition();
            // hide cursor if it's out of bounds
            if (this.fitsToBounds(point)) {
                this.show(0);
            }
            else {
                // unless we are selecting (mouse is down)
                if (!this.downPoint) {
                    this.hide(0);
                }
            }
            if (this.visible) {
                this.getPositions();
                this.dispatch("cursorpositionchanged"); // not good to dispatch later (check step count example)
            }
        }
    };
    /**
     * Simulates pressing down (click/touch) action by a cursor.
     *
     * @param point               Point of action
     */
    Cursor.prototype.triggerDown = function (point) {
        this.triggerDownReal(point);
    };
    /**
     * Simulates pressing down (click/touch) action by a cursor.
     *
     * @param point               Point of action
     */
    Cursor.prototype.triggerDownReal = function (point) {
        switch (this._generalBehavior) {
            case "zoom":
                this.dispatchImmediately("zoomstarted");
                break;
            case "select":
                this.dispatchImmediately("selectstarted");
                break;
            case "pan":
                this.dispatchImmediately("panstarted");
                Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__["getInteraction"])().setGlobalStyle(_core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_5__["MouseCursorStyle"].grabbing);
                break;
        }
    };
    /**
     * Simulates the action of release of the mouse down / touch.
     *
     * @param point               Point of action
     */
    Cursor.prototype.triggerUp = function (point) {
        this.triggerUpReal(point);
    };
    /**
     * Simulates the action of release of the mouse down / touch.
     *
     * @param point               Point of action
     */
    Cursor.prototype.triggerUpReal = function (point) {
        _core_System__WEBPACK_IMPORTED_MODULE_10__["system"].requestFrame();
        this.updatePoint(this.upPoint);
        var interaction = Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__["getInteraction"])();
        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["getDistance"](this._upPointOrig, this._downPointOrig) > interaction.getHitOption(this.interactions, "hitTolerance")) {
            switch (this._generalBehavior) {
                case "zoom":
                    this.dispatch("zoomended");
                    break;
                case "select":
                    this.dispatch("selectended");
                    break;
                case "pan":
                    this.dispatch("panended");
                    interaction.setGlobalStyle(_core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_5__["MouseCursorStyle"].default);
                    break;
            }
            this.downPoint = undefined;
            this.updateSelection();
        }
        /*
        else {
            
            if(this._generalBehavior == "select"){
                this.dispatchImmediately("selectended");
            }
            this.dispatchImmediately("behaviorcanceled");
            interaction.setGlobalStyle(MouseCursorStyle.default);
            this.downPoint = undefined;
        }*/
    };
    /**
     * Updates selection dimensions on size change.
     *
     * @ignore Exclude from docs
     */
    Cursor.prototype.updateSelection = function () {
    };
    /**
     * Updates cursors current positions.
     */
    Cursor.prototype.getPositions = function () {
        // positions are used by axes or series
        this.xPosition = this.point.x / this.innerWidth;
        this.yPosition = 1 - this.point.y / this.innerHeight;
    };
    /**
     * Handles pointer down event so we can start zoom or selection.
     *
     * @ignore Exclude from docs
     * @param event Original event
     */
    Cursor.prototype.handleCursorDown = function (event) {
        if (!this.interactionsEnabled || (this.interactions.isTouchProtected && event.touch) || !Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__["getInteraction"])().isLocalElement(event.pointer, this.paper.svg, this.uid)) {
            return;
        }
        // Initiate blur so that whatever focused element on the page is unselected
        _core_utils_DOM__WEBPACK_IMPORTED_MODULE_9__["blur"]();
        // Get local point
        var local = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["documentPointToSprite"](event.pointer.point, this);
        if (this._stick == "hard" && this._stickPoint) {
            local = this._stickPoint;
        }
        if (this._adapterO) {
            this._adapterO.apply("cursorPoint", local);
        }
        if (!this.fitsToBounds(local)) {
            return;
        }
        this._downPointOrig = { x: local.x, y: local.y };
        // We need to cancel the event to prevent gestures on touch devices
        if (event.event.cancelable && this.shouldPreventGestures(event.touch) && this.fitsToBounds(local)) {
            event.event.preventDefault();
        }
        // Make this happen
        this.triggerMove(local);
        this.triggerDown(local);
    };
    /**
     * Determines whether Cursor should prevent default action on move.
     *
     * Child classes should override this as necessary.
     *
     * @return Prevent default?
     */
    Cursor.prototype.shouldPreventGestures = function (touch) {
        return true;
    };
    /**
     * Updates the coordinates of where pointer down event occurred
     * (was pressed).
     */
    Cursor.prototype.updatePoint = function (point) {
    };
    /**
     * Handles pointer up event - finishes zoom or selection action.
     *
     * @ignore Exclude from docs
     * @param event Original event
     */
    Cursor.prototype.handleCursorUp = function (event) {
        if (!this.interactionsEnabled) {
            return;
        }
        if (!this.downPoint && !Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__["getInteraction"])().isLocalElement(event.pointer, this.paper.svg, this.uid)) {
            return;
        }
        var local = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["documentPointToSprite"](event.pointer.point, this);
        if (this._adapterO) {
            this._adapterO.apply("cursorPoint", local);
        }
        if (!this.downPoint || !this.fitsToBounds(this.downPoint)) {
            return;
        }
        if (this._stick == "hard" && this._stickPoint) {
            local = this._stickPoint;
        }
        this._upPointOrig = { x: local.x, y: local.y };
        this.triggerMove(local);
        this.triggerUp(local);
    };
    Object.defineProperty(Cursor.prototype, "chart", {
        /**
         * @return Chart
         */
        get: function () {
            return this._chart;
        },
        /**
         * A reference to a [[Chart]] the cursor belongs to.
         *
         * @param value  Chart
         */
        set: function (value) {
            this._chart = value;
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](this._chart.plotContainer)) {
                Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_2__["getInteraction"])().lockElement(this._chart.plotContainer.interactions);
            }
        },
        enumerable: true,
        configurable: true
    });
    return Cursor;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["Cursor"] = Cursor;
//# sourceMappingURL=Cursor.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/cursors/RadarCursor.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/cursors/RadarCursor.js ***!
  \**********************************************************************************/
/*! exports provided: RadarCursor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadarCursor", function() { return RadarCursor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _XYCursor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XYCursor */ "./node_modules/@amcharts/amcharts4/.internal/charts/cursors/XYCursor.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");








/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Cursor for [[RadarChart]].
 *
 * @see {@link IRadarCursorEvents} for a list of available events
 * @see {@link IRadarCursorAdapters} for a list of available Adapters
 */
var RadarCursor = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(RadarCursor, _super);
    /**
     * Constructor
     */
    function RadarCursor() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "RadarCursor";
        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(100);
        _this.innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(0);
        // Apply theme
        _this.applyTheme();
        _this.mask = undefined;
        return _this;
    }
    /**
     * Checks if point is within bounds of a container.
     *
     * @ignore Exclude from docs
     * @param point  Point to check
     * @return Fits within container?
     */
    RadarCursor.prototype.fitsToBounds = function (point) {
        var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getDistance"](point);
        //if(!$math.isAngleInRange(angle, this.startAngle, this.endAngle)){
        //return false;
        //}
        if (radius < this.truePixelRadius + 1 && radius > this.pixelInnerRadius - 1) { // ok to add/remove some
            return true;
        }
        return false;
    };
    Object.defineProperty(RadarCursor.prototype, "startAngle", {
        /**
         * @return Start angle
         */
        get: function () {
            return this.getPropertyValue("startAngle");
        },
        /**
         * Starting angle of the cursor's radial line.
         *
         * @param value Start angle
         */
        set: function (value) {
            this.setPropertyValue("startAngle", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadarCursor.prototype, "endAngle", {
        /**
         * @return End angle
         */
        get: function () {
            return this.getPropertyValue("endAngle");
        },
        /**
         * End angle of the cursor's radial line.
         *
         * @param value End angle
         */
        set: function (value) {
            this.setPropertyValue("endAngle", value, true);
        },
        enumerable: true,
        configurable: true
    });
    RadarCursor.prototype.triggerMoveReal = function (point, force) {
        if (!this.xAxis || (this.xAxis && (!this.xAxis.cursorTooltipEnabled || this.xAxis.tooltip.disabled))) {
            this.updateLineX(this.point);
        }
        if (!this.yAxis || (this.yAxis && (!this.yAxis.cursorTooltipEnabled || this.yAxis.tooltip.disabled))) {
            this.updateLineY(this.point);
        }
        this.updateSelection();
        _super.prototype.triggerMoveReal.call(this, point, force);
    };
    /**
     * (Re)draws the horizontal (circular) cursor's line.
     *
     * @param point New target point
     */
    RadarCursor.prototype.updateLineX = function (point) {
        var radius = this.pixelRadius;
        var startAngle = this.startAngle;
        var endAngle = this.endAngle;
        var innerRadius = this.pixelInnerRadius;
        if (radius > 0 && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](startAngle) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](endAngle) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](innerRadius)) {
            var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitAngleToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getAngle"](point), startAngle, endAngle);
            var path = void 0;
            if (this.lineX && this.lineX.visible) {
                this.lineX.moveTo({ x: 0, y: 0 });
                // fill
                if (this.xAxis && this.fullWidthLineX) {
                    var startPoint = this.xAxis.currentItemStartPoint;
                    var endPoint = this.xAxis.currentItemEndPoint;
                    if (startPoint && endPoint) {
                        var fillStartAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitAngleToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getAngle"](startPoint), startAngle, endAngle);
                        var fillEndAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitAngleToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getAngle"](endPoint), startAngle, endAngle);
                        var arc = fillEndAngle - fillStartAngle;
                        // clockwise
                        // this is needed, normalizeAngle doesn't solve it
                        if (startAngle < endAngle) {
                            if (arc < 0) {
                                arc += 360;
                            }
                        }
                        // ccw
                        else {
                            if (arc > 0) {
                                arc -= 360;
                            }
                        }
                        angle -= arc / 2;
                        path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](angle), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](angle) })
                            + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](angle) })
                            + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["arcTo"](angle, arc, radius)
                            + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](angle + arc), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](angle + arc) })
                            + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["arcTo"](angle + arc, -arc, innerRadius);
                    }
                }
                // line
                if (!path) {
                    path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](angle), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](angle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](angle) });
                }
                this.lineX.path = path;
            }
        }
    };
    /**
     * (Re)draws the vertical (radial) cursor's line.
     *
     * @param point New target point
     */
    RadarCursor.prototype.updateLineY = function (point) {
        if (this.lineY && this.lineY.visible) {
            var startAngle = this.startAngle;
            var endAngle = this.endAngle;
            var truePixelRadius = this.truePixelRadius;
            var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getDistance"](point), 0, this.truePixelRadius);
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](radius) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](startAngle)) {
                this.lineY.moveTo({ x: 0, y: 0 });
                var path = void 0;
                var arc = endAngle - startAngle;
                if (this.yAxis && this.fullWidthLineY) {
                    // fill
                    var startPoint = this.yAxis.currentItemStartPoint;
                    var endPoint = this.yAxis.currentItemEndPoint;
                    if (startPoint && endPoint) {
                        var innerRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getDistance"](startPoint), 0, truePixelRadius);
                        radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getDistance"](endPoint), 0, truePixelRadius);
                        path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](startAngle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](startAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["arcTo"](startAngle, arc, radius);
                        path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](endAngle), y: innerRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](endAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["arcTo"](endAngle, -arc, innerRadius);
                    }
                }
                if (!path) {
                    path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](startAngle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](startAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["arcTo"](startAngle, endAngle - startAngle, radius);
                }
                this.lineY.path = path;
            }
        }
    };
    /**
     * Updates selection dimensions on size change.
     *
     * @ignore Exclude from docs
     */
    RadarCursor.prototype.updateSelection = function () {
        if (this._usesSelection) {
            var downPoint = this.downPoint;
            if (downPoint) {
                var point = this.point;
                var radius = this.pixelRadius;
                var truePixelRadius = this.truePixelRadius;
                var innerRadius = this.pixelInnerRadius;
                var startAngle = Math.min(this.startAngle, this.endAngle);
                var endAngle = Math.max(this.startAngle, this.endAngle);
                var downAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitAngleToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getAngle"](downPoint), startAngle, endAngle);
                var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitAngleToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getAngle"](point), startAngle, endAngle);
                var downRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getDistance"](downPoint);
                if (downRadius < truePixelRadius) {
                    var currentRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getDistance"](point), 0, truePixelRadius);
                    this._prevAngle = angle;
                    var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: 0, y: 0 });
                    var downSin = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](downAngle);
                    var downCos = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](downAngle);
                    var sin = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](angle);
                    var cos = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](angle);
                    var behavior = this.behavior;
                    if (behavior == "zoomX" || behavior == "selectX") {
                        path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: radius * downCos, y: radius * downSin }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["arcTo"](downAngle, angle - downAngle, radius) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: innerRadius * cos, y: innerRadius * sin }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["arcTo"](angle, downAngle - angle, innerRadius);
                    }
                    else if (behavior == "zoomY" || behavior == "selectY") {
                        path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: currentRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](startAngle), y: currentRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](startAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["arcTo"](startAngle, endAngle - startAngle, currentRadius) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: downRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](endAngle), y: downRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](endAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["arcTo"](endAngle, startAngle - endAngle, downRadius) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["closePath"]();
                    }
                    else if (behavior == "zoomXY") {
                        path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: currentRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](downAngle), y: currentRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](downAngle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["arcTo"](downAngle, angle - downAngle, currentRadius) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: downRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](angle), y: downRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](angle) }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["arcTo"](angle, downAngle - angle, downRadius) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["closePath"]();
                    }
                    this.selection.path = path;
                }
                this.selection.moveTo({ x: 0, y: 0 });
            }
        }
    };
    /**
     * Updates cursors current positions.
     */
    RadarCursor.prototype.getPositions = function () {
        // positions are used by axes or series
        var chart = this.chart;
        if (chart) {
            var innerRadius = this.pixelInnerRadius;
            var radius = this.truePixelRadius - innerRadius;
            var startAngle = this.startAngle;
            var endAngle = this.endAngle;
            var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitAngleToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getAngle"](this.point), startAngle, endAngle);
            var xPosition = ((angle - startAngle) / (endAngle - startAngle));
            this.xPosition = xPosition;
            this.yPosition = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"]((_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getDistance"](this.point) - innerRadius) / radius, 0, 1);
        }
    };
    /**
     * Overriding inherited method, so that nothing happens when it's triggered.
     *
     * @ignore Exclude from docs
     */
    RadarCursor.prototype.updatePoint = function (point) {
    };
    /**
     * Updates Cursor's position when axis tooltip changes horizontal position.
     *
     * @param event Axis event
     */
    RadarCursor.prototype.handleXTooltipPosition = function (event) {
        if (this.xAxis.cursorTooltipEnabled) {
            var tooltip = this.xAxis.tooltip;
            this.updateLineX(_core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["svgPointToSprite"]({ x: tooltip.pixelX, y: tooltip.pixelY }, this));
        }
    };
    /**
     * Updates Cursor's position when axis tooltip changes vertical position.
     *
     * @todo Description
     * @param event Axis event
     */
    RadarCursor.prototype.handleYTooltipPosition = function (event) {
        if (this.yAxis.cursorTooltipEnabled) {
            var tooltip = this.yAxis.tooltip;
            this.updateLineY(_core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["svgPointToSprite"]({ x: tooltip.pixelX, y: tooltip.pixelY }, this));
        }
    };
    /**
     * needs to be overriden
     * @ignore
     */
    RadarCursor.prototype.updateLinePositions = function (point) {
    };
    /**
     * [getRanges description]
     *
     * @todo Description
     */
    RadarCursor.prototype.getRanges = function () {
        var downPoint = this.downPoint;
        if (downPoint) {
            var upPoint = this.upPoint;
            var chart = this.chart;
            if (chart) {
                var radius = this.pixelRadius;
                var startAngle = this.startAngle;
                var endAngle = this.endAngle;
                var downAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitAngleToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getAngle"](downPoint), this.startAngle, this.endAngle);
                var upAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitAngleToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getAngle"](upPoint), this.startAngle, this.endAngle);
                var downRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getDistance"](downPoint), 0, radius);
                var upRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["fitToRange"](_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getDistance"](upPoint), 0, radius);
                var startX = 0;
                var endX = 1;
                var startY = 0;
                var endY = 1;
                var behavior = this.behavior;
                if (behavior == "zoomX" || behavior == "selectX" || behavior == "zoomXY" || behavior == "selectXY") {
                    var arc = endAngle - startAngle;
                    startX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"]((downAngle - startAngle) / arc, 5);
                    endX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"]((upAngle - startAngle) / arc, 5);
                }
                if (behavior == "zoomY" || behavior == "selectY" || behavior == "zoomXY" || behavior == "selectXY") {
                    startY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](downRadius / radius, 5);
                    endY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](upRadius / radius, 5);
                }
                this.xRange = { start: Math.min(startX, endX), end: Math.max(startX, endX) };
                this.yRange = { start: Math.min(startY, endY), end: Math.max(startY, endY) };
                if (this.behavior == "selectX" || this.behavior == "selectY" || this.behavior == "selectXY") {
                    // void
                }
                else {
                    this.selection.hide();
                }
            }
        }
    };
    /**
     * Overriding inherited method, so that nothing happens when `updateSize`
     * is triggered.
     *
     * RadarCursor is quite complicated and needs own sizing logic.
     *
     * @ignore Exclude from docs
     */
    RadarCursor.prototype.updateSize = function () { };
    Object.defineProperty(RadarCursor.prototype, "radius", {
        /**
         * @return Outer radius
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * Outer radius of the cursor's circular line.
         * Absolute (px) or relative ([[Percent]]).
         *
         * @param value  Outer radius
         */
        set: function (value) {
            this.setPercentProperty("radius", value, false, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadarCursor.prototype, "pixelRadius", {
        /**
         * Outer radius of the circular line in pixels.
         *
         * @return Outer radius (px)
         * @readonly
         */
        get: function () {
            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["relativeRadiusToValue"](this.radius, this.truePixelRadius);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadarCursor.prototype, "truePixelRadius", {
        /**
         * [truePixelRadius description]
         *
         * @todo Description
         * @return Outer radius (px)
         * @readonly
         */
        get: function () {
            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["relativeToValue"](Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(100), _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["min"](this.innerWidth / 2, this.innerHeight / 2));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadarCursor.prototype, "innerRadius", {
        /**
         * @return Inner radius
         */
        get: function () {
            return this.getPropertyValue("innerRadius");
        },
        /**
         * Inner radius of the cursor's circular line.
         * Absolute (px) or relative ([[Percent]]).
         *
         * @param value  Inner radius
         */
        set: function (value) {
            this.setPercentProperty("innerRadius", value, false, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadarCursor.prototype, "pixelInnerRadius", {
        /**
         * Inner radius of the circular line in pixels.
         *
         * @return Inner radius (px)
         * @readonly
         */
        get: function () {
            var innerRadius = this.innerRadius;
            if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["Percent"]) {
                innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(100 * innerRadius.value * this.chart.innerRadiusModifyer);
            }
            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["relativeRadiusToValue"](innerRadius, this.truePixelRadius) || 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     *
     * @ignore Exclude from docs
     */
    RadarCursor.prototype.fixPoint = function (point) {
        // overriding xy method
        return point;
    };
    return RadarCursor;
}(_XYCursor__WEBPACK_IMPORTED_MODULE_1__["XYCursor"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["RadarCursor"] = RadarCursor;
//# sourceMappingURL=RadarCursor.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/cursors/XYCursor.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/cursors/XYCursor.js ***!
  \*******************************************************************************/
/*! exports provided: XYCursor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XYCursor", function() { return XYCursor; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Cursor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Cursor */ "./node_modules/@amcharts/amcharts4/.internal/charts/cursors/Cursor.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../axes/ValueAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js");
/* harmony import */ var _axes_DateAxis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../axes/DateAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js");
/* harmony import */ var _series_XYSeries__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../series/XYSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/interaction/Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/interaction/Mouse */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Cursor for XY chart
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */
















/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A cursor used on [[XYChart]].
 *
 * @see {@link IXYCursorEvents} for a list of available events
 * @see {@link IXYCursorAdapters} for a list of available Adapters
 * @todo Add description, examples
 */
var XYCursor = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(XYCursor, _super);
    /**
     * Constructor
     */
    function XYCursor() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Vertical cursor line element.
         */
        _this._lineX = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["MutableValueDisposer"]();
        /**
         * Horizontal cursor line element.
         */
        _this._lineY = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["MutableValueDisposer"]();
        /**
         * Horizontal [[Axis]].
         */
        _this._xAxis = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["MutableValueDisposer"]();
        /**
         * Vertical [[Axis]].
         */
        _this._yAxis = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["MutableValueDisposer"]();
        _this._snapToDisposers = [];
        _this.className = "XYCursor";
        // Defaults
        _this.behavior = "zoomX";
        _this.maxPanOut = 0.1;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__["InterfaceColorSet"]();
        // Create selection element
        var selection = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        selection.shouldClone = false;
        selection.fillOpacity = 0.2;
        selection.fill = interfaceColors.getFor("alternativeBackground");
        selection.isMeasured = false;
        selection.visible = false;
        selection.interactionsEnabled = false;
        _this.selection = selection;
        _this._disposers.push(_this.selection);
        // Create cursor's vertical line
        var lineX = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        lineX.shouldClone = false;
        lineX.stroke = interfaceColors.getFor("grid");
        lineX.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_8__["color"])();
        lineX.strokeDasharray = "3,3";
        lineX.isMeasured = false;
        lineX.strokeOpacity = 0.4;
        lineX.interactionsEnabled = false;
        lineX.y = 0; // important
        _this.lineX = lineX;
        _this._disposers.push(_this.lineX);
        // Create cursor's horizontal line
        var lineY = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        lineY.shouldClone = false;
        lineY.stroke = interfaceColors.getFor("grid");
        lineY.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_8__["color"])();
        lineY.strokeDasharray = "3,3";
        lineY.isMeasured = false;
        lineY.strokeOpacity = 0.4;
        lineY.interactionsEnabled = false;
        lineY.x = 0; // important
        _this.lineY = lineY;
        _this._disposers.push(_this.lineY);
        // Add handler for size changes
        _this.events.on("sizechanged", _this.updateSize, _this, false);
        _this._disposers.push(_this._lineX);
        _this._disposers.push(_this._lineY);
        _this._disposers.push(_this._xAxis);
        _this._disposers.push(_this._yAxis);
        _this.mask = _this;
        _this.hideSeriesTooltipsOnSelection = true;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Updates cursor element dimensions on size change.
     *
     * @ignore Exclude from docs
     */
    XYCursor.prototype.updateSize = function () {
        if (this.lineX) {
            this.lineX.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__["lineTo"]({ x: 0, y: this.innerHeight });
        }
        if (this.lineY) {
            this.lineY.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__["lineTo"]({ x: this.innerWidth, y: 0 });
        }
    };
    /**
     * Updates selection dimensions on size change.
     *
     * @ignore Exclude from docs
     */
    XYCursor.prototype.updateSelection = function () {
        if (this._usesSelection) {
            var downPoint = this.downPoint;
            var behavior = this.behavior;
            if (downPoint) {
                var point = this.point;
                if (this.lineX) {
                    point.x = this.lineX.pixelX;
                }
                if (this.lineY) {
                    point.y = this.lineY.pixelY;
                }
                var selection = this.selection;
                var x = Math.min(point.x, downPoint.x);
                var y = Math.min(point.y, downPoint.y);
                var w = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"](Math.abs(downPoint.x - point.x), this._positionPrecision);
                var h = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"](Math.abs(downPoint.y - point.y), this._positionPrecision);
                switch (behavior) {
                    case "zoomX":
                        y = 0;
                        h = this.pixelHeight;
                        break;
                    case "zoomY":
                        x = 0;
                        w = this.pixelWidth;
                        break;
                    case "selectX":
                        y = 0;
                        h = this.pixelHeight;
                        break;
                    case "selectY":
                        x = 0;
                        w = this.pixelWidth;
                        break;
                }
                selection.x = x;
                selection.y = y;
                selection.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__["rectangle"](w, h);
                selection.validatePosition(); // otherwise Edge shoes some incorrect size rectangle
            }
            else {
                if (this._generalBehavior != "select") {
                    this.selection.hide();
                }
            }
        }
    };
    /**
     *
     * @ignore Exclude from docs
     */
    XYCursor.prototype.fixPoint = function (point) {
        point.x = Math.max(0, point.x);
        point.y = Math.max(0, point.y);
        point.x = Math.min(this.pixelWidth, point.x);
        point.y = Math.min(this.pixelHeight, point.y);
        return point;
    };
    /**
     * Places the cursor at specific point.
     *
     * @param point Point to place cursor at
     */
    XYCursor.prototype.triggerMoveReal = function (point, force) {
        _super.prototype.triggerMoveReal.call(this, point, force);
        var snapToSeries = this.snapToSeries;
        if ((snapToSeries && !this.downPoint)) {
            if (snapToSeries instanceof _series_XYSeries__WEBPACK_IMPORTED_MODULE_6__["XYSeries"]) {
                if (snapToSeries.isHidden) {
                    this.updateLinePositions(point);
                }
            }
            else {
                var allHidden_1 = true;
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__["each"](snapToSeries, function (s) {
                    if (!s.isHidden) {
                        allHidden_1 = false;
                    }
                });
                if (allHidden_1) {
                    this.updateLinePositions(point);
                }
            }
        }
        else {
            this.updateLinePositions(point);
        }
        if (this.downPoint && _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["getDistance"](this.downPoint, point) > 3) {
            if (this._generalBehavior == "pan") {
                this.getPanningRanges();
                this.dispatch("panning");
            }
        }
    };
    /**
     *
     * @ignore Exclude from docs
     */
    XYCursor.prototype.updateLinePositions = function (point) {
        point = this.fixPoint(this.point);
        if (this.lineX && this.lineX.visible && !this.xAxis) {
            this.lineX.x = point.x;
        }
        if (this.lineY && this.lineY.visible && !this.yAxis) {
            this.lineY.y = point.y;
        }
        this.updateSelection();
    };
    XYCursor.prototype.triggerDownReal = function (point) {
        if (this.visible && !this.isHiding) {
            if (this._generalBehavior == "select") {
                this.selection.parent = this.parent;
            }
            if (this.fitsToBounds(point)) {
                this.downPoint = { x: point.x, y: point.y };
                this.updatePoint(point);
                //this.updateLinePositions(point); // otherwise lines won't be in correct position and touch won't work fine
                this.point.x = this.downPoint.x;
                this.point.y = this.downPoint.y;
                var selection = this.selection;
                var selectionX = this.downPoint.x;
                var selectionY = this.downPoint.y;
                if (this._usesSelection) {
                    selection.x = selectionX;
                    selection.y = selectionY;
                    selection.path = "";
                    selection.show();
                }
                _super.prototype.triggerDownReal.call(this, point);
            }
            else {
                this.downPoint = undefined;
            }
        }
        else {
            this.downPoint = undefined;
        }
    };
    /**
     * Updates the coordinates of where pointer down event occurred
     * (was pressed).
     */
    XYCursor.prototype.updatePoint = function (point) {
        if (this.lineX) {
            point.x = this.lineX.pixelX;
        }
        if (this.lineY) {
            point.y = this.lineY.pixelY;
        }
    };
    /**
     * Handle action when cursor is released, which should perform an operation
     * based on its `behavior`, like zoom.
     *
     * @param  point  Release point
     */
    XYCursor.prototype.triggerUpReal = function (point) {
        if (this.hasMoved()) {
            if (this.downPoint) {
                this.upPoint = point;
                this.updatePoint(this.upPoint);
                if (this._generalBehavior != "pan") {
                    this.getRanges();
                }
                if (this._generalBehavior != "select") {
                    this.selection.hide();
                }
                _super.prototype.triggerUpReal.call(this, point);
            }
        }
        else {
            if (this._generalBehavior != "select") {
                this.selection.hide(0);
            }
            else {
                this.xRange = undefined;
                this.yRange = undefined;
                this.dispatchImmediately("selectended");
            }
            // reset cursor style, just in case
            if (this._generalBehavior == "pan") {
                var interaction = Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_10__["getInteraction"])();
                interaction.setGlobalStyle(_core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_11__["MouseCursorStyle"].default);
            }
            this.dispatchImmediately("behaviorcanceled");
        }
        this.downPoint = undefined;
        this.dispatch("cursorpositionchanged");
    };
    /**
     * Calculates if the cursor has moved enough based on its `behavior`.
     *
     * @return Moved?
     */
    XYCursor.prototype.hasMoved = function () {
        var distance;
        if (this.behavior == "zoomX" || this.behavior == "panX") {
            distance = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["getHorizontalDistance"](this._upPointOrig, this._downPointOrig);
        }
        else if (this.behavior == "zoomY" || this.behavior == "panY") {
            distance = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["getVerticalDistance"](this._upPointOrig, this._downPointOrig);
        }
        else {
            distance = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["getDistance"](this._upPointOrig, this._downPointOrig);
        }
        return distance > Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_10__["getInteraction"])().getHitOption(this.interactions, "hitTolerance");
    };
    /**
     * [getRanges description]
     *
     * @todo Description
     */
    XYCursor.prototype.getPanningRanges = function () {
        var startX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"](this.downPoint.x / this.innerWidth, 5);
        var startY = 1 - _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"](this.downPoint.y / this.innerHeight, 5);
        var currentX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"](this.point.x / this.innerWidth, 5);
        var currentY = 1 - _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"](this.point.y / this.innerHeight, 5);
        var deltaX = startX - currentX;
        var deltaY = startY - currentY;
        this.xRange = { start: deltaX, end: 1 + deltaX };
        this.yRange = { start: deltaY, end: 1 + deltaY };
        if (this.behavior == "panX") {
            this.yRange.start = 0;
            this.yRange.end = 1;
        }
        if (this.behavior == "panY") {
            this.xRange.start = 0;
            this.xRange.end = 1;
        }
    };
    /**
     * [getRanges description]
     *
     * @todo Description
     */
    XYCursor.prototype.getRanges = function () {
        if (this.lineX) {
            this.upPoint.x = this.lineX.pixelX;
        }
        if (this.lineY) {
            this.upPoint.y = this.lineY.pixelY;
        }
        // @todo Is this needed?
        _core_utils_Utils__WEBPACK_IMPORTED_MODULE_13__["used"](this.selection);
        var startX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"](this.downPoint.x / this.innerWidth, 5);
        var endX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"]((this.upPoint.x) / this.innerWidth, 5);
        var startY = 1 - _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"](this.downPoint.y / this.innerHeight, 5);
        var endY = 1 - _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"]((this.upPoint.y) / this.innerHeight, 5);
        this.xRange = { start: _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["min"](startX, endX), end: _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["max"](startX, endX) };
        this.yRange = { start: _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["min"](startY, endY), end: _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["max"](startY, endY) };
    };
    Object.defineProperty(XYCursor.prototype, "behavior", {
        /**
         * Behavior
         */
        get: function () {
            return this.getPropertyValue("behavior");
        },
        /**
         * Cursor's behavior when it's moved with pointer down:
         *
         * * `"zoomX"` - zooms horizontally.
         * * `"zoomY"` - zooms vertically.
         * * `"zoomXY"` - zooms both horizontally and vertically.
         * * `"selectX"` - selects a range horizontally.
         * * `"selectY"` - selects a range vertically.
         * * `"selectXY"` - selects a range both horizontally and vertically.
         * * `"panX"` - moves (pans) current selection horizontally.
         * * `"panY"` - moves (pans) current selection vertically.
         * * `"panXY"` - moves (pans) current selection both horizontally and vertically.
         * * `"none"` - does nothing with pointer down.
         *
         * E.g. "zoomXY" will mean that pressing a mouse (or touching) over plot area
         * and dragging it will start zooming the chart.
         *
         * NOTE: `"zoomXY"` acts differently when used on a `DateAxis`.
         * See [this note](https://www.amcharts.com/docs/v4/concepts/chart-cursor/#zoomXY_behavior_and_DateAxis).
         *
         * @param value Bheavior
         */
        set: function (value) {
            this.setPropertyValue("behavior", value, true);
            this._usesSelection = false;
            if (value.indexOf("zoom") != -1) {
                this._generalBehavior = "zoom";
                this._usesSelection = true;
            }
            if (value.indexOf("select") != -1) {
                this._generalBehavior = "select";
                this._usesSelection = true;
            }
            if (value.indexOf("pan") != -1) {
                this._generalBehavior = "pan";
                this._usesSelection = false;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Determines whether Cursor should prevent default action on move.
     *
     * If cursor's behavior is "none", it should not obstruct the page scrolling.
     *
     * @return Prevent default?
     */
    XYCursor.prototype.shouldPreventGestures = function (touch) {
        return (!this.interactions.isTouchProtected || !touch) && this.behavior != "none";
    };
    Object.defineProperty(XYCursor.prototype, "fullWidthLineX", {
        /**
         * @return Full width?
         */
        get: function () {
            return this.getPropertyValue("fullWidthLineX");
        },
        /**
         * Cursor's horizontal line is expanded to take full width of the related
         * Axis' cell/category.
         *
         * NOTE: this setting will work properly if `xAxis` is set and only in case
         * `xAxis` is [[CategoryAxis]] or [[DateAxis]].
         *
         * @param value Full width?
         */
        set: function (value) {
            this.setPropertyValue("fullWidthLineX", value);
            if (!value) {
                this.updateSize();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYCursor.prototype, "fullWidthLineY", {
        /**
         * @return Full width?
         */
        get: function () {
            return this.getPropertyValue("fullWidthLineY");
        },
        /**
         * Cursor's vertical line is expanded to take full width of the related
         * Axis' cell/category.
         *
         * NOTE: this setting will work properly if `yAxis` is set and only in case
         * `yAxis` is [[CategoryAxis]] or [[DateAxis]].
         *
         * @param value Full width?
         */
        set: function (value) {
            this.setPropertyValue("fullWidthLineY", value);
            if (!value) {
                this.updateSize();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYCursor.prototype, "hideSeriesTooltipsOnSelection", {
        /**
         * @return hide tooltip?
         */
        get: function () {
            return this.getPropertyValue("hideSeriesTooltipsOnSelection");
        },
        /**
         * If set to `true` this will hide series tooltips when selecting with cursor.
         *
         * @since 4.5.15
         * @param  value  hide tooltips?
         */
        set: function (value) {
            this.setPropertyValue("hideSeriesTooltipsOnSelection", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYCursor.prototype, "maxTooltipDistance", {
        /**
         * @return Distance
         */
        get: function () {
            return this.getPropertyValue("maxTooltipDistance");
        },
        /**
         * If set to a numeric value, cursor will display closest series' tooltips
         * plus tooltips from series that are closer to than `maxTooltipDistance` to
         * it.
         *
         * Set it to `-1` to always force one tooltip, even if there are multiple
         * data items in exactly same place.
         *
         * @since 4.7.18
         * @param  value  Distance
         */
        set: function (value) {
            this.setPropertyValue("maxTooltipDistance", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYCursor.prototype, "maxPanOut", {
        /**
         * @return Full width?
         */
        get: function () {
            return this.getPropertyValue("maxPanOut");
        },
        /**
         * If cursor behavior is panX or panY, we allow to pan plot out of it's max bounds for a better user experience.
         * This setting specifies relative value by how much we can pan out the plot
         *
         * @param value
         */
        set: function (value) {
            this.setPropertyValue("maxPanOut", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYCursor.prototype, "xAxis", {
        /**
         * @return X axis
         */
        get: function () {
            return this._xAxis.get();
        },
        /**
         * A reference to X [[Axis]].
         *
         * An XY cursor can live without `xAxis` set. You set xAxis for cursor when
         * you have axis tooltip enabled and you want cursor line to be at the same
         * position as tooltip.
         *
         * This works with [[CategoryAxis]] and [[DateAxis]] but not with
         * [[ValueAxis]].
         *
         * @todo Description (review)
         * @param axis X axis
         */
        set: function (axis) {
            var _this = this;
            if (this._xAxis.get() != axis) {
                this._xAxis.set(axis, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["MultiDisposer"]([
                    axis.tooltip.events.on("positionchanged", this.handleXTooltipPosition, this, false),
                    axis.events.on("rangechangestarted", function (event) {
                        _this.hide(0);
                        _this.preventShow = true;
                    }, undefined, false),
                    axis.events.on("rangechangeended", function (event) {
                        _this.preventShow = false;
                        _this.hide(0);
                        _this.dispatch("cursorpositionchanged");
                    }, undefined, false)
                ]));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYCursor.prototype, "yAxis", {
        /**
         * @return Y Axis
         */
        get: function () {
            return this._yAxis.get();
        },
        /**
         * A reference to Y [[Axis]].
         *
         * An XY cursor can live without `yAxis` set. You set xAxis for cursor when
         * you have axis tooltip enabled and you want cursor line to be at the same
         * position as tooltip.
         *
         * This works with [[CategoryAxis]] and [[DateAxis]] but not with
         * [[ValueAxis]].
         *
         * @todo Description (review)
         * @param axis Y axis
         */
        set: function (axis) {
            var _this = this;
            if (this._yAxis.get() != axis) {
                this._yAxis.set(axis, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_3__["MultiDisposer"]([
                    axis.tooltip.events.on("positionchanged", this.handleYTooltipPosition, this, false),
                    axis.events.on("rangechangestarted", function (event) {
                        _this.hide(0);
                        _this.__disabled = true;
                    }, undefined, false),
                    axis.events.on("rangechangeended", function (event) {
                        _this.__disabled = false;
                        _this.hide(0);
                        _this.dispatch("cursorpositionchanged");
                    }, undefined, false)
                ]));
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates Cursor's position when axis tooltip changes position.
     *
     * @ignore Exclude from docs
     * @param event Original Axis event
     */
    XYCursor.prototype.handleXTooltipPosition = function (event) {
        var tooltip = this.xAxis.tooltip;
        var point = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_13__["svgPointToSprite"]({ x: tooltip.pixelX, y: tooltip.pixelY }, this);
        var x = point.x;
        point.y = 1;
        if (this.lineX) {
            this.lineX.x = x;
            if (!this.fitsToBounds(point)) {
                this.hide();
            }
        }
        if (this.xAxis && this.fullWidthLineX) {
            var startPoint = this.xAxis.currentItemStartPoint;
            var endPoint = this.xAxis.currentItemEndPoint;
            if (startPoint && endPoint) {
                this.lineX.x = x;
                var width = endPoint.x - startPoint.x;
                this.lineX.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__["rectangle"](width, this.innerHeight, -width / 2);
            }
        }
    };
    /**
     * Updates Cursor's position when Y axis changes position or scale.
     *
     * @ignore Exclude from docs
     * @param event Original Axis event
     */
    XYCursor.prototype.handleYTooltipPosition = function (event) {
        var tooltip = this.yAxis.tooltip;
        var point = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_13__["svgPointToSprite"]({ x: tooltip.pixelX, y: tooltip.pixelY }, this);
        var y = point.y;
        point.x = 1;
        if (this.lineY) {
            this.lineY.y = y;
            if (!this.fitsToBounds(point)) {
                this.hide();
            }
        }
        if (this.yAxis && this.fullWidthLineY) {
            var startPoint = this.yAxis.currentItemStartPoint;
            var endPoint = this.yAxis.currentItemEndPoint;
            if (startPoint && endPoint) {
                this.lineY.y = y;
                var height = endPoint.y - startPoint.y;
                this.lineY.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_16__["rectangle"](this.innerWidth, height, 0, -height / 2);
            }
        }
    };
    Object.defineProperty(XYCursor.prototype, "lineX", {
        /**
         * @return Line element
         */
        get: function () {
            return this._lineX.get();
        },
        /**
         * A Line element to use for X axis.
         *
         * @param lineX Line
         */
        set: function (lineX) {
            if (lineX) {
                lineX.setElement(this.paper.add("path"));
                this._lineX.set(lineX, lineX.events.on("positionchanged", this.updateSelection, this, false));
                lineX.interactionsEnabled = false;
                lineX.parent = this;
            }
            else {
                this._lineX.reset();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYCursor.prototype, "lineY", {
        /**
         * @return Line element
         */
        get: function () {
            return this._lineY.get();
        },
        /**
         * A Line element to use Y axis.
         *
         * @param lineY Line
         */
        set: function (lineY) {
            if (lineY) {
                lineY.setElement(this.paper.add("path"));
                this._lineY.set(lineY, lineY.events.on("positionchanged", this.updateSelection, this, false));
                lineY.parent = this;
                lineY.interactionsEnabled = false;
            }
            else {
                this._lineY.reset();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYCursor.prototype, "selection", {
        /**
         * @return Selection rectangle
         */
        get: function () {
            return this._selection;
        },
        /**
         * A selection element ([[Sprite]]).
         *
         * @param selection Selection rectangle
         */
        set: function (selection) {
            this._selection = selection;
            if (selection) {
                selection.element = this.paper.add("path");
                selection.parent = this;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * Looks if `xAxis` and `yAxis` is set via ID in JSON config, and replaces
     * with real references.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    XYCursor.prototype.processConfig = function (config) {
        var _this = this;
        if (config) {
            // Set up axes
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["hasValue"](config.xAxis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isString"](config.xAxis)) {
                if (this.map.hasKey(config.xAxis)) {
                    config.xAxis = this.map.getKey(config.xAxis);
                }
                else {
                    this.processingErrors.push("[XYCursor] No axis with id \"" + config.xAxis + "\" found for `xAxis`");
                    delete config.xAxis;
                }
            }
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["hasValue"](config.yAxis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isString"](config.yAxis)) {
                if (this.map.hasKey(config.yAxis)) {
                    config.yAxis = this.map.getKey(config.yAxis);
                }
                else {
                    this.processingErrors.push("[XYCursor] No axis with id \"" + config.yAxis + "\" found for `yAxis`");
                    delete config.yAxis;
                }
            }
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["hasValue"](config.snapToSeries)) {
                var snapTo_1 = _core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isArray"](config.snapToSeries) ? config.snapToSeries : [config.snapToSeries];
                var snapError_1 = false;
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__["each"](snapTo_1, function (snap, index) {
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_14__["isString"](snap)) {
                        if (_this.map.hasKey(snap)) {
                            snapTo_1[index] = _this.map.getKey(snap);
                        }
                        else {
                            _this.processingErrors.push("[XYCursor] No series with id \"" + snap + "\" found for `series`");
                            snapError_1 = true;
                        }
                    }
                });
                if (snapError_1) {
                    delete config.snapToSeries;
                }
                else {
                    config.snapToSeries = snapTo_1;
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    Object.defineProperty(XYCursor.prototype, "snapToSeries", {
        /**
         * @return {XYSeries | XYSeries[]}
         */
        get: function () {
            return this.getPropertyValue("snapToSeries");
        },
        /**
         * Specifies to which series cursor lines should be snapped.
         *
         * Can be a single series instance or an array of series.
         *
         * @param {XYSeries | XYSeries[]}
         */
        set: function (series) {
            var _this = this;
            if (this.setPropertyValue("snapToSeries", series)) {
                if (series instanceof _series_XYSeries__WEBPACK_IMPORTED_MODULE_6__["XYSeries"]) {
                    series = [series];
                }
                if (this._snapToDisposers) {
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__["each"](this._snapToDisposers, function (disposer) {
                        disposer.dispose();
                    });
                }
                this._snapToDisposers = [];
                if (series) {
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__["each"](series, function (s) {
                        _this._snapToDisposers.push(s.events.on("tooltipshownat", function () { _this.handleSnap(s); }, undefined, false));
                    });
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * [handleSnap description]
     *
     * @ignore
     * @todo Description
     */
    XYCursor.prototype.handleSnap = function (series) {
        if (!this.downPoint) {
            var x = series.getTooltipX() + series.xAxis.pixelX;
            var y = series.getTooltipY() + series.yAxis.pixelY;
            if (this.xAxis) {
                if (this.xAxis.renderer.opposite) {
                    y -= this.pixelHeight;
                }
            }
            this.point = { x: x, y: y };
            this.getPositions();
            var xx = x;
            var yy = y;
            x -= this.pixelWidth;
            if (this.yAxis) {
                if (this.yAxis.renderer.opposite) {
                    x += this.pixelWidth;
                }
            }
            var tooltip = series.tooltip;
            var duration = tooltip.animationDuration;
            var easing = tooltip.animationEasing;
            var xAxis = series.xAxis;
            var yAxis = series.yAxis;
            if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_4__["ValueAxis"] && !(xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_5__["DateAxis"]) && yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_4__["ValueAxis"] && !(yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_5__["DateAxis"])) {
                series.yAxis.showTooltipAtPosition(this.yPosition);
                series.xAxis.showTooltipAtPosition(this.xPosition);
            }
            else {
                if (series.baseAxis == series.xAxis) {
                    series.yAxis.showTooltipAtPosition(this.yPosition);
                }
                if (series.baseAxis == series.yAxis) {
                    series.xAxis.showTooltipAtPosition(this.xPosition);
                }
            }
            this.lineX.animate([{ property: "y", to: y }], duration, easing);
            this.lineY.animate([{ property: "x", to: x }], duration, easing);
            if (!this.xAxis) {
                this.lineX.animate([{ property: "x", to: xx }], duration, easing);
            }
            if (!this.yAxis) {
                this.lineY.animate([{ property: "y", to: yy }], duration, easing);
            }
        }
    };
    /**
     * Destroys this object and all related data.
     */
    XYCursor.prototype.dispose = function () {
        this.hide(0);
        _super.prototype.dispose.call(this);
    };
    return XYCursor;
}(_Cursor__WEBPACK_IMPORTED_MODULE_1__["Cursor"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_7__["registry"].registeredClasses["XYCursor"] = XYCursor;
//# sourceMappingURL=XYCursor.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js ***!
  \******************************************************************************/
/*! exports provided: Bullet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Bullet", function() { return Bullet; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Responsive */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Responsive.js");
/**
 * Module that defines everything related to building bullets.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Class used to creates bullets.
 *
 * @see {@link IBulletEvents} for a list of available events
 * @see {@link IBulletAdapters} for a list of available Adapters
 * @todo Usage example
 * @important
 */
var Bullet = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Bullet, _super);
    /**
     * Constructor
     */
    function Bullet() {
        var _this = _super.call(this) || this;
        _this.className = "Bullet";
        _this.isMeasured = false;
        _this.tooltipX = 0;
        _this.tooltipY = 0;
        _this.layout = "none";
        _this.applyOnClones = true;
        _this.copyToLegendMarker = true;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(Bullet.prototype, "locationX", {
        /**
         * @return Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("locationX");
        },
        /**
         * Relative horizontal location within cell. (0-1)
         *
         * @param value  Location (0-1)
         */
        set: function (value) {
            if (this.setPropertyValue("locationX", value)) {
                var dataItem = this.dataItem;
                if (dataItem && dataItem.component) {
                    dataItem.component.invalidate();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Bullet.prototype, "locationY", {
        /**
         * @return Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("locationY");
        },
        /**
         * Relative vertical location within cell. (0-1)
         *
         * @param value  Location (0-1)
         */
        set: function (value) {
            if (this.setPropertyValue("locationY", value)) {
                var dataItem = this.dataItem;
                if (dataItem && dataItem.component) {
                    dataItem.component.invalidate();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Bullet.prototype, "xField", {
        /**
         * @return [description]
         */
        get: function () {
            return this.getPropertyValue("xField");
        },
        /**
         * [xField description]
         *
         * @todo Description
         * @param value  [description]
         */
        set: function (value) {
            this.setPropertyValue("xField", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Bullet.prototype, "yField", {
        /**
         * @return [description]
         */
        get: function () {
            return this.getPropertyValue("yField");
        },
        /**
         * [yField description]
         *
         * Description
         * @param value  [description]
         */
        set: function (value) {
            this.setPropertyValue("yField", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Bullet.prototype, "isDynamic", {
        /**
         * @return Redraw on data change?
         */
        get: function () {
            return this.getPropertyValue("isDynamic");
        },
        /**
         * Indicates if the bullet is "dynamic".
         *
         * In most cases the bullets remain the same, even if the underlying data
         * changes.
         *
         * However, in cases where bullet also displays a label, or its size depends
         * on data, it also needs to be redrawn when the underlying data changes.
         *
         * Only those bullets that have set `isDynamic = true` will be redrawn each
         * time data changes. Regular bullets will be reused as they are.
         *
         * @default false
         * @param value  Redraw on data change?
         */
        set: function (value) {
            this.setPropertyValue("isDynamic", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Bullet.prototype, "copyToLegendMarker", {
        /**
         * @return Redraw on data change?
         */
        get: function () {
            return this.getPropertyValue("copyToLegendMarker");
        },
        /**
         * Indicates if the bullet should be copied to legend marker
         *
         * @default false
         * @param value  Redraw on data change?
         */
        set: function (value) {
            this.setPropertyValue("copyToLegendMarker", value);
        },
        enumerable: true,
        configurable: true
    });
    return Bullet;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Bullet"] = Bullet;
/**
 * Add default responsive rules
 */
/**
 * Hide bullets
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_3__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_3__["ResponsiveBreakpoints"].isXS,
    state: function (target, stateId) {
        if (target instanceof Bullet) {
            var state = target.states.create(stateId);
            state.properties.disabled = true;
            return state;
        }
        return null;
    }
});
//# sourceMappingURL=Bullet.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js ***!
  \***********************************************************************************/
/*! exports provided: Candlestick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Candlestick", function() { return Candlestick; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Column */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js");
/* harmony import */ var _core_elements_Line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Line */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Module that defines everything related to building Candlesticks.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Class used to creates Candlesticks.
 *
 * @see {@link ICandlestickEvents} for a list of available events
 * @see {@link ICandlestickAdapters} for a list of available Adapters
 * @todo Usage example
 * @important
 */
var Candlestick = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Candlestick, _super);
    /**
     * Constructor
     */
    function Candlestick() {
        var _this = _super.call(this) || this;
        _this.className = "Candlestick";
        _this.layout = "none";
        return _this;
    }
    /**
     * @ignore
     */
    Candlestick.prototype.createAssets = function () {
        _super.prototype.createAssets.call(this);
        this.lowLine = this.createChild(_core_elements_Line__WEBPACK_IMPORTED_MODULE_2__["Line"]);
        this.lowLine.shouldClone = false;
        this.highLine = this.createChild(_core_elements_Line__WEBPACK_IMPORTED_MODULE_2__["Line"]);
        this.highLine.shouldClone = false;
    };
    /**
     * Copies all parameters from another [[Candlestick]].
     *
     * @param source Source Candlestick
     */
    Candlestick.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        if (this.lowLine) {
            this.lowLine.copyFrom(source.lowLine);
        }
        if (this.highLine) {
            this.highLine.copyFrom(source.highLine);
        }
    };
    return Candlestick;
}(_Column__WEBPACK_IMPORTED_MODULE_1__["Column"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["Candlestick"] = Candlestick;
//# sourceMappingURL=Candlestick.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordLink.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordLink.js ***!
  \*********************************************************************************/
/*! exports provided: ChordLink */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChordLink", function() { return ChordLink; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _FlowDiagramLink__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FlowDiagramLink */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_elements_QuadraticCurve__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/QuadraticCurve */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/QuadraticCurve.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * ChordLink module
 */






/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * This class creates a link (waved color-filled line) between two nodes in a
 * Chord Diagram.
 *
 * @see {@link IChordLinkEvents} for a list of available events
 * @see {@link IChordLinkAdapters} for a list of available Adapters
 * @important
 */
var ChordLink = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ChordLink, _super);
    /**
     * Constructor
     */
    function ChordLink() {
        var _this = _super.call(this) || this;
        _this.className = "ChordLink";
        _this.middleLine = _this.createChild(_core_elements_QuadraticCurve__WEBPACK_IMPORTED_MODULE_3__["QuadraticCurve"]);
        _this.middleLine.shouldClone = false;
        _this.middleLine.strokeOpacity = 0;
        _this.applyTheme();
        return _this;
    }
    /**
     * (Re)validates (redraws) the link.
     *
     * @ignore Exclude from docs
     */
    ChordLink.prototype.validate = function () {
        _super.prototype.validate.call(this);
        if (!this.isTemplate) {
            var startAngle = this.startAngle;
            var endAngle = this.endAngle;
            var arc = this.arc;
            var radius = this.radius;
            var fromNode = this.dataItem.fromNode;
            var toNode = this.dataItem.toNode;
            var fromX = 0;
            var fromY = 0;
            if (fromNode) {
                fromX = fromNode.pixelX + fromNode.dx;
                fromY = fromNode.pixelY + fromNode.dy;
            }
            var toX = 0;
            var toY = 0;
            if (toNode) {
                toX = toNode.pixelX + toNode.dx;
                toY = toNode.pixelY + toNode.dy;
            }
            if (radius > 0) {
                var x1 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["cos"](startAngle) + fromX;
                var y1 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["sin"](startAngle) + fromY;
                var x2 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["cos"](endAngle) + toX;
                var y2 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["sin"](endAngle) + toY;
                //let cpAngle = startAngle + arc + (endAngle - startAngle - arc) / 2;
                //let arcWidth = $math.getDistance({x:x1, y:y1}, {x:x4, y:y4});
                //let cpx = (arcWidth) * $math.cos(cpAngle);
                //let cpy = (arcWidth) * $math.sin(cpAngle);
                var cp = { x: 0, y: 0 };
                var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__["moveTo"]({ x: x1, y: y1 });
                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__["arcTo"](startAngle, arc, radius);
                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__["quadraticCurveTo"]({ x: x2, y: y2 }, cp);
                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__["arcTo"](endAngle, arc, radius);
                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__["quadraticCurveTo"]({ x: x1, y: y1 }, cp);
                if (arc > 0) {
                    this.link.path = path;
                }
                else {
                    this.link.path = "";
                }
                if (this.maskBullets) {
                    this.bulletsMask.path = path;
                    this.bulletsContainer.mask = this.bulletsMask;
                }
                var mAngle1 = startAngle + arc / 2;
                var mAngle2 = endAngle + arc / 2;
                var middleLine = this.middleLine;
                middleLine.x1 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["cos"](mAngle1) + fromX;
                middleLine.y1 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["sin"](mAngle1) + fromY;
                middleLine.x2 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["cos"](mAngle2) + toX;
                middleLine.y2 = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["sin"](mAngle2) + toY;
                middleLine.cpx = 0;
                middleLine.cpy = 0;
                middleLine.stroke = this.fill;
                this.positionBullets();
            }
        }
    };
    Object.defineProperty(ChordLink.prototype, "radius", {
        /**
         * @return End Y
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * [radius description]
         *
         * @todo Description
         * @param value End Y
         */
        set: function (value) {
            this.setPropertyValue("radius", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChordLink.prototype, "arc", {
        /**
         * @return [description]
         */
        get: function () {
            return this.getPropertyValue("arc");
        },
        /**
         * [arc description]
         *
         * @todo Description
         * @param value [description]
         */
        set: function (value) {
            this.setPropertyValue("arc", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return ChordLink;
}(_FlowDiagramLink__WEBPACK_IMPORTED_MODULE_1__["FlowDiagramLink"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["ChordLink"] = ChordLink;
//# sourceMappingURL=ChordLink.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordNode.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordNode.js ***!
  \*********************************************************************************/
/*! exports provided: ChordNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChordNode", function() { return ChordNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _FlowDiagramNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FlowDiagramNode */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js");
/* harmony import */ var _axes_AxisLabelCircular__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../axes/AxisLabelCircular */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_elements_Slice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/elements/Slice */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Slice.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _elements_Bullet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../elements/Bullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js");
/**
 * ChordNode module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a node in a Chord Diagram.
 *
 * A Chord node is a block with a value, which represents its size on the
 * diagram.
 *
 * Nodes are connected via [[ChordLink]] elements.
 *
 * @see {@link IChordNodeEvents} for a list of available events
 * @see {@link IChordNodeAdapters} for a list of available Adapters
 * @important
 */
var ChordNode = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ChordNode, _super);
    /**
     * Constructor
     */
    function ChordNode() {
        var _this = _super.call(this) || this;
        _this.className = "ChordNode";
        var label = _this.createChild(_axes_AxisLabelCircular__WEBPACK_IMPORTED_MODULE_2__["AxisLabelCircular"]);
        label.location = 0.5;
        label.radius = 5;
        label.text = "{name}";
        label.zIndex = 1;
        label.shouldClone = false;
        _this.label = label;
        _this.layout = "none";
        _this.events.on("positionchanged", _this.updateRotation, _this, false);
        _this.isMeasured = false;
        _this.slice = _this.createChild(_core_elements_Slice__WEBPACK_IMPORTED_MODULE_4__["Slice"]);
        _this.slice.isMeasured = false;
        var hiddenState = _this.hiddenState;
        hiddenState.properties.fill = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__["InterfaceColorSet"]().getFor("disabledBackground");
        hiddenState.properties.opacity = 0.5;
        hiddenState.properties.visible = true;
        _this.setStateOnChildren = false;
        _this.slice.hiddenState.properties.visible = true;
        _this.adapter.add("tooltipX", function (tooltipX, target) {
            return target.slice.ix * (target.slice.radius - (target.slice.radius - target.slice.pixelInnerRadius) / 2);
        });
        _this.adapter.add("tooltipY", function (tooltipY, target) {
            return target.slice.iy * (target.slice.radius - (target.slice.radius - target.slice.pixelInnerRadius) / 2);
        });
        return _this;
    }
    /**
     * Invalidates all links, attached to this node.
     *
     * @ignore Exclude from docs
     */
    ChordNode.prototype.invalidateLinks = function () {
        var _this = this;
        _super.prototype.invalidateLinks.call(this);
        var label = this.label;
        var slice = this.slice;
        var chart = this.chart;
        if (chart && slice) {
            var sum = this.total;
            var arc_1 = slice.arc;
            var sliceStartAngle_1 = slice.startAngle;
            this.children.each(function (child) {
                if (child instanceof _elements_Bullet__WEBPACK_IMPORTED_MODULE_9__["Bullet"]) {
                    var locationX = child.locationX;
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](locationX)) {
                        locationX = 0.5;
                    }
                    var locationY = child.locationY;
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](locationY)) {
                        locationY = 1;
                    }
                    var childAngle = sliceStartAngle_1 + arc_1 * locationX;
                    var childRadius = locationY * slice.radius;
                    child.x = childRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](childAngle);
                    child.y = childRadius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](childAngle);
                }
            });
            var labelAngle = sliceStartAngle_1 + arc_1 * label.location;
            var startAngle = sliceStartAngle_1 + (1 - sum / this.adjustedTotal) * arc_1 * 0.5; // if value of a node is > then sum of the links, add to center link
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNaN"](startAngle)) {
                startAngle = sliceStartAngle_1;
            }
            label.fixPosition(labelAngle, slice.radius);
            this.nextAngle = startAngle;
            if (this._outgoingSorted) {
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__["each"](this._outgoingSorted, function (dataItem) {
                    var link = dataItem.link;
                    link.parent = _this.chart.linksContainer;
                    var value = dataItem.getWorkingValue("value");
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](value)) {
                        if (chart.nonRibbon) {
                            var percentWidth = link.percentWidth;
                            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](percentWidth)) {
                                percentWidth = 5;
                            }
                            percentWidth = percentWidth / 100;
                            link.startAngle = sliceStartAngle_1 + arc_1 / 2 - arc_1 / 2 * percentWidth;
                            link.arc = arc_1 * percentWidth;
                        }
                        else {
                            link.arc = value * chart.valueAngle;
                            link.startAngle = _this.nextAngle;
                            _this.nextAngle += link.arc;
                        }
                        if (!dataItem.toNode) {
                            link.endAngle = link.startAngle;
                        }
                        link.radius = slice.pixelInnerRadius;
                    }
                    //link.validate();
                });
            }
            if (this._incomingSorted) {
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__["each"](this._incomingSorted, function (dataItem) {
                    var link = dataItem.link;
                    link.radius = slice.pixelInnerRadius;
                    if (chart.nonRibbon) {
                        var percentWidth = link.percentWidth;
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](percentWidth)) {
                            percentWidth = 5;
                        }
                        percentWidth = percentWidth / 100;
                        link.endAngle = sliceStartAngle_1 + arc_1 / 2 - arc_1 / 2 * percentWidth;
                        link.arc = arc_1 * percentWidth;
                    }
                    else {
                        link.endAngle = _this.nextAngle;
                        var value = dataItem.getWorkingValue("value");
                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](value)) {
                            link.arc = value * chart.valueAngle; // yes, this is needed
                            _this.nextAngle += link.arc;
                        }
                    }
                    if (!dataItem.fromNode) {
                        link.startAngle = link.endAngle;
                    }
                    //link.validate();
                });
            }
        }
    };
    /**
     * @ignore
     * updates slice start angle so that when we drag a node it would face the center
     */
    ChordNode.prototype.updateRotation = function () {
        var slice = this.slice;
        var mAngle = this.trueStartAngle + slice.arc / 2;
        var radius = slice.radius;
        var tx = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](mAngle);
        var ty = radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](mAngle);
        var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getAngle"]({ x: tx + this.pixelX, y: ty + this.pixelY });
        slice.startAngle = this.trueStartAngle + (angle - mAngle);
        this.dx = -this.pixelX;
        this.dy = -this.pixelY;
    };
    /**
     * Copies properties and labels from another [[ChordNode]].
     *
     * @param source  Source node
     */
    ChordNode.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.label.copyFrom(source.label);
        this.slice.copyFrom(source.slice);
    };
    return ChordNode;
}(_FlowDiagramNode__WEBPACK_IMPORTED_MODULE_1__["FlowDiagramNode"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["ChordNode"] = ChordNode;
//# sourceMappingURL=ChordNode.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/CircleBullet.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/CircleBullet.js ***!
  \************************************************************************************/
/*! exports provided: CircleBullet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CircleBullet", function() { return CircleBullet; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Bullet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js");
/* harmony import */ var _core_elements_Circle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Circle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Circle.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Bullet module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a bullet with a textual label.
 *
 * Uses [[Label]] instance to draw the label, so the label itself is
 * configurable.
 *
 * @see {@link IBulletEvents} for a list of available events
 * @see {@link IBulletAdapters} for a list of available Adapters
 * @todo Usage example
 * @important
 */
var CircleBullet = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CircleBullet, _super);
    /**
     * Constructor
     */
    function CircleBullet() {
        var _this = _super.call(this) || this;
        _this.className = "CircleBullet";
        var circle = _this.createChild(_core_elements_Circle__WEBPACK_IMPORTED_MODULE_2__["Circle"]);
        circle.shouldClone = false;
        circle.radius = 5;
        circle.isMeasured = false;
        _this.circle = circle;
        _this.applyTheme();
        return _this;
    }
    /**
     * Copies all proprities and related stuff from another instance of
     * [[CircleBullet]].
     *
     * @param source  Source element
     */
    CircleBullet.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.circle.copyFrom(source.circle);
    };
    return CircleBullet;
}(_Bullet__WEBPACK_IMPORTED_MODULE_1__["Bullet"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["CircleBullet"] = CircleBullet;
//# sourceMappingURL=CircleBullet.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ClockHand.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/ClockHand.js ***!
  \*********************************************************************************/
/*! exports provided: ClockHand */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ClockHand", function() { return ClockHand; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_elements_Circle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Circle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Circle.js");
/* harmony import */ var _core_elements_Trapezoid__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/Trapezoid */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Trapezoid.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Functionality for drawing simple ClockHands
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * ClockHand class is capable of drawing a simple pointy shape with optionally
 * rounderd corners and an icon.
 *
 * @see {@link IClockHandEvents} for a list of available events
 * @see {@link IClockHandAdapters} for a list of available Adapters
 * @todo Improve
 * @important
 */
var ClockHand = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ClockHand, _super);
    /**
     * Constructor
     */
    function ClockHand() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * An Axis hand is related to.
         */
        _this._axis = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MutableValueDisposer"]();
        _this.className = "ClockHand";
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__["InterfaceColorSet"]();
        _this.fill = interfaceColors.getFor("alternativeBackground");
        _this.stroke = _this.fill;
        var pin = new _core_elements_Circle__WEBPACK_IMPORTED_MODULE_2__["Circle"]();
        pin.radius = 5;
        _this.pin = pin;
        _this.isMeasured = false;
        _this.startWidth = 5;
        _this.endWidth = 1;
        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        _this.innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(0);
        var hand = new _core_elements_Trapezoid__WEBPACK_IMPORTED_MODULE_3__["Trapezoid"]();
        _this.hand = hand;
        _this._disposers.push(_this._axis);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Re(validates) the clock hand, effectively redrawing it.
     *
     * @ignore Exclude from docs
     */
    ClockHand.prototype.validate = function () {
        _super.prototype.validate.call(this);
        var hand = this.hand;
        hand.width = this.pixelWidth;
        var h = Math.max(this.startWidth, this.endWidth);
        hand.height = h;
        hand.leftSide = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(this.startWidth / h * 100);
        hand.rightSide = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(this.endWidth / h * 100);
        if (this.axis) {
            var renderer = this.axis.renderer;
            var x0 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__["relativeRadiusToValue"](this.innerRadius, renderer.pixelRadius);
            var x1 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__["relativeRadiusToValue"](this.radius, renderer.pixelRadius);
            hand.x = x0;
            hand.y = -h / 2;
            hand.width = x1 - x0;
        }
    };
    Object.defineProperty(ClockHand.prototype, "pin", {
        /**
         * @return Pin element
         */
        get: function () {
            return this._pin;
        },
        /**
         * A circle element used as hand's base. (pin)
         *
         * @param pin  Pin element
         */
        set: function (pin) {
            if (this._pin) {
                this.removeDispose(this._pin);
            }
            if (pin) {
                this._pin = pin;
                pin.parent = this;
                this._disposers.push(pin);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClockHand.prototype, "hand", {
        /**
         * @return Hand element
         */
        get: function () {
            return this._hand;
        },
        /**
         * A trapezoid shape used for hand itself.
         *
         * The shape of the trapezoid is controlled by ClockHand's `startWidth` and
         * `endWidth` properties.
         *
         * Set `endWidth` to 1 (px) to make it pointy.
         *
         * @param hand  Hand element
         */
        set: function (hand) {
            if (this._hand) {
                this.removeDispose(this._hand);
            }
            if (hand) {
                this._hand = hand;
                hand.parent = this;
                this._disposers.push(hand);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClockHand.prototype, "radius", {
        /**
         * @return Radius
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * Radius of the hand's outer end. (tip)
         *
         * Absolute (px) or relative ([[Percent]]).
         *
         * @default Percent(0)
         * @param value  Radius
         */
        set: function (value) {
            this.setPercentProperty("radius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClockHand.prototype, "innerRadius", {
        /**
         * @return Radius
         */
        get: function () {
            return this.getPropertyValue("innerRadius");
        },
        /**
         * Radius of the hand's inner end. (base)
         *
         * Absolute (px) or relative ([[Percent]]).
         *
         * @default Percent(0)
         * @param value  Radius
         */
        set: function (value) {
            this.setPercentProperty("innerRadius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClockHand.prototype, "startWidth", {
        /**
         * @return Width (px)
         */
        get: function () {
            return this.getPropertyValue("startWidth");
        },
        /**
         * Width, in pixels, of the clock hand's inner end. (base)
         *
         * @default 5
         * @param value  Width (px)
         */
        set: function (value) {
            this.setPropertyValue("startWidth", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClockHand.prototype, "endWidth", {
        /**
         * @return Width (px)
         */
        get: function () {
            return this.getPropertyValue("endWidth");
        },
        /**
         * Width, in pixels, of the clock hand's outer end. (tip)
         *
         * @default 1
         * @param value  Width (px)
         */
        set: function (value) {
            this.setPropertyValue("endWidth", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClockHand.prototype, "rotationDirection", {
        /**
         * @return rotationDirection
         */
        get: function () {
            return this.getPropertyValue("rotationDirection");
        },
        /**
         * Rotation direction
         *
         * @default any
         * @param value
         */
        set: function (value) {
            this.setPropertyValue("rotationDirection", value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Moves clock hand to particular value.
     *
     * If `duration` is set to a number in milliseconds, the hand will move
     * to the new position gracefully, rather than jumping rigth to it.
     *
     * Alternatively, you can also set `value` directly.
     *
     * @param value     New value
     * @param duration  Animation duration (ms)
     * @param easing  Animation easing function
     */
    ClockHand.prototype.showValue = function (value, duration, easing) {
        this._value = value;
        if (value != undefined) {
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](duration)) {
                duration = 0;
            }
            if (this.axis) {
                var renderer = this.axis.renderer;
                var newAngle = renderer.positionToAngle(this.axis.anyToPosition(value));
                var currentAngle = this.rotation;
                if (this.rotationDirection == "clockWise") {
                    if (newAngle < currentAngle) {
                        this.rotation = currentAngle - 360;
                    }
                }
                if (this.rotationDirection == "counterClockWise") {
                    if (newAngle > currentAngle) {
                        this.rotation = currentAngle + 360;
                    }
                }
                this.animate({ property: "rotation", to: newAngle }, duration, easing);
            }
        }
    };
    Object.defineProperty(ClockHand.prototype, "currentPosition", {
        /**
         * Returns hand's relative position on axis
         */
        get: function () {
            if (this.axis) {
                var renderer = this.axis.renderer;
                return renderer.angleToPosition(this.rotation);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClockHand.prototype, "value", {
        /**
         * @return Value
         */
        get: function () {
            return this._value;
        },
        /**
         * A current value clock hand is pointing to.
         *
         * @param value  Value
         */
        set: function (value) {
            this.showValue(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ClockHand.prototype, "axis", {
        /**
         * @return Axis
         */
        get: function () {
            return this._axis.get();
        },
        /**
         * An Axis clock hand is associated with.
         *
         * Hand's `value` relates to values on the Axis.
         *
         * @param axis  Axis
         */
        set: function (axis) {
            if (this.axis != axis) {
                this._axis.set(axis, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MultiDisposer"]([
                    axis.events.on("datavalidated", this.updateValue, this, false),
                    axis.events.on("datarangechanged", this.updateValue, this, false),
                    axis.events.on("dataitemsvalidated", this.updateValue, this, false),
                    axis.events.on("propertychanged", this.invalidate, this, false)
                ]));
            }
            if (axis) {
                var chart = axis.chart;
                if (chart) {
                    this.rotation = chart.startAngle;
                }
            }
            this.parent = axis.renderer;
            this.zIndex = 5;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Triggers `value` accessor, so that Hand animates to new position, in case
     * value has changed.
     *
     * @ignore Exclude from docs
     */
    ClockHand.prototype.updateValue = function () {
        this.value = this.value;
    };
    /**
 * Processes JSON-based config before it is applied to the object.
 *
 * @ignore Exclude from docs
 * @param config  Config
 */
    ClockHand.prototype.processConfig = function (config) {
        if (config) {
            // Connect clock hands with axes
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](config.axis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isString"](config.axis) && this.map.hasKey(config.axis)) {
                config.axis = this.map.getKey(config.axis);
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    return ClockHand;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_6__["registry"].registeredClasses["ClockHand"] = ClockHand;
//# sourceMappingURL=ClockHand.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js ***!
  \******************************************************************************/
/*! exports provided: Column */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Column", function() { return Column; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * Module that defines everything related to building Columns.
 * It is a container which has column element which is a RoundedRectangle.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Class used to creates Columns.
 *
 * @see {@link IColumnEvents} for a list of available events
 * @see {@link IColumnAdapters} for a list of available Adapters
 * @todo Usage example
 * @important
 */
var Column = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Column, _super);
    /**
     * Constructor
     */
    function Column() {
        var _this = _super.call(this) || this;
        _this.className = "Column";
        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__["percent"])(80);
        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__["percent"])(80);
        //this.isMeasured = true; // for correct position of the tooltip
        _this.events.disableType("transformed"); // not to bug parent
        _this.applyOnClones = true;
        _this.strokeOpacity = 1;
        _this.layout = "none";
        _this.createAssets();
        // otherwise users will have to set layout themselves if they'll want to align, scale etc children
        _this.events.on("childadded", _this.handleKidAdded, _this, false);
        return _this;
    }
    /**
     * @ignore
     */
    Column.prototype.handleKidAdded = function () {
        if (this.layout == "none") {
            this.layout = "absolute";
        }
    };
    /**
     * @ignore
     */
    Column.prototype.createAssets = function () {
        this.column = this.createChild(_core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_2__["RoundedRectangle"]);
        this.column.shouldClone = false;
        this.column.isMeasured = false;
        this.column.cornerRadius(0, 0, 0, 0);
        this._disposers.push(this.column);
    };
    /**
     * @ignore Exclude from docs
     */
    Column.prototype.validate = function () {
        _super.prototype.validate.call(this);
        var column = this.column;
        if (column) {
            column.width = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["min"](this.pixelWidth, this.maxWidth);
            column.height = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["min"](this.pixelHeight, this.maxHeight);
            if (column.invalid) {
                column.validate(); // important!
            }
        }
    };
    /**
     * Copies all parameters from another [[Column]].
     *
     * @param source Source Column
     */
    Column.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        if (this.column) {
            this.column.copyFrom(source.column);
        }
    };
    Object.defineProperty(Column.prototype, "bbox", {
        /**
         * Returns bounding box (square) for this element.
         *
         * @ignore Exclude from docs
         */
        get: function () {
            if (this.definedBBox) {
                return this.definedBBox;
            }
            if (this.column) {
                return { x: 0, y: 0, width: this.column.measuredWidth, height: this.column.measuredHeight };
            }
            else {
                return { x: 0, y: 0, width: _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["min"](this.pixelWidth, this.maxWidth), height: _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["min"](this.pixelHeight, this.maxHeight) };
            }
        },
        enumerable: true,
        configurable: true
    });
    return Column;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["Column"] = Column;
//# sourceMappingURL=Column.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column3D.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column3D.js ***!
  \********************************************************************************/
/*! exports provided: Column3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Column3D", function() { return Column3D; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Column */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js");
/* harmony import */ var _core_elements_3d_Rectangle3D__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/3d/Rectangle3D */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Rectangle3D.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Module that defines everything related to building 3D Columns.
 * It is a container which has column3D element which is a Rectangle3D.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Class used to creates Column3Ds.
 *
 * @see {@link IColumn3DEvents} for a list of available events
 * @see {@link IColumn3DAdapters} for a list of available Adapters
 * @todo Usage example
 * @important
 */
var Column3D = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Column3D, _super);
    /**
     * Constructor
     */
    function Column3D() {
        var _this = _super.call(this) || this;
        _this.className = "Column3D";
        return _this;
    }
    /**
     * @ignore
     */
    Column3D.prototype.createAssets = function () {
        this.column3D = this.createChild(_core_elements_3d_Rectangle3D__WEBPACK_IMPORTED_MODULE_2__["Rectangle3D"]);
        this.column3D.shouldClone = false;
        this.column3D.strokeOpacity = 0;
        // some dirty hack so that if user access column, it won't get error
        this.column = this.column3D;
    };
    /**
     * @ignore Exclude from docs
     */
    Column3D.prototype.validate = function () {
        _super.prototype.validate.call(this);
        if (this.column3D) {
            this.column3D.width = this.pixelWidth;
            this.column3D.height = this.pixelHeight;
            if (this.column3D.invalid) {
                this.column3D.validate();
            }
        }
    };
    /**
     * Copies all parameters from another [[Column3D]].
     *
     * @param source Source Column3D
     */
    Column3D.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        if (this.column3D) {
            this.column3D.copyFrom(source.column3D);
        }
    };
    /**
     * Sets actual `fill` property on the SVG element, including applicable color
     * modifiers.
     *
     * @ignore Exclude from docs
     * @param value  Fill
     */
    Column3D.prototype.setFill = function (value) {
        _super.prototype.setFill.call(this, value);
        this.column.fill = value;
    };
    return Column3D;
}(_Column__WEBPACK_IMPORTED_MODULE_1__["Column"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["Column3D"] = Column3D;
//# sourceMappingURL=Column3D.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ConeColumn.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/ConeColumn.js ***!
  \**********************************************************************************/
/*! exports provided: ConeColumn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConeColumn", function() { return ConeColumn; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Column */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js");
/* harmony import */ var _core_elements_3d_Cone__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/3d/Cone */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Cone.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Module that defines everything related to building Cone Columns.
 * It is a container which has coneColumn element which is a Cone.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Class used to creates ConeColumns.
 *
 * @see {@link IConeColumnEvents} for a list of available events
 * @see {@link IConeColumnAdapters} for a list of available Adapters
 * @todo Usage example
 * @important
 */
var ConeColumn = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ConeColumn, _super);
    /**
     * Constructor
     */
    function ConeColumn() {
        var _this = _super.call(this) || this;
        _this.className = "ConeColumn";
        return _this;
    }
    /**
     * @ignore
     */
    ConeColumn.prototype.createAssets = function () {
        this.coneColumn = this.createChild(_core_elements_3d_Cone__WEBPACK_IMPORTED_MODULE_2__["Cone"]);
        this.coneColumn.shouldClone = false;
        // some dirty hack so that if user access column, it won't get error
        this.column = this.coneColumn;
    };
    /**
     * Copies all parameters from another [[ConeColumn]].
     *
     * @param source Source ConeColumn
     */
    ConeColumn.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        if (this.coneColumn) {
            this.coneColumn.copyFrom(source.coneColumn);
        }
    };
    return ConeColumn;
}(_Column__WEBPACK_IMPORTED_MODULE_1__["Column"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["ConeColumn"] = ConeColumn;
//# sourceMappingURL=ConeColumn.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/CurvedColumn.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/CurvedColumn.js ***!
  \************************************************************************************/
/*! exports provided: CurvedColumn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CurvedColumn", function() { return CurvedColumn; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Column */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/rendering/Smoothing */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Smoothing.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/**
 * Module that defines everything related to building Curved Columns.
 * It is a container which has CurvedColumn element which is a Sprite.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */







/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Class used to creates CurvedColumns.
 *
 * @see {@link ICurvedColumnEvents} for a list of available events
 * @see {@link ICurvedColumnAdapters} for a list of available Adapters
 * @important
 */
var CurvedColumn = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CurvedColumn, _super);
    /**
     * Constructor
     */
    function CurvedColumn() {
        var _this = _super.call(this) || this;
        _this.className = "CurvedColumn";
        return _this;
    }
    /**
     * [createAssets description]
     *
     * @todo Description
     * @ignore Exclude from docs
     */
    CurvedColumn.prototype.createAssets = function () {
        this.curvedColumn = this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        this.curvedColumn.shouldClone = false;
        this.setPropertyValue("tension", 0.7);
        this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(120);
        this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(120);
        // some dirty hack so that if user access column, it won't get error
        this.column = this.curvedColumn;
    };
    /**
     * Draws the element.
     *
     * @ignore Exclude from docs
     */
    CurvedColumn.prototype.draw = function () {
        _super.prototype.draw.call(this);
        var w = this.realWidth;
        var h = this.realHeight;
        var x = this.realX - this.pixelX;
        var y = this.realY - this.pixelY;
        var points;
        // TODO can this be removed ?
        _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__["used"](this.width);
        var tensionX = 1;
        var tensionY = 1;
        if (this.orientation == "vertical") {
            tensionX = this.tension;
            points = [{ x: 0, y: h + y }, { x: w / 2, y: y }, { x: w, y: h + y }];
        }
        else {
            tensionY = this.tension;
            h = Math.abs(h);
            points = [{ x: x, y: h }, { x: x + w, y: h / 2 }, { x: x, y: 0 }];
        }
        var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"](points[0]) + new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_6__["Tension"](tensionX, tensionY).smooth(points);
        this.column.path = path;
    };
    /**
     * Copies all parameters from another [[CurvedColumn]].
     *
     * @param source  Source CurvedColumn
     */
    CurvedColumn.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        if (this.curvedColumn) {
            this.curvedColumn.copyFrom(source.curvedColumn);
        }
    };
    Object.defineProperty(CurvedColumn.prototype, "tension", {
        /**
         * @return Tension (0-1)
         */
        get: function () {
            return this.getPropertyValue("tension");
        },
        /**
         * Horizontal tension of the curve.
         *
         * Tension defines how "lose" the line will be.
         *
         * 1 is the maximum tension which would result in pointy columns with
         * straight edges.
         *
         * The smaller the tension th wider the column will be.
         *
         * @default 0.7
         * @param value tension (0-1)
         */
        set: function (value) {
            this.setPropertyValue("tension", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CurvedColumn.prototype, "orientation", {
        /**
         * Orientation
         */
        get: function () {
            return this.getPropertyValue("orientation");
        },
        /**
         * Orientation of the column.
         *
         * Available options: "vertical" (default) and "horizontal".
         *
         * @default "vertical"
         * @param value  Orientation
         */
        set: function (value) {
            this.setPropertyValue("orientation", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return CurvedColumn;
}(_Column__WEBPACK_IMPORTED_MODULE_1__["Column"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["CurvedColumn"] = CurvedColumn;
//# sourceMappingURL=CurvedColumn.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ErrorBullet.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/ErrorBullet.js ***!
  \***********************************************************************************/
/*! exports provided: ErrorBullet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ErrorBullet", function() { return ErrorBullet; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Bullet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Bullet module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a bullet with a textual label.
 *
 * Uses [[Label]] instance to draw the label, so the label itself is
 * configurable.
 *
 * @see {@link IBulletEvents} for a list of available events
 * @see {@link IBulletAdapters} for a list of available Adapters
 * @todo Usage example
 * @important
 */
var ErrorBullet = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ErrorBullet, _super);
    /**
     * Constructor
     */
    function ErrorBullet() {
        var _this = _super.call(this) || this;
        _this.className = "ErrorBullet";
        _this.errorLine = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        _this.errorLine.shouldClone = false;
        _this.width = 20;
        _this.height = 20;
        _this.strokeOpacity = 1;
        _this.isDynamic = true;
        return _this;
    }
    ErrorBullet.prototype.validatePosition = function () {
        _super.prototype.validatePosition.call(this);
        var w = this.pixelWidth / 2;
        var h = this.pixelHeight / 2;
        this.errorLine.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: -w, y: -h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: w, y: -h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: 0, y: -h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: 0, y: h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: -w, y: h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"]({ x: w, y: h });
    };
    /**
     * Copies all proprities and related stuff from another instance of
     * [[ErrorBullet]].
     *
     * @param source  Source element
     */
    ErrorBullet.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.errorLine.copyFrom(source.errorLine);
    };
    return ErrorBullet;
}(_Bullet__WEBPACK_IMPORTED_MODULE_1__["Bullet"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["ErrorBullet"] = ErrorBullet;
//# sourceMappingURL=ErrorBullet.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js ***!
  \***************************************************************************************/
/*! exports provided: FlowDiagramLink */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowDiagramLink", function() { return FlowDiagramLink; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/rendering/fills/LinearGradient */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _elements_Bullet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../elements/Bullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_elements_Polyline__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/elements/Polyline */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyline.js");
/* harmony import */ var _core_elements_Line__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/elements/Line */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * FlowDiagramLink module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */












/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * This class creates a link (waved color-filled line) between two nodes in a
 * Flow Diagram.
 *
 * @see {@link IFlowDiagramLinkEvents} for a list of available events
 * @see {@link IFlowDiagramLinkAdapters} for a list of available Adapters
 * @important
 */
var FlowDiagramLink = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FlowDiagramLink, _super);
    /**
     * Constructor
     */
    function FlowDiagramLink() {
        var _this = _super.call(this) || this;
        _this.className = "FlowDiagramLink";
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_10__["InterfaceColorSet"]();
        _this.maskBullets = false;
        _this.colorMode = "fromNode";
        _this.layout = "none";
        _this.isMeasured = false;
        _this.startAngle = 0;
        _this.endAngle = 0;
        _this.strokeOpacity = 0;
        // this is very important, otherwise the container will be shifted
        _this.verticalCenter = "none";
        _this.horizontalCenter = "none";
        _this.tooltipText = "{fromName}→{toName}:{value.value}";
        _this.tooltipLocation = 0.5;
        _this.link = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]);
        _this.link.shouldClone = false;
        _this.link.setElement(_this.paper.add("path"));
        _this.link.isMeasured = false;
        _this.fillOpacity = 0.2;
        _this.fill = interfaceColors.getFor("alternativeBackground");
        _this.applyTheme();
        return _this;
    }
    /**
     * Positions bullets
     * @ignore
     */
    FlowDiagramLink.prototype.positionBullets = function () {
        var _this = this;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__["each"](this.bullets.iterator(), function (bullet) {
            bullet.parent = _this.bulletsContainer;
            bullet.maxWidth = _this.maxWidth;
            bullet.maxHeight = _this.maxHeight;
            _this.positionBullet(bullet);
        });
    };
    Object.defineProperty(FlowDiagramLink.prototype, "bulletsContainer", {
        /**
         * Bullets container
         */
        get: function () {
            if (!this._bulletsContainer) {
                var bulletsContainer = this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__["Container"]);
                bulletsContainer.shouldClone = false;
                bulletsContainer.layout = "none";
                this._bulletsContainer = bulletsContainer;
            }
            return this._bulletsContainer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramLink.prototype, "bulletsMask", {
        /**
         * Bullets mask sprite
         */
        get: function () {
            if (!this._bulletsMask) {
                var bulletsMask = this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]);
                bulletsMask.shouldClone = false;
                bulletsMask.setElement(this.paper.add("path"));
                bulletsMask.isMeasured = false;
                this._bulletsMask = bulletsMask;
            }
            return this._bulletsMask;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Positions bullets at relative bullet.locationX position on the link.
     * @ignore
     */
    FlowDiagramLink.prototype.positionBullet = function (bullet) {
        var location = bullet.locationX;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](location)) {
            location = bullet.locationY;
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](location)) {
            location = 0.5;
        }
        var point = this.middleLine.positionToPoint(location);
        bullet.moveTo(point);
        var rotationField = bullet.propertyFields.rotation;
        var angle;
        if (bullet.dataItem) {
            var dataContext = bullet.dataItem.dataContext;
            angle = dataContext[rotationField];
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](angle)) {
            angle = point.angle;
        }
        bullet.rotation = angle;
    };
    Object.defineProperty(FlowDiagramLink.prototype, "startAngle", {
        /**
         * @return Start angle
         */
        get: function () {
            return this.getPropertyValue("startAngle");
        },
        /**
         * [startAngle description]
         *
         * @todo Description
         * @param value  Start angle
         */
        set: function (value) {
            this.setPropertyValue("startAngle", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramLink.prototype, "endAngle", {
        /**
         * @return End angle
         */
        get: function () {
            return this.getPropertyValue("endAngle");
        },
        /**
         * [endAngle description]
         *
         * @todo Description
         * @param value  End angle
         */
        set: function (value) {
            this.setPropertyValue("endAngle", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramLink.prototype, "colorMode", {
        /**
         * Fill mode
         */
        get: function () {
            return this.getPropertyValue("colorMode");
        },
        /**
         * Should link be filled with a solid color, color of from node, color of toNode or gradient between node colors.
         * Some of the links, like ChordLink does not support gradiens well.
         *
         * @param value  Fill mode
         */
        set: function (value) {
            if (value == "gradient") {
                var color = this.fill;
                this.gradient.stops.clear();
                if (color instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_6__["Color"]) {
                    this.gradient.addColor(color);
                    this.gradient.addColor(color);
                }
                this.fill = this.gradient;
                this.stroke = this.gradient;
            }
            this.setPropertyValue("colorMode", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramLink.prototype, "maskBullets", {
        /**
         * @return mask bullets value
         */
        get: function () {
            return this.getPropertyValue("maskBullets");
        },
        /**
         * Should link bullets be masked or not
         *
         * @param value
         * @default false
         */
        set: function (value) {
            this.setPropertyValue("maskBullets", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramLink.prototype, "tooltipLocation", {
        /**
         * Tooltip location value
         */
        get: function () {
            return this.getPropertyValue("tooltipLocation");
        },
        /**
         * Relative location of a tooltip.
         * @default 0.5
         *
         * @param value
         */
        set: function (value) {
            this.setPropertyValue("tooltipLocation", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Adds color steps in the link gradient.
     *
     * @param value  Fill option
     */
    FlowDiagramLink.prototype.setFill = function (value) {
        _super.prototype.setFill.call(this, value);
        var gradient = this._gradient;
        if (gradient && value instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_6__["Color"]) {
            gradient.stops.clear();
            gradient.addColor(value);
            gradient.addColor(value);
        }
    };
    /**
     * Updates bounding box based on element dimension settings.
     *
     * @ignore Exclude from docs
     */
    FlowDiagramLink.prototype.measureElement = function () {
    };
    Object.defineProperty(FlowDiagramLink.prototype, "bullets", {
        /**
         * List of bullets
         *
         * @return [description]
         */
        get: function () {
            var _this = this;
            if (!this._bullets) {
                this._bullets = new _core_utils_List__WEBPACK_IMPORTED_MODULE_7__["ListTemplate"](new _elements_Bullet__WEBPACK_IMPORTED_MODULE_5__["Bullet"]());
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_7__["ListDisposer"](this._bullets));
                this._disposers.push(this._bullets.template);
                this._bullets.events.on("inserted", function (event) {
                    event.newValue.events.on("propertychanged", function (event) {
                        if (event.property == "locationX" || event.property == "locationY") {
                            _this.positionBullet(event.target);
                        }
                    }, undefined, false);
                }, undefined, false);
            }
            return this._bullets;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies properties from another [[FlowDiagramLink]].
     *
     * @param source  Source link
     */
    FlowDiagramLink.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.bullets.copyFrom(source.bullets);
        var middleLine = this.middleLine;
        if (middleLine) {
            if (middleLine instanceof _core_elements_Line__WEBPACK_IMPORTED_MODULE_9__["Line"] && source.middleLine instanceof _core_elements_Line__WEBPACK_IMPORTED_MODULE_9__["Line"]) {
                middleLine.copyFrom(source.middleLine);
            }
            if (middleLine instanceof _core_elements_Polyline__WEBPACK_IMPORTED_MODULE_8__["Polyline"] && source.middleLine instanceof _core_elements_Polyline__WEBPACK_IMPORTED_MODULE_8__["Polyline"]) {
                middleLine.copyFrom(source.middleLine);
            }
        }
        this.link.copyFrom(source.link);
    };
    /**
     * @ignore Exclude from docs
     * @return Tooltip X (px)
     */
    FlowDiagramLink.prototype.getTooltipX = function () {
        if (this.middleLine) {
            return this.middleLine.positionToPoint(this.tooltipLocation).x;
        }
    };
    /**
     * @ignore Exclude from docs
     * @return Tooltip Y (px)
     */
    FlowDiagramLink.prototype.getTooltipY = function () {
        if (this.middleLine) {
            return this.middleLine.positionToPoint(this.tooltipLocation).y;
        }
    };
    Object.defineProperty(FlowDiagramLink.prototype, "gradient", {
        /**
         * A gradiend instance that is used to provided colored gradient fills for
         * the Flow link.
         */
        get: function () {
            if (!this._gradient) {
                this._gradient = new _core_rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_3__["LinearGradient"]();
            }
            return this._gradient;
        },
        enumerable: true,
        configurable: true
    });
    return FlowDiagramLink;
}(_core_Container__WEBPACK_IMPORTED_MODULE_2__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["FlowDiagramLink"] = FlowDiagramLink;
//# sourceMappingURL=FlowDiagramLink.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js ***!
  \***************************************************************************************/
/*! exports provided: FlowDiagramNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowDiagramNode", function() { return FlowDiagramNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_String__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/String */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/String.js");
/* harmony import */ var _core_utils_Order__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Order */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Order.js");
/* harmony import */ var _core_utils_Number__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Number */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Number.js");
/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/elements/RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _Legend__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../Legend */ "./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js");
/**
 * FlowDiagramNode module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */












/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a node in a Flow Diagram.
 *
 * A Flow node is a block with a value, which represents its size on the
 * diagram.
 *
 * Nodes are connected via [[FlowLink]] elements.
 *
 * @see {@link IFlowDiagramNodeEvents} for a list of available events
 * @see {@link IFlowDiagramNodeAdapters} for a list of available Adapters
 * @important
 */
var FlowDiagramNode = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FlowDiagramNode, _super);
    /**
     * Constructor
     */
    function FlowDiagramNode() {
        var _this = _super.call(this) || this;
        /**
         * Settings for the appearance of the related legend items.
         */
        _this.legendSettings = new _Legend__WEBPACK_IMPORTED_MODULE_12__["LegendSettings"]();
        _this.className = "FlowDiagramNode";
        _this.isMeasured = false;
        // TODO can this be removed ?
        new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__["InterfaceColorSet"]();
        _this.draggable = true;
        _this.inert = true;
        _this.setStateOnChildren = true;
        _this.events.on("positionchanged", _this.invalidateLinks, _this, false);
        _this.events.on("sizechanged", _this.invalidateLinks, _this, false);
        return _this;
        //this.events.on("hit", this.handleHit, this, false);
    }
    /**
     * @ignore
     */
    FlowDiagramNode.prototype.handleHit = function (event) {
        if (this.isHidden || this.isHiding) {
            this.show();
        }
        else {
            this.hide();
        }
    };
    /**
     * Shows hidden node.
     *
     * @param duration  Duration of reveal animation (ms)
     * @return Animation
     */
    FlowDiagramNode.prototype.show = function (duration) {
        var animation = _super.prototype.show.call(this, duration);
        this.outgoingDataItems.each(function (dataItem) {
            if (!dataItem.toNode || (dataItem.toNode && !dataItem.toNode.isHidden)) {
                dataItem.setWorkingValue("value", dataItem.getValue("value"), duration);
            }
        });
        this.incomingDataItems.each(function (dataItem) {
            if (!dataItem.fromNode || (dataItem.fromNode && !dataItem.fromNode.isHidden)) {
                dataItem.setWorkingValue("value", dataItem.getValue("value"), duration);
            }
        });
        return animation;
    };
    /**
     * Hides node.
     *
     * @param duration  Duration of hiding animation (ms)
     * @return Animation
     */
    FlowDiagramNode.prototype.hide = function (duration) {
        var animation = _super.prototype.hide.call(this, duration);
        this.outgoingDataItems.each(function (dataItem) {
            dataItem.setWorkingValue("value", 0, duration);
        });
        this.incomingDataItems.each(function (dataItem) {
            dataItem.setWorkingValue("value", 0, duration);
        });
        return animation;
    };
    /**
     * Marks node as invalid, for redrawal in the next update cycle.
     *
     * @ignore Exclude from docs
     */
    FlowDiagramNode.prototype.validate = function () {
        if (!this.isDisposed()) {
            _super.prototype.validate.call(this);
            this.invalidateLinks();
        }
    };
    /**
     * Invalidates all links, attached to this node.
     *
     * @ignore Exclude from docs
     */
    FlowDiagramNode.prototype.invalidateLinks = function () {
        var _this = this;
        this.outgoingDataItems.each(function (dataItem) {
            var link = dataItem.link;
            if (link.colorMode == "fromNode") {
                link.fill = link.dataItem.fromNode.color;
            }
            if (link.colorMode == "gradient") {
                link.fill = link.gradient;
                link.stroke = link.gradient;
                var stop_1 = link.gradient.stops.getIndex(0);
                if (stop_1) {
                    stop_1.color = _this.color;
                    link.gradient.validate();
                }
            }
        });
        this.incomingDataItems.each(function (dataItem) {
            var link = dataItem.link;
            if (link.colorMode == "toNode") {
                link.fill = link.dataItem.toNode.color;
            }
            if (link.colorMode == "gradient") {
                link.fill = link.gradient;
                link.stroke = link.gradient;
                var stop_2 = link.gradient.stops.getIndex(1);
                if (stop_2) {
                    stop_2.color = _this.color;
                    link.gradient.validate();
                }
            }
        });
    };
    Object.defineProperty(FlowDiagramNode.prototype, "incomingDataItems", {
        /**
         * List of incoming items (links).
         *
         * @readonly
         * @return Incoming items
         */
        get: function () {
            var _this = this;
            if (!this._incomingDataItems) {
                var incomingDataItems = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
                incomingDataItems.events.on("inserted", function () {
                    if (_this.chart.sortBy == "name") {
                        _this._incomingSorted = _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__["sort"](_this._incomingDataItems.iterator(), function (x, y) { return _core_utils_String__WEBPACK_IMPORTED_MODULE_7__["order"](x.fromName, y.fromName); });
                    }
                    else if (_this.chart.sortBy == "value") {
                        _this._incomingSorted = _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__["sort"](_this._incomingDataItems.iterator(), function (x, y) { return _core_utils_Order__WEBPACK_IMPORTED_MODULE_8__["reverse"](_core_utils_Number__WEBPACK_IMPORTED_MODULE_9__["order"](x.value, y.value)); });
                    }
                    else {
                        _this._incomingSorted = _this._incomingDataItems.iterator();
                    }
                }, undefined, false);
                this._incomingDataItems = incomingDataItems;
            }
            return this._incomingDataItems;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramNode.prototype, "outgoingDataItems", {
        /**
         * List of outgoing items (links).
         *
         * @readonly
         * @return Outgoing items
         */
        get: function () {
            var _this = this;
            if (!this._outgoingDataItems) {
                var outgoingDataItems = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
                outgoingDataItems.events.on("inserted", function () {
                    if (_this.chart.sortBy == "name") {
                        _this._outgoingSorted = _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__["sort"](_this._outgoingDataItems.iterator(), function (x, y) { return _core_utils_String__WEBPACK_IMPORTED_MODULE_7__["order"](x.fromName, y.fromName); });
                    }
                    else if (_this.chart.sortBy == "value") {
                        _this._outgoingSorted = _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__["sort"](_this._outgoingDataItems.iterator(), function (x, y) { return _core_utils_Order__WEBPACK_IMPORTED_MODULE_8__["reverse"](_core_utils_Number__WEBPACK_IMPORTED_MODULE_9__["order"](x.value, y.value)); });
                    }
                    else {
                        _this._outgoingSorted = _this._outgoingDataItems.iterator();
                    }
                }, undefined, false);
                this._outgoingDataItems = outgoingDataItems;
            }
            return this._outgoingDataItems;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramNode.prototype, "name", {
        /**
         * @return Name
         */
        get: function () {
            return this.getPropertyValue("name");
        },
        /**
         * A name of the node.
         *
         * @param value  Name
         */
        set: function (value) {
            this.setPropertyValue("name", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramNode.prototype, "total", {
        /**
         * @return Value
         */
        get: function () {
            return this.getPropertyValue("total");
        },
        /**
         * Sum of all incoming+outgoing link values
         *
         * @param value  Value
         */
        set: function (value) {
            this.setPropertyValue("total", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramNode.prototype, "totalIncoming", {
        /**
         * @return Value
         */
        get: function () {
            return this.getPropertyValue("totalIncoming");
        },
        /**
         * Sum of all incomming link values.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setPropertyValue("totalIncoming", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramNode.prototype, "totalOutgoing", {
        /**
         * @return Value
         */
        get: function () {
            return this.getPropertyValue("totalOutgoing");
        },
        /**
         * Sum of all outgoing link values.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setPropertyValue("totalOutgoing", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramNode.prototype, "color", {
        /**
         * @return Color
         */
        get: function () {
            return this.getPropertyValue("color");
        },
        /**
         * Node's color.
         *
         * @param value  Color
         */
        set: function (value) {
            this.setColorProperty("color", value);
            if (this._background) {
                this._background.fill = value;
            }
            this.fill = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates elements in related legend container, that mimics the look of this
     * Series.
     *
     * @ignore Exclude from docs
     * @param marker  Legend item container
     */
    FlowDiagramNode.prototype.createLegendMarker = function (marker) {
        var w = marker.pixelWidth;
        var h = marker.pixelHeight;
        marker.removeChildren();
        var column = marker.createChild(_core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_10__["RoundedRectangle"]);
        column.shouldClone = false;
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_11__["copyProperties"](this, column, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        column.stroke = this.fill;
        column.copyFrom(this);
        column.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow
        column.width = w;
        column.height = h;
        var legendDataItem = marker.dataItem;
        legendDataItem.color = column.fill;
        legendDataItem.colorOrig = column.fill;
    };
    Object.defineProperty(FlowDiagramNode.prototype, "legendDataItem", {
        /**
         * @return Data item
         */
        get: function () {
            return this._legendDataItem;
        },
        /**
         * Legend data item that corresponds to this series.
         *
         * @param value  Data item
         */
        set: function (value) {
            this._legendDataItem = value;
            this._legendDataItem.itemContainer.deepInvalidate();
        },
        enumerable: true,
        configurable: true
    });
    return FlowDiagramNode;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["FlowDiagramNode"] = FlowDiagramNode;
//# sourceMappingURL=FlowDiagramNode.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelSlice.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelSlice.js ***!
  \***********************************************************************************/
/*! exports provided: FunnelSlice */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FunnelSlice", function() { return FunnelSlice; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Module that defines everything related to building Funnel slices.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Class used to create [[FunnelSlice]] elements.
 *
 * @see {@link IFunnelSliceEvents} for a list of available events
 * @see {@link IFunnelSliceAdapters} for a list of available adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation
 * @important
 */
var FunnelSlice = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FunnelSlice, _super);
    /**
     * Constructor
     */
    function FunnelSlice() {
        var _this = _super.call(this) || this;
        _this.slice = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        _this.slice.shouldClone = false;
        _this.slice.setElement(_this.paper.add("path"));
        _this.slice.isMeasured = false;
        _this.orientation = "vertical";
        _this.bottomWidth = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__["percent"])(100);
        _this.topWidth = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_4__["percent"])(100);
        _this.isMeasured = false;
        _this.width = 10;
        _this.height = 10;
        _this.expandDistance = 0;
        _this.className = "FunnelSlice";
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the element.
     */
    FunnelSlice.prototype.draw = function () {
        _super.prototype.draw.call(this);
        var pt = this.pixelPaddingTop;
        var pb = this.pixelPaddingBottom;
        var pr = this.pixelPaddingRight;
        var pl = this.pixelPaddingLeft;
        var w = this.pixelWidth - pr - pl;
        var h = this.pixelHeight - pt - pb;
        var ed = this.expandDistance;
        var path = "";
        if (this.orientation == "vertical") {
            var tw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__["relativeToValue"](this.topWidth, w);
            var bw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__["relativeToValue"](this.bottomWidth, w);
            var tl = { x: (w - tw) / 2 + pl, y: pt };
            var tr = { x: (w + tw) / 2 + pl, y: pt };
            var br = { x: (w + bw) / 2 + pl, y: pt + h };
            var bl = { x: (w - bw) / 2 + pl, y: pt + h };
            var cpr = { x: tr.x + (br.x - tr.x) / 2 + ed * h, y: tr.y + 0.5 * h };
            var cpl = { x: tl.x + (bl.x - tl.x) / 2 - ed * h, y: tl.y + 0.5 * h };
            var qp1 = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"](br);
            var qp2 = "";
            if (ed != 0) {
                qp1 = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__["quadraticCurveTo"](br, cpr);
                qp2 = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__["quadraticCurveTo"](tl, cpl);
            }
            path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__["moveTo"](tl) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"](tr) + qp1 + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"](bl) + qp2;
            this.tickPoint = { x: tr.x + (br.x - tr.x) / 2, y: tr.y + (br.y - tr.y) / 2 };
        }
        else {
            var tw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__["relativeToValue"](this.topWidth, h);
            var bw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__["relativeToValue"](this.bottomWidth, h);
            var tt = { x: pl, y: (h - tw) / 2 + pt };
            var tb = { x: pl, y: (h + tw) / 2 + pt };
            var bt = { x: pl + w, y: (h - bw) / 2 + pt };
            var bb = { x: pl + w, y: (h + bw) / 2 + pt };
            var cpr = { y: tt.y + (bt.y - tt.y) / 2 - ed * w, x: tt.x + 0.5 * w };
            var cpl = { y: tb.y + (bb.y - tb.y) / 2 + ed * w, x: tb.x + 0.5 * w };
            var qp1 = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"](bt);
            var qp2 = "";
            if (ed != 0) {
                qp1 = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__["quadraticCurveTo"](bt, cpr);
                qp2 = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__["quadraticCurveTo"](tb, cpl);
            }
            path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__["moveTo"](tb) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"](tt) + qp1 + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"](bb) + qp2;
            this.tickPoint = { y: tb.y + (bb.y - tb.y) / 2, x: tb.x + (bb.x - tb.x) / 2 };
        }
        this.slice.path = path;
        this.invalidateLayout();
    };
    FunnelSlice.prototype.getPoint = function (locationX, locationY) {
        var pt = this.pixelPaddingTop;
        var pb = this.pixelPaddingBottom;
        var pr = this.pixelPaddingRight;
        var pl = this.pixelPaddingLeft;
        var w = this.pixelWidth - pr - pl;
        var h = this.pixelHeight - pt - pb;
        if (this.orientation == "vertical") {
            var tw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__["relativeToValue"](this.topWidth, w);
            var bw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__["relativeToValue"](this.bottomWidth, w);
            var tl = { x: (w - tw) / 2 + pl, y: pt };
            var tr = { x: (w + tw) / 2 + pl, y: pt };
            var br = { x: (w + bw) / 2 + pl, y: pt + h };
            var bl = { x: (w - bw) / 2 + pl, y: pt + h };
            var mlx = tl.x + (bl.x - tl.x) * locationY;
            var mrx = tr.x + (br.x - tr.x) * locationY;
            return { x: mlx + (mrx - mlx) * locationX, y: tr.y + (br.y - tr.y) * locationY };
        }
        else {
            var tw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__["relativeToValue"](this.topWidth, h);
            var bw = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_5__["relativeToValue"](this.bottomWidth, h);
            var tt = { x: pl, y: (h - tw) / 2 + pt };
            var tb = { x: pl, y: (h + tw) / 2 + pt };
            var bt = { x: pl + w, y: (h - bw) / 2 + pt };
            var bb = { x: pl + w, y: (h + bw) / 2 + pt };
            var mty = tt.y + (bt.y - tt.y) * locationX;
            var mby = tb.y + (bb.y - tb.y) * locationX;
            return { y: mty + (mby - mty) * locationY, x: tt.x + (bt.x - tt.x) * locationX };
        }
    };
    Object.defineProperty(FunnelSlice.prototype, "bottomWidth", {
        /**
         * @return bottom width
         */
        get: function () {
            return this.getPropertyValue("bottomWidth");
        },
        /**
         * Bottom width in pixels or percent.
         *
         * IMPORTANT: this setting might be used to set dimensions if you use slice
         * as a standalone element. If it's a part of [[FunnelSeries]] this setting
         * becomes read-only as it will be automatically reset by series.
         *
         * @param value  Bottom width
         */
        set: function (value) {
            this.setPercentProperty("bottomWidth", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunnelSlice.prototype, "topWidth", {
        /**
         * @return Top width
         */
        get: function () {
            return this.getPropertyValue("topWidth");
        },
        /**
         * Top width in pixels or percent.
         *
         * IMPORTANT: this setting might be used to set dimensions if you use slice
         * as a standalone element. If it's a part of [[FunnelSeries]] this setting
         * becomes read-only as it will be automatically reset by series.
         *
         * @param value  Top width
         */
        set: function (value) {
            this.setPercentProperty("topWidth", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunnelSlice.prototype, "orientation", {
        /**
         * @return Orientation
         */
        get: function () {
            return this.getPropertyValue("orientation");
        },
        /**
         * Orientation of the funnel slice: "horizontal" or "vertical".
         *
         * IMPORTANT: this setting might be used to set orintation if you use slice
         * as a standalone element. If it's a part of [[FunnelSeries]] this setting
         * becomes read-only as it will be automatically reset by series.
         *
         * @param value  Orientation
         */
        set: function (value) {
            this.setPropertyValue("orientation", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunnelSlice.prototype, "expandDistance", {
        /**
         * @return expandDistance
         */
        get: function () {
            return this.getPropertyValue("expandDistance");
        },
        /**
         * A relative distance slice's sides should be bent to. It's relative to the
         * height of the slice.
         *
         * Zero (default) will mean the sides will be perfectly straight.
         *
         * Positive value will make them bend outwards, resulting in "puffed" slices.
         *
         * Negative values will make them bend inwards.
         *
         * @default 0
         * @param {number}
         */
        set: function (value) {
            this.setPropertyValue("expandDistance", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all parameters from another [[Sprite]].
     *
     * @param source Source Sprite
     */
    FunnelSlice.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        if (this.slice) {
            this.slice.copyFrom(source.slice);
        }
    };
    return FunnelSlice;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["FunnelSlice"] = FunnelSlice;
//# sourceMappingURL=FunnelSlice.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelTick.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelTick.js ***!
  \**********************************************************************************/
/*! exports provided: FunnelTick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FunnelTick", function() { return FunnelTick; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _elements_Tick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../elements/Tick */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Funnel tick module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws an tick line for a funnel slice connecting it to a related label.
 *
 * @see {@link IFunnelTickEvents} for a list of available events
 * @see {@link IFunnelTickAdapters} for a list of available Adapters
 */
var FunnelTick = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FunnelTick, _super);
    /**
     * Constructor
     */
    function FunnelTick() {
        var _this = _super.call(this) || this;
        /**
         * A label element this tick is attached to.
         */
        _this._label = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MutableValueDisposer"]();
        /**
         * A slice element this tick is attached to.
         */
        _this._slice = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MutableValueDisposer"]();
        _this.className = "FunnelTick";
        _this.element = _this.paper.add("path");
        _this._disposers.push(_this._label);
        _this._disposers.push(_this._slice);
        _this.setPropertyValue("locationX", 0);
        _this.setPropertyValue("locationY", 0);
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the tick element.
     *
     * @ignore Exclude from docs
     */
    FunnelTick.prototype.draw = function () {
        _super.prototype.draw.call(this);
        var slice = this.slice;
        var point = slice.getPoint(this.locationX, this.locationY);
        if (point) {
            var label = this.label;
            var series = slice.dataItem.component;
            var p0 = void 0;
            var p1 = void 0;
            var p2 = void 0;
            if (series.orientation == "vertical") {
                var x1 = label.pixelX;
                var y1 = label.pixelY;
                if (!series.labelsOpposite) {
                    x1 += label.maxRight;
                }
                p0 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__["spritePointToSprite"](point, slice, this.parent);
                p2 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__["spritePointToSprite"]({ x: x1, y: y1 }, label.parent, this.parent);
                p1 = { x: label.parent.pixelX - this.length, y: p2.y };
                if (!series.labelsOpposite) {
                    p1.x = label.parent.measuredWidth + this.length;
                }
            }
            else {
                var x1 = label.pixelX;
                var y1 = label.pixelY;
                if (!series.labelsOpposite) {
                    y1 += label.maxBottom;
                }
                p0 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__["spritePointToSprite"](point, slice, this.parent);
                p2 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__["spritePointToSprite"]({ x: x1, y: y1 }, label.parent, this.parent);
                p1 = { x: p2.x, y: label.parent.pixelY - this.length };
                if (!series.labelsOpposite) {
                    p1.y = label.parent.measuredHeight + this.length;
                }
            }
            this.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__["moveTo"](p0) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](p1) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_5__["lineTo"](p2);
        }
    };
    Object.defineProperty(FunnelTick.prototype, "slice", {
        /**
         * @return FunnelSlice
         */
        get: function () {
            return this._slice.get();
        },
        /**
         * [[FunnelSlice]] element tick is attached to.
         *
         * @param slice  Slice
         */
        set: function (slice) {
            this._slice.set(slice, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MultiDisposer"]([
                slice.events.on("transformed", this.invalidate, this, false),
                slice.events.on("validated", this.invalidate, this, false)
            ]));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunnelTick.prototype, "label", {
        /**
         * @return Label
         */
        get: function () {
            return this._label.get();
        },
        /**
         * [[Label]] element tick is attached to.
         *
         * @param label  Label
         */
        set: function (label) {
            this._label.set(label, label.events.on("transformed", this.invalidate, this, false));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunnelTick.prototype, "locationX", {
        /**
         * @return Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("locationX");
        },
        /**
         * A relative horizontal position within target element a tick is pointing
         * to.
         *
         * A scale is from 0 to 1, where 0 means left edge, and 1 right edge.
         *
         * You can also set any value in-between (e.g. 0.5 will point to the middle
         * of the slice), or outside 0-1 range, which will put tick anchor position
         * outside target element.
         *
         * @param value  Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("locationX", value, false, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunnelTick.prototype, "locationY", {
        /**
         * @return Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("locationY");
        },
        /**
         * A relative vertical position within target element a tick is pointing
         * to.
         *
         * A scale is from 0 to 1, where 0 means top edge, and 1 bottom edge.
         *
         * You can also set any value in-between (e.g. 0.5 will point to the middle
         * of the slice), or outside 0-1 range, which will put tick anchor position
         * outside target element.
         *
         * @param value  Location (0-1)
         */
        set: function (value) {
            this.setPropertyValue("locationY", value, false, true);
        },
        enumerable: true,
        configurable: true
    });
    return FunnelTick;
}(_elements_Tick__WEBPACK_IMPORTED_MODULE_1__["Tick"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["FunnelTick"] = FunnelTick;
//# sourceMappingURL=FunnelTick.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/HeatLegend.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/HeatLegend.js ***!
  \**********************************************************************************/
/*! exports provided: HeatLegend */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "HeatLegend", function() { return HeatLegend; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/rendering/fills/LinearGradient */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradient.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _charts_axes_ValueAxis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../charts/axes/ValueAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js");
/* harmony import */ var _charts_axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../charts/axes/AxisRendererX */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js");
/* harmony import */ var _charts_axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../charts/axes/AxisRendererY */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Colors__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Colors */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Colors.js");
/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/elements/RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/**
 * HeatLegend module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */













/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * This class creates a link (waved color-filled line) between two nodes in a
 * Sankey Diagram.
 *
 * @see {@link IHeatLegendEvents} for a list of available events
 * @see {@link IHeatLegendAdapters} for a list of available Adapters
 * @important
 */
var HeatLegend = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(HeatLegend, _super);
    /**
     * Constructor
     */
    function HeatLegend() {
        var _this = _super.call(this) || this;
        _this.className = "HeatLegend";
        _this.markerContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]);
        _this.markerContainer.shouldClone = false;
        _this.markerCount = 1;
        // Create a template container and list for the a marker
        var marker = new _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_13__["RoundedRectangle"]();
        marker.minHeight = 20;
        marker.minWidth = 20;
        marker.interactionsEnabled = false;
        marker.fillOpacity = 1;
        marker.cornerRadius(0, 0, 0, 0);
        _this.markerContainer.minHeight = 20;
        _this.markerContainer.minWidth = 20;
        _this.orientation = "horizontal";
        _this.markers = new _core_utils_List__WEBPACK_IMPORTED_MODULE_5__["ListTemplate"](marker);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_5__["ListDisposer"](_this.markers));
        _this._disposers.push(_this.markers.template);
        _this.applyTheme();
        return _this;
    }
    HeatLegend.prototype.getMinFromRules = function (property) {
        var series = this.series;
        if (series) {
            var minValue_1;
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["eachContinue"](series.heatRules.iterator(), function (heatRule) {
                if (heatRule.property == property) {
                    minValue_1 = heatRule.min;
                    return false;
                }
                return true;
            });
            return minValue_1;
        }
    };
    HeatLegend.prototype.getMaxFromRules = function (property) {
        var series = this.series;
        if (series) {
            var maxValue_1;
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](series.heatRules.iterator(), function (heatRule) {
                if (heatRule.property == property) {
                    maxValue_1 = heatRule.max;
                    return false;
                }
                return true;
            });
            return maxValue_1;
        }
    };
    /**
     *
     * @ignore Exclude from docs
     */
    HeatLegend.prototype.validate = function () {
        _super.prototype.validate.call(this);
        this.valueAxis.renderer.inversed = this.reverseOrder;
        var series = this.series;
        var minColor = this.minColor;
        var maxColor = this.maxColor;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](minColor)) {
            minColor = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(this.getMinFromRules("fill"));
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](maxColor)) {
            maxColor = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(this.getMaxFromRules("fill"));
        }
        if (series) {
            var seriesFill = series.fill;
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](minColor) && seriesFill instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"]) {
                minColor = seriesFill;
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](maxColor) && seriesFill instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"]) {
                maxColor = seriesFill;
            }
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](maxColor)) {
            maxColor = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(this.getMaxFromRules("fill"));
        }
        var minOpacity = _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["toNumber"](this.getMinFromRules("fillOpacity"));
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](minOpacity)) {
            minOpacity = 1;
        }
        var maxOpacity = _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["toNumber"](this.getMaxFromRules("fillOpacity"));
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](maxOpacity)) {
            maxOpacity = 1;
        }
        var minStrokeOpacity = _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["toNumber"](this.getMinFromRules("strokeOpacity"));
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](minStrokeOpacity)) {
            minStrokeOpacity = 1;
        }
        var maxStrokeOpacity = _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["toNumber"](this.getMaxFromRules("strokeOpacity"));
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](maxStrokeOpacity)) {
            maxStrokeOpacity = 1;
        }
        var minStroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(this.getMinFromRules("stroke"));
        var maxStroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(this.getMaxFromRules("stroke"));
        //if (series) {
        for (var i = 0; i < this.markerCount; i++) {
            var marker = this.markers.getIndex(i);
            if (!marker) {
                marker = this.markers.create();
                marker.parent = this.markerContainer;
                marker.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
                marker.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
            }
            if (this.markerCount == 1) {
                var gradient = new _core_rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_2__["LinearGradient"]();
                if (this.reverseOrder) {
                    gradient.addColor(maxColor, maxOpacity);
                    gradient.addColor(minColor, minOpacity);
                }
                else {
                    gradient.addColor(minColor, minOpacity);
                    gradient.addColor(maxColor, maxOpacity);
                }
                if (this.orientation == "vertical") {
                    gradient.rotation = -90;
                }
                marker.fill = gradient;
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](minStroke) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](maxStroke)) {
                    var strokeGradient = new _core_rendering_fills_LinearGradient__WEBPACK_IMPORTED_MODULE_2__["LinearGradient"]();
                    if (this.reverseOrder) {
                        strokeGradient.addColor(maxStroke, maxStrokeOpacity);
                        strokeGradient.addColor(minStroke, minStrokeOpacity);
                    }
                    else {
                        strokeGradient.addColor(minStroke, minStrokeOpacity);
                        strokeGradient.addColor(maxStroke, maxStrokeOpacity);
                    }
                    if (this.orientation == "vertical") {
                        strokeGradient.rotation = -90;
                    }
                    marker.stroke = strokeGradient;
                }
            }
            else {
                var c = i;
                if (this.reverseOrder) {
                    c = this.markerCount - i - 1;
                }
                var color = new _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"](_core_utils_Colors__WEBPACK_IMPORTED_MODULE_12__["interpolate"](minColor.rgb, maxColor.rgb, c / this.markerCount));
                marker.fill = color;
                var opacity = minOpacity + (maxOpacity - minOpacity) * c / this.markerCount;
                marker.fillOpacity = opacity;
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](minStroke) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](maxStroke)) {
                    var color_1 = new _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"](_core_utils_Colors__WEBPACK_IMPORTED_MODULE_12__["interpolate"](minStroke.rgb, maxStroke.rgb, c / this.markerCount));
                    marker.stroke = color_1;
                    var opacity_1 = minStrokeOpacity + (maxStrokeOpacity - minStrokeOpacity) * c / this.markerCount;
                    marker.strokeOpacity = opacity_1;
                }
            }
        }
        var renderer = this.valueAxis.renderer;
        if (this.markerCount > 1) {
            if (this.orientation == "horizontal") {
                renderer.minGridDistance = this.measuredWidth / this.markerCount;
            }
            else {
                renderer.minGridDistance = this.measuredHeight / this.markerCount;
            }
        }
        this.valueAxis.invalidate();
        for (var i = this.markerCount, len = this.markers.length; i < len; i++) {
            this.markers.getIndex(i).parent = undefined;
        }
    };
    Object.defineProperty(HeatLegend.prototype, "minColor", {
        /**
         * Returns minColor value
         * @return {Color}
         */
        get: function () {
            return this.getPropertyValue("minColor");
        },
        /**
         * Min color of a heat legend. If a series is set for the legend, minColor is taken from series.
         *
         * @param {Color}
         */
        set: function (value) {
            if (!(value instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"])) {
                value = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(value);
            }
            this.setColorProperty("minColor", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "maxColor", {
        /**
         * Returns maxColor value
         * @return {Color}
         */
        get: function () {
            return this.getPropertyValue("maxColor");
        },
        /**
         * Max color of a heat legend. If a series is set for the legend, maxColor is taken from series.
         *
         * @param {Color}
         */
        set: function (value) {
            if (!(value instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"])) {
                value = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["toColor"])(value);
            }
            this.setColorProperty("maxColor", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "markerCount", {
        /**
         * Returns number of color squares (markers).
         * @return {number}
         */
        get: function () {
            return this.getPropertyValue("markerCount");
        },
        /**
         * Number of color squares (markers) in the heat legend. If only 1 marker is used, it will be filled with gradient.
         *
         * @param {number}
         */
        set: function (value) {
            this.setPropertyValue("markerCount", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "minValue", {
        /**
         * Returns minimum value of heat legend.
         * @return {number}
         */
        get: function () {
            return this.getPropertyValue("minValue");
        },
        /**
         * Minimum value of heat legend's value axis. If a series is set for the legend, min is taken from series.
         *
         * @param {number}
         */
        set: function (value) {
            this.setPropertyValue("minValue", value);
            this.valueAxis.min = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "maxValue", {
        /**
         * Returns maximum value of heat legend.
         * @return {number}
         */
        get: function () {
            return this.getPropertyValue("maxValue");
        },
        /**
         * Maximum value of heat legend's value axis. If a series is set for the legend, max is taken from series.
         *
         * @param {number}
         */
        set: function (value) {
            this.setPropertyValue("maxValue", value);
            this.valueAxis.max = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "orientation", {
        /**
         * Returns orientation value.
         *
         * @return {"horizontal" | "vertical"}
         */
        get: function () {
            return this.getPropertyValue("orientation");
        },
        /**
        * Heat legend orientation. Note, if you change orientation of a heat legend, you must set value axis renderer properties after that, as with orientation renderer changes.
        *
        * @param {"horizontal" | "vertical"}
        */
        set: function (value) {
            this.setPropertyValue("orientation", value, true);
            var markerContainer = this.markerContainer;
            var valueAxis = this.valueAxis;
            // HORIZONTAL
            if (value == "horizontal") {
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](this.width)) {
                    this.width = 200;
                }
                this.height = undefined;
                valueAxis.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
                valueAxis.height = undefined;
                valueAxis.tooltip.pointerOrientation = "vertical";
                this.layout = "vertical";
                markerContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
                markerContainer.height = undefined;
                if (!(valueAxis.renderer instanceof _charts_axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_8__["AxisRendererX"])) {
                    valueAxis.renderer = new _charts_axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_8__["AxisRendererX"]();
                }
            }
            // VERTICAL
            else {
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](this.height)) {
                    this.height = 200;
                }
                this.width = undefined;
                this.layout = "horizontal";
                markerContainer.width = undefined;
                markerContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
                valueAxis.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
                valueAxis.width = undefined;
                valueAxis.tooltip.pointerOrientation = "horizontal";
                if (!(valueAxis.renderer instanceof _charts_axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_9__["AxisRendererY"])) {
                    valueAxis.renderer = new _charts_axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_9__["AxisRendererY"]();
                }
                valueAxis.renderer.inside = true;
                valueAxis.renderer.labels.template.inside = true;
                this.markerContainer.reverseOrder = true;
            }
            var renderer = valueAxis.renderer;
            renderer.grid.template.disabled = true;
            renderer.axisFills.template.disabled = true;
            renderer.baseGrid.disabled = true;
            renderer.labels.template.padding(2, 3, 2, 3);
            renderer.minHeight = undefined;
            renderer.minWidth = undefined;
            this.markerContainer.layout = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "valueAxis", {
        /**
         * Returns valueAxis value.
         * @return {ValueAxis}
         */
        get: function () {
            if (!this._valueAxis) {
                this.valueAxis = this.createChild(_charts_axes_ValueAxis__WEBPACK_IMPORTED_MODULE_7__["ValueAxis"]);
                this.valueAxis.shouldClone = false;
            }
            return this._valueAxis;
        },
        /**
         * Sets a value axis of heat legend. Value axis for heat legend is created automatically.
         * @param {ValueAxis}
         */
        set: function (valueAxis) {
            this._valueAxis = valueAxis;
            valueAxis.parent = this;
            valueAxis.strictMinMax = true;
            this.orientation = this.orientation;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(HeatLegend.prototype, "series", {
        /**
         * Returns series value.
         * @return {Series}
         */
        get: function () {
            return this._series;
        },
        /**
         * You can set series for heat legend. It will take min, max, minColor and maxColor values from this series.
         * @param series
         */
        set: function (series) {
            var _this = this;
            this._series = series;
            var dataField = "value";
            try {
                var dataFieldDefined = series.heatRules.getIndex(0).dataField;
                if (dataFieldDefined) {
                    dataField = dataFieldDefined;
                }
            }
            catch (err) {
            }
            this.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);
            series.dataItem.events.on("calculatedvaluechanged", function (event) {
                _this.updateMinMax(series.dataItem.values[dataField].low, series.dataItem.values[dataField].high);
            }, undefined, false);
            series.heatRules.events.on("inserted", this.invalidate, this, false);
            series.heatRules.events.on("removed", this.invalidate, this, false);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates min/max of value axis.
     * @ignore
     */
    HeatLegend.prototype.updateMinMax = function (min, max) {
        var valueAxis = this.valueAxis;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](this.minValue)) {
            valueAxis.min = min;
            valueAxis.invalidate();
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isNumber"](this.maxValue)) {
            valueAxis.max = max;
            valueAxis.invalidate();
        }
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    HeatLegend.prototype.processConfig = function (config) {
        if (config) {
            // Set up series
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](config.series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isString"](config.series)) {
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isString"](config.series)) {
                    if (this.map.hasKey(config.series)) {
                        config.series = this.map.getKey(config.series);
                    }
                    else {
                        var seriesId_1 = config.series;
                        var disposer_1 = this.map.events.on("insertKey", function (ev) {
                            if (ev.key == seriesId_1) {
                                this.series = ev.newValue;
                                disposer_1.dispose();
                            }
                        }, this);
                        this._disposers.push(disposer_1);
                        delete config.series;
                    }
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    return HeatLegend;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["HeatLegend"] = HeatLegend;
//# sourceMappingURL=HeatLegend.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/LabelBullet.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/LabelBullet.js ***!
  \***********************************************************************************/
/*! exports provided: LabelBullet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LabelBullet", function() { return LabelBullet; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Bullet__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Bullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js");
/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/**
 * Bullet module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a bullet with a textual label.
 *
 * Uses [[Label]] instance to draw the label, so the label itself is
 * configurable.
 *
 * @see {@link IBulletEvents} for a list of available events
 * @see {@link IBulletAdapters} for a list of available Adapters
 * @todo Usage example
 * @important
 */
var LabelBullet = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(LabelBullet, _super);
    /**
     * Constructor
     */
    function LabelBullet() {
        var _this = _super.call(this) || this;
        _this.className = "LabelBullet";
        var label = _this.createChild(_core_elements_Label__WEBPACK_IMPORTED_MODULE_2__["Label"]);
        label.shouldClone = false;
        label.verticalCenter = "middle";
        label.horizontalCenter = "middle";
        label.truncate = true;
        label.hideOversized = false;
        label.maxWidth = 500;
        label.maxHeight = 500;
        label.stroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["color"])();
        label.strokeOpacity = 0;
        label.fill = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__["InterfaceColorSet"]().getFor("text");
        _this.events.on("maxsizechanged", _this.handleMaxSize, _this, false);
        _this.label = label;
        // not good, as lineSeries will have labels somewhere in the middle.
        //this.locationX = 0.5;
        //this.locationY = 0.5;
        _this.applyTheme();
        return _this;
    }
    LabelBullet.prototype.handleMaxSize = function () {
        this.label.maxWidth = this.maxWidth;
        this.label.maxHeight = this.maxHeight;
    };
    /**
     * Copies all proprities and related stuff from another instance of
     * [[LabelBullet]].
     *
     * @param source  Source element
     */
    LabelBullet.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.label.copyFrom(source.label);
    };
    return LabelBullet;
}(_Bullet__WEBPACK_IMPORTED_MODULE_1__["Bullet"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["LabelBullet"] = LabelBullet;
//# sourceMappingURL=LabelBullet.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/NavigationBar.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/NavigationBar.js ***!
  \*************************************************************************************/
/*! exports provided: NavigationBarDataItem, NavigationBar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationBarDataItem", function() { return NavigationBarDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationBar", function() { return NavigationBar; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Component */ "./node_modules/@amcharts/amcharts4/.internal/core/Component.js");
/* harmony import */ var _core_DataItem__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/DataItem */ "./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_elements_TextLink__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/elements/TextLink */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/TextLink.js");
/* harmony import */ var _core_elements_Triangle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/elements/Triangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Triangle.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/**
 * Functionality for drawing simple NavigationBar.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[NavigationBar]].
 *
 * @see {@link DataItem}
 */
var NavigationBarDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NavigationBarDataItem, _super);
    /**
     * Constructor
     */
    function NavigationBarDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "NavigationBarDataItem";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(NavigationBarDataItem.prototype, "name", {
        /**
         * @return Name
         */
        get: function () {
            return this.properties["name"];
        },
        /**
         * Name of the navigation bar item.
         *
         * @param value  Name
         */
        set: function (value) {
            this.setProperty("name", value);
        },
        enumerable: true,
        configurable: true
    });
    return NavigationBarDataItem;
}(_core_DataItem__WEBPACK_IMPORTED_MODULE_2__["DataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * NavigationBar class can be used to create a multi-level breadcrumb-style
 * navigation control.
 *
 * @see {@link INavigationBarEvents} for a list of available events
 * @see {@link INavigationBarAdapters} for a list of available Adapters
 * @todo Implement better
 * @important
 */
var NavigationBar = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NavigationBar, _super);
    /**
     * Constructor
     */
    function NavigationBar() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "NavigationBar";
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__["InterfaceColorSet"]();
        var textLink = new _core_elements_TextLink__WEBPACK_IMPORTED_MODULE_4__["TextLink"]();
        textLink.valign = "middle";
        textLink.paddingTop = 8;
        textLink.paddingBottom = 8;
        _this.paddingBottom = 2;
        _this.links = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](textLink);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](_this.links));
        _this._disposers.push(textLink);
        _this._linksIterator = new _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_9__["ListIterator"](_this.links, function () { return _this.links.create(); });
        _this._linksIterator.createNewItems = true;
        var triangle = new _core_elements_Triangle__WEBPACK_IMPORTED_MODULE_5__["Triangle"]();
        triangle.direction = "right";
        triangle.width = 8;
        triangle.height = 12;
        triangle.fill = interfaceColors.getFor("alternativeBackground");
        triangle.fillOpacity = 0.5;
        triangle.valign = "middle";
        triangle.marginLeft = 10;
        triangle.marginRight = 10;
        _this.separators = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](triangle);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](_this.separators));
        _this._disposers.push(triangle);
        var activeLink = new _core_elements_TextLink__WEBPACK_IMPORTED_MODULE_4__["TextLink"]();
        _this.activeLink = activeLink;
        activeLink.copyFrom(textLink);
        activeLink.valign = "middle";
        activeLink.fontWeight = "bold";
        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_8__["percent"])(100);
        _this.layout = "grid";
        _this.dataFields.name = "name";
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Completely redraws the navigation bar.
     *
     * @ignore Exclude from docs
     */
    NavigationBar.prototype.validateDataElements = function () {
        this.removeChildren();
        this._linksIterator.reset();
        _super.prototype.validateDataElements.call(this);
        //@todo: dispose
    };
    /**
     * Creates a visual element for a data item (nav item).
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    NavigationBar.prototype.validateDataElement = function (dataItem) {
        _super.prototype.validateDataElement.call(this, dataItem);
        var textLink;
        if (dataItem.index < this.dataItems.length - 1) {
            textLink = this._linksIterator.getLast();
            textLink.parent = this;
            var separator = this.separators.create();
            separator.parent = this;
            separator.valign = "middle";
        }
        else {
            textLink = this.activeLink;
            textLink.events.copyFrom(this.links.template.events);
            textLink.hide(0);
            textLink.show();
            textLink.parent = this;
        }
        textLink.dataItem = dataItem;
        textLink.text = dataItem.name;
        textLink.validate();
    };
    return NavigationBar;
}(_core_Component__WEBPACK_IMPORTED_MODULE_1__["Component"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_6__["registry"].registeredClasses["NavigationBar"] = NavigationBar;
_core_Registry__WEBPACK_IMPORTED_MODULE_6__["registry"].registeredClasses["NavigationBarDataItem"] = NavigationBarDataItem;
//# sourceMappingURL=NavigationBar.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/OHLC.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/OHLC.js ***!
  \****************************************************************************/
/*! exports provided: OHLC */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OHLC", function() { return OHLC; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Candlestick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Candlestick */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js");
/* harmony import */ var _core_elements_Line__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Line */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Module that defines everything related to building OHLCs.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Class used to creates OHLCs.
 *
 * @see {@link IOHLCEvents} for a list of available events
 * @see {@link IOHLCAdapters} for a list of available Adapters
 * @todo Usage example
 * @important
 */
var OHLC = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(OHLC, _super);
    /**
     * Constructor
     */
    function OHLC() {
        var _this = _super.call(this) || this;
        _this.className = "OHLC";
        _this.layout = "none";
        return _this;
    }
    /**
     * @ignore
     */
    OHLC.prototype.createAssets = function () {
        //super.createAssets();
        this.openLine = this.createChild(_core_elements_Line__WEBPACK_IMPORTED_MODULE_2__["Line"]);
        this.openLine.shouldClone = false;
        this.highLowLine = this.createChild(_core_elements_Line__WEBPACK_IMPORTED_MODULE_2__["Line"]);
        this.highLowLine.shouldClone = false;
        this.closeLine = this.createChild(_core_elements_Line__WEBPACK_IMPORTED_MODULE_2__["Line"]);
        this.closeLine.shouldClone = false;
    };
    /**
     * Copies all parameters from another [[OHLC]].
     *
     * @param source Source OHLC
     */
    OHLC.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        if (this.openLine) {
            this.openLine.copyFrom(source.openLine);
        }
        if (this.highLowLine) {
            this.highLowLine.copyFrom(source.highLowLine);
        }
        if (this.closeLine) {
            this.closeLine.copyFrom(source.closeLine);
        }
    };
    return OHLC;
}(_Candlestick__WEBPACK_IMPORTED_MODULE_1__["Candlestick"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["OHLC"] = OHLC;
//# sourceMappingURL=OHLC.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/PieTick.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/PieTick.js ***!
  \*******************************************************************************/
/*! exports provided: PieTick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PieTick", function() { return PieTick; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _elements_Tick__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../elements/Tick */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Pie tick module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws an tick line for a pie slice connecting it to a related label.
 *
 * @see {@link IPieTickEvents} for a list of available events
 * @see {@link IPieTickAdapters} for a list of available Adapters
 */
var PieTick = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PieTick, _super);
    /**
     * Constructor
     */
    function PieTick() {
        var _this = _super.call(this) || this;
        /**
         * A label element this tick is attached to.
         */
        _this._label = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MutableValueDisposer"]();
        /**
         * A slice element this tick is attached to.
         */
        _this._slice = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MutableValueDisposer"]();
        _this.className = "PieTick";
        _this.element = _this.paper.add("polyline");
        _this._disposers.push(_this._label);
        _this._disposers.push(_this._slice);
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the tick element.
     *
     * @ignore Exclude from docs
     */
    PieTick.prototype.draw = function () {
        _super.prototype.draw.call(this);
        var slice = this.slice;
        var label = this.label;
        var series = slice.dataItem.component;
        if (slice && slice.radius > 0 && label && label.text) {
            var x0 = slice.dx + slice.slice.dx + slice.pixelX + slice.ix * slice.radius * slice.scale;
            var y0 = slice.dy + slice.slice.dy + slice.pixelY + slice.iy * slice.radiusY * slice.scale;
            var x1 = void 0;
            var y1 = void 0;
            var x2 = void 0;
            var y2 = void 0;
            if (series.alignLabels) {
                x1 = label.pixelX - this.length;
                y1 = label.pixelY;
                x2 = label.pixelX;
                y2 = y1;
                if (label.horizontalCenter == "right") {
                    x1 += 2 * this.length;
                    x2 = x1 - this.length;
                }
            }
            else {
                var r = label.pixelRadius(slice.radius);
                x1 = x0 + r * slice.ix;
                y1 = y0 + r * slice.iy;
                x2 = x1;
                y2 = y1;
            }
            this.element.attr({ "points": [x0, y0, x1, y1, x2, y2] });
        }
    };
    Object.defineProperty(PieTick.prototype, "slice", {
        /**
         * @return Slice
         */
        get: function () {
            return this._slice.get();
        },
        /**
         * Slice element tick is attached to.
         *
         * @param slice  Slice
         */
        set: function (slice) {
            this._slice.set(slice, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["MultiDisposer"]([
                slice.events.on("transformed", this.invalidate, this),
                slice.events.on("validated", this.invalidate, this)
            ]));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieTick.prototype, "label", {
        /**
         * @return Label
         */
        get: function () {
            return this._label.get();
        },
        /**
         * Label element tick is attached to.
         *
         * @param label  Label
         */
        set: function (label) {
            this._label.set(label, label.events.on("transformed", this.invalidate, this, false));
        },
        enumerable: true,
        configurable: true
    });
    return PieTick;
}(_elements_Tick__WEBPACK_IMPORTED_MODULE_1__["Tick"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["PieTick"] = PieTick;
//# sourceMappingURL=PieTick.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/RadarColumn.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/RadarColumn.js ***!
  \***********************************************************************************/
/*! exports provided: RadarColumn */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadarColumn", function() { return RadarColumn; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Column__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Column */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js");
/* harmony import */ var _core_elements_Slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Slice */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Slice.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Module that defines everything related to building RadarColumns.
 * It is a container which has radarColumn element which is a Slice.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Class used to creates RadarColumns.
 *
 * @see {@link IRadarColumnEvents} for a list of available events
 * @see {@link IRadarColumnAdapters} for a list of available Adapters
 * @todo Usage example
 * @important
 */
var RadarColumn = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(RadarColumn, _super);
    /**
     * Constructor
     */
    function RadarColumn() {
        var _this = _super.call(this) || this;
        _this.className = "RadarColumn";
        return _this;
    }
    /**
     * @ignore
     */
    RadarColumn.prototype.createAssets = function () {
        this.radarColumn = this.createChild(_core_elements_Slice__WEBPACK_IMPORTED_MODULE_2__["Slice"]);
        this.radarColumn.shouldClone = false;
        this.radarColumn.strokeOpacity = undefined;
        // some dirty hack so that if user access column, it won't get error
        this.column = this.radarColumn;
    };
    /**
     * Copies all parameters from another [[RadarColumn]].
     *
     * @param source Source RadarColumn
     */
    RadarColumn.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        if (this.radarColumn) {
            this.radarColumn.copyFrom(source.radarColumn);
        }
    };
    /**
     * X coordinate for the slice tooltip.
     *
     * @return X
     * @ignore
     */
    RadarColumn.prototype.getTooltipX = function () {
        var value = this.getPropertyValue("tooltipX");
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](value)) {
            return this.radarColumn.getTooltipX();
        }
        return value;
    };
    /**
     * Y coordinate for the slice tooltip.
     *
     * @return Y
     * @ignore
     */
    RadarColumn.prototype.getTooltipY = function () {
        var value = this.getPropertyValue("tooltipX");
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](value)) {
            return this.radarColumn.getTooltipY();
        }
        return value;
    };
    return RadarColumn;
}(_Column__WEBPACK_IMPORTED_MODULE_1__["Column"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["RadarColumn"] = RadarColumn;
//# sourceMappingURL=RadarColumn.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyLink.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyLink.js ***!
  \**********************************************************************************/
/*! exports provided: SankeyLink */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SankeyLink", function() { return SankeyLink; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _FlowDiagramLink__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FlowDiagramLink */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_elements_Polyspline__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/Polyspline */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyspline.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/rendering/Smoothing */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Smoothing.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * SankeyLink module
 */









/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * This class creates a link (waved color-filled line) between two nodes in a
 * Sankey Diagram.
 *
 * @see {@link ISankeyLinkEvents} for a list of available events
 * @see {@link ISankeyLinkAdapters} for a list of available Adapters
 * @important
 */
var SankeyLink = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SankeyLink, _super);
    /**
     * Constructor
     */
    function SankeyLink() {
        var _this = _super.call(this) || this;
        _this.className = "SankeyLink";
        // TODO can this be removed ?
        new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__["InterfaceColorSet"]();
        _this.tension = 0.8;
        _this.controlPointDistance = 0.2;
        _this.startAngle = 0;
        _this.endAngle = 0;
        _this.linkWidth = 0;
        _this.startX = 0;
        _this.endX = 0;
        _this.startY = 0;
        _this.endY = 0;
        _this.middleLine = _this.createChild(_core_elements_Polyspline__WEBPACK_IMPORTED_MODULE_3__["Polyspline"]);
        _this.middleLine.shouldClone = false;
        _this.middleLine.strokeOpacity = 0;
        _this.applyTheme();
        return _this;
    }
    SankeyLink.prototype.makeBackwards = function () {
        if (this.states.getKey("backwards") != undefined) {
            this.setState("backwards");
        }
    };
    /**
     * (Re)validates (redraws) the link.
     *
     * @ignore Exclude from docs
     */
    SankeyLink.prototype.validate = function () {
        var _a, _b, _c, _d;
        _super.prototype.validate.call(this);
        if (!this.isTemplate) {
            var x0 = this.startX;
            var y0 = this.startY;
            var x1 = this.endX;
            var y1 = this.endY;
            if (this.states.getKey("backwards")) {
                this.setState("default");
            }
            if (this.dataItem) {
                var chart = this.dataItem.component;
                if (chart) {
                    if (chart.orientation == "horizontal") {
                        if (x1 < x0) {
                            _a = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])([x1, x0], 2), x0 = _a[0], x1 = _a[1];
                            _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])([y1, y0], 2), y0 = _b[0], y1 = _b[1];
                            this.makeBackwards();
                        }
                    }
                    else {
                        if (y1 < y0) {
                            _c = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])([y1, y0], 2), y0 = _c[0], y1 = _c[1];
                            _d = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__read"])([x1, x0], 2), x0 = _d[0], x1 = _d[1];
                            this.makeBackwards();
                        }
                    }
                }
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](x1)) {
                x1 = x0;
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](y1)) {
                y1 = y0;
            }
            var startAngle = this.startAngle;
            var endAngle = this.endAngle;
            var w = this.linkWidth;
            var path = "";
            var xt0 = x0;
            var yt0 = y0;
            var xt1 = x1;
            var yt1 = y1;
            var xb0 = x0 + w * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](startAngle);
            var xb1 = x1 + w * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](endAngle);
            var yb0 = y0 + w * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](startAngle);
            var yb1 = y1 + w * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](endAngle);
            var xm0 = x0 + w / 2 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](startAngle);
            var xm1 = x1 + w / 2 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](endAngle);
            var ym0 = y0 + w / 2 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](startAngle);
            var ym1 = y1 + w / 2 * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](endAngle);
            this.zIndex = this.zIndex || this.dataItem.index;
            var tensionX = this.tension + (1 - this.tension) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](startAngle);
            var tensionY = this.tension + (1 - this.tension) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](startAngle);
            this.middleLine.tensionX = tensionX;
            this.middleLine.tensionY = tensionY;
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](w) && (_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](x0) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](x1) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](y0) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](y1))) {
                // solves issues with gradient fill of straight lines
                if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](xt0, 3) == _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](xt1, 3)) {
                    xt1 += 0.01;
                }
                if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](yt0, 3) == _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](yt1, 3)) {
                    yt1 += 0.01;
                }
                if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](xb0, 3) == _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](xb1, 3)) {
                    xb1 += 0.01;
                }
                if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](yb0, 3) == _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["round"](yb1, 3)) {
                    yb1 += 0.01;
                }
                var minX = Math.min(xb0, xb1, xt0, xt1);
                var minY = Math.min(yb0, yb1, yt0, yt1);
                var maxX = Math.max(xb0, xb1, xt0, xt1);
                var maxY = Math.max(yb0, yb1, yt0, yt1);
                this._bbox = {
                    x: minX,
                    y: minY,
                    width: maxX - minX,
                    height: maxY - minY
                };
                var cpd = this.controlPointDistance;
                var kxt0 = xt0 + (xt1 - xt0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](startAngle);
                var kyt0 = yt0 + (yt1 - yt0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](startAngle);
                var kxt1 = xt1 - (xt1 - xt0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](endAngle);
                var kyt1 = yt1 - (yt1 - yt0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](endAngle);
                var kxm0 = xm0 + (xm1 - xm0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](startAngle);
                var kym0 = ym0 + (ym1 - ym0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](startAngle);
                var kxm1 = xm1 - (xm1 - xm0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](endAngle);
                var kym1 = ym1 - (ym1 - ym0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](endAngle);
                var angle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["getAngle"]({ x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 });
                var dx = (w / _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](angle) - w) / _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["tan"](angle) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](startAngle);
                var dy = (w / _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](angle) - w) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["tan"](angle) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](startAngle);
                var kxb0 = -dx / 2 + xb0 + (xb1 - xb0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](startAngle);
                var kyb0 = -dy / 2 + yb0 + (yb1 - yb0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](startAngle);
                var kxb1 = -dx / 2 + xb1 - (xb1 - xb0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["cos"](endAngle);
                var kyb1 = -dy / 2 + yb1 - (yb1 - yb0) * cpd * _core_utils_Math__WEBPACK_IMPORTED_MODULE_5__["sin"](endAngle);
                this.middleLine.segments = [[{ x: xm0, y: ym0 }, { x: kxm0, y: kym0 }, { x: kxm1, y: kym1 }, { x: xm1, y: ym1 }]];
                kxt0 += dx / 2;
                kyt0 += dy / 2;
                kxt1 += dx / 2;
                kyt1 += dy / 2;
                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["moveTo"]({ x: xt0, y: yt0 });
                path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_7__["Tension"](tensionX, tensionY).smooth([{ x: xt0, y: yt0 }, { x: kxt0, y: kyt0 }, { x: kxt1, y: kyt1 }, { x: xt1, y: yt1 }]);
                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["lineTo"]({ x: xb1, y: yb1 });
                path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_7__["Tension"](tensionX, tensionY).smooth([{ x: xb1, y: yb1 }, { x: kxb1, y: kyb1 }, { x: kxb0, y: kyb0 }, { x: xb0, y: yb0 }]);
                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_8__["closePath"]();
            }
            this.link.path = path;
            if (this.maskBullets) {
                this.bulletsMask.path = path;
                this.bulletsContainer.mask = this.bulletsMask;
            }
            this.positionBullets();
        }
    };
    Object.defineProperty(SankeyLink.prototype, "startX", {
        /**
         * @return Start X
         */
        get: function () {
            return this.getPropertyValue("startX");
        },
        /**
         * [startX description]
         *
         * @todo Description
         * @param value  Start X
         */
        set: function (value) {
            this.setPropertyValue("startX", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SankeyLink.prototype, "endX", {
        /**
         * @return End X
         */
        get: function () {
            return this.getPropertyValue("endX");
        },
        /**
         * [endX description]
         *
         * @todo Description
         * @param value  End X
         */
        set: function (value) {
            this.setPropertyValue("endX", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SankeyLink.prototype, "startY", {
        /**
         * @return Start Y
         */
        get: function () {
            return this.getPropertyValue("startY");
        },
        /**
         * [startY description]
         *
         * @todo Description
         * @param value  Start Y
         */
        set: function (value) {
            this.setPropertyValue("startY", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SankeyLink.prototype, "endY", {
        /**
         * @return End Y
         */
        get: function () {
            return this.getPropertyValue("endY");
        },
        /**
         * [endY description]
         *
         * @todo Description
         * @param value End Y
         */
        set: function (value) {
            this.setPropertyValue("endY", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SankeyLink.prototype, "linkWidth", {
        /**
         * @return [description]
         */
        get: function () {
            return this.getPropertyValue("linkWidth");
        },
        /**
         * [linkWidth description]
         *
         * @todo Description
         * @param value [description]
         */
        set: function (value) {
            this.setPropertyValue("linkWidth", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SankeyLink.prototype, "controlPointDistance", {
        /**
         * @return relative control point distance
         */
        get: function () {
            return this.getPropertyValue("controlPointDistance");
        },
        /**
         * Distance of control point of a link, defines relative distance from a node at which linke should bend
         * @default 0.2
         * @param value
         */
        set: function (value) {
            this.setPropertyValue("controlPointDistance", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SankeyLink.prototype, "tension", {
        /**
         * @return tension value
         */
        get: function () {
            return this.getPropertyValue("tension");
        },
        /**
         * Tension of a spline, 1 would make the link to have sharp edges
         * @default 0.8
         * @param value
         */
        set: function (value) {
            this.setPropertyValue("tension", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return SankeyLink;
}(_FlowDiagramLink__WEBPACK_IMPORTED_MODULE_1__["FlowDiagramLink"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["SankeyLink"] = SankeyLink;
//# sourceMappingURL=SankeyLink.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyNode.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyNode.js ***!
  \**********************************************************************************/
/*! exports provided: SankeyNode */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SankeyNode", function() { return SankeyNode; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _FlowDiagramNode__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FlowDiagramNode */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js");
/* harmony import */ var _LabelBullet__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./LabelBullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/LabelBullet.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/**
 * SankeyNode module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */







/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a node in a Sankey Diagram.
 *
 * A Sankey node is a block with a value, which represents its size on the
 * diagram.
 *
 * Nodes are connected via [[SankeyLink]] elements.
 *
 * @see {@link ISankeyNodeEvents} for a list of available events
 * @see {@link ISankeyNodeAdapters} for a list of available Adapters
 * @important
 */
var SankeyNode = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SankeyNode, _super);
    /**
     * Constructor
     */
    function SankeyNode() {
        var _this = _super.call(this) || this;
        /**
         * [nextInCoord description]
         *
         * @ignore Exclude from docs
         * @todo Description
         */
        _this.nextInCoord = 0;
        /**
         * [nextOutCoord description]
         *
         * @ignore Exclude from docs
         * @todo Description
         */
        _this.nextOutCoord = 0;
        _this.className = "SankeyNode";
        _this.width = 10;
        _this.height = 10;
        var nameLabel = _this.createChild(_LabelBullet__WEBPACK_IMPORTED_MODULE_2__["LabelBullet"]);
        nameLabel.shouldClone = false;
        //@should we auto update these locations if position is changed?
        nameLabel.locationX = 1;
        nameLabel.locationY = 0.5;
        nameLabel.label.text = "{name}";
        //nameLabel.label.textElement.hideOversized = false;
        nameLabel.width = 150;
        nameLabel.height = 150;
        nameLabel.label.horizontalCenter = "left";
        nameLabel.label.padding(0, 5, 0, 5);
        _this.nameLabel = nameLabel;
        var valueLabel = _this.createChild(_LabelBullet__WEBPACK_IMPORTED_MODULE_2__["LabelBullet"]);
        valueLabel.shouldClone = false;
        valueLabel.label.hideOversized = false;
        valueLabel.locationX = 0.5;
        valueLabel.locationY = 0.5;
        valueLabel.width = 150;
        valueLabel.height = 150;
        //valueLabel.label.text = "{value}";
        valueLabel.label.horizontalCenter = "middle";
        _this.valueLabel = valueLabel;
        var hiddenState = _this.hiddenState;
        hiddenState.properties.fill = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__["InterfaceColorSet"]().getFor("disabledBackground");
        hiddenState.properties.opacity = 0.5;
        hiddenState.properties.visible = true;
        _this.background.hiddenState.copyFrom(hiddenState);
        return _this;
    }
    /**
     * Invalidates all links, attached to this node.
     *
     * @ignore Exclude from docs
     */
    SankeyNode.prototype.invalidateLinks = function () {
        var _this = this;
        _super.prototype.invalidateLinks.call(this);
        this.nextInCoord = 0;
        this.nextOutCoord = 0;
        var chart = this.chart;
        if (chart) {
            var orientation_1 = chart.orientation;
            if (this._incomingSorted) {
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__["each"](this._incomingSorted, function (dataItem) {
                    var link = dataItem.link;
                    var value = dataItem.getWorkingValue("value");
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](value)) {
                        link.parent = _this.chart.linksContainer;
                        var x = void 0;
                        var y = void 0;
                        var angle = void 0;
                        if (orientation_1 == "horizontal") {
                            x = _this.pixelX + _this.dx;
                            y = _this.nextInCoord + _this.pixelY + _this.dy;
                            angle = 0;
                        }
                        else {
                            y = _this.pixelY + _this.dy;
                            x = _this.nextInCoord + _this.pixelX + _this.dx;
                            angle = 90;
                        }
                        link.endX = x;
                        link.endY = y;
                        link.startAngle = angle;
                        link.endAngle = angle;
                        link.gradient.rotation = angle;
                        link.linkWidth = value * chart.valueHeight;
                        if (!dataItem.fromNode) {
                            if (orientation_1 == "horizontal") {
                                link.maxWidth = 200;
                                link.startX = _this.pixelX + _this.dx - link.maxWidth;
                                link.startY = link.endY;
                            }
                            else {
                                link.maxHeight = 200;
                                link.startX = link.endX;
                                link.startY = _this.pixelY + _this.dy - link.maxHeight;
                            }
                            // TODO is this needed ?
                            _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["used"](link.gradient);
                            link.fill = dataItem.toNode.color;
                            var stop_1 = link.gradient.stops.getIndex(0);
                            if (stop_1) {
                                if (link.colorMode == "gradient") {
                                    stop_1.color = _this.color;
                                }
                                stop_1.opacity = 0;
                                link.fill = link.gradient;
                                link.stroke = link.gradient;
                                link.gradient.validate();
                            }
                        }
                        //link.validate();
                        _this.nextInCoord += link.linkWidth;
                    }
                });
            }
            if (this._outgoingSorted) {
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__["each"](this._outgoingSorted, function (dataItem) {
                    var link = dataItem.link;
                    link.parent = _this.chart.linksContainer;
                    var value = dataItem.getWorkingValue("value");
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](value)) {
                        var x = void 0;
                        var y = void 0;
                        var angle = void 0;
                        if (orientation_1 == "horizontal") {
                            angle = 0;
                            x = _this.pixelX + _this.pixelWidth + _this.dx - 1;
                            y = _this.nextOutCoord + _this.pixelY + _this.dy;
                        }
                        else {
                            angle = 90;
                            x = _this.nextOutCoord + _this.pixelX + _this.dx;
                            y = _this.pixelY + _this.pixelHeight + _this.dy - 1;
                        }
                        link.startX = x;
                        link.startY = y;
                        link.startAngle = angle;
                        link.endAngle = angle;
                        link.gradient.rotation = angle;
                        link.linkWidth = value * _this.chart.valueHeight;
                        if (!dataItem.toNode) {
                            if (orientation_1 == "horizontal") {
                                link.maxWidth = 200;
                                link.endX = _this.pixelX + link.maxWidth + _this.dx;
                                link.endY = link.startY;
                            }
                            else {
                                link.maxHeight = 200;
                                link.endX = link.startX;
                                link.endY = _this.pixelY + link.maxHeight + _this.dy;
                            }
                            link.opacity = _this.opacity;
                            var stop_2 = link.gradient.stops.getIndex(1);
                            if (stop_2) {
                                if (link.colorMode == "gradient") {
                                    stop_2.color = _this.color;
                                }
                                stop_2.opacity = 0;
                                link.fill = link.gradient;
                                link.stroke = link.gradient;
                                link.gradient.validate();
                            }
                        }
                        //link.validate();
                        _this.nextOutCoord += link.linkWidth;
                    }
                });
            }
        }
        this.positionBullet(this.nameLabel);
        this.positionBullet(this.valueLabel);
    };
    /**
     * Positions the bullet so it is centered within the node element.
     *
     * @param bullet  Target bullet
     */
    SankeyNode.prototype.positionBullet = function (bullet) {
        if (bullet) {
            bullet.x = this.measuredWidth * bullet.locationX;
            bullet.y = this.measuredHeight * bullet.locationY;
        }
    };
    Object.defineProperty(SankeyNode.prototype, "level", {
        /**
         * @return Level
         */
        get: function () {
            return this.getPropertyValue("level");
        },
        /**
         * A level node is displayed at. (0 - ...)
         *
         * Levels are measured from left to right.
         *
         * The nodes in the left-most column will have `level = 0`.
         *
         * Nodes in second column - `level = 1`, etc.
         *
         * @param value  Level
         */
        set: function (value) {
            this.setPropertyValue("level", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies properties and labels from another [[SankeyNode]].
     *
     * @param source  Source node
     */
    SankeyNode.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.nameLabel.copyFrom(source.nameLabel);
        this.valueLabel.copyFrom(source.valueLabel);
    };
    return SankeyNode;
}(_FlowDiagramNode__WEBPACK_IMPORTED_MODULE_1__["FlowDiagramNode"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["SankeyNode"] = SankeyNode;
//# sourceMappingURL=SankeyNode.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js ***!
  \****************************************************************************/
/*! exports provided: Tick */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Tick", function() { return Tick; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/**
 * Tick module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A basic Tick class.
 *
 * A tick is a short dash, mainly connecting an object like axis or slice to
 * it's textual label.
 *
 * @see {@link ITickEvents} for a list of available events
 * @see {@link ITickAdapters} for a list of available Adapters
 * @important
 */
var Tick = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Tick, _super);
    /**
     * Constructor
     */
    function Tick() {
        var _this = _super.call(this) || this;
        _this.className = "Tick";
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__["InterfaceColorSet"]();
        _this.fillOpacity = 0;
        _this.length = 6;
        _this.strokeOpacity = 0.2;
        _this.stroke = interfaceColors.getFor("grid");
        _this.isMeasured = false;
        _this.nonScalingStroke = true;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(Tick.prototype, "length", {
        /**
         * @return Length (px)
         */
        get: function () {
            if (this.disabled) {
                return 0;
            }
            return this.getPropertyValue("length");
        },
        /**
         * Length of the tick in pixels.
         *
         * @param value  Length (px)
         */
        set: function (value) {
            this.setPropertyValue("length", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return Tick;
}(_core_Sprite__WEBPACK_IMPORTED_MODULE_1__["Sprite"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Tick"] = Tick;
//# sourceMappingURL=Tick.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/XYChartScrollbar.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/elements/XYChartScrollbar.js ***!
  \****************************************************************************************/
/*! exports provided: XYChartScrollbar */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XYChartScrollbar", function() { return XYChartScrollbar; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_elements_Scrollbar__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/elements/Scrollbar */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Scrollbar.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _types_XYChart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../types/XYChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js");
/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../axes/ValueAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js");
/* harmony import */ var _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axes/DateAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_rendering_filters_DesaturateFilter__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/rendering/filters/DesaturateFilter */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/filters/DesaturateFilter.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_Options__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/Options */ "./node_modules/@amcharts/amcharts4/.internal/core/Options.js");
/**
 * A module with functionality for buildin a scrollbar with an XY graph in it.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */

















/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A special version of the Scrollbar that has an XY chart in it.
 *
 * Used mainly as an advanced scrollbar with a preview for other XY charts.
 *
 * However, can be used as standalone element.
 *
 * @see {@link IXYChartScrollbarEvents} for a list of available events
 * @see {@link IXYChartScrollbarAdapters} for a list of available Adapters
 * @important
 */
var XYChartScrollbar = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(XYChartScrollbar, _super);
    /**
     * Constructor
     */
    function XYChartScrollbar() {
        var _this = _super.call(this) || this;
        /**
         * A chart element Scrollbar is for.
         */
        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MutableValueDisposer"]();
        _this.className = "XYChartScrollbar";
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__["InterfaceColorSet"]();
        _this.padding(0, 0, 0, 0);
        var scrollbarChart = _this.createChild(_types_XYChart__WEBPACK_IMPORTED_MODULE_5__["XYChart"]);
        scrollbarChart.shouldClone = false;
        scrollbarChart.margin(0, 0, 0, 0);
        scrollbarChart.padding(0, 0, 0, 0);
        scrollbarChart.interactionsEnabled = false;
        _this._scrollbarChart = scrollbarChart;
        if (!_core_utils_Utils__WEBPACK_IMPORTED_MODULE_14__["isIE"]()) {
            var filter = new _core_rendering_filters_DesaturateFilter__WEBPACK_IMPORTED_MODULE_10__["DesaturateFilter"]();
            filter.filterUnits = "userSpaceOnUse";
            scrollbarChart.plotContainer.filters.push(filter);
        }
        _this._disposers.push(_this._scrollbarChart);
        _this.minHeight = 60;
        _this.minWidth = 60;
        var unselectedOverlay = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        unselectedOverlay.shouldClone = false;
        unselectedOverlay.setElement(_this.paper.add("path"));
        unselectedOverlay.fill = interfaceColors.getFor("background");
        unselectedOverlay.fillOpacity = 0.8;
        unselectedOverlay.interactionsEnabled = false;
        unselectedOverlay.isMeasured = false;
        unselectedOverlay.toBack();
        _this._unselectedOverlay = unselectedOverlay;
        _this._disposers.push(_this._unselectedOverlay);
        scrollbarChart.toBack();
        _this.background.cornerRadius(0, 0, 0, 0);
        var thumbBackground = _this.thumb.background;
        thumbBackground.cornerRadius(0, 0, 0, 0);
        thumbBackground.fillOpacity = 0;
        thumbBackground.fill = interfaceColors.getFor("background");
        var hoverState = thumbBackground.states.getKey("hover");
        if (hoverState) {
            hoverState.properties.fillOpacity = 0.2;
        }
        var downState = thumbBackground.states.getKey("down");
        if (downState) {
            downState.properties.fillOpacity = 0.4;
        }
        _this._disposers.push(_this._chart);
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(XYChartScrollbar.prototype, "series", {
        /**
         * A list of series that are used to draw graph(s) on the scrollbar.
         *
         * @readonly
         * @return Series
         */
        get: function () {
            if (!this._series) {
                this._series = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
                this._disposers.push(this._series.events.on("inserted", this.handleSeriesAdded, this, false));
                this._disposers.push(this._series.events.on("removed", this.handleSeriesRemoved, this, false));
            }
            return this._series;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Decorates a new series when they are pushed into a `series` list.
     *
     * @param event Event
     */
    XYChartScrollbar.prototype.handleSeriesAdded = function (event) {
        var _this = this;
        var sourceSeries = event.newValue;
        if (!sourceSeries.xAxis || !sourceSeries.yAxis) {
            return;
        }
        var scrollbarChart = this.scrollbarChart;
        scrollbarChart.zoomOutButton.disabled = true;
        this.chart = sourceSeries.chart;
        scrollbarChart.dateFormatter.inputDateFormat = this.chart.dateFormatter.inputDateFormat;
        // Ensure that scrollbar chart shares the same locale as parent chart
        scrollbarChart.language.locale = this.chart.language.locale;
        var addXAxis = true;
        var addYAxis = true;
        // check if we haven't added clone of x or y axis before
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__["each"](this.series.iterator(), function (series) {
            if (series != sourceSeries) {
                if (series.xAxis == sourceSeries.xAxis && _this.scrollbarChart.xAxes.length > 0) {
                    addXAxis = false;
                }
                if (series.yAxis == sourceSeries.yAxis && _this.scrollbarChart.yAxes.length > 0) {
                    addYAxis = false;
                }
            }
        });
        sourceSeries.events.on("beforedisposed", function () {
            _this.series.removeValue(sourceSeries);
        });
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__["InterfaceColorSet"]();
        var series = sourceSeries.clone();
        if (_core_Options__WEBPACK_IMPORTED_MODULE_17__["options"].onlyShowOnViewport || _core_Options__WEBPACK_IMPORTED_MODULE_17__["options"].queue) {
            this.addDisposer(this.chart.events.on("removedfromqueue", function () {
                scrollbarChart.invalidateData();
            }));
        }
        if (_core_utils_Utils__WEBPACK_IMPORTED_MODULE_14__["isIE"]()) {
            series.stroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_16__["color"])("#aaaaaa");
            series.fill = series.stroke;
            series.propertyFields.fill = undefined;
            series.propertyFields.stroke = undefined;
        }
        sourceSeries.scrollbarSeries = series;
        if (addXAxis) {
            var xAxis = sourceSeries.xAxis.clone();
            scrollbarChart.xAxes.moveValue(xAxis);
            xAxis.title.disabled = true;
            xAxis.rangeChangeDuration = 0;
            //xAxis.id = sourceSeries.uid;
            var renderer = xAxis.renderer;
            renderer.ticks.template.disabled = true;
            renderer.inside = true;
            renderer.labels.template.inside = true;
            renderer.line.strokeOpacity = 0;
            renderer.minLabelPosition = 0.02;
            renderer.maxLabelPosition = 0.98;
            renderer.line.disabled = true;
            renderer.axisFills.template.disabled = true;
            renderer.baseGrid.disabled = true;
            renderer.grid.template.strokeOpacity = 0.05;
            renderer.minWidth = undefined;
            renderer.minHeight = undefined;
            renderer.padding(0, 0, 0, 0);
            renderer.chart = scrollbarChart;
            renderer.margin(0, 0, 0, 0);
            xAxis.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_15__["percent"])(100);
            var labelsTemplate = renderer.labels.template;
            labelsTemplate.fillOpacity = 0.5;
            xAxis.maxZoomCount = undefined;
            xAxis.minZoomCount = undefined;
            if (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__["DateAxis"]) {
                var vAxis_1 = xAxis;
                var sourceAxis = sourceSeries.xAxis;
                vAxis_1.groupCount = sourceAxis.groupCount * 5;
                vAxis_1.min = undefined;
                vAxis_1.max = undefined;
                this._disposers.push(vAxis_1.clonedFrom.events.on("extremeschanged", function () {
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](vAxis_1.clonedFrom.minDefined)) {
                        vAxis_1.min = vAxis_1.clonedFrom.minDefined;
                    }
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](vAxis_1.clonedFrom.maxDefined)) {
                        vAxis_1.max = vAxis_1.clonedFrom.maxDefined;
                    }
                }, undefined, false));
            }
            else if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"]) {
                var vAxis_2 = xAxis;
                vAxis_2.min = undefined;
                vAxis_2.max = undefined;
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](vAxis_2.clonedFrom.minDefined)) {
                    vAxis_2.min = undefined;
                }
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](vAxis_2.clonedFrom.maxDefined)) {
                    vAxis_2.max = undefined;
                }
                this._disposers.push(vAxis_2.clonedFrom.events.on("extremeschanged", function () {
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](vAxis_2.clonedFrom.minDefined)) {
                        vAxis_2.min = vAxis_2.clonedFrom.min;
                    }
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](vAxis_2.clonedFrom.maxDefined)) {
                        vAxis_2.max = vAxis_2.clonedFrom.max;
                    }
                }, undefined, false));
            }
            series.xAxis = xAxis;
        }
        else {
            this.scrollbarChart.xAxes.each(function (xAxis) {
                if (xAxis.clonedFrom == sourceSeries.xAxis) {
                    series.xAxis = xAxis;
                }
            });
        }
        if (addYAxis) {
            var yAxis = sourceSeries.yAxis.clone();
            scrollbarChart.yAxes.moveValue(yAxis);
            yAxis.title.disabled = true;
            yAxis.rangeChangeDuration = 0;
            var renderer = yAxis.renderer;
            renderer.ticks.template.disabled = true;
            renderer.inside = true;
            renderer.labels.template.inside = true;
            renderer.line.strokeOpacity = 0;
            renderer.minLabelPosition = 0.02;
            renderer.maxLabelPosition = 0.98;
            renderer.line.disabled = true;
            renderer.axisFills.template.disabled = true;
            renderer.grid.template.stroke = interfaceColors.getFor("background");
            renderer.baseGrid.disabled = true;
            renderer.grid.template.strokeOpacity = 0.05;
            renderer.minWidth = undefined;
            renderer.minHeight = undefined;
            renderer.chart = scrollbarChart;
            renderer.padding(0, 0, 0, 0);
            renderer.margin(0, 0, 0, 0);
            yAxis.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_15__["percent"])(100);
            var labelsTemplate = renderer.labels.template;
            labelsTemplate.fillOpacity = 0.5;
            series.yAxis = yAxis;
            yAxis.maxZoomCount = undefined;
            yAxis.minZoomCount = undefined;
            if (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__["DateAxis"]) {
                var vAxis_3 = yAxis;
                vAxis_3.min = undefined;
                vAxis_3.max = undefined;
                var sourceAxis = sourceSeries.yAxis;
                yAxis.groupCount = sourceAxis.groupCount * 5;
                this._disposers.push(vAxis_3.clonedFrom.events.on("extremeschanged", function () {
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](vAxis_3.clonedFrom.minDefined)) {
                        vAxis_3.min = vAxis_3.clonedFrom.minDefined;
                    }
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](vAxis_3.clonedFrom.maxDefined)) {
                        vAxis_3.max = vAxis_3.clonedFrom.maxDefined;
                    }
                }));
            }
            else if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"]) {
                var vAxis_4 = yAxis;
                vAxis_4.min = undefined;
                vAxis_4.max = undefined;
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](vAxis_4.clonedFrom.minDefined)) {
                    vAxis_4.min = undefined;
                }
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](vAxis_4.clonedFrom.maxDefined)) {
                    vAxis_4.max = undefined;
                }
                this._disposers.push(vAxis_4.clonedFrom.events.on("extremeschanged", function () {
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](vAxis_4.clonedFrom.minDefined)) {
                        vAxis_4.min = vAxis_4.clonedFrom.minDefined;
                    }
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](vAxis_4.clonedFrom.maxDefined)) {
                        vAxis_4.max = vAxis_4.clonedFrom.maxDefined;
                    }
                }));
            }
        }
        else {
            this.scrollbarChart.yAxes.each(function (yAxis) {
                if (yAxis.clonedFrom == sourceSeries.yAxis) {
                    series.yAxis = yAxis;
                }
            });
        }
        series.rangeChangeDuration = 0;
        series.interpolationDuration = 0;
        series.defaultState.transitionDuration = 0;
        series.showOnInit = false;
        this._disposers.push(series.events.on("validated", this.zoomOutAxes, this, false));
        // data might be set drectly on series
        this._disposers.push(sourceSeries.events.on("datavalidated", function () {
            if (series.data != sourceSeries.data) { // data setter doesn't check this
                series.data = sourceSeries.data;
            }
        }, undefined, false));
        series.defaultState.properties.visible = true;
        scrollbarChart.series.push(series);
        this.updateByOrientation();
    };
    /**
     * @ignore
     */
    XYChartScrollbar.prototype.updateByOrientation = function () {
        var _this = this;
        if (this._scrollbarChart) {
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__["each"](this._scrollbarChart.xAxes.iterator(), function (xAxis) {
                var renderer = xAxis.renderer;
                if (_this.orientation == "vertical") {
                    renderer.grid.template.disabled = true;
                    renderer.labels.template.disabled = true;
                    renderer.minGridDistance = 10;
                }
                else {
                    renderer.grid.template.disabled = false;
                    renderer.labels.template.disabled = false;
                    renderer.minGridDistance = xAxis.clonedFrom.renderer.minGridDistance;
                }
            });
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__["each"](this._scrollbarChart.yAxes.iterator(), function (yAxis) {
                var renderer = yAxis.renderer;
                if (_this.orientation == "horizontal") {
                    renderer.grid.template.disabled = true;
                    renderer.labels.template.disabled = true;
                    renderer.minGridDistance = 10;
                }
                else {
                    renderer.grid.template.disabled = false;
                    renderer.labels.template.disabled = false;
                    renderer.minGridDistance = yAxis.clonedFrom.renderer.minGridDistance;
                }
            });
        }
    };
    /**
     * Cleans up after series are removed from Scrollbar.
     *
     * @param event  Event
     */
    XYChartScrollbar.prototype.handleSeriesRemoved = function (event) {
        var sourceSeries = event.oldValue;
        var scrollbarChart = this.scrollbarChart;
        scrollbarChart.series.each(function (series) {
            if (series && series.clonedFrom == sourceSeries) {
                scrollbarChart.series.removeValue(series);
            }
        });
        if (scrollbarChart.series.length == 0) {
            scrollbarChart.xAxes.clear();
            scrollbarChart.yAxes.clear();
        }
        try {
            sourceSeries.events.off("validated", this.zoomOutAxes, this);
        }
        catch (err) {
        }
    };
    Object.defineProperty(XYChartScrollbar.prototype, "scrollbarChart", {
        /**
         * A chart element that is used to display graphs in the Scrollbar.
         *
         * This is not the same as `chart`. It's a totally independent instance of
         * [[XYChart]] with separate config, series, etc.
         *
         * It can be configured just like any other [[XYChart]].
         *
         * @readonly
         * @return Scrollbar's internal chart
         */
        get: function () {
            return this._scrollbarChart;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYChartScrollbar.prototype, "chart", {
        /**
         * @return Chart
         */
        get: function () {
            return this._chart.get();
        },
        /**
         * A chart that Scrollbar belongs to.
         *
         * @param chart  Chart
         */
        set: function (chart) {
            if (this._chart.get() !== chart) {
                this._chart.set(chart, chart.events.on("datavalidated", this.handleDataChanged, this, false));
                this.handleDataChanged();
                this._scrollbarChart.dataProvider = chart; // this makes scrollbar chart do not validate data untill charts' data is validated
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYChartScrollbar.prototype, "unselectedOverlay", {
        /**
         * A [[Sprite]] object representing overlay that is used to dim area of the
         * scrollbar that is currently not selected.
         *
         * Use its `fillOpacity` to set opacity of the fill, with `0` (zero)
         * completely disabling the dimming, and `1` making unselected area completely
         * blank.
         *
         * @since 4.6.1
         * @readonly
         * @return Unselected area curtain element
         */
        get: function () {
            return this._unselectedOverlay;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates Scrollbar's internal chart's data when the main chart's data
     * changes.
     *
     * @ignore Exclude from docs
     */
    XYChartScrollbar.prototype.handleDataChanged = function () {
        if (this.chart.data != this.scrollbarChart.data) {
            this.scrollbarChart.data = this.chart.data;
        }
        else {
            // add data is handled in XYChart
            // invalidating all data caused the problem: https://github.com/amcharts/amcharts4/issues/2096
            this.scrollbarChart.invalidateRawData();
        }
    };
    /**
     * Zooms out all axes on the internal chart.
     */
    XYChartScrollbar.prototype.zoomOutAxes = function () {
        var scrollbarChart = this.scrollbarChart;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__["each"](scrollbarChart.xAxes.iterator(), function (x) {
            x.zoom({ start: 0, end: 1 }, true, true);
        });
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__["each"](scrollbarChart.yAxes.iterator(), function (y) {
            y.zoom({ start: 0, end: 1 }, true, true);
        });
    };
    /**
     * Updates scrollbar thumb.
     */
    XYChartScrollbar.prototype.updateThumb = function () {
        _super.prototype.updateThumb.call(this);
        if (this._unselectedOverlay) {
            var thumb = this.thumb;
            var x = thumb.pixelX || 0;
            var y = thumb.pixelY || 0;
            var w = thumb.pixelWidth || 0;
            var h = thumb.pixelHeight || 0;
            var path = "";
            if (this.orientation == "horizontal") {
                path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__["rectToPath"]({
                    x: -1,
                    y: 0,
                    width: x,
                    height: h
                });
                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__["rectToPath"]({
                    x: x + w,
                    y: 0,
                    width: (this.pixelWidth || 0) - x - w,
                    height: h
                });
            }
            else {
                path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__["rectToPath"]({
                    x: 0,
                    y: 0,
                    width: w,
                    height: y
                });
                path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__["rectToPath"]({
                    x: 0,
                    y: y + h,
                    width: w,
                    height: (this.pixelHeight || 0) - y - h
                });
            }
            this._unselectedOverlay.path = path;
        }
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    XYChartScrollbar.prototype.processConfig = function (config) {
        if (config) {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](config.series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isArray"](config.series)) {
                for (var i = 0, len = config.series.length; i < len; i++) {
                    var series = config.series[i];
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isString"](series)) {
                        if (this.map.hasKey(series)) {
                            config.series[i] = this.map.getKey(series);
                        }
                        else {
                            throw Error("XYChartScrollbar error: Series with id `" + series + "` does not exist.");
                        }
                    }
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    return XYChartScrollbar;
}(_core_elements_Scrollbar__WEBPACK_IMPORTED_MODULE_1__["Scrollbar"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses["XYChartScrollbar"] = XYChartScrollbar;
//# sourceMappingURL=XYChartScrollbar.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/Geo.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/Geo.js ***!
  \**********************************************************************/
/*! exports provided: normalizePoint, normalizeMultiline, wrapAngleTo180, geoToPoint */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizePoint", function() { return normalizePoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "normalizeMultiline", function() { return normalizeMultiline; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wrapAngleTo180", function() { return wrapAngleTo180; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoToPoint", function() { return geoToPoint; });
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/**
 * A collection of GeoJSON format-related utility functions.
 */


/**
 * Normalizes a geo-point.
 *
 * @ignore Exclude from docs
 * @param geoPoint  Source geo-point
 * @return Normalized geo-point
 */
function normalizePoint(geoPoint) {
    var longitude = wrapAngleTo180(geoPoint.longitude);
    var latitude = Math.asin(Math.sin((geoPoint.latitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_0__["RADIANS"]))) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_0__["DEGREES"];
    var latitude180 = wrapAngleTo180(geoPoint.latitude);
    if (Math.abs(latitude180) > 90) {
        longitude = wrapAngleTo180(longitude + 180);
    }
    geoPoint.longitude = longitude;
    geoPoint.latitude = latitude;
    return geoPoint;
}
/**
 * Normalizes all points of a geo-line.
 *
 * @ignore Exclude from docs
 * @param multiline  Source geo-line
 * @return Normalized geo-line
 */
function normalizeMultiline(multiline) {
    _core_utils_Array__WEBPACK_IMPORTED_MODULE_1__["each"](multiline, function (segment) {
        _core_utils_Array__WEBPACK_IMPORTED_MODULE_1__["each"](segment, function (point) {
            normalizePoint(point);
        });
    });
    return multiline;
}
/**
 * [wrapAngleTo180 description]
 *
 * @todo Description
 * @ignore Exclude from docs
 * @param angle  Angle
 * @return Angle
 */
function wrapAngleTo180(angle) {
    angle = angle % 360;
    if (angle > 180) {
        angle -= 360;
    }
    if (angle < -180) {
        angle += 360;
    }
    return angle;
}
/**
 * Converts a geo point to a regular point object.
 *
 * @ignore Exclude from docs
 * @param geoPoint  Source geo point
 * @return Point
 */
function geoToPoint(geoPoint) {
    return { x: geoPoint.longitude, y: geoPoint.latitude };
}
//# sourceMappingURL=Geo.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/Graticule.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/Graticule.js ***!
  \****************************************************************************/
/*! exports provided: Graticule */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Graticule", function() { return Graticule; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapLine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapLine */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLine.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Graticule (map grid line).
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Graticule is a map line spanning from the poles or around the globe.
 *
 * @since 4.3.0
 * @see {@link IGraticuleEvents} for a list of available events
 * @see {@link IGraticuleAdapters} for a list of available Adapters
 */
var Graticule = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Graticule, _super);
    /**
     * Constructor
     */
    function Graticule() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "Graticule";
        // Apply theme
        _this.applyTheme();
        _this.shortestDistance = true;
        return _this;
    }
    return Graticule;
}(_MapLine__WEBPACK_IMPORTED_MODULE_1__["MapLine"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Graticule"] = Graticule;
//# sourceMappingURL=Graticule.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/GraticuleSeries.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/GraticuleSeries.js ***!
  \**********************************************************************************/
/*! exports provided: GraticuleSeriesDataItem, GraticuleSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GraticuleSeriesDataItem", function() { return GraticuleSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GraticuleSeries", function() { return GraticuleSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapLineSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapLineSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineSeries.js");
/* harmony import */ var _Graticule__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Graticule */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/Graticule.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/**
 * Graticule (map grid) series functionality.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[GraticuleSeries]].
 *
 * @see {@link DataItem}
 */
var GraticuleSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(GraticuleSeriesDataItem, _super);
    /**
     * Constructor
     */
    function GraticuleSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "GraticuleSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    return GraticuleSeriesDataItem;
}(_MapLineSeries__WEBPACK_IMPORTED_MODULE_1__["MapLineSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * This class is used to create a set of graticules (map grid).
 *
 * To enable, create like you would create any regular map series:
 *
 * ```TypeScript
 * let graticule = chart.series.push(new am4maps.GraticuleSeries())
 * graticule.mapLines.template.line.stroke = am4core.color("#000000");
 * graticule.mapLines.template.line.strokeOpacity = 0.1;
 * ```
 * ```JavaScript
 * var graticule = chart.series.push(new am4maps.GraticuleSeries())
 * graticule.mapLines.template.line.stroke = am4core.color("#000000");
 * graticule.mapLines.template.line.strokeOpacity = 0.1;
 * ```
 * ```JSON
 * {
 *   // ...
 *   "series": [{
 *     "type": "GraticuleSeries",
 *     "mapLines": {
 *       "line": {
 *         "stroke": "#000000",
 *         "strokeOpacity": 0.1
 *       }
 *     }
 *   }]
 * }
 * ```
 *
 * @since 4.3.0
 * @see {@link IGraticuleSeriesEvents} for a list of available Events
 * @see {@link IGraticuleSeriesAdapters} for a list of available Adapters
 * @important
 */
var GraticuleSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(GraticuleSeries, _super);
    /**
     * Constructor
     */
    function GraticuleSeries() {
        var _this = _super.call(this) || this;
        _this.className = "GraticuleSeries";
        _this.longitudeStep = 10;
        _this.latitudeStep = 10;
        _this.north = 90;
        _this.south = -90;
        _this.east = -180;
        _this.west = 180;
        //this.majorLatitudeStep = 90;
        //this.majorLongitudeStep = 360;
        _this.fitExtent = true;
        _this.singleSprite = true;
        _this.events.disableType("geoBoundsChanged");
        _this.mapLines.template.line.strokeOpacity = 0.08;
        _this.ignoreBounds = false;
        _this.hiddenInLegend = true;
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    GraticuleSeries.prototype.createDataItem = function () {
        return new GraticuleSeriesDataItem();
    };
    GraticuleSeries.prototype.validateData = function () {
        var _this = this;
        _super.prototype.validateData.call(this);
        this.mapLines.clear();
        var graticule = d3_geo__WEBPACK_IMPORTED_MODULE_4__["geoGraticule"]();
        if (graticule) {
            graticule.stepMinor([this.longitudeStep, this.latitudeStep]);
            graticule.stepMajor([360, 360]);
            var chart = this.chart;
            if (this.fitExtent) {
                graticule.extent([[chart.east, chart.north], [chart.west, chart.south]]);
            }
            else {
                graticule.extent([[this.east, this.north], [this.west, this.south]]);
            }
            if (this.singleSprite) {
                var mapLine = this.mapLines.create();
                mapLine.multiLine = graticule().coordinates;
            }
            else {
                var lineStrings = graticule.lines();
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_5__["each"](lineStrings, function (lineString) {
                    var mapLine = _this.mapLines.create();
                    mapLine.multiLine = [lineString.coordinates];
                });
            }
        }
    };
    /**
     * Returns a new line instance of suitable type.
     *
     * @return New line
     */
    GraticuleSeries.prototype.createLine = function () {
        return new _Graticule__WEBPACK_IMPORTED_MODULE_2__["Graticule"]();
    };
    Object.defineProperty(GraticuleSeries.prototype, "latitudeStep", {
        /**
         * @return Step
         */
        get: function () {
            return this.getPropertyValue("latitudeStep");
        },
        /**
         * Draw a graticule (grid) every X degrees of latitude.
         *
         * @default 10
         * @param  value Step
         */
        set: function (value) {
            if (this.setPropertyValue("latitudeStep", value)) {
                this.invalidateData();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GraticuleSeries.prototype, "longitudeStep", {
        /**
         * @return Step
         */
        get: function () {
            return this.getPropertyValue("longitudeStep");
        },
        /**
         * Draw a graticule (grid) every X degrees of longitude.
         *
         * @default 10
         * @param  value  Step
         */
        set: function (value) {
            if (this.setPropertyValue("longitudeStep", value)) {
                this.invalidateData();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GraticuleSeries.prototype, "fitExtent", {
        /**
         * @return Fit?
         */
        get: function () {
            return this.getPropertyValue("fitExtent");
        },
        /**
         * Draw a thicker (major) graticule every X degrees of latitude.
         *
         * @default 90
         * @param  value  Step
         */
        // public set majorLatitudeStep(value: number) {
        // 	if (this.setPropertyValue("majorLatitudeStep", value)) {
        // 		this.invalidateData();
        // 	}
        // }
        /**
         * @return Step
         */
        // public get majorLatitudeStep(): number {
        // 	return this.getPropertyValue("majorLatitudeStep");
        // }
        /**
         * Draw a thicker (major) graticule every X degrees of longitude.
         *
         * @default 360
         * @param  value  Step
         */
        // public set majorLongitudeStep(value: number) {
        // 	if (this.setPropertyValue("majorLongitudeStep", value)) {
        // 		this.invalidateData();
        // 	}
        // }
        /**
         * @return Step
         */
        // public get majorLongitudeStep(): number {
        // 	return this.getPropertyValue("majorLongitudeStep");
        // }
        /**
         * Whether to cap graticules (grid) to actual span of the map (`true`), e.g.
         * where there are polygons, or draw full-world grid (`false`).
         *
         * For world maps, using `false` makes sense. For smaller maps - not so much.
         *
         * If set to `false`, the grid will be drawn from this series `east` to
         * `west`, and from `south` to `north` (default values: `east = -180`;
         * `west = 180`; `south =-90`; `north =90`).
         *
         * These can be overridden by setting `GraticuleSeries`' respective
         * properties.
         *
         * @default true
         * @param  value  Fit?
         */
        set: function (value) {
            if (this.setPropertyValue("fitExtent", value)) {
                this.invalidateData();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GraticuleSeries.prototype, "singleSprite", {
        /**
         * @return Use single sprite?
         */
        get: function () {
            return this.getPropertyValue("singleSprite");
        },
        /**
         * Whether to draw all the grid as a single element or as separate lines.
         *
         * Setting `true` (default) will result in better performance, whereas
         * `false` allows setting visual properties of each line individually.
         *
         * @default true
         * @param  value  Use single sprite?
         */
        set: function (value) {
            if (this.setPropertyValue("singleSprite", value)) {
                this.invalidateData();
            }
        },
        enumerable: true,
        configurable: true
    });
    return GraticuleSeries;
}(_MapLineSeries__WEBPACK_IMPORTED_MODULE_1__["MapLineSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["GraticuleSeries"] = GraticuleSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["GraticuleSeriesDataItem"] = GraticuleSeriesDataItem;
//# sourceMappingURL=GraticuleSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArc.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArc.js ***!
  \*************************************************************************/
/*! exports provided: MapArc */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapArc", function() { return MapArc; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapLine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapLine */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLine.js");
/* harmony import */ var _core_elements_Polyarc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Polyarc */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyarc.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Map arched line module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw an arched line on the map.
 *
 * @see {@link IMapArcEvents} for a list of available events
 * @see {@link IMapArcAdapters} for a list of available Adapters
 */
var MapArc = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapArc, _super);
    /**
     * Constructor
     */
    function MapArc() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "MapArc";
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * @ignore
     */
    MapArc.prototype.createLine = function () {
        this.line = new _core_elements_Polyarc__WEBPACK_IMPORTED_MODULE_2__["Polyarc"]();
    };
    Object.defineProperty(MapArc.prototype, "shortestDistance", {
        get: function () {
            return false;
        },
        /**
         * `shortestDistance = true` is not supported by `MapArc`.
         *
         * Only [[MapLine]] supports it.
         *
         * @default false
         * @param value
         */
        set: function (value) {
        },
        enumerable: true,
        configurable: true
    });
    return MapArc;
}(_MapLine__WEBPACK_IMPORTED_MODULE_1__["MapLine"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapArc"] = MapArc;
//# sourceMappingURL=MapArc.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArcSeries.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArcSeries.js ***!
  \*******************************************************************************/
/*! exports provided: MapArcSeriesDataItem, MapArcSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapArcSeriesDataItem", function() { return MapArcSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapArcSeries", function() { return MapArcSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapLineSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapLineSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineSeries.js");
/* harmony import */ var _MapArc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapArc */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArc.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Map arc series module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapArcSeries]].
 *
 * @see {@link DataItem}
 */
var MapArcSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapArcSeriesDataItem, _super);
    /**
     * Constructor
     */
    function MapArcSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapArcSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    return MapArcSeriesDataItem;
}(_MapLineSeries__WEBPACK_IMPORTED_MODULE_1__["MapLineSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A series of arc elements. (curved lines)
 *
 * @see {@link IMapArcSeriesEvents} for a list of available Events
 * @see {@link IMapArcSeriesAdapters} for a list of available Adapters
 * @important
 */
var MapArcSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapArcSeries, _super);
    /**
     * Constructor
     */
    function MapArcSeries() {
        var _this = _super.call(this) || this;
        _this.className = "MapArcSeries";
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    MapArcSeries.prototype.createDataItem = function () {
        return new MapArcSeriesDataItem();
    };
    /**
     * Returns a new line instance of suitable type.
     *
     * @return New line
     */
    MapArcSeries.prototype.createLine = function () {
        return new _MapArc__WEBPACK_IMPORTED_MODULE_2__["MapArc"]();
    };
    return MapArcSeries;
}(_MapLineSeries__WEBPACK_IMPORTED_MODULE_1__["MapLineSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapArcSeries"] = MapArcSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapArcSeriesDataItem"] = MapArcSeriesDataItem;
//# sourceMappingURL=MapArcSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImage.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImage.js ***!
  \***************************************************************************/
/*! exports provided: MapImage */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapImage", function() { return MapImage; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapObject */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapObject.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to place an image on the map.
 *
 * @see {@link IMapImageEvents} for a list of available events
 * @see {@link IMapImageAdapters} for a list of available Adapters
 */
var MapImage = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapImage, _super);
    /**
     * Constructor
     */
    function MapImage() {
        var _this = _super.call(this) || this;
        _this.className = "MapImage";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(MapImage.prototype, "latitude", {
        /**
         * @return Latitude
         */
        get: function () {
            var latitude = this.getPropertyValue("latitude");
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](latitude) && this.dataItem && this.dataItem.geoPoint) {
                latitude = this.dataItem.geoPoint.latitude;
            }
            return latitude;
        },
        /**
         * Latitude image is placed at.
         *
         * @param value  Latitude
         */
        set: function (value) {
            this.setPropertyValue("latitude", value, false, true);
            this.updateExtremes();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapImage.prototype, "longitude", {
        /**
         * @return Longitude
         */
        get: function () {
            var longitude = this.getPropertyValue("longitude");
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](longitude) && this.dataItem && this.dataItem.geoPoint) {
                longitude = this.dataItem.geoPoint.longitude;
            }
            return longitude;
        },
        /**
         * Longitude image is placed on.
         *
         * @param value  Longitude
         */
        set: function (value) {
            this.setPropertyValue("longitude", value, false, true);
            this.updateExtremes();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Repositions the image to it's current position.
     *
     * @ignore Exclude from docs
     */
    MapImage.prototype.validatePosition = function () {
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](this.latitude) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](this.longitude)) {
            //this.moveTo(this.series.chart.projection.convert({ latitude: this.latitude, longitude: this.longitude }));
            var p = this.series.chart.projection.d3Projection([this.longitude, this.latitude]);
            var visible = this.series.chart.projection.d3Path({ type: 'Point', coordinates: [this.longitude, this.latitude] });
            if (!visible) {
                this.__disabled = true;
            }
            else {
                this.__disabled = false;
            }
            this.moveTo({ x: p[0], y: p[1] });
        }
        _super.prototype.validatePosition.call(this);
    };
    /**
     * @ignore
     */
    MapImage.prototype.getFeature = function () {
        return { "type": "Feature", geometry: { type: "Point", coordinates: [this.longitude, this.latitude] } };
    };
    return MapImage;
}(_MapObject__WEBPACK_IMPORTED_MODULE_1__["MapObject"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["MapImage"] = MapImage;
//# sourceMappingURL=MapImage.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImageSeries.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImageSeries.js ***!
  \*********************************************************************************/
/*! exports provided: MapImageSeriesDataItem, MapImageSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapImageSeriesDataItem", function() { return MapImageSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapImageSeries", function() { return MapImageSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js");
/* harmony import */ var _MapImage__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapImage */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImage.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _MapUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./MapUtils */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/**
 * Map image series module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */










/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapImageSeries]]
 * @see {@link DataItem}
 */
var MapImageSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapImageSeriesDataItem, _super);
    /**
     * Constructor
     */
    function MapImageSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapImageSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    /**
     * @ignore
     */
    MapImageSeriesDataItem.prototype.getFeature = function () {
        return { "type": "Feature", geometry: { type: "Point", coordinates: this.point } };
    };
    Object.defineProperty(MapImageSeriesDataItem.prototype, "mapImage", {
        /**
         * A [[MapImage]] element related to this data item.
         *
         * @return Element
         */
        get: function () {
            var _this = this;
            if (!this._mapImage) {
                var mapImage_1 = this.component.mapImages.create();
                this.addSprite(mapImage_1);
                this._mapImage = mapImage_1;
                this._disposers.push(mapImage_1);
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_10__["Disposer"](function () {
                    if (_this.component) {
                        _this.component.mapImages.removeValue(mapImage_1);
                    }
                }));
                this.mapObject = mapImage_1;
            }
            return this._mapImage;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapImageSeriesDataItem.prototype, "point", {
        /**
         * @return [description]
         */
        get: function () {
            return this._point;
        },
        /**
         * [point description]
         *
         * @todo Description
         * @param point [description]
         */
        set: function (point) {
            this._point = point;
            this._geoPoint = _MapUtils__WEBPACK_IMPORTED_MODULE_6__["pointToGeo"](point);
            this.updateExtremes();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapImageSeriesDataItem.prototype, "multiPoint", {
        /**
         * @return [description]
         */
        get: function () {
            return [this._point];
        },
        /**
         * [point description]
         *
         * @todo Description
         * @param point [description]
         */
        set: function (multiPoint) {
            this._point = multiPoint[0];
            this._geoPoint = _MapUtils__WEBPACK_IMPORTED_MODULE_6__["pointToGeo"](this._point);
            this.updateExtremes();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapImageSeriesDataItem.prototype, "geoPoint", {
        /**
         * @return Image coordinates
         */
        get: function () {
            return this._geoPoint;
        },
        /**
         * Geographical coordinates (lat/long) image is placed at.
         *
         * @param geoPoint Image coordinates
         */
        set: function (geoPoint) {
            this._geoPoint = geoPoint;
            this.point = [geoPoint.longitude, geoPoint.latitude];
        },
        enumerable: true,
        configurable: true
    });
    return MapImageSeriesDataItem;
}(_MapSeries__WEBPACK_IMPORTED_MODULE_1__["MapSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A series of map image (marker) elements.
 *
 * @see {@link IMapImageSeriesEvents} for a list of available Events
 * @see {@link IMapImageSeriesAdapters} for a list of available Adapters
 * @important
 */
var MapImageSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapImageSeries, _super);
    /**
     * Constructor
     */
    function MapImageSeries() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "MapImageSeries";
        // Set data fields
        _this.dataFields.multiPoint = "multiPoint";
        _this.dataFields.point = "point";
        _this.dataFields.geoPoint = "geoPoint";
        _this.dataFields.multiGeoPoint = "multiGeoPoint";
        _this.ignoreBounds = true;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    MapImageSeries.prototype.createDataItem = function () {
        return new MapImageSeriesDataItem();
    };
    /**
     * (Re)validates the data of the sries, effectively forcing it to redraw
     * all of its elements.
     *
     * @ignore Exclude from docs
     */
    MapImageSeries.prototype.validateData = function () {
        var _this = this;
        if (this.data.length > 0 && this._parseDataFrom == 0) {
            this.mapImages.clear();
        }
        // process geoJSON and created map objects
        if (this.useGeodata) {
            if (this.useGeodata || this.geodata) {
                var geoJSON = this.chart.geodata;
                var features = void 0;
                if (geoJSON.type == "FeatureCollection") {
                    features = geoJSON.features;
                }
                else if (geoJSON.type == "Feature") {
                    features = [geoJSON];
                }
                else if (["Point", "LineString", "Polygon", "MultiPoint", "MultiLineString", "MultiPolygon"].indexOf(geoJSON.type) != -1) {
                    features = [{ geometry: geoJSON }];
                }
                else {
                    console.log("nothing found in geoJSON");
                }
                if (features) {
                    var _loop_1 = function (i, len) {
                        var feature = features[i];
                        var geometry = feature.geometry;
                        if (geometry) {
                            var type = geometry.type;
                            var id_1 = feature.id;
                            if (type == "Point" || type == "MultiPoint") { // todo: we don't support multipoints at the moment actually
                                if (!this_1.checkInclude(this_1.include, this_1.exclude, id_1)) {
                                    return "continue";
                                }
                                var coordinates = geometry.coordinates;
                                // make the same as MultiPoint
                                if (type == "Point") {
                                    coordinates = [coordinates];
                                }
                                var dataObject = _core_utils_Array__WEBPACK_IMPORTED_MODULE_5__["find"](this_1.data, function (value, i) {
                                    return value.id == id_1;
                                });
                                if (!dataObject) {
                                    dataObject = { multiPoint: coordinates, id: id_1, madeFromGeoData: true };
                                    this_1.data.push(dataObject);
                                }
                                else {
                                    if (!dataObject.multiPoint) {
                                        dataObject.multiPoint = coordinates;
                                    }
                                }
                                // copy properties data to datacontext
                                _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["softCopyProperties"](feature.properties, dataObject);
                            }
                        }
                    };
                    var this_1 = this;
                    for (var i = 0, len = features.length; i < len; i++) {
                        _loop_1(i, len);
                    }
                }
            }
        }
        _super.prototype.validateData.call(this);
        // important! this should go after super.validateData
        // if data is parsed in chunks, images list is corrupted, fix it here
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.dataItems.iterator(), function (dataItem) {
            var mapImage = dataItem.mapImage;
            if (!mapImage.isDisposed()) {
                _this.mapImages.moveValue(mapImage);
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](mapImage.latitude) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](mapImage.latitude)) {
                    dataItem.geoPoint = { latitude: mapImage.latitude, longitude: mapImage.longitude };
                }
            }
        });
    };
    Object.defineProperty(MapImageSeries.prototype, "mapImages", {
        /**
         * A list of map images in the series.
         *
         * @return Map images
         */
        get: function () {
            if (!this._mapImages) {
                var template = new _MapImage__WEBPACK_IMPORTED_MODULE_2__["MapImage"]();
                var mapImages = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](template);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](mapImages));
                this._disposers.push(mapImages.template);
                mapImages.template.focusable = true;
                mapImages.events.on("inserted", this.handleObjectAdded, this, false);
                this._mapImages = mapImages;
                this._mapObjects = mapImages;
            }
            return this._mapImages;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * (Re)validates data element, effectively triggering its redrawal.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    MapImageSeries.prototype.validateDataElement = function (dataItem) {
        _super.prototype.validateDataElement.call(this, dataItem);
        dataItem.mapImage.invalidate();
    };
    /**
     * (Re)validates the series
     *
     * @ignore Exclude from docs
     */
    MapImageSeries.prototype.validate = function () {
        _super.prototype.validate.call(this);
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.mapImages.iterator(), function (mapImage) {
            mapImage.validatePosition();
        });
    };
    /**
     * Copies all properties from another instance of [[Series]].
     *
     * @param source  Source series
     */
    MapImageSeries.prototype.copyFrom = function (source) {
        this.mapImages.template.copyFrom(source.mapImages.template);
        _super.prototype.copyFrom.call(this, source);
    };
    /**
     * @ignore
     */
    MapImageSeries.prototype.getFeatures = function () {
        var _this = this;
        var features = [];
        this.dataItems.each(function (dataItem) {
            var feature = dataItem.getFeature();
            if (feature) {
                features.push(feature);
            }
        });
        this.mapImages.each(function (mapImage) {
            if (_this.dataItems.indexOf(mapImage._dataItem) == -1) {
                var feature = mapImage.getFeature();
                if (feature) {
                    features.push(feature);
                }
            }
        });
        return features;
    };
    /**
     * returns MapImage by id
     * @param image id
     * @return {MapImage}
     */
    MapImageSeries.prototype.getImageById = function (id) {
        return _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["find"](this.mapImages.iterator(), function (mapImage) {
            var dataContext = mapImage.dataItem.dataContext;
            if (mapImage.id == id || (dataContext && dataContext.id == id)) {
                return true;
            }
        });
    };
    return MapImageSeries;
}(_MapSeries__WEBPACK_IMPORTED_MODULE_1__["MapSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["MapImageSeries"] = MapImageSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["MapImageSeriesDataItem"] = MapImageSeriesDataItem;
//# sourceMappingURL=MapImageSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLine.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLine.js ***!
  \**************************************************************************/
/*! exports provided: MapLine */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLine", function() { return MapLine; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapObject */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapObject.js");
/* harmony import */ var _MapLineObject__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapLineObject */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineObject.js");
/* harmony import */ var _MapImage__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./MapImage */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImage.js");
/* harmony import */ var _MapImageSeries__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./MapImageSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImageSeries.js");
/* harmony import */ var _core_elements_Triangle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/elements/Triangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Triangle.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_elements_Polyline__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/elements/Polyline */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyline.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _Geo__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./Geo */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/Geo.js");
/* harmony import */ var _MapUtils__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./MapUtils */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js");
/**
 * Map line module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */















/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw a line on the map.
 *
 * @see {@link IMapLineEvents} for a list of available events
 * @see {@link IMapLineAdapters} for a list of available Adapters
 */
var MapLine = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapLine, _super);
    /**
     * Constructor
     */
    function MapLine() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A list of event disposers for images.
         */
        _this._imageListeners = {};
        _this.className = "MapLine";
        _this.createLine();
        _this.line.stroke = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_9__["color"])();
        _this.line.parent = _this;
        _this.strokeOpacity = 1;
        _this.setPropertyValue("precision", 0.1);
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_10__["InterfaceColorSet"]();
        _this.stroke = interfaceColors.getFor("grid");
        _this.shortestDistance = true;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * @ignore
     */
    MapLine.prototype.createLine = function () {
        this.line = new _core_elements_Polyline__WEBPACK_IMPORTED_MODULE_7__["Polyline"]();
    };
    /**
     * Converts a position within the line (0-1) to a physical point
     * coordinates.
     *
     * 0 indicates start of the line, 0.5 - middle, while 1 indicates the end.
     *
     * @param position  Position (0-1)
     * @return Coordinates
     */
    MapLine.prototype.positionToPoint = function (position) {
        if (this.shortestDistance) {
            return this.series.chart.projection.positionToPoint(this.multiGeoLine, position);
        }
        else {
            if (this.line) {
                return this.line.positionToPoint(position);
            }
        }
        return { x: 0, y: 0, angle: 0 };
    };
    Object.defineProperty(MapLine.prototype, "multiGeoLine", {
        /**
         * @return Coordinates
         */
        get: function () {
            var multiGeoLine = this.getPropertyValue("multiGeoLine");
            if (!multiGeoLine && this.dataItem && this.dataItem.multiGeoLine) {
                multiGeoLine = this.dataItem.multiGeoLine;
            }
            return multiGeoLine;
        },
        /**
         * A collection of X/Y coordinates for a multi-segment line. E.g.:
         *
         * ```JSON
         * [
         *   // Segment 1
         *   [
         *     { longitude: 3.121, latitude: 0.58 },
         *     { longitude: -5.199, latitude: 21.223 }
         *   ],
         *
         *   // Segment 2
         *   [
         *     { longitude: -5.199, latitude: 21.223 },
         *     { longitude: -12.9, latitude: 25.85 }
         *   ]
         * ]
         * ```
         *
         * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.5} GeoJSON MultiLineString reference
         * @param multiGeoLine  Coordinates
         */
        set: function (multiGeoLine) {
            if (multiGeoLine && multiGeoLine.length > 0) {
                this.setPropertyValue("multiGeoLine", _Geo__WEBPACK_IMPORTED_MODULE_14__["normalizeMultiline"](multiGeoLine), true);
                var multiLine = _MapUtils__WEBPACK_IMPORTED_MODULE_15__["multiGeoLineToMultiLine"](multiGeoLine);
                this.setPropertyValue("multiLine", multiLine);
                this.updateExtremes();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLine.prototype, "multiLine", {
        /**
         * @return Coordinates
         */
        get: function () {
            var multiLine = this.getPropertyValue("multiLine");
            if (!multiLine && this.dataItem && this.dataItem.multiLine) {
                multiLine = this.dataItem.multiLine;
            }
            return multiLine;
        },
        /**
         * A collection of X/Y coordinates for a multi-segment line. E.g.:
         *
         * ```JSON
         * [
         *   // Segment 1
         *   [
         *     [ 100, 150 ],
         *     [ 120, 200 ]
         *   ],
         *
         *   // Segment 2
         *   [
         *     [ 120, 200 ],
         *     [ 150, 100 ]
         *   ]
         * ]
         * ```
         *
         * @param multiLine  Coordinates
         */
        set: function (multiLine) {
            this.setPropertyValue("multiLine", multiLine);
            this.multiGeoLine = _MapUtils__WEBPACK_IMPORTED_MODULE_15__["multiLineToGeo"](multiLine);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLine.prototype, "imagesToConnect", {
        /**
         * @return {MapImages[]}
         */
        get: function () {
            return this.getPropertyValue("imagesToConnect");
        },
        /**
         * Instead of setting longitudes/latitudes you can set an array of images
         * which will be connected by the line.
         *
         * Parameter is an array that can hold string `id`'s to of the images, or
         * references to actual [[MapImage]] objects.
         *
         * @param images  Images
         */
        set: function (images) {
            var _this = this;
            this.setPropertyValue("imagesToConnect", images, true);
            this.handleImagesToConnect();
            if (this.series) {
                var chart = this.series.chart;
                if (chart) {
                    chart.series.each(function (series) {
                        if (series instanceof _MapImageSeries__WEBPACK_IMPORTED_MODULE_4__["MapImageSeries"]) {
                            if (!series.isReady()) {
                                _this._disposers.push(series.events.on("ready", _this.handleImagesToConnect, _this, false));
                            }
                        }
                    });
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    MapLine.prototype.handleImagesToConnect = function () {
        var e_1, _a;
        var _this = this;
        if (this.imagesToConnect) {
            var segment = [];
            var multiGeoLine = [segment];
            var _loop_1 = function (image) {
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isString"](image)) {
                    var chart = this_1.series.chart;
                    if (chart) {
                        chart.series.each(function (series) {
                            if (series instanceof _MapImageSeries__WEBPACK_IMPORTED_MODULE_4__["MapImageSeries"]) {
                                var img = series.getImageById(image);
                                if (img) {
                                    image = img;
                                }
                            }
                        });
                    }
                }
                if (image instanceof _MapImage__WEBPACK_IMPORTED_MODULE_3__["MapImage"]) {
                    segment.push({ longitude: image.longitude, latitude: image.latitude });
                    if (!this_1._imageListeners[image.uid]) {
                        var disposer = image.events.on("propertychanged", function (event) {
                            if (event.property == "longitude" || event.property == "latitude") {
                                _this.handleImagesToConnect();
                                _this.invalidate();
                            }
                        }, this_1, false);
                        this_1._imageListeners[image.uid] = disposer;
                        this_1._disposers.push(disposer);
                    }
                }
            };
            var this_1 = this;
            try {
                for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(this.imagesToConnect), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var image = _c.value;
                    _loop_1(image);
                }
            }
            catch (e_1_1) { e_1 = { error: e_1_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_1) throw e_1.error; }
            }
            this.multiGeoLine = multiGeoLine;
        }
    };
    /**
     * (Re)validates the line, effectively forcing it to redraw.
     *
     * @ignore Exclude from docs
     */
    MapLine.prototype.validate = function () {
        var chart = this.series.chart;
        if (this.multiLine) {
            if (!this.shortestDistance) {
                var convertedPoints = [];
                for (var i = 0, len = this.multiLine.length; i < len; i++) {
                    var segment = this.multiLine[i];
                    var convertedSegmentPoints = [];
                    for (var s = 0, slen = segment.length; s < slen; s++) {
                        var geoPoint = segment[s];
                        var point = this.series.chart.projection.convert({ longitude: geoPoint[0], latitude: geoPoint[1] });
                        convertedSegmentPoints.push(point);
                    }
                    convertedPoints.push(convertedSegmentPoints);
                }
                this.line.segments = convertedPoints;
            }
            else {
                chart.projection.d3Projection.precision(this.precision);
                this.line.path = chart.projection.d3Path(this.getFeature());
            }
            if (this._arrow) {
                this._arrow.validatePosition();
            }
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](this.lineObjects.iterator(), function (x) {
                x.validatePosition();
            });
            this.handleGlobalScale();
        }
        else if (this.imagesToConnect) {
            this.handleImagesToConnect();
        }
        _super.prototype.validate.call(this);
    };
    /**
     * @ignore
     */
    MapLine.prototype.getFeature = function () {
        if (this.multiLine && this.multiLine.length > 0 && this.multiLine[0] && this.multiLine[0].length > 0) {
            return { "type": "Feature", geometry: { type: "MultiLineString", coordinates: this.multiLine } };
        }
    };
    /**
     * @ignore Exclude from docs
     */
    MapLine.prototype.measureElement = function () {
        // Overriding, just to avoid extra measure
    };
    Object.defineProperty(MapLine.prototype, "shortestDistance", {
        /**
         * @return Real path?
         */
        get: function () {
            return this.getPropertyValue("shortestDistance");
        },
        /**
         * The line should take the shortest path over the globe.
         *
         * Enabling this will make the line look differently in different
         * projections. Only `MapLine` supports this setting, `MapArc` and
         * `MapSplice` don't.
         *
         * @default true
         * @param value  Real path?
         */
        set: function (value) {
            this.setPropertyValue("shortestDistance", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLine.prototype, "lineObjects", {
        /**
         * List of separate line objects the line consists of.
         *
         * @readonly
         * @return List of line objects
         */
        get: function () {
            if (!this._lineObjects) {
                this._lineObjects = new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__["ListTemplate"](new _MapLineObject__WEBPACK_IMPORTED_MODULE_2__["MapLineObject"]());
                this._lineObjects.events.on("inserted", this.handleLineObjectAdded, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__["ListDisposer"](this._lineObjects));
                this._disposers.push(this._lineObjects.template);
            }
            return this._lineObjects;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Decorate a [[LineObject]] when it is added to the line.
     *
     * @param event  Event
     */
    MapLine.prototype.handleLineObjectAdded = function (event) {
        var mapLineObject = event.newValue;
        mapLineObject.mapLine = this;
        mapLineObject.shouldClone = false;
        mapLineObject.parent = this;
    };
    Object.defineProperty(MapLine.prototype, "arrow", {
        /**
         * @return Arrow element
         */
        get: function () {
            if (!this._arrow) {
                var arrow = this.createChild(_MapLineObject__WEBPACK_IMPORTED_MODULE_2__["MapLineObject"]);
                arrow.shouldClone = false;
                arrow.width = 8;
                arrow.height = 10;
                arrow.mapLine = this;
                arrow.position = 0.5;
                var triangle = arrow.createChild(_core_elements_Triangle__WEBPACK_IMPORTED_MODULE_5__["Triangle"]);
                //triangle.shouldClone = false;
                triangle.fillOpacity = 1;
                triangle.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["percent"])(100);
                triangle.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["percent"])(100);
                triangle.rotation = 90;
                triangle.horizontalCenter = "middle";
                triangle.verticalCenter = "middle";
                this._arrow = arrow;
            }
            return this._arrow;
        },
        /**
         * A [[MapLineObject]] to use as an option arrowhead on the line.
         *
         * Just accessing this property will create a default arrowhead on the line
         * automatically.
         *
         * @param arrow  Arrow element
         */
        set: function (arrow) {
            this._arrow = arrow;
            arrow.mapLine = this;
            arrow.parent = this;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies line properties and other attributes, like arrow, from another
     * instance of [[MapLine]].
     *
     * @param source  Source map line
     */
    MapLine.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.line.copyFrom(source.line);
        this.lineObjects.copyFrom(source.lineObjects);
        if (source._arrow) {
            this.arrow = source.arrow.clone();
        }
    };
    Object.defineProperty(MapLine.prototype, "latitude", {
        /**
         * Latitude of the line center.
         *
         * @readonly
         * @return Latitude
         */
        get: function () {
            return this.north + (this.south - this.north) / 2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLine.prototype, "longitude", {
        /**
         * Longitude of the line center.
         *
         * @readonly
         * @return Latitude
         */
        get: function () {
            return this.east + (this.west - this.east) / 2;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * X coordinate for the slice tooltip.
     *
     * @ignore
     * @return X
     */
    MapLine.prototype.getTooltipX = function () {
        var x = this.getPropertyValue("tooltipX");
        if (!(x instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["Percent"])) {
            x = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["percent"])(50);
        }
        if (x instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["Percent"]) {
            return this.positionToPoint(x.value).x;
        }
        else {
            return 0;
        }
    };
    /**
     * Y coordinate for the slice tooltip.
     *
     * @ignore
     * @return Y
     */
    MapLine.prototype.getTooltipY = function () {
        var y = this.getPropertyValue("tooltipY");
        if (!(y instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["Percent"])) {
            y = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["percent"])(50);
        }
        if (y instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["Percent"]) {
            return this.positionToPoint(y.value).y;
        }
        else {
            return 0;
        }
    };
    Object.defineProperty(MapLine.prototype, "precision", {
        /**
         * @return Precision
         */
        get: function () {
            return this.getPropertyValue("precision");
        },
        /**
         * When line is plotted, if its `shortestDistance` is set to `true` it is
         * bent according to the used projection, to depict the shortest distance how
         * it would go on the actual land.
         *
         * `precision` introduces a setting which can control when such bending
         * occurs.
         *
         * If the distance (in degrees) between line start and end points
         * is less than `precision`, no bending will take place and the line will be
         * straight.
         *
         * Set to large number (e.g. 10000) for perfectly straight line.
         *
         * @since 4.9.1
         * @default 0.1
         * @param  value  Precision
         */
        set: function (value) {
            this.setPropertyValue("precision", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return MapLine;
}(_MapObject__WEBPACK_IMPORTED_MODULE_1__["MapObject"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses["MapLine"] = MapLine;
//# sourceMappingURL=MapLine.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineObject.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineObject.js ***!
  \********************************************************************************/
/*! exports provided: MapLineObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLineObject", function() { return MapLineObject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Map line module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a line on the map.
 *
 * @see {@link IMapLineObjectEvents} for a list of available events
 * @see {@link IMapLineObjectAdapters} for a list of available Adapters
 */
var MapLineObject = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapLineObject, _super);
    /**
     * Constructor
     */
    function MapLineObject() {
        var _this = _super.call(this) || this;
        _this.adjustRotation = true;
        _this.className = "MapLineObject";
        _this.isMeasured = false;
        _this.layout = "none";
        _this.applyTheme();
        return _this;
    }
    /**
     * (Re)validates element's position.
     *
     * @ignore Exclude from docs
     */
    MapLineObject.prototype.validatePosition = function () {
        var mapLine = this.mapLine;
        if (mapLine) {
            var point = mapLine.positionToPoint(this.position);
            this.x = point.x;
            this.y = point.y;
            if (this.adjustRotation) {
                this.rotation = point.angle;
            }
            var dataItem = this.mapLine.dataItem;
            if (dataItem) {
                var series = this.mapLine.dataItem.component;
                this.scale = 1 / series.scale;
            }
            // hide out of bounds
            if (mapLine.shortestDistance) {
                var projection = this.mapLine.series.chart.projection;
                var geoPoint = projection.positionToGeoPoint(mapLine.multiGeoLine, this.position);
                var visible = projection.d3Path({ type: 'Point', coordinates: [geoPoint.longitude, geoPoint.latitude] });
                if (!visible) {
                    this.__disabled = true;
                }
                else {
                    this.__disabled = false;
                }
            }
        }
        _super.prototype.validatePosition.call(this);
    };
    Object.defineProperty(MapLineObject.prototype, "position", {
        /**
         * @return Position within the line
         */
        get: function () {
            return this.getPropertyValue("position");
        },
        /**
         * Sets object's relative position (0-1) within the line.
         *
         * `0` will place the object at the beginning of the line. `1` - at the end.
         *
         * Any intermediate number will place the object at some point within the
         * line.
         *
         * @param value  Position within the line (0-1)
         */
        set: function (value) {
            this.setPropertyValue("position", value, false, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLineObject.prototype, "adjustRotation", {
        /**
         * @return Auto-rotate
         */
        get: function () {
            return this.getPropertyValue("adjustRotation");
        },
        /**
         * If set to `true`, the object will be automatically rotated to face the
         * direction of the line at the specific position.
         *
         * This allows creating images that has its "front" always facing the logical
         * direction of the line.
         *
         * @default false
         * @param value  Auto-rotate
         */
        set: function (value) {
            this.setPropertyValue("adjustRotation", value, false, true);
        },
        enumerable: true,
        configurable: true
    });
    return MapLineObject;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["MapLineObject"] = MapLineObject;
//# sourceMappingURL=MapLineObject.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineSeries.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineSeries.js ***!
  \********************************************************************************/
/*! exports provided: MapLineSeriesDataItem, MapLineSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLineSeriesDataItem", function() { return MapLineSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapLineSeries", function() { return MapLineSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js");
/* harmony import */ var _MapLine__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapLine */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLine.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _MapUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MapUtils */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/**
 * Map line series module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapLineSeries]]
 * @see {@link DataItem}
 */
var MapLineSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapLineSeriesDataItem, _super);
    /**
     * Constructor
     */
    function MapLineSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapLineSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    MapLineSeriesDataItem.prototype.getFeature = function () {
        if (this.multiLine && this.multiLine.length > 0) {
            return { "type": "Feature", geometry: { type: "MultiLineString", coordinates: this.multiLine } };
        }
    };
    Object.defineProperty(MapLineSeriesDataItem.prototype, "mapLine", {
        /**
         * A [[MapLine]] element related to this data item.
         *
         * @readonly
         * @return Element
         */
        get: function () {
            var _this = this;
            if (!this._mapLine) {
                var mapLine_1 = this.component.mapLines.create();
                this._mapLine = mapLine_1;
                this.addSprite(mapLine_1);
                this._disposers.push(mapLine_1);
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                    if (_this.component) {
                        _this.component.mapLines.removeValue(mapLine_1);
                    }
                }));
                this.mapObject = mapLine_1;
            }
            return this._mapLine;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLineSeriesDataItem.prototype, "line", {
        /**
         * @return Coordinates
         */
        get: function () {
            return this._line;
        },
        /**
         * A collection of X/Y coordinates for a single-segment line. E.g.:
         *
         * ```JSON
         * [
         *   [ 100, 150 ],
         *   [ 120, 200 ]
         * ]
         * ```
         *
         * @param line  Coordinates
         */
        set: function (line) {
            this._line = line;
            this.multiLine = [line];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLineSeriesDataItem.prototype, "multiLine", {
        /**
         * @return Coordinates
         */
        get: function () {
            return this._multiLine;
        },
        /**
         * A collection of X/Y coordinates for a multi-segment line. E.g.:
         *
         * ```JSON
         * [
         *   // Segment 1
         *   [
         *     [ 100, 150 ],
         *     [ 120, 200 ]
         *   ],
         *
         *   // Segment 2
         *   [
         *     [ 120, 200 ],
         *     [ 150, 100 ]
         *   ]
         * ]
         * ```
         *
         * @param multiLine  Coordinates
         */
        set: function (multiLine) {
            this._multiLine = multiLine;
            this._multiGeoLine = _MapUtils__WEBPACK_IMPORTED_MODULE_5__["multiLineToGeo"](multiLine);
            this.updateExtremes();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLineSeriesDataItem.prototype, "geoLine", {
        /**
         * @return Coordinates
         */
        get: function () {
            return this._geoLine;
        },
        /**
         * A collection of lat/long coordinates for a single-segment line. E.g.:
         *
         * ```JSON
         * [
         *   { longitude: 3.121, latitude: 0.58 },
         *   { longitude: -5.199, latitude: 21.223 }
         * ]
         * ```
         *
         * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.4} GeoJSON LineString reference
         * @param geoLine  Coordinates
         */
        set: function (geoLine) {
            this._geoLine = geoLine;
            this.multiLine = _MapUtils__WEBPACK_IMPORTED_MODULE_5__["multiGeoLineToMultiLine"]([geoLine]);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapLineSeriesDataItem.prototype, "multiGeoLine", {
        /**
         * @return Coordinates
         */
        get: function () {
            return this._multiGeoLine;
        },
        /**
         * A collection of X/Y coordinates for a multi-segment line. E.g.:
         *
         * ```JSON
         * [
         *   // Segment 1
         *   [
         *     { longitude: 3.121, latitude: 0.58 },
         *     { longitude: -5.199, latitude: 21.223 }
         *   ],
         *
         *   // Segment 2
         *   [
         *     { longitude: -5.199, latitude: 21.223 },
         *     { longitude: -12.9, latitude: 25.85 }
         *   ]
         * ]
         * ```
         *
         * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.5} GeoJSON MultiLineString reference
         * @param multiGeoLine  Coordinates
         */
        set: function (multiGeoLine) {
            this._multiGeoLine = multiGeoLine;
            this.multiLine = _MapUtils__WEBPACK_IMPORTED_MODULE_5__["multiGeoLineToMultiLine"](multiGeoLine);
        },
        enumerable: true,
        configurable: true
    });
    return MapLineSeriesDataItem;
}(_MapSeries__WEBPACK_IMPORTED_MODULE_1__["MapSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A series of map line series.
 *
 * @see {@link IMapLineSeriesEvents} for a list of available Events
 * @see {@link IMapLineSeriesAdapters} for a list of available Adapters
 * @important
 */
var MapLineSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapLineSeries, _super);
    /**
     * Constructor
     */
    function MapLineSeries() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "MapLineSeries";
        // Set data fields
        _this.dataFields.multiLine = "multiLine";
        _this.dataFields.line = "line";
        _this.dataFields.geoLine = "geoLine";
        _this.dataFields.multiGeoLine = "multiGeoLine";
        _this.ignoreBounds = true;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    MapLineSeries.prototype.createDataItem = function () {
        return new MapLineSeriesDataItem();
    };
    /**
     * (Re)validates series data, effectively causing the whole series to be
     * redrawn.
     *
     * @ignore Exclude from docs
     */
    MapLineSeries.prototype.validateData = function () {
        // process geoJSON and created map objects
        if (this.useGeodata || this.geodata) {
            var geoJSON = this.chart.geodata;
            if (geoJSON) {
                var features = void 0;
                if (geoJSON.type == "FeatureCollection") {
                    features = geoJSON.features;
                }
                else if (geoJSON.type == "Feature") {
                    features = [geoJSON];
                }
                else if (["Point", "LineString", "Polygon", "MultiPoint", "MultiLineString", "MultiPolygon"].indexOf(geoJSON.type) != -1) {
                    features = [{ geometry: geoJSON }];
                }
                else {
                    console.log("nothing found in geoJSON");
                }
                if (features) {
                    var _loop_1 = function (i, len) {
                        var feature = features[i];
                        var geometry = feature.geometry;
                        if (geometry) {
                            var type = geometry.type;
                            var id_1 = feature.id;
                            if (type == "LineString" || type == "MultiLineString") {
                                if (!this_1.checkInclude(this_1.include, this_1.exclude, id_1)) {
                                    return "continue";
                                }
                                var coordinates = geometry.coordinates;
                                var dataObject = _core_utils_Array__WEBPACK_IMPORTED_MODULE_6__["find"](this_1.data, function (value, i) {
                                    return value.id == id_1;
                                });
                                if (type == "LineString") {
                                    coordinates = [coordinates];
                                }
                                if (!dataObject) {
                                    dataObject = { multiLine: coordinates, id: id_1, madeFromGeoData: true };
                                    this_1.data.push(dataObject);
                                }
                                else {
                                    if (!dataObject.multiLine) {
                                        dataObject.multiLine = coordinates;
                                    }
                                }
                                // copy properties data to datacontext
                                _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["softCopyProperties"](feature.properties, dataObject);
                            }
                        }
                    };
                    var this_1 = this;
                    for (var i = 0, len = features.length; i < len; i++) {
                        _loop_1(i, len);
                    }
                }
            }
        }
        _super.prototype.validateData.call(this);
    };
    Object.defineProperty(MapLineSeries.prototype, "mapLines", {
        /**
         * A list of lines in the series.
         *
         * @return Lines
         */
        get: function () {
            if (!this._mapLines) {
                var lineTemplate = this.createLine();
                var mapLines = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](lineTemplate);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](mapLines));
                this._disposers.push(mapLines.template);
                mapLines.events.on("inserted", this.handleObjectAdded, this, false);
                this._mapLines = mapLines;
                this._mapObjects = mapLines;
            }
            return this._mapLines;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a new line instance of suitable type.
     *
     * @return New line
     */
    MapLineSeries.prototype.createLine = function () {
        return new _MapLine__WEBPACK_IMPORTED_MODULE_2__["MapLine"]();
    };
    /**
     * (Re)validates the series
     *
     * @ignore Exclude from docs
     */
    MapLineSeries.prototype.validate = function () {
        this.dataItems.each(function (dataItem) {
            _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["used"](dataItem.mapLine);
        });
        _super.prototype.validate.call(this);
        this.mapLines.each(function (mapLine) {
            mapLine.validate();
        });
    };
    /**
     * Copies all properties from another instance of [[Series]].
     *
     * @param source  Source series
     */
    MapLineSeries.prototype.copyFrom = function (source) {
        this.mapLines.template.copyFrom(source.mapLines.template);
        _super.prototype.copyFrom.call(this, source);
    };
    /**
     * @ignore
     */
    MapLineSeries.prototype.getFeatures = function () {
        var _this = this;
        var features = [];
        this.dataItems.each(function (dataItem) {
            var feature = dataItem.getFeature();
            if (feature) {
                features.push(feature);
            }
        });
        this.mapLines.each(function (mapLine) {
            if (_this.dataItems.indexOf(mapLine._dataItem) == -1) {
                var feature = mapLine.getFeature();
                if (feature) {
                    features.push(feature);
                }
            }
        });
        return features;
    };
    /**
     * returns MapLine by id
     * @param line id
     * @return {MapLine}
     */
    MapLineSeries.prototype.getLineById = function (id) {
        return _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["find"](this.mapLines.iterator(), function (mapLine) {
            var dataContext = mapLine.dataItem.dataContext;
            return dataContext.id == id;
        });
    };
    return MapLineSeries;
}(_MapSeries__WEBPACK_IMPORTED_MODULE_1__["MapSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["MapLineSeries"] = MapLineSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["MapLineSeriesDataItem"] = MapLineSeriesDataItem;
//# sourceMappingURL=MapLineSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapObject.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapObject.js ***!
  \****************************************************************************/
/*! exports provided: MapObject */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapObject", function() { return MapObject; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Map object module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for all map objects: lines, images, etc.
 *
 * @see {@link IMapObjectEvents} for a list of available events
 * @see {@link IMapObjectAdapters} for a list of available Adapters
 */
var MapObject = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapObject, _super);
    /**
     * Constructor
     */
    function MapObject() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "MapObject";
        // Set defaults
        _this.isMeasured = false;
        _this.layout = "none";
        _this.clickable = true;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * (Re)validates this object, forcing it to redraw.
     *
     * @ignore Exclude from docs
     */
    MapObject.prototype.validate = function () {
        if (this.series && this.series.itemReaderText) {
            this.readerTitle = this.series.itemReaderText;
        }
        _super.prototype.validate.call(this);
    };
    /**
     * Updates the item's bounding coordinates: coordinates of the East, West,
     * North, and South-most points.
     *
     * @ignore Exclude from docs
     */
    MapObject.prototype.updateExtremes = function () {
        var feature = this.getFeature();
        if (feature) {
            var geometry = feature.geometry;
            if (geometry) {
                var bounds = d3_geo__WEBPACK_IMPORTED_MODULE_4__["geoBounds"](geometry);
                var west = bounds[0][0];
                var south = bounds[0][1];
                var north = bounds[1][1];
                var east = bounds[1][0];
                var changed = false;
                if (north != this.north) {
                    this._north = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["round"](north, 8);
                    changed = true;
                }
                if (south != this.south) {
                    this._south = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["round"](south);
                    changed = true;
                }
                if (east != this.east) {
                    this._east = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["round"](east);
                    changed = true;
                }
                if (west != this.west) {
                    this._west = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["round"](west);
                    changed = true;
                }
                if (changed) {
                    this.dispatch("geoBoundsChanged");
                    if (this.series) {
                        this.series.invalidateDataItems();
                    }
                }
            }
        }
    };
    /**
     * @ignore
     */
    MapObject.prototype.getFeature = function () {
        return {};
    };
    Object.defineProperty(MapObject.prototype, "east", {
        /**
         * Longitude of the East-most point of the element.
         */
        get: function () {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](this._east)) {
                return this._east;
            }
            else if (this.dataItem) {
                return this.dataItem.east;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapObject.prototype, "west", {
        /**
         * Longitude of the West-most point of the element.
         */
        get: function () {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](this._west)) {
                return this._west;
            }
            else if (this.dataItem) {
                return this.dataItem.west;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapObject.prototype, "south", {
        /**
         * Latitude of the South-most point of the element.
         */
        get: function () {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](this._south)) {
                return this._south;
            }
            else if (this.dataItem) {
                return this.dataItem.south;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapObject.prototype, "north", {
        /**
         * Latitude of the North-most point of the element.
         */
        get: function () {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](this._north)) {
                return this._north;
            }
            else if (this.dataItem) {
                return this.dataItem.north;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Shows the element's [[Tooltip]].
     *
     * A tooltip will be populated using text templates in either `tooltipHTML` or
     * `tooltipText` as well as data in `tooltipDataItem`.
     *
     * @see {@link Tooltip}
     * @param optional point (sprite-related) to which tooltip must point.
     * @return returns true if the tooltip was shown and false if it wasn't (no text was found)
     */
    MapObject.prototype.showTooltip = function (point) {
        var res = _super.prototype.showTooltip.call(this, point);
        if (res && this.showTooltipOn == "always" && !this.series.chart.events.has("mappositionchanged", this.handleTooltipMove, this)) {
            this.addDisposer(this.series.chart.events.on("mappositionchanged", this.handleTooltipMove, this));
        }
        return res;
    };
    MapObject.prototype.handleTooltipMove = function (ev) {
        if (!this.tooltip.isHidden) {
            this.showTooltip();
        }
    };
    /**
     * Sets a [[DataItem]].
     * @param dataItem DataItem
     */
    MapObject.prototype.setDataItem = function (dataItem) {
        _super.prototype.setDataItem.call(this, dataItem);
        this.applyAccessibility();
    };
    return MapObject;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["MapObject"] = MapObject;
//# sourceMappingURL=MapObject.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygon.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygon.js ***!
  \*****************************************************************************/
/*! exports provided: MapPolygon */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapPolygon", function() { return MapPolygon; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapObject__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapObject */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapObject.js");
/* harmony import */ var _core_elements_Polygon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Polygon */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polygon.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var polylabel__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! polylabel */ "./node_modules/polylabel/polylabel.js");
/* harmony import */ var polylabel__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(polylabel__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _MapUtils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./MapUtils */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/**
 * Map polygon module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */








/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw a polygon on the map.
 *
 * @see {@link IMapPolygonEvents} for a list of available events
 * @see {@link IMapPolygonAdapters} for a list of available Adapters
 */
var MapPolygon = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapPolygon, _super);
    /**
     * Constructor
     */
    function MapPolygon() {
        var _this = _super.call(this) || this;
        _this.className = "MapPolygon";
        _this.polygon = _this.createChild(_core_elements_Polygon__WEBPACK_IMPORTED_MODULE_2__["Polygon"]);
        _this.polygon.shouldClone = false;
        _this.polygon.applyOnClones = true;
        _this.setPropertyValue("precision", 0.5);
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__["InterfaceColorSet"]();
        _this.fill = interfaceColors.getFor("secondaryButton");
        _this.stroke = interfaceColors.getFor("secondaryButtonStroke");
        _this.strokeOpacity = 1;
        _this.tooltipPosition = "pointer";
        _this.nonScalingStroke = true;
        _this.applyTheme();
        return _this;
    }
    /**
     * @ignore
     */
    MapPolygon.prototype.getFeature = function () {
        if (this.multiPolygon && this.multiPolygon.length > 0) {
            return { "type": "Feature", geometry: { type: "MultiPolygon", coordinates: this.multiPolygon } };
        }
    };
    Object.defineProperty(MapPolygon.prototype, "multiGeoPolygon", {
        /**
         * @return Polygon coordinates
         */
        get: function () {
            var multiGeoPolygon = this.getPropertyValue("multiGeoPolygon");
            if (!multiGeoPolygon && this.dataItem) {
                multiGeoPolygon = this.dataItem.multiGeoPolygon;
            }
            return multiGeoPolygon;
        },
        /**
         * Set of coordinates for the polygon.
         *
         * @param multiGeoPolygon  Polygon coordinates
         */
        set: function (multiGeoPolygon) {
            this.setPropertyValue("multiGeoPolygon", multiGeoPolygon, true);
            this.multiPolygon = _MapUtils__WEBPACK_IMPORTED_MODULE_7__["multiGeoPolygonToMultipolygon"](multiGeoPolygon);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygon.prototype, "multiPolygon", {
        /**
         * @return Coordinates
         */
        get: function () {
            var multiPolygon = this.getPropertyValue("multiPolygon");
            if (!multiPolygon && this.dataItem) {
                multiPolygon = this.dataItem.multiPolygon;
            }
            return multiPolygon;
        },
        /**
         * A collection of X/Y coordinates for a multi-part polygon. E.g.:
         *
         * ```JSON
         * [
         *   // Part 1
         *   [
         *     [
         *       [ 100, 150 ],
         *       [ 120, 200 ],
         *       [ 150, 220 ],
         *       [ 170, 240 ],
         *       [ 100, 150 ]
         *     ]
         *   ],
         *
         *   // Part 2
         *   [
         *     [
         *       [ 300, 350 ],
         *       [ 320, 400 ],
         *       [ 350, 420 ],
         *       [ 370, 440 ],
         *       [ 300, 350 ]
         *     ]
         *   ]
         * ]
         * ```
         *
         * @param multiPolygon  Coordinates
         */
        set: function (multiPolygon) {
            if (this.setPropertyValue("multiPolygon", multiPolygon)) {
                this.updateExtremes();
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * (Re)validates the polygon, effectively redrawing it.
     *
     * @ignore Exclude from docs
     */
    MapPolygon.prototype.validate = function () {
        if (this.series) {
            var projection = this.series.chart.projection;
            var pathGenerator = projection.d3Path;
            if (this.multiPolygon) {
                if (this.series) {
                    var feature = { type: "MultiPolygon", coordinates: this.multiPolygon };
                    projection.d3Projection.precision(this.precision);
                    this.polygon.path = pathGenerator(feature);
                }
                if (this.series.calculateVisualCenter) {
                    var biggestArea = 0;
                    var biggestPolygon = this.multiPolygon[0];
                    if (this.multiPolygon.length > 1) {
                        for (var i = 0; i < this.multiPolygon.length; i++) {
                            var polygon = this.multiPolygon[i];
                            var area = d3_geo__WEBPACK_IMPORTED_MODULE_8__["geoArea"]({ type: "Polygon", coordinates: polygon });
                            if (area > biggestArea) {
                                biggestPolygon = polygon;
                                biggestArea = area;
                            }
                        }
                    }
                    var center = polylabel__WEBPACK_IMPORTED_MODULE_6___default()(biggestPolygon);
                    this._visualLongitude = center[0];
                    this._visualLatitude = center[1];
                }
                else {
                    this._visualLongitude = this.longitude;
                    this._visualLatitude = this.latitude;
                }
            }
        }
        _super.prototype.validate.call(this);
    };
    /**
     * @ignore Exclude from docs
     */
    MapPolygon.prototype.measureElement = function () {
        // Overriding, just to avoid extra measure
    };
    Object.defineProperty(MapPolygon.prototype, "latitude", {
        /**
         * Latitude of the geometrical center of the polygon.
         *
         * @readonly
         * @return Center latitude
         */
        get: function () {
            return this.north + (this.south - this.north) / 2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygon.prototype, "longitude", {
        /**
         * Longitude of the geometrical center of the polygon.
         *
         * @readonly
         * @return Center longitude
         */
        get: function () {
            return this.east + (this.west - this.east) / 2;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygon.prototype, "visualLatitude", {
        /**
         * @return  Latitude
         */
        get: function () {
            var latitude = this.getPropertyValue("visualLatitude");
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](latitude)) {
                return (latitude);
            }
            if (!this._adapterO) {
                return this._visualLatitude;
            }
            else {
                return this._adapterO.apply("visualLatitude", this._visualLatitude);
            }
        },
        /**
         * Latitude of the visual center of the polygon.
         *
         * It may (and probably won't) coincide with geometrical center.
         *
         * @since 4.3.0
         * @param  value  Latitude
         */
        set: function (value) {
            this.setPropertyValue("visualLatitude", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygon.prototype, "visualLongitude", {
        /**
         * @return  Longitude
         */
        get: function () {
            var longitude = this.getPropertyValue("visualLongitude");
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](longitude)) {
                return (longitude);
            }
            if (!this._adapterO) {
                return this._visualLongitude;
            }
            else {
                return this._adapterO.apply("visualLongitude", this._visualLongitude);
            }
        },
        /**
         * Longitude of the visual center of the polygon.
         *
         * It may (and probably won't) coincide with geometrical center.
         *
         * @since 4.3.0
         * @param  value  Longitude
         */
        set: function (value) {
            this.setPropertyValue("visualLongitude", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygon.prototype, "pixelWidth", {
        /**
         * Not 100% sure about this, as if we add something to MapPolygon this
         * won't be true, but otherwise we will get all 0 and the tooltip won't
         * be positioned properly
         * @hidden
         */
        /**
         * Element's width in pixels.
         *
         * @readonly
         * @return Width (px)
         */
        get: function () {
            return this.polygon.pixelWidth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygon.prototype, "pixelHeight", {
        /**
         * Element's height in pixels.
         *
         * @readonly
         * @return Width (px)
         */
        get: function () {
            return this.polygon.pixelHeight;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all properties from another instance of [[MapPolygon]].
     *
     * @param source  Source series
     */
    MapPolygon.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.polygon.copyFrom(source.polygon);
    };
    /**
     * @ignore
     */
    MapPolygon.prototype.updateExtremes = function () {
        _super.prototype.updateExtremes.call(this);
    };
    Object.defineProperty(MapPolygon.prototype, "boxArea", {
        /**
         * @ignore
         * used to sorth polygons from big to small
         */
        get: function () {
            return (this.north - this.south) * (this.east - this.west);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * X coordinate for the slice tooltip.
     *
     * @ignore
     * @return X
     */
    MapPolygon.prototype.getTooltipX = function () {
        return this.series.chart.projection.convert({ longitude: this.visualLongitude, latitude: this.visualLatitude }).x;
    };
    /**
     * Y coordinate for the slice tooltip.
     *
     * @ignore
     * @return Y
     */
    MapPolygon.prototype.getTooltipY = function () {
        return this.series.chart.projection.convert({ longitude: this.visualLongitude, latitude: this.visualLatitude }).y;
    };
    Object.defineProperty(MapPolygon.prototype, "precision", {
        get: function () {
            return this.getPropertyValue("precision");
        },
        /**
         * When polygon's sides are plotted, they are bent according to the used
         * projection.
         *
         * `precision` introduces a setting which can control when such bending
         * occurs.
         *
         * If the distance (in degrees) between two points of polygon's side is less
         * than `precision`, no bending will take place and the line will be straight.
         *
         * Set to large number (e.g. 10000) for perfectly straight lines on all
         * polygon's sides.
         *
         * @since 4.9.1
         * @default 0.5
         * @param  value  Precision
         */
        set: function (value) {
            this.setPropertyValue("precision", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return MapPolygon;
}(_MapObject__WEBPACK_IMPORTED_MODULE_1__["MapObject"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapPolygon"] = MapPolygon;
//# sourceMappingURL=MapPolygon.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygonSeries.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygonSeries.js ***!
  \***********************************************************************************/
/*! exports provided: MapPolygonSeriesDataItem, MapPolygonSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapPolygonSeriesDataItem", function() { return MapPolygonSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapPolygonSeries", function() { return MapPolygonSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js");
/* harmony import */ var _MapPolygon__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapPolygon */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygon.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _MapUtils__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./MapUtils */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/**
 * Map polygon series module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapPolygonSeries]]
 * @see {@link DataItem}
 */
var MapPolygonSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapPolygonSeriesDataItem, _super);
    /**
     * Constructor
     */
    function MapPolygonSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapPolygonSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    /**
     * @ignore
     */
    MapPolygonSeriesDataItem.prototype.getFeature = function () {
        if (this.multiPolygon && this.multiPolygon.length > 0) {
            return { "type": "Feature", geometry: { type: "MultiPolygon", coordinates: this.multiPolygon } };
        }
    };
    Object.defineProperty(MapPolygonSeriesDataItem.prototype, "mapPolygon", {
        /**
         * A [[MapPolygon]] element related to this data item.
         *
         * @readonly
         * @return Element
         */
        get: function () {
            var _this = this;
            if (!this._mapPolygon) {
                var mapPolygon_1 = this.component.mapPolygons.create();
                this._mapPolygon = mapPolygon_1;
                this.addSprite(mapPolygon_1);
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_9__["Disposer"](function () {
                    if (_this.component) {
                        _this.component.mapPolygons.removeValue(mapPolygon_1);
                    }
                }));
                this.mapObject = mapPolygon_1;
            }
            return this._mapPolygon;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygonSeriesDataItem.prototype, "polygon", {
        /**
         * @return Coordinates
         */
        get: function () {
            return this._polygon;
        },
        /**
         * A collection of X/Y coordinates for a single polygon. E.g.:
         *
         * ```JSON
         * [
         *   [
         *     [ 100, 150 ],
         *     [ 120, 200 ],
         *     [ 150, 200 ],
         *     [ 170, 240 ],
         *     [ 100, 150 ]
         *   ]
         * ]
         * ```
         *
         * @param polygon  Coordinates
         */
        set: function (polygon) {
            this._polygon = polygon;
            this.multiPolygon = [polygon];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygonSeriesDataItem.prototype, "multiPolygon", {
        /**
         * @return Coordinates
         */
        get: function () {
            return this._multiPolygon;
        },
        /**
         * A collection of X/Y coordinates for a multi-part polygon. E.g.:
         *
         * ```JSON
         * [
         *   // Part 1
         *   [
         *     [
         *       [ 100, 150 ],
         *       [ 120, 200 ],
         *       [ 150, 220 ],
         *       [ 170, 240 ],
         *       [ 100, 150 ]
         *     ]
         *   ],
         *
         *   // Part 2
         *   [
         *     [
         *       [ 300, 350 ],
         *       [ 320, 400 ],
         *       [ 350, 420 ],
         *       [ 370, 440 ],
         *       [ 300, 350 ]
         *     ]
         *   ]
         * ]
         * ```
         *
         * @param multiPolygon  Coordinates
         */
        set: function (multiPolygon) {
            this._multiPolygon = multiPolygon;
            this.updateExtremes();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygonSeriesDataItem.prototype, "geoPolygon", {
        /**
         * @return Coordinates
         */
        get: function () {
            return this._geoPolygon;
        },
        /**
         * A collection of lat/long coordinates for a single polygon. E.g.:
         *
         * ```JSON
         * [
         *   [
         *     { latitude: -10.0, longitude: -10.0 },
         *     { latitude: 10.0, longitude: -10.0 },
         *     { latitude: 10.0, longitude: 10.0 },
         *     { latitude: -10.0, longitude: -10.0 }
         *   ]
         * ]
         * ```
         *
         * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.6} GeoJSON Polygon reference
         * @param geoPolygon  Coordinates
         */
        set: function (geoPolygon) {
            this._geoPolygon = geoPolygon;
            this.multiGeoPolygon = [geoPolygon];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygonSeriesDataItem.prototype, "multiGeoPolygon", {
        /**
         * @return Coordinates
         */
        get: function () {
            return this._multiGeoPolygon;
        },
        /**
         * A collection of lat/long coordinates for a multi-part polygon. E.g.:
         *
         * ```JSON
         * [
         *   [
         *     [
         *       { longitude: 180.0, latitude: 40.0 },
         *       { longitude: 180.0, latitude: 50.0 },
         *       { longitude: 170.0, latitude: 50.0 },
         *       { longitude: 170.0, latitude: 40.0 },
         *       { longitude: 180.0, latitude: 40.0 }
         *     ]
         *   ],
         *   [
         *     [
         *       { longitude: -170.0, latitude: 40.0 },
         *       { longitude: -170.0, latitude: 50.0 },
         *       { longitude: -180.0, latitude: 50.0 },
         *       { longitude: -180.0, latitude: 40.0 },
         *       { longitude: -170.0, latitude: 40.0 }
         *     ]
         *   ]
         * ]
         * ```
         *
         * @see {@link https://tools.ietf.org/html/rfc7946#section-3.1.7} GeoJSON MultiPolygon reference
         * @param multiGeoPolygon  Coordinates
         */
        set: function (multiGeoPolygon) {
            this._multiGeoPolygon = multiGeoPolygon;
            this.multiPolygon = _MapUtils__WEBPACK_IMPORTED_MODULE_5__["multiGeoPolygonToMultipolygon"](multiGeoPolygon);
        },
        enumerable: true,
        configurable: true
    });
    return MapPolygonSeriesDataItem;
}(_MapSeries__WEBPACK_IMPORTED_MODULE_1__["MapSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A series of map polygon elements.
 *
 * @see {@link IMapPolygonSeriesEvents} for a list of available Events
 * @see {@link IMapPolygonSeriesAdapters} for a list of available Adapters
 * @important
 */
var MapPolygonSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapPolygonSeries, _super);
    /**
     * Constructor
     */
    function MapPolygonSeries() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Indicates if series should automatically calculate visual center of the
         * polygons (accessible via `visualLongitude` and `visualLatitude` properties
         * of the [[MapPolygon]]).
         *
         * @default false
         * @since 4.3.0
         */
        _this.calculateVisualCenter = false;
        _this.className = "MapPolygonSeries";
        // Set data fields
        _this.dataFields.multiPolygon = "multiPolygon";
        _this.dataFields.polygon = "polygon";
        _this.dataFields.geoPolygon = "geoPolygon";
        _this.dataFields.multiGeoPolygon = "multiGeoPolygon";
        _this.setPropertyValue("sortPolygonsBy", "area");
        _this.setPropertyValue("sortPolygonsReversed", false);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    MapPolygonSeries.prototype.createDataItem = function () {
        return new MapPolygonSeriesDataItem();
    };
    /**
     * @ignore
     */
    MapPolygonSeries.prototype.processIncExc = function () {
        this.mapPolygons.clear();
        _super.prototype.processIncExc.call(this);
    };
    /**
     * (Re)validates series data, effectively causing the whole series to be
     * redrawn.
     *
     * @ignore Exclude from docs
     */
    MapPolygonSeries.prototype.validateData = function () {
        // process geoJSON and created map objects
        if (this.useGeodata || this.geodata) {
            var geoJSON = !this._dataSources["geodata"] ? this.chart.geodata : undefined;
            if (this.geodata) {
                geoJSON = this.geodata;
            }
            if (geoJSON) {
                var features = void 0;
                if (geoJSON.type == "FeatureCollection") {
                    features = geoJSON.features;
                }
                else if (geoJSON.type == "Feature") {
                    features = [geoJSON];
                }
                else if (["Point", "LineString", "Polygon", "MultiPoint", "MultiLineString", "MultiPolygon"].indexOf(geoJSON.type) != -1) {
                    features = [{ geometry: geoJSON }];
                }
                else {
                    console.log("nothing found in geoJSON");
                }
                if (features) {
                    var _loop_1 = function (i, len) {
                        var feature = features[i];
                        var geometry = feature.geometry;
                        if (geometry) {
                            var type = geometry.type;
                            var id_1 = feature.id;
                            if (this_1.chart.geodataNames && this_1.chart.geodataNames[id_1]) {
                                feature.properties.name = this_1.chart.geodataNames[id_1];
                            }
                            if (type == "Polygon" || type == "MultiPolygon") {
                                if (!this_1.checkInclude(this_1.include, this_1.exclude, id_1)) {
                                    return "continue";
                                }
                                var coordinates = geometry.coordinates;
                                if (coordinates) {
                                    // make the same as MultiPolygon
                                    if (type == "Polygon") {
                                        coordinates = [coordinates];
                                    }
                                }
                                // find data object in user-provided data
                                var dataObject = _core_utils_Array__WEBPACK_IMPORTED_MODULE_6__["find"](this_1.data, function (value, i) {
                                    return value.id == id_1;
                                });
                                // create one if not found
                                if (!dataObject) {
                                    dataObject = { multiPolygon: coordinates, id: id_1, madeFromGeoData: true };
                                    this_1.data.push(dataObject);
                                }
                                // in case found
                                else {
                                    // if user-provided object doesn't have points data provided in any way:
                                    if (!dataObject.multiPolygon) {
                                        dataObject.multiPolygon = coordinates;
                                    }
                                }
                                // copy properties data to datacontext
                                _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["softCopyProperties"](feature.properties, dataObject);
                            }
                        }
                    };
                    var this_1 = this;
                    for (var i = 0, len = features.length; i < len; i++) {
                        _loop_1(i, len);
                    }
                }
            }
        }
        _super.prototype.validateData.call(this);
    };
    /**
     * (Re)validates the series
     *
     * @ignore Exclude from docs
     */
    MapPolygonSeries.prototype.validate = function () {
        _super.prototype.validate.call(this);
        this.dataItems.each(function (dataItem) {
            _core_utils_Utils__WEBPACK_IMPORTED_MODULE_7__["used"](dataItem.mapPolygon);
        });
        if (this.sortPolygonsBy != "none") {
            var sortBy_1 = this.sortPolygonsBy;
            var reversed_1 = this.sortPolygonsReversed;
            this.mapPolygons.sort(function (a, b) {
                var valA = "";
                var valB = "";
                var dirA = -1;
                var dirB = 1;
                switch (sortBy_1) {
                    case "area":
                        valA = a.boxArea;
                        valB = b.boxArea;
                        dirA = -1;
                        dirB = 1;
                        break;
                    case "name":
                        valA = a.dataItem.dataContext.name || "";
                        valB = b.dataItem.dataContext.name || "";
                        dirA = 1;
                        dirB = -1;
                        break;
                    case "id":
                        valA = a.dataItem.dataContext.id || "";
                        valB = b.dataItem.dataContext.id || "";
                        dirA = 1;
                        dirB = -1;
                        break;
                    case "latitude":
                        valA = reversed_1 ? a.south : a.north;
                        valB = reversed_1 ? b.south : b.north;
                        dirA = -1;
                        dirB = 1;
                        break;
                    case "longitude":
                        valA = reversed_1 ? a.east : a.west;
                        valB = reversed_1 ? b.east : b.west;
                        dirA = 1;
                        dirB = -1;
                        break;
                }
                if (valA < valB) {
                    return reversed_1 ? dirB : dirA;
                }
                if (valA > valB) {
                    return reversed_1 ? dirA : dirB;
                }
                return 0;
            });
            this.mapPolygons.each(function (mapPolygon, index) {
                mapPolygon.validate();
                // makes small go first to avoid hover problems with IE
                if (!mapPolygon.zIndex && !mapPolygon.propertyFields.zIndex) {
                    mapPolygon.zIndex = 1000000 - index;
                }
            });
        }
    };
    Object.defineProperty(MapPolygonSeries.prototype, "mapPolygons", {
        /**
         * List of polygon elements in the series.
         *
         * @return Polygon list
         */
        get: function () {
            if (!this._mapPolygons) {
                var polygonTemplate = new _MapPolygon__WEBPACK_IMPORTED_MODULE_2__["MapPolygon"]();
                var mapPolygons = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](polygonTemplate);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](mapPolygons));
                this._disposers.push(mapPolygons.template);
                mapPolygons.template.focusable = true;
                mapPolygons.events.on("inserted", this.handleObjectAdded, this, false);
                this._mapPolygons = mapPolygons;
                this._mapObjects = mapPolygons;
            }
            return this._mapPolygons;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * returns MapPolygon by id in geoJSON file
     * @param polygon id
     * @return {MapPolygon}
     */
    MapPolygonSeries.prototype.getPolygonById = function (id) {
        return _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["find"](this.mapPolygons.iterator(), function (mapPolygon) {
            var dataContext = mapPolygon.dataItem.dataContext;
            return dataContext.id == id;
        });
    };
    /**
     * Copies all properties from another instance of [[Series]].
     *
     * @param source  Source series
     */
    MapPolygonSeries.prototype.copyFrom = function (source) {
        this.mapPolygons.template.copyFrom(source.mapPolygons.template);
        _super.prototype.copyFrom.call(this, source);
    };
    /**
     * @ignore
     */
    MapPolygonSeries.prototype.getFeatures = function () {
        var _this = this;
        var features = [];
        this.dataItems.each(function (dataItem) {
            var feature = dataItem.getFeature();
            if (feature) {
                features.push(feature);
            }
        });
        this.mapPolygons.each(function (mapPolygon) {
            if (_this.dataItems.indexOf(mapPolygon._dataItem) == -1) {
                var feature = mapPolygon.getFeature();
                if (feature) {
                    features.push(feature);
                }
            }
        });
        return features;
    };
    Object.defineProperty(MapPolygonSeries.prototype, "sortPolygonsBy", {
        /**
         * @return How to sort map polygons
         */
        get: function () {
            return this.getPropertyValue("sortPolygonsBy");
        },
        /**
         * How to order polygons in actual SVG document. Affects selection order
         * using TAB key.
         *
         * Available options: `"area"` (default), `"name"`, `"longitude"`,
         * `"latitude"`, `"id"`, and `"none"`.
         *
         * @default area
         * @since 4.9.36
         * @param value  How to sort map polygons
         */
        set: function (value) {
            if (this.setPropertyValue("sortPolygonsBy", value)) {
                this.invalidateData();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapPolygonSeries.prototype, "sortPolygonsReversed", {
        /**
         * @return Reverse polygon sort direction
         */
        get: function () {
            return this.getPropertyValue("sortPolygonsReversed");
        },
        /**
         * If `sortPolygonsBy` is set to something other than `"none"`, polygons
         * will be sorted by the given parameter, using natural sort direction.
         *
         * Setting `sortPolygonsReversed = true` will reverse this direction.
         *
         * @default false
         * @since 4.9.36
         * @param value  Reverse polygon sort direction
         */
        set: function (value) {
            if (this.setPropertyValue("sortPolygonsReversed", value)) {
                this.invalidateData();
            }
        },
        enumerable: true,
        configurable: true
    });
    return MapPolygonSeries;
}(_MapSeries__WEBPACK_IMPORTED_MODULE_1__["MapSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["MapPolygonSeries"] = MapPolygonSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["MapPolygonSeriesDataItem"] = MapPolygonSeriesDataItem;
//# sourceMappingURL=MapPolygonSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js ***!
  \****************************************************************************/
/*! exports provided: MapSeriesDataItem, MapSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapSeriesDataItem", function() { return MapSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapSeries", function() { return MapSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _series_Series__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../series/Series */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/**
 * Map series module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapSeries]].
 *
 * @see {@link DataItem}
 */
var MapSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapSeriesDataItem, _super);
    /**
     * Constructor
     */
    function MapSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapSeriesDataItem";
        _this.values.value = {};
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(MapSeriesDataItem.prototype, "value", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.value.value;
        },
        /**
         * Numeric value of the data item.
         *
         * Value may be used in heat-map calculations.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("value", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeriesDataItem.prototype, "zoomLevel", {
        /**
         * @return Zoom level
         */
        get: function () {
            return this.properties["zoomLevel"];
        },
        /**
         * When `zoomToMapObject()` is called the map will either calculate suitable
         * zoom level itself or use object's `zoomLevel` if set.
         *
         * @param value  Zoom level
         */
        set: function (value) {
            this.setProperty("zoomLevel", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeriesDataItem.prototype, "zoomGeoPoint", {
        /**
         * @return Zoom geo point
         */
        get: function () {
            return this.properties["zoomGeoPoint"];
        },
        /**
         * When `zoomToMapObject()` is called the map will either calculate suitable
         * center position itself or use object's `zoomGeoPoint` if set.
         *
         * @param value  Zoom geo point
         */
        set: function (value) {
            this.setProperty("zoomGeoPoint", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeriesDataItem.prototype, "east", {
        /**
         * Longitude of the East-most point of the element.
         */
        get: function () {
            return this._east;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeriesDataItem.prototype, "west", {
        /**
         * Longitude of the West-most point of the element.
         */
        get: function () {
            return this._west;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeriesDataItem.prototype, "south", {
        /**
         * Latitude of the South-most point of the element.
         */
        get: function () {
            return this._south;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeriesDataItem.prototype, "north", {
        /**
         * Latitude of the North-most point of the element.
         */
        get: function () {
            return this._north;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates the item's bounding coordinates: coordinates of the East, West,
     * North, and South-most points.
     *
     * @ignore Exclude from docs
     */
    MapSeriesDataItem.prototype.updateExtremes = function () {
        var geometry = this.getFeature().geometry;
        if (geometry) {
            var bounds = d3_geo__WEBPACK_IMPORTED_MODULE_5__["geoBounds"](geometry);
            var west = bounds[0][0];
            var south = bounds[0][1];
            var north = bounds[1][1];
            var east = bounds[1][0];
            var changed = false;
            if (north != this.north) {
                this._north = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["round"](north, 6);
                changed = true;
            }
            if (south != this.south) {
                this._south = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["round"](south, 6);
                changed = true;
            }
            if (east != this.east) {
                this._east = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["round"](east, 6);
                changed = true;
            }
            if (west != this.west) {
                this._west = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["round"](west, 6);
                changed = true;
            }
            // solves single russia prob
            if (this._east < this._west) {
                this._east = 180;
                this._west = -180;
            }
            if (changed) {
                this.component.invalidateDataItems();
            }
        }
    };
    MapSeriesDataItem.prototype.getFeature = function () {
        return {};
    };
    return MapSeriesDataItem;
}(_series_Series__WEBPACK_IMPORTED_MODULE_1__["SeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for series of map objects.
 *
 * @see {@link IMapSeriesEvents} for a list of available Events
 * @see {@link IMapSeriesAdapters} for a list of available Adapters
 * @important
 */
var MapSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapSeries, _super);
    /**
     * Constructor
     */
    function MapSeries() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "MapSeries";
        // Set defaults
        _this.isMeasured = false;
        _this.nonScalingStroke = true;
        // Set data fields
        _this.dataFields.value = "value";
        _this.ignoreBounds = false;
        if (_this.tooltip) {
            _this.tooltip.showInViewport = true;
        }
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    MapSeries.prototype.createDataItem = function () {
        return new MapSeriesDataItem();
    };
    /**
     * Checks whether object should be included in series.
     *
     * @param includes  A list of explicitly included ids
     * @param excludes  A list of explicitly excluded ids
     * @param id        Id of the object
     * @return Include?
     */
    MapSeries.prototype.checkInclude = function (includes, excludes, id) {
        if (includes) {
            if (includes.length == 0) {
                return false;
            }
            else {
                if (includes.indexOf(id) == -1) {
                    return false;
                }
            }
        }
        if (excludes && excludes.length > 0) {
            if (excludes.indexOf(id) != -1) {
                return false;
            }
        }
        return true;
    };
    Object.defineProperty(MapSeries.prototype, "useGeodata", {
        /**
         * @return Use GeoJSON data?
         */
        get: function () {
            return this.getPropertyValue("useGeodata");
        },
        /**
         * Should the map extract all the data about element from the GeoJSON?
         *
         * This is especially relevant for [[MapPolygonSeries]]. If not set to `true`
         * polygon series will need to contain geographical data in itself in order
         * to be drawn.
         *
         * If this is set to `true`, series will try to extract data for its objects
         * from either chart-level `geodata` or from series' `geodata` which holds
         * map infor in GeoJSON format.
         *
         * @default false
         * @param value  Use GeoJSON data?
         */
        set: function (value) {
            if (this.setPropertyValue("useGeodata", value)) {
                this.invalidateData();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeries.prototype, "include", {
        /**
         * @return Included objects
         */
        get: function () {
            return this.getPropertyValue("include");
        },
        /**
         * A list of object ids that should be explictly included in the series.
         *
         * If this is not set, the series will automatically include all of the
         * objects, available in the GeoJSON map. (minus the ones listed in
         * `exclude`)
         *
         * If you need to display only specific objects, use `include`. E.g.:
         *
         * `include = ["FR", "ES", "DE"];`
         *
         * The above will show only France, Spain, and Germany out of the whole map.
         *
         * @param value  Included objects
         */
        set: function (value) {
            if (this.setPropertyValue("include", value)) {
                this.processIncExc();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    MapSeries.prototype.processIncExc = function () {
        //this.data = [];
        this.invalidateData();
    };
    Object.defineProperty(MapSeries.prototype, "ignoreBounds", {
        /**
         * @return Ignore bounds?
         */
        get: function () {
            return this.getPropertyValue("ignoreBounds");
        },
        /**
         * Should this series be included when calculating bounds of the map?
         *
         * This affects initial zoom as well as limits for zoom/pan.
         *
         * By default, `MapPolygonSeries` included (true), while `MapImageSeries` and
         * `MapLineSeries` are not (`false`).
         *
         * @since 4.3.0
         * @param  value  Ignore bounds?
         */
        set: function (value) {
            if (this.setPropertyValue("ignoreBounds", value)) {
                if (this.chart) {
                    this.chart.updateExtremes();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeries.prototype, "exclude", {
        /**
         * @return Excluded ids
         */
        get: function () {
            return this.getPropertyValue("exclude");
        },
        /**
         * A list of object ids that should be excluded from the series.
         *
         * E.g. you want to include all of the areas from a GeoJSON map, except
         * Antarctica.
         *
         * You'd leave `include` empty, and set `exclude = ["AQ"]`.
         *
         * @param value  Excluded ids
         */
        set: function (value) {
            if (this.setPropertyValue("exclude", value)) {
                this.processIncExc();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Decorates a newly added object.
     *
     * @param event [description]
     */
    MapSeries.prototype.handleObjectAdded = function (event) {
        var mapObject = event.newValue;
        mapObject.parent = this;
        mapObject.series = this;
        mapObject.strokeWidth = mapObject.strokeWidth;
    };
    Object.defineProperty(MapSeries.prototype, "geodata", {
        /**
         * @return GeoJSON data
         */
        get: function () {
            return this._geodata;
        },
        /**
         * Map data in GeoJSON format.
         *
         * The series supports the following GeoJSON objects: `Point`, `LineString`,
         * `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`.
         *
         * @see {@link http://geojson.org/} Official GeoJSON format specification
         * @param geoJSON GeoJSON data
         */
        set: function (geodata) {
            if (geodata != this._geodata) {
                this._geodata = geodata;
                if (this.reverseGeodata) {
                    this.chart.processReverseGeodata(this._geodata);
                }
                for (var i = this.data.length - 1; i >= 0; i--) {
                    if (this.data[i].madeFromGeoData == true) {
                        this.data.splice(i, 1);
                    }
                }
                this.disposeData();
                this.invalidateData();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeries.prototype, "reverseGeodata", {
        /**
         * @returns Reverse the order of geodata coordinates?
         */
        get: function () {
            return this.getPropertyValue("reverseGeodata");
        },
        /**
         * Indicates whether GeoJSON geodata supplied to the chart uses
         * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon
         * coordinates.
         *
         * `MapChart` supports only ESRI standard, so if your custom maps appears
         * garbled, try setting `reverseGeodata = true`.
         *
         * @default false
         * @since 4.10.11
         * @param  value  Reverse the order of geodata coordinates?
         */
        set: function (value) {
            if (this.setPropertyValue("reverseGeodata", value) && this._geodata) {
                this.chart.processReverseGeodata(this._geodata);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeries.prototype, "geodataSource", {
        /**
         * Returns a [[DataSource]] specifically for loading Component's data.
         *
         * @return Data source
         */
        get: function () {
            if (!this._dataSources["geodata"]) {
                this.getDataSource("geodata");
            }
            return this._dataSources["geodata"];
        },
        /**
         * Sets a [[DataSource]] to be used for loading Component's data.
         *
         * @param value Data source
         */
        set: function (value) {
            var _this = this;
            if (this._dataSources["geodata"]) {
                this.removeDispose(this._dataSources["geodata"]);
            }
            this._dataSources["geodata"] = value;
            this._dataSources["geodata"].component = this;
            this.events.on("inited", function () {
                _this.loadData("geodata");
            }, undefined, false);
            this.setDataSourceEvents(value, "geodata");
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    MapSeries.prototype.getFeatures = function () {
        return;
    };
    /**
     * @ignore
     */
    MapSeries.prototype.validateDataItems = function () {
        _super.prototype.validateDataItems.call(this);
        this.updateExtremes();
    };
    /**
     * @ignore
     */
    MapSeries.prototype.updateExtremes = function () {
        var north;
        var south;
        var east;
        var west;
        this.dataItems.each(function (dataItem) {
            if (dataItem.north > north || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](north)) {
                north = dataItem.north;
            }
            if (dataItem.south < south || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](south)) {
                south = dataItem.south;
            }
            if (dataItem.west < west || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](west)) {
                west = dataItem.west;
            }
            if (dataItem.east > east || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](east)) {
                east = dataItem.east;
            }
        });
        if (this._mapObjects) {
            this._mapObjects.each(function (mapObject) {
                if (mapObject.north > north || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](north)) {
                    north = mapObject.north;
                }
                if (mapObject.south < south || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](south)) {
                    south = mapObject.south;
                }
                if (mapObject.west < west || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](west)) {
                    west = mapObject.west;
                }
                if (mapObject.east > east || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](east)) {
                    east = mapObject.east;
                }
            });
        }
        if (this.north != north || this.east != east || this.south != south || this.west != west) {
            this._north = north;
            this._east = east;
            this._west = west;
            this._south = south;
            this.dispatch("geoBoundsChanged");
            if (!this.ignoreBounds) {
                this.chart.updateExtremes();
            }
        }
    };
    Object.defineProperty(MapSeries.prototype, "north", {
        /**
         * @return Latitude
         */
        get: function () {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](this._northDefined)) {
                return this._northDefined;
            }
            return this._north;
        },
        /**
         * North-most latitude of the series.
         *
         * By default, this holds auto-calculated latitude of the extremity.
         *
         * It can be overridden manually.
         *
         * @param  value  Latitude
         */
        set: function (value) {
            this._northDefined = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeries.prototype, "south", {
        /**
         * @return Latitude
         */
        get: function () {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](this._southDefined)) {
                return this._southDefined;
            }
            return this._south;
        },
        /**
         * South-most latitude of the series.
         *
         * By default, this holds auto-calculated latitude of the extremity.
         *
         * It can be overridden manually.
         *
         * @param  value  Latitude
         */
        set: function (value) {
            this._southDefined = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeries.prototype, "west", {
        /**
         * @return Longitude
         */
        get: function () {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](this._westDefined)) {
                return this._westDefined;
            }
            return this._west;
        },
        /**
         * West-most longitude of the series.
         *
         * By default, this holds auto-calculated longitude of the extremity.
         *
         * It can be overridden manually.
         *
         * @param  value  Longitude
         */
        set: function (value) {
            this._westDefined = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapSeries.prototype, "east", {
        /**
         * @return Longitude
         */
        get: function () {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](this._eastDefined)) {
                return this._eastDefined;
            }
            return this._east;
        },
        /**
         * East-most longitude of the series.
         *
         * By default, this holds auto-calculated longitude of the extremity.
         *
         * It can be overridden manually.
         *
         * @param  value  Longitude
         */
        set: function (value) {
            this._eastDefined = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    MapSeries.prototype.processConfig = function (config) {
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["hasValue"](config["geodata"]) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isString"](config["geodata"])) {
            var name_1 = config["geodata"];
            // Check if there's a map loaded by such name
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["hasValue"](window["am4geodata_" + config["geodata"]])) {
                config["geodata"] = window["am4geodata_" + config["geodata"]];
            }
            // Nope. Let's try maybe we got JSON as string?
            else {
                try {
                    config["geodata"] = JSON.parse(config["geodata"]);
                }
                catch (e) {
                    // No go again. Error out.
                    throw Error("MapChart error: Geodata `" + name_1 + "` is not loaded or is incorrect.");
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    /**
     * Adds `projection` to "as is" fields.
     *
     * @param field  Field name
     * @return Assign as is?
     */
    MapSeries.prototype.asIs = function (field) {
        return field == "geodata" || _super.prototype.asIs.call(this, field);
    };
    /**
     * @ignore
     */
    MapSeries.prototype.updateTooltipBounds = function () {
        if (this.tooltip && this.topParent) {
            this.tooltip.setBounds({ x: 10, y: 10, width: this.topParent.maxWidth - 20, height: this.topParent.maxHeight - 20 });
        }
    };
    return MapSeries;
}(_series_Series__WEBPACK_IMPORTED_MODULE_1__["Series"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["MapSeries"] = MapSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["MapSeriesDataItem"] = MapSeriesDataItem;
//# sourceMappingURL=MapSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSpline.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSpline.js ***!
  \****************************************************************************/
/*! exports provided: MapSpline */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapSpline", function() { return MapSpline; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapLine__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapLine */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLine.js");
/* harmony import */ var _core_elements_Polyspline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Polyspline */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Polyspline.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Map spline module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Used to draw a spline on the map.
 *
 * @see {@link IMapSplineEvents} for a list of available events
 * @see {@link IMapSplineAdapters} for a list of available Adapters
 */
var MapSpline = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapSpline, _super);
    /**
     * Constructor
     */
    function MapSpline() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "MapSpline";
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * @ignore
     */
    MapSpline.prototype.createLine = function () {
        this.line = new _core_elements_Polyspline__WEBPACK_IMPORTED_MODULE_2__["Polyspline"]();
        this.line.tensionX = 0.8;
        this.line.tensionY = 0.8;
    };
    Object.defineProperty(MapSpline.prototype, "shortestDistance", {
        /**
         * ShortestDistance = true is not supported by MapSpline, only MapLine does support it
         * @default false
         * @param value
         * @todo: review description
         */
        get: function () {
            return false;
        },
        set: function (value) {
        },
        enumerable: true,
        configurable: true
    });
    return MapSpline;
}(_MapLine__WEBPACK_IMPORTED_MODULE_1__["MapLine"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapSpline"] = MapSpline;
//# sourceMappingURL=MapSpline.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSplineSeries.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSplineSeries.js ***!
  \**********************************************************************************/
/*! exports provided: MapSplineSeriesDataItem, MapSplineSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapSplineSeriesDataItem", function() { return MapSplineSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapSplineSeries", function() { return MapSplineSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _MapLineSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./MapLineSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineSeries.js");
/* harmony import */ var _MapSpline__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./MapSpline */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSpline.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * Map spline series module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapSplineSeries]]
 * @see {@link DataItem}
 */
var MapSplineSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapSplineSeriesDataItem, _super);
    /**
     * Constructor
     */
    function MapSplineSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapSplineSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    return MapSplineSeriesDataItem;
}(_MapLineSeries__WEBPACK_IMPORTED_MODULE_1__["MapLineSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A series of map spline elements.
 *
 * @see {@link IMapSplineSeriesEvents} for a list of available Events
 * @see {@link IMapSplineSeriesAdapters} for a list of available Adapters
 * @important
 */
var MapSplineSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapSplineSeries, _super);
    /**
     * Constructor
     */
    function MapSplineSeries() {
        var _this = _super.call(this) || this;
        _this.className = "MapSplineSeries";
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    MapSplineSeries.prototype.createDataItem = function () {
        return new MapSplineSeriesDataItem();
    };
    /**
     * Returns a new line instance of suitable type.
     *
     * @return New line
     */
    MapSplineSeries.prototype.createLine = function () {
        return new _MapSpline__WEBPACK_IMPORTED_MODULE_2__["MapSpline"]();
    };
    return MapSplineSeries;
}(_MapLineSeries__WEBPACK_IMPORTED_MODULE_1__["MapLineSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapSplineSeries"] = MapSplineSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["MapSplineSeriesDataItem"] = MapSplineSeriesDataItem;
//# sourceMappingURL=MapSplineSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js ***!
  \***************************************************************************/
/*! exports provided: multiPolygonToGeo, multiLineToGeo, multiPointToGeo, multiGeoToPoint, pointToGeo, geoToPoint, multiGeoLineToMultiLine, multiGeoPolygonToMultipolygon, getCircle, getBackground */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiPolygonToGeo", function() { return multiPolygonToGeo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiLineToGeo", function() { return multiLineToGeo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiPointToGeo", function() { return multiPointToGeo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiGeoToPoint", function() { return multiGeoToPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pointToGeo", function() { return pointToGeo; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "geoToPoint", function() { return geoToPoint; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiGeoLineToMultiLine", function() { return multiGeoLineToMultiLine; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiGeoPolygonToMultipolygon", function() { return multiGeoPolygonToMultipolygon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getCircle", function() { return getCircle; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "getBackground", function() { return getBackground; });
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/**
 * A collection of Map-related utility functions.
 */


/**
 * Converts a multi-part polygon in X/Y coordinates to a geo-multipolygon in
 * geo-points (lat/long).
 *
 * @param multiPolygon  Source multi-polygon
 * @return Geo-multipolygon
 */
function multiPolygonToGeo(multiPolygon) {
    return _core_utils_Array__WEBPACK_IMPORTED_MODULE_0__["map"](multiPolygon, function (polygon) {
        var surface = polygon[0];
        var hole = polygon[1];
        //let holePoints: Array<IGeoPoint> = [];
        var geoArea = [];
        if (surface) {
            geoArea.push(multiPointToGeo(surface));
        }
        if (hole) {
            geoArea.push(multiPointToGeo(hole));
        }
        return geoArea;
    });
}
/**
 * Converts a multiline in X/Y coordinates to a geo-multiline in geo-points
 * (lat/long).
 *
 * @param multiLine  Source multiline
 * @return Geo-multiline
 */
function multiLineToGeo(multiLine) {
    return _core_utils_Array__WEBPACK_IMPORTED_MODULE_0__["map"](multiLine, function (multiLine) {
        return multiPointToGeo(multiLine);
    });
}
/**
 * Converts multiple X/Y points into a lat/long geo-points.
 *
 * @param points  Source points
 * @return Geo-points
 */
function multiPointToGeo(points) {
    return _core_utils_Array__WEBPACK_IMPORTED_MODULE_0__["map"](points, function (point) {
        return pointToGeo(point);
    });
}
/**
 * Converts multiple X/Y points into a lat/long geo-points.
 *
 * @param points  Source points
 * @return Geo-points
 */
function multiGeoToPoint(geoPoints) {
    return _core_utils_Array__WEBPACK_IMPORTED_MODULE_0__["map"](geoPoints, geoToPoint);
}
/**
 * Converts X/Y point into a lat/long geo-point.
 *
 * @param point  Source point
 * @return Geo-point
 */
function pointToGeo(point) {
    return { longitude: point[0], latitude: point[1] };
}
/**
 * Converts lat/long geo-point into a X/Y point.
 *
 * @param point  Source geo-point
 * @return X/Y point
 */
function geoToPoint(geoPoint) {
    return [geoPoint.longitude, geoPoint.latitude];
}
/**
 * Converts geo line (collection of lat/long coordinates) to screen line (x/y).
 *
 * @param   multiGeoLine  Source geo line
 * @return                Screen line
 */
function multiGeoLineToMultiLine(multiGeoLine) {
    return _core_utils_Array__WEBPACK_IMPORTED_MODULE_0__["map"](multiGeoLine, function (segment) {
        return _core_utils_Array__WEBPACK_IMPORTED_MODULE_0__["map"](segment, geoToPoint);
    });
}
/**
 * Converts a geo polygon (collection of lat/long coordinates) to screen
 * polygon (x/y).
 *
 * @param   multiGeoPolygon  Source polygon
 * @return                   Screen polygon
 */
function multiGeoPolygonToMultipolygon(multiGeoPolygon) {
    return _core_utils_Array__WEBPACK_IMPORTED_MODULE_0__["map"](multiGeoPolygon, function (geoPolygon) {
        var surface = geoPolygon[0];
        var hole = geoPolygon[1];
        var multiPolygon = [];
        if (surface) {
            multiPolygon.push(multiGeoToPoint(surface));
        }
        if (hole) {
            multiPolygon.push(multiGeoToPoint(hole));
        }
        return multiPolygon;
    });
}
/**
 * Returns a set of geographical coordinates for the circle with a center
 * at specific lat/long coordinates and radius (in degrees).
 *
 * @since 4.3.0
 * @param   longitude  Center longitude
 * @param   latitude   Center latitude
 * @param   radius     Radius (degrees)
 * @return             Circle coordinates
 */
function getCircle(longitude, latitude, radius) {
    return [d3_geo__WEBPACK_IMPORTED_MODULE_1__["geoCircle"]().center([longitude, latitude]).radius(radius)().coordinates];
}
/**
 * Returns a set of screen coordinates that represents a "background" area
 * between provided extremities.
 *
 * @since 4.3.0
 * @param   north  North latitude
 * @param   east   East longitude
 * @param   south  South latitude
 * @param   west   West longitude
 * @return         Polygon
 */
function getBackground(north, east, south, west) {
    var multiPolygon = [];
    if (west == -180) {
        west = -179.9999;
    }
    if (south == -90) {
        south = -89.9999;
    }
    if (north == 90) {
        north = 89.9999;
    }
    if (east == 180) {
        east = 179.9999;
    }
    var stepLong = Math.min(90, (east - west) / Math.ceil((east - west) / 90));
    var stepLat = (north - south) / Math.ceil((north - south) / 90);
    for (var ln = west; ln < east; ln = ln + stepLong) {
        var surface = [];
        multiPolygon.push([surface]);
        if (ln + stepLong > east) {
            stepLong = east - ln;
        }
        for (var ll = ln; ll <= ln + stepLong; ll = ll + 5) {
            surface.push([ll, north]);
        }
        for (var lt = north; lt >= south; lt = lt - stepLat) {
            surface.push([ln + stepLong, lt]);
        }
        for (var ll = ln + stepLong; ll >= ln; ll = ll - 5) {
            surface.push([ll, south]);
        }
        for (var lt = south; lt <= north; lt = lt + stepLat) {
            surface.push([ln, lt]);
        }
    }
    return multiPolygon;
}
//# sourceMappingURL=MapUtils.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/SmallMap.js":
/*!***************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/SmallMap.js ***!
  \***************************************************************************/
/*! exports provided: SmallMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SmallMap", function() { return SmallMap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_elements_Rectangle__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Rectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Rectangle.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * A module for the mini-map control.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a "bird's eye" view of the whole map.
 *
 * This control creates a mini-map with the whole of the map, highlighting
 * the area which is in the current viewport of the map map.
 *
 * @see {@link ISmallMapEvents} for a list of available events
 * @see {@link ISmallMapAdapters} for a list of available Adapters
 * @important
 */
var SmallMap = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SmallMap, _super);
    /**
     * Constructor
     */
    function SmallMap() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A target map.
         */
        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MutableValueDisposer"]();
        _this.className = "SmallMap";
        // Set defaults
        _this.align = "left";
        _this.valign = "bottom";
        _this.percentHeight = 20;
        _this.percentWidth = 20;
        _this.margin(5, 5, 5, 5);
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_7__["InterfaceColorSet"]();
        // Set background defailts
        _this.background.fillOpacity = 0.9;
        _this.background.fill = interfaceColors.getFor("background");
        // Set up events
        _this.events.on("hit", _this.moveToPosition, _this, false);
        _this.events.on("maxsizechanged", _this.updateMapSize, _this, false);
        // Create a container
        _this.seriesContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]);
        _this.seriesContainer.shouldClone = false;
        // Create an outline rectangle
        var rectangle = _this.createChild(_core_elements_Rectangle__WEBPACK_IMPORTED_MODULE_2__["Rectangle"]);
        rectangle.shouldClone = false;
        rectangle.stroke = interfaceColors.getFor("alternativeBackground");
        rectangle.strokeWidth = 1;
        rectangle.strokeOpacity = 0.5;
        rectangle.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_6__["color"])(); //"none";
        rectangle.verticalCenter = "middle";
        rectangle.horizontalCenter = "middle";
        rectangle.isMeasured = false;
        rectangle.visible = false;
        _this.rectangle = rectangle;
        _this._disposers.push(_this._chart);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(SmallMap.prototype, "series", {
        /**
         * A list of map series used to draw the mini-map.
         *
         * @readonly
         * @return Series
         */
        get: function () {
            if (!this._series) {
                this._series = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
                this._series.events.on("inserted", this.handleSeriesAdded, this, false);
                this._series.events.on("removed", this.handleSeriesRemoved, this, false);
            }
            return this._series;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Decorates a new series when they are pushed into a `series` list.
     *
     * @param event Event
     */
    SmallMap.prototype.handleSeriesAdded = function (event) {
        var series = event.newValue;
        if (this.chart.series.contains(series)) {
            var newSeries = series.clone();
            this._series.removeValue(series);
            this._series.push(newSeries);
            series = newSeries;
            this.chart.dataUsers.push(newSeries);
        }
        series.chart = this.chart;
        series.parent = this.seriesContainer;
        series.interactionsEnabled = false;
        series.events.on("inited", this.updateMapSize, this, false);
        series.hidden = false;
    };
    /**
     * Cleans up after series are removed from Scrollbar.
     *
     * @param event  Event
     */
    SmallMap.prototype.handleSeriesRemoved = function (event) {
        //let sourceSeries: MapSeries = event.oldValue;
        this.invalidate();
    };
    /**
     * Moves main map pan position after click on the small map.
     *
     * @ignore Exclude from docs
     * @param event  Event
     */
    SmallMap.prototype.moveToPosition = function (event) {
        var rectPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_8__["spritePointToSprite"](event.spritePoint, this, this.seriesContainer);
        var geoPoint = this.chart.seriesPointToGeo(rectPoint);
        this.chart.zoomToGeoPoint(geoPoint, this.chart.zoomLevel, true);
    };
    Object.defineProperty(SmallMap.prototype, "chart", {
        /**
         * @return Chart/map
         */
        get: function () {
            return this._chart.get();
        },
        /**
         * A chart/map that this control is meant for.
         *
         * @param chart  Chart/map
         */
        set: function (chart) {
            if (this.chart != chart) {
                this._chart.set(chart, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MultiDisposer"]([
                    //chart.events.on("zoomlevelchanged", this.updateRectangle, this, false),
                    chart.events.on("mappositionchanged", this.updateRectangle, this, false),
                    chart.events.on("scaleratiochanged", this.updateMapSize, this, false)
                ]));
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates the viewport recangle as per current map zoom/pan position.
     *
     * @ignore Exclude from docs
     */
    SmallMap.prototype.updateRectangle = function () {
        var chart = this.chart;
        var zoomLevel = chart.zoomLevel;
        var rectangle = this.rectangle;
        rectangle.width = this.pixelWidth / zoomLevel;
        rectangle.height = this.pixelHeight / zoomLevel;
        var scale = Math.min(this.percentWidth, this.percentHeight) / 100;
        var seriesContainer = chart.seriesContainer;
        rectangle.x = Math.ceil((-seriesContainer.pixelX) * scale / zoomLevel) + this.seriesContainer.pixelX;
        rectangle.y = Math.ceil((-seriesContainer.pixelY) * scale / zoomLevel) + this.seriesContainer.pixelY;
        rectangle.validate();
    };
    /**
     * Update map size so that internal elements can redraw themselves after
     * the size of the small map changes.
     *
     * @ignore Exclude from docs
     */
    SmallMap.prototype.updateMapSize = function () {
        if (this.chart) {
            var scale = this.chart.scaleRatio * Math.min(this.percentWidth, this.percentHeight) / 100;
            this.seriesContainer.scale = scale;
            var bbox = {
                width: 0,
                height: 0,
                x: 0,
                y: 0
            };
            try { // Add exception catching to tame FF
                bbox = this.seriesContainer.group.node.getBBox();
            }
            catch (err) { }
            if (bbox.width > 0) {
                this.rectangle.visible = true;
            }
            this.seriesContainer.x = this.pixelWidth / 2 - bbox.x * scale - bbox.width / 2 * scale;
            this.seriesContainer.y = this.pixelHeight / 2 - bbox.y * scale - bbox.height / 2 * scale;
            this.updateRectangle();
            this.afterDraw();
        }
    };
    /**
     * Update elements after drawing the small map.
     */
    SmallMap.prototype.afterDraw = function () {
        _super.prototype.afterDraw.call(this);
        //this.seriesContainer.moveTo({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 });
        this.rectangle.maskRectangle = { x: -1, y: -1, width: Math.ceil(this.pixelWidth + 2), height: Math.ceil(this.pixelHeight + 2) };
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    SmallMap.prototype.processConfig = function (config) {
        if (config) {
            // Set up series
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](config.series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isArray"](config.series)) {
                for (var i = 0, len = config.series.length; i < len; i++) {
                    var series = config.series[i];
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isString"](series) && this.map.hasKey(series)) {
                        config.series[i] = this.map.getKey(series);
                    }
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    return SmallMap;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["SmallMap"] = SmallMap;
//# sourceMappingURL=SmallMap.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/ZoomControl.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/ZoomControl.js ***!
  \******************************************************************************/
/*! exports provided: ZoomControl */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ZoomControl", function() { return ZoomControl; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_elements_Button__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Button */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Button.js");
/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Keyboard */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js");
/* harmony import */ var _core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/interaction/Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/**
 * Zoom control module
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a control for zooming the map.
 *
 * @see {@link IZoomControlEvents} for a list of available events
 * @see {@link IZoomControlAdapters} for a list of available Adapters
 * @important
 */
var ZoomControl = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ZoomControl, _super);
    /**
     * Constructor
     */
    function ZoomControl() {
        var _this = _super.call(this) || this;
        /**
         * A target map.
         */
        _this._chart = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MutableValueDisposer"]();
        _this.className = "ZoomControl";
        _this.align = "right";
        _this.valign = "bottom";
        _this.layout = "vertical";
        _this.padding(5, 5, 5, 5);
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_9__["InterfaceColorSet"]();
        var plusButton = _this.createChild(_core_elements_Button__WEBPACK_IMPORTED_MODULE_2__["Button"]);
        plusButton.shouldClone = false;
        plusButton.label.text = "+";
        //plusButton.fontFamily = "Verdana";
        _this.plusButton = plusButton;
        var slider = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]);
        slider.shouldClone = false;
        slider.background.fill = interfaceColors.getFor("alternativeBackground");
        slider.background.fillOpacity = 0.05;
        slider.background.events.on("hit", _this.handleBackgroundClick, _this, false);
        slider.events.on("sizechanged", _this.updateThumbSize, _this, false);
        _this.slider = slider;
        var thumb = slider.createChild(_core_elements_Button__WEBPACK_IMPORTED_MODULE_2__["Button"]);
        thumb.shouldClone = false;
        thumb.padding(0, 0, 0, 0);
        thumb.draggable = true;
        thumb.events.on("drag", _this.handleThumbDrag, _this, false);
        _this.thumb = thumb;
        var minusButton = _this.createChild(_core_elements_Button__WEBPACK_IMPORTED_MODULE_2__["Button"]);
        minusButton.shouldClone = false;
        minusButton.label.text = "-";
        //minusButton.fontFamily = "Verdana";
        _this.minusButton = minusButton;
        // Set roles
        _this.thumb.role = "slider";
        _this.thumb.readerLive = "polite";
        // Set reader text
        _this.thumb.readerTitle = _this.language.translate("Use arrow keys to zoom in and out");
        _this.minusButton.readerTitle = _this.language.translate("Press ENTER to zoom in");
        _this.plusButton.readerTitle = _this.language.translate("Press ENTER to zoom out");
        _this.applyTheme();
        _this.events.on("propertychanged", function (event) {
            if (event.property == "layout") {
                _this.fixLayout();
            }
        }, undefined, false);
        _this._disposers.push(_this._chart);
        _this.fixLayout();
        return _this;
    }
    /**
     * @ignore
     */
    ZoomControl.prototype.fixLayout = function () {
        var plusButton = this.plusButton;
        var minusButton = this.minusButton;
        var thumb = this.thumb;
        var slider = this.slider;
        plusButton.x = undefined;
        plusButton.y = undefined;
        minusButton.x = undefined;
        minusButton.y = undefined;
        thumb.x = undefined;
        thumb.y = undefined;
        slider.x = undefined;
        slider.y = undefined;
        plusButton.padding(6, 10, 6, 10);
        minusButton.padding(6, 10, 6, 10);
        minusButton.label.align = "center";
        minusButton.label.valign = "middle";
        plusButton.label.align = "center";
        plusButton.label.valign = "middle";
        if (this.layout == "vertical") {
            this.width = 40;
            this.height = undefined;
            minusButton.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            minusButton.height = undefined;
            thumb.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            thumb.height = undefined;
            plusButton.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            plusButton.height = undefined;
            slider.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            minusButton.marginTop = 1;
            plusButton.marginBottom = 2;
            slider.height = 0;
            minusButton.toFront();
            plusButton.toBack();
            thumb.minX = 0;
            thumb.maxX = 0;
            thumb.minY = 0;
        }
        else if (this.layout == "horizontal") {
            this.height = 40;
            this.width = undefined;
            minusButton.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            minusButton.width = undefined;
            plusButton.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            plusButton.width = undefined;
            thumb.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            thumb.width = undefined;
            thumb.minX = 0;
            thumb.minY = 0;
            thumb.maxY = 0;
            slider.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_7__["percent"])(100);
            slider.width = 0;
            minusButton.toBack();
            plusButton.toFront();
        }
    };
    /**
     * Handles zoom operation after clicking on the slider background.
     *
     * @ignore Exclude from docs
     * @param event  Event
     */
    ZoomControl.prototype.handleBackgroundClick = function (event) {
        var sprite = event.target;
        var y = event.spritePoint.y;
        var chart = this.chart;
        var maxPower = Math.log(chart.maxZoomLevel) / Math.LN2;
        var minPower = Math.log(chart.minZoomLevel) / Math.LN2;
        var power = (sprite.pixelHeight - y) / sprite.pixelHeight * (minPower + (maxPower - minPower));
        var zoomLevel = Math.pow(2, power);
        chart.zoomToGeoPoint(chart.zoomGeoPoint, zoomLevel);
    };
    Object.defineProperty(ZoomControl.prototype, "chart", {
        /**
         * @return Map/chart
         */
        get: function () {
            return this._chart.get();
        },
        /**
         * A main chart/map that this zoom control is for.
         *
         * @param chart  Map/chart
         */
        set: function (chart) {
            var _this = this;
            this._chart.set(chart, new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_4__["MultiDisposer"]([
                chart.events.on("maxsizechanged", this.updateThumbSize, this, false),
                chart.events.on("zoomlevelchanged", this.updateThumb, this, false),
                this.minusButton.events.on("hit", function () { chart.zoomOut(chart.zoomGeoPoint); }, chart, false),
                Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_6__["getInteraction"])().body.events.on("keyup", function (ev) {
                    if (_this.topParent.hasFocused) {
                        // ENTER is now handled globally
                        if (_core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_5__["keyboard"].isKey(ev.event, "plus")) {
                            chart.zoomIn();
                        }
                        else if (_core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_5__["keyboard"].isKey(ev.event, "minus")) {
                            chart.zoomOut();
                        }
                    }
                }, chart),
                this.plusButton.events.on("hit", function () { chart.zoomIn(chart.zoomGeoPoint); }, chart, false)
            ]));
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates the slider's thumb size based on the available zoom space.
     *
     * @ignore Exclude from docs
     */
    ZoomControl.prototype.updateThumbSize = function () {
        var chart = this.chart;
        if (chart) {
            var slider = this.slider;
            var thumb = this.thumb;
            if (this.layout == "vertical") {
                thumb.minHeight = Math.min(this.slider.pixelHeight, 20);
                thumb.height = slider.pixelHeight / this.stepCount;
                thumb.maxY = slider.pixelHeight - thumb.pixelHeight;
                if (thumb.pixelHeight <= 1) {
                    thumb.visible = false;
                }
                else {
                    thumb.visible = true;
                }
            }
            else {
                thumb.minWidth = Math.min(this.slider.pixelWidth, 20);
                thumb.width = slider.pixelWidth / this.stepCount;
                thumb.maxX = slider.pixelWidth - thumb.pixelWidth;
                if (thumb.pixelWidth <= 1) {
                    thumb.visible = false;
                }
                else {
                    thumb.visible = true;
                }
            }
        }
    };
    /**
     * Updates thumb according to current zoom position from map.
     *
     * @ignore Exclude from docs
     */
    ZoomControl.prototype.updateThumb = function () {
        var slider = this.slider;
        var chart = this.chart;
        var thumb = this.thumb;
        if (!thumb.isDown) {
            var step = (Math.log(chart.zoomLevel) - Math.log(this.chart.minZoomLevel)) / Math.LN2;
            if (this.layout == "vertical") {
                thumb.y = slider.pixelHeight - (slider.pixelHeight - thumb.pixelHeight) * step / this.stepCount - thumb.pixelHeight;
            }
            else {
                thumb.x = slider.pixelWidth * step / this.stepCount;
            }
        }
    };
    /**
     * Zooms the actual map when slider position changes.
     *
     * @ignore Exclude from docs
     */
    ZoomControl.prototype.handleThumbDrag = function () {
        var slider = this.slider;
        var chart = this.chart;
        var thumb = this.thumb;
        var step;
        var minStep = Math.log(this.chart.minZoomLevel) / Math.LN2;
        if (this.layout == "vertical") {
            step = this.stepCount * (slider.pixelHeight - thumb.pixelY - thumb.pixelHeight) / (slider.pixelHeight - thumb.pixelHeight);
        }
        else {
            step = this.stepCount * thumb.pixelX / slider.pixelWidth;
        }
        step = minStep + step;
        var zoomLevel = Math.pow(2, step);
        chart.zoomToGeoPoint(undefined, zoomLevel, false, 0);
    };
    Object.defineProperty(ZoomControl.prototype, "stepCount", {
        /**
         * Returns the step countfor the slider grid according to map's min and max
         * zoom level settings.
         *
         * @ignore Exclude from docs
         * @return Step count
         */
        get: function () {
            return Math.log(this.chart.maxZoomLevel) / Math.LN2 - Math.log(this.chart.minZoomLevel) / Math.LN2;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates a background element for slider control.
     *
     * @ignore Exclude from docs
     * @return Background
     */
    ZoomControl.prototype.createBackground = function () {
        return new _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_3__["RoundedRectangle"]();
    };
    return ZoomControl;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses["ZoomControl"] = ZoomControl;
//# sourceMappingURL=ZoomControl.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections.js ***!
  \******************************************************************************/
/*! exports provided: Mercator, Miller, Eckert6, Orthographic, Stereographic, Albers, AlbersUsa, NaturalEarth1, AzimuthalEqualArea, EqualEarth, Projection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _projections_Mercator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./projections/Mercator */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Mercator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Mercator", function() { return _projections_Mercator__WEBPACK_IMPORTED_MODULE_0__["Mercator"]; });

/* harmony import */ var _projections_Miller__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./projections/Miller */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Miller.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Miller", function() { return _projections_Miller__WEBPACK_IMPORTED_MODULE_1__["Miller"]; });

/* harmony import */ var _projections_Eckert6__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./projections/Eckert6 */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Eckert6.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Eckert6", function() { return _projections_Eckert6__WEBPACK_IMPORTED_MODULE_2__["Eckert6"]; });

/* harmony import */ var _projections_Orthographic__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./projections/Orthographic */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Orthographic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Orthographic", function() { return _projections_Orthographic__WEBPACK_IMPORTED_MODULE_3__["Orthographic"]; });

/* harmony import */ var _projections_Stereographic__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./projections/Stereographic */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Stereographic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Stereographic", function() { return _projections_Stereographic__WEBPACK_IMPORTED_MODULE_4__["Stereographic"]; });

/* harmony import */ var _projections_Albers__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./projections/Albers */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Albers.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Albers", function() { return _projections_Albers__WEBPACK_IMPORTED_MODULE_5__["Albers"]; });

/* harmony import */ var _projections_AlbersUsa__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./projections/AlbersUsa */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/AlbersUsa.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AlbersUsa", function() { return _projections_AlbersUsa__WEBPACK_IMPORTED_MODULE_6__["AlbersUsa"]; });

/* harmony import */ var _projections_NaturalEarth1__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./projections/NaturalEarth1 */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/NaturalEarth1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NaturalEarth1", function() { return _projections_NaturalEarth1__WEBPACK_IMPORTED_MODULE_7__["NaturalEarth1"]; });

/* harmony import */ var _projections_AzimuthalEqualArea__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./projections/AzimuthalEqualArea */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/AzimuthalEqualArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AzimuthalEqualArea", function() { return _projections_AzimuthalEqualArea__WEBPACK_IMPORTED_MODULE_8__["AzimuthalEqualArea"]; });

/* harmony import */ var _projections_EqualEarth__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./projections/EqualEarth */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/EqualEarth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "EqualEarth", function() { return _projections_EqualEarth__WEBPACK_IMPORTED_MODULE_9__["EqualEarth"]; });

/* harmony import */ var _projections_Projection__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./projections/Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Projection", function() { return _projections_Projection__WEBPACK_IMPORTED_MODULE_10__["Projection"]; });












//# sourceMappingURL=projections.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Albers.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Albers.js ***!
  \*************************************************************************************/
/*! exports provided: Albers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Albers", function() { return Albers; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/**
 * Functionality for Mercator projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * Orthographic projection.
 */
var Albers = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Albers, _super);
    function Albers() {
        var _this = _super.call(this) || this;
        _this.d3Projection = d3_geo__WEBPACK_IMPORTED_MODULE_3__["geoAlbers"]();
        return _this;
    }
    return Albers;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Albers"] = Albers;
//# sourceMappingURL=Albers.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/AlbersUsa.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/AlbersUsa.js ***!
  \****************************************************************************************/
/*! exports provided: AlbersUsa */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AlbersUsa", function() { return AlbersUsa; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/**
 * Functionality for Mercator projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * Orthographic projection.
 */
var AlbersUsa = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AlbersUsa, _super);
    function AlbersUsa() {
        var _this = _super.call(this) || this;
        _this.d3Projection = d3_geo__WEBPACK_IMPORTED_MODULE_3__["geoAlbersUsa"]();
        return _this;
    }
    return AlbersUsa;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["AlbersUsa"] = AlbersUsa;
//# sourceMappingURL=AlbersUsa.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/AzimuthalEqualArea.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/AzimuthalEqualArea.js ***!
  \*************************************************************************************************/
/*! exports provided: AzimuthalEqualArea */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "AzimuthalEqualArea", function() { return AzimuthalEqualArea; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/**
 * Functionality for Mercator projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * Orthographic projection.
 */
var AzimuthalEqualArea = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(AzimuthalEqualArea, _super);
    function AzimuthalEqualArea() {
        var _this = _super.call(this) || this;
        _this.d3Projection = d3_geo__WEBPACK_IMPORTED_MODULE_3__["geoAzimuthalEqualArea"]();
        return _this;
    }
    return AzimuthalEqualArea;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["AzimuthalEqualArea"] = AzimuthalEqualArea;
//# sourceMappingURL=AzimuthalEqualArea.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Eckert6.js":
/*!**************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Eckert6.js ***!
  \**************************************************************************************/
/*! exports provided: Eckert6 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Eckert6", function() { return Eckert6; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var d3_geo_projection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo-projection */ "./node_modules/d3-geo-projection/src/index.js");
/**
 * Functionality for Eckert6 projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


// @ts-ignore

/**
 * Eckert6 projection.
 */
var Eckert6 = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Eckert6, _super);
    function Eckert6() {
        var _this = _super.call(this) || this;
        _this.d3Projection = d3_geo_projection__WEBPACK_IMPORTED_MODULE_3__["geoEckert6"]();
        return _this;
    }
    return Eckert6;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Eckert6"] = Eckert6;
//# sourceMappingURL=Eckert6.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/EqualEarth.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/EqualEarth.js ***!
  \*****************************************************************************************/
/*! exports provided: EqualEarth */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "EqualEarth", function() { return EqualEarth; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/**
 * Functionality for Mercator projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * Orthographic projection.
 */
var EqualEarth = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(EqualEarth, _super);
    function EqualEarth() {
        var _this = _super.call(this) || this;
        _this.d3Projection = d3_geo__WEBPACK_IMPORTED_MODULE_3__["geoEqualEarth"]();
        return _this;
    }
    return EqualEarth;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["EqualEarth"] = EqualEarth;
//# sourceMappingURL=EqualEarth.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Mercator.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Mercator.js ***!
  \***************************************************************************************/
/*! exports provided: Mercator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Mercator", function() { return Mercator; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/**
 * Functionality for Mercator projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * Mercator projection.
 */
var Mercator = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Mercator, _super);
    function Mercator() {
        var _this = _super.call(this) || this;
        _this.d3Projection = d3_geo__WEBPACK_IMPORTED_MODULE_3__["geoMercator"]();
        return _this;
    }
    return Mercator;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Mercator"] = Mercator;
//# sourceMappingURL=Mercator.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Miller.js":
/*!*************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Miller.js ***!
  \*************************************************************************************/
/*! exports provided: Miller */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Miller", function() { return Miller; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var d3_geo_projection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo-projection */ "./node_modules/d3-geo-projection/src/index.js");
/**
 * Functionality for Miller projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


// @ts-ignore

/**
 * Miller projection.
 */
var Miller = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Miller, _super);
    function Miller() {
        var _this = _super.call(this) || this;
        _this.d3Projection = d3_geo_projection__WEBPACK_IMPORTED_MODULE_3__["geoMiller"]();
        return _this;
    }
    return Miller;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Miller"] = Miller;
//# sourceMappingURL=Miller.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/NaturalEarth1.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/NaturalEarth1.js ***!
  \********************************************************************************************/
/*! exports provided: NaturalEarth1 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NaturalEarth1", function() { return NaturalEarth1; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/**
 * Functionality for Mercator projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * Orthographic projection.
 */
var NaturalEarth1 = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(NaturalEarth1, _super);
    function NaturalEarth1() {
        var _this = _super.call(this) || this;
        _this.d3Projection = d3_geo__WEBPACK_IMPORTED_MODULE_3__["geoNaturalEarth1"]();
        return _this;
    }
    return NaturalEarth1;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["NaturalEarth1"] = NaturalEarth1;
//# sourceMappingURL=NaturalEarth1.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Orthographic.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Orthographic.js ***!
  \*******************************************************************************************/
/*! exports provided: Orthographic */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Orthographic", function() { return Orthographic; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/**
 * Functionality for Mercator projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * Orthographic projection.
 */
var Orthographic = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Orthographic, _super);
    function Orthographic() {
        var _this = _super.call(this) || this;
        _this.d3Projection = d3_geo__WEBPACK_IMPORTED_MODULE_3__["geoOrthographic"]();
        return _this;
    }
    return Orthographic;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Orthographic"] = Orthographic;
//# sourceMappingURL=Orthographic.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js":
/*!*****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js ***!
  \*****************************************************************************************/
/*! exports provided: Projection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Projection", function() { return Projection; });
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/**
 * This module contains funcitonality related to geographical projections
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * This is a base class for a geographical projection.
 */
var Projection = /** @class */ (function () {
    function Projection() {
        this.d3Projection = d3_geo__WEBPACK_IMPORTED_MODULE_2__["geoEquirectangular"]();
    }
    Object.defineProperty(Projection.prototype, "d3Projection", {
        /**
         * d3 projection
         */
        get: function () {
            return this._d3Projection;
        },
        /**
         * d3 projection
         */
        set: function (projection) {
            this._d3Projection = projection;
            projection.precision(0.1);
            this._d3Path = d3_geo__WEBPACK_IMPORTED_MODULE_2__["geoPath"]().projection(projection);
            if (this.chart) {
                this.chart.invalidateProjection();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Projection.prototype, "d3Path", {
        /**
         * d3 path generator method
         * @ignore
         */
        get: function () {
            return this._d3Path;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Projection.prototype, "scale", {
        /**
         * @ignore
         */
        get: function () {
            return this.d3Projection.scale() / 100;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts a geographical point (lat/long) to a screen point (x/y)
     * @param geoPoint Geo point (lat/long)
     * @return Screen point (x/y)
     */
    Projection.prototype.convert = function (geoPoint) {
        /*
        geoPoint = $geo.normalizePoint(geoPoint);
        geoPoint = this.rotate(geoPoint, this.deltaLongitude, this.deltaLatitude, this.deltaGama);
        let pointInRadians: IPoint = this.project(geoPoint.longitude * $math.RADIANS, geoPoint.latitude * $math.RADIANS);
        return {
            x: $math.round(pointInRadians.x * $math.DEGREES - this.centerPoint.x, 4) * this.scale,
            y: $math.round(-pointInRadians.y * $math.DEGREES - this.centerPoint.y, 4) * this.scale
        };*/
        var p = this.d3Projection([geoPoint.longitude, geoPoint.latitude]);
        if (p) {
            return { x: p[0], y: p[1] };
        }
    };
    /**
     * Converts a screen point (x/y) to a geographical point (lat/long)
     * @param point Screen point (x/y)
     * @return Geo point (lat/long)
     */
    Projection.prototype.invert = function (point) {
        /*
        let pointInRadians: IGeoPoint = this.unproject((point.x / this.scale + this.centerPoint.x) * $math.RADIANS, (-point.y / this.scale - this.centerPoint.y) * $math.RADIANS);

        let geoPoint = { longitude: pointInRadians.longitude * $math.DEGREES, latitude: pointInRadians.latitude * $math.DEGREES };

        geoPoint = this.unrotate(geoPoint, this.deltaLongitude, this.deltaLatitude, this.deltaGama);
        */
        var p = this.d3Projection.invert([point.x, point.y]);
        if (p) {
            return { longitude: p[0], latitude: p[1] };
        }
    };
    /**
     * Returns X/Y coordinates.
     * Individual projections will override this method to apply their own
     * projection logic.
     * @deprecated
     * @param lambda [description]
     * @param phi    [description]
     * @return X/Y coordinates
     * @todo Needs description
     */
    Projection.prototype.project = function (lambda, phi) {
        return this.convert({ longitude: lambda * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["DEGREES"], latitude: phi * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["DEGREES"] });
    };
    /**
     * Returns geographical coordinates (lat/long).
     * Individual projections will override this method to apply their own
     * projection logic.
     * @deprecated
     * @param x X coordinate
     * @param y Y coordinate
     * @return Geographical point
     * @todo Needs description
     */
    Projection.prototype.unproject = function (x, y) {
        return this.invert({ x: x, y: y });
    };
    /**
     * @ignore
     * @deprecated
     */
    Projection.prototype.rotate = function (geoPoint, deltaLongitude, deltaLatitude, deltaGamma) {
        var deltaLambda = deltaLongitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["RADIANS"];
        var deltaPhi = deltaLatitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["RADIANS"];
        deltaGamma = deltaGamma * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["RADIANS"];
        var lambda = geoPoint.longitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["RADIANS"] + deltaLambda;
        var phi = geoPoint.latitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["RADIANS"];
        var cosDeltaPhi = Math.cos(deltaPhi);
        var sinDeltaPhi = Math.sin(deltaPhi);
        var cosDeltaGamma = Math.cos(deltaGamma);
        var sinDeltaGamma = Math.sin(deltaGamma);
        var cosPhi = Math.cos(phi);
        var x = Math.cos(lambda) * cosPhi;
        var y = Math.sin(lambda) * cosPhi;
        var z = Math.sin(phi);
        var k = z * cosDeltaPhi + x * sinDeltaPhi;
        return { longitude: _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["DEGREES"] * Math.atan2(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi), latitude: _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["DEGREES"] * Math.asin(k * cosDeltaGamma + y * sinDeltaGamma) };
    };
    /**
     * @ignore
     * @deprecated
     */
    Projection.prototype.unrotate = function (geoPoint, deltaLongitude, deltaLatitude, deltaGamma) {
        var deltaLambda = deltaLongitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["RADIANS"];
        var deltaPhi = deltaLatitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["RADIANS"];
        deltaGamma = deltaGamma * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["RADIANS"];
        var lambda = geoPoint.longitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["RADIANS"] - deltaLambda;
        var phi = geoPoint.latitude * _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["RADIANS"];
        var cosDeltaPhi = Math.cos(deltaPhi);
        var sinDeltaPhi = Math.sin(deltaPhi);
        var cosDeltaGamma = Math.cos(deltaGamma);
        var sinDeltaGamma = Math.sin(deltaGamma);
        var cosPhi = Math.cos(phi);
        var x = Math.cos(lambda) * cosPhi;
        var y = Math.sin(lambda) * cosPhi;
        var z = Math.sin(phi);
        var k = z * cosDeltaGamma - y * sinDeltaGamma;
        return { longitude: _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["DEGREES"] * Math.atan2(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi), latitude: _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["DEGREES"] * Math.asin(k * cosDeltaPhi - x * sinDeltaPhi) };
    };
    //@todo: move to some utils?
    //@todo: add credits to: https://www.movable-type.co.uk/scripts/latlong.html
    Projection.prototype.intermediatePoint = function (pointA, pointB, position) {
        var p = d3_geo__WEBPACK_IMPORTED_MODULE_2__["geoInterpolate"]([pointA.longitude, pointA.latitude], [pointB.longitude, pointB.latitude])(position);
        return { longitude: p[0], latitude: p[1] };
    };
    ;
    // returns radians
    Projection.prototype.multiDistance = function (multiGeoLine) {
        var distance = 0;
        for (var s = 0; s < multiGeoLine.length; s++) {
            var points = multiGeoLine[s];
            if (points.length > 1) {
                for (var p = 1; p < points.length; p++) {
                    var pointA = points[p - 1];
                    var pointB = points[p];
                    distance += this.distance(pointA, pointB);
                }
            }
        }
        return distance;
    };
    // returns radians
    Projection.prototype.distance = function (pointA, pointB) {
        return d3_geo__WEBPACK_IMPORTED_MODULE_2__["geoDistance"]([pointA.longitude, pointA.latitude], [pointB.longitude, pointB.latitude]);
    };
    /**
     * Converts relative position along the line (0-1) into pixel coordinates.
     *
     * @param position  Position (0-1)
     * @return Coordinates
     */
    Projection.prototype.positionToPoint = function (multiGeoLine, position) {
        if (multiGeoLine) {
            var intermediatePoint = this.positionToGeoPoint(multiGeoLine, position);
            var intermediatePointA = this.positionToGeoPoint(multiGeoLine, position - 0.01);
            var intermediatePointB = this.positionToGeoPoint(multiGeoLine, position + 0.01);
            if (intermediatePointA && intermediatePointB) {
                var point = this.convert(intermediatePoint);
                var pa = this.convert(intermediatePointA);
                var pb = this.convert(intermediatePointB);
                return { x: point.x, y: point.y, angle: _core_utils_Math__WEBPACK_IMPORTED_MODULE_1__["getAngle"](pa, pb) };
            }
        }
        return { x: 0, y: 0, angle: 0 };
    };
    /**
     * Converts relative position along the line (0-1) into pixel coordinates.
     *
     * @param position  Position (0-1)
     * @return Coordinates
     */
    Projection.prototype.positionToGeoPoint = function (multiGeoLine, position) {
        if (multiGeoLine) {
            var totalDistance = this.multiDistance(multiGeoLine);
            var currentDistance = 0;
            var distanceAB = void 0;
            var positionA = 0;
            var positionB = 0;
            var pointA = void 0;
            var pointB = void 0;
            for (var s = 0; s < multiGeoLine.length; s++) {
                var points = multiGeoLine[s];
                if (points.length > 1) {
                    for (var p = 1; p < points.length; p++) {
                        pointA = points[p - 1];
                        pointB = points[p];
                        positionA = currentDistance / totalDistance;
                        distanceAB = this.distance(pointA, pointB);
                        currentDistance += distanceAB;
                        positionB = currentDistance / totalDistance;
                        if (positionA <= position && positionB > position) {
                            s = multiGeoLine.length;
                            break;
                        }
                    }
                }
                else if (points.length == 1) {
                    pointA = points[0];
                    pointB = points[0];
                    positionA = 0;
                    positionB = 1;
                }
            }
            if (pointA && pointB) {
                var positionAB = (position - positionA) / (positionB - positionA);
                return this.intermediatePoint(pointA, pointB, positionAB);
            }
        }
        return { longitude: 0, latitude: 0 };
    };
    return Projection;
}());

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_0__["registry"].registeredClasses["Projection"] = Projection;
//# sourceMappingURL=Projection.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Stereographic.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Stereographic.js ***!
  \********************************************************************************************/
/*! exports provided: Stereographic */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Stereographic", function() { return Stereographic; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Projection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/**
 * Functionality for Mercator projection
 *
 * The function(s) below are from D3.js library (https://d3js.org/)
 *
 * ```
 * Copyright 2017 Mike Bostock
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *    contributors may be used to endorse or promote products derived from this
 *    software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
 * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * ```
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * Orthographic projection.
 */
var Stereographic = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Stereographic, _super);
    function Stereographic() {
        var _this = _super.call(this) || this;
        _this.d3Projection = d3_geo__WEBPACK_IMPORTED_MODULE_3__["geoStereographic"]();
        return _this;
    }
    return Stereographic;
}(_Projection__WEBPACK_IMPORTED_MODULE_1__["Projection"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["Stereographic"] = Stereographic;
//# sourceMappingURL=Stereographic.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/CandlestickSeries.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/CandlestickSeries.js ***!
  \***************************************************************************************/
/*! exports provided: CandlestickSeriesDataItem, CandlestickSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CandlestickSeriesDataItem", function() { return CandlestickSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CandlestickSeries", function() { return CandlestickSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _ColumnSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ColumnSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _elements_Candlestick__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../elements/Candlestick */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Candlestick Series module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */









/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[CandlestickSeries]].
 *
 * @see {@link DataItem}
 */
var CandlestickSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CandlestickSeriesDataItem, _super);
    /**
     * Defines a type of [[Component]] this data item is used for
     * @todo Disabled to work around TS bug (see if we can re-enable it again)
     */
    //public _component!: CandlestickSeries;
    /**
     * Constructor
     */
    function CandlestickSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.values.lowValueX = {};
        _this.values.lowValueY = {};
        _this.values.highValueX = {};
        _this.values.highValueY = {};
        _this.className = "CandlestickSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(CandlestickSeriesDataItem.prototype, "lowValueX", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.lowValueX.value;
        },
        /**
         * Low value for horizontal axis.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("lowValueX", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CandlestickSeriesDataItem.prototype, "lowValueY", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.lowValueY.value;
        },
        /**
         * Low value for vertical axis.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("lowValueY", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CandlestickSeriesDataItem.prototype, "highValueX", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.highValueX.value;
        },
        /**
         * High value for horizontal axis.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("highValueX", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CandlestickSeriesDataItem.prototype, "highValueY", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.highValueY.value;
        },
        /**
         * High value for vertical axis.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("highValueY", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CandlestickSeriesDataItem.prototype, "closeValueX", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.valueX.value;
        },
        /**
         * Close value for horizontal axis.
         *
         * This is an alias for `valueX` added for convenience only.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("valueX", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CandlestickSeriesDataItem.prototype, "closeValueY", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.valueY.value;
        },
        /**
         * Close value for vertical axis.
         *
         * This is an alias for `valueX` added for convenience only.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("valueY", value);
        },
        enumerable: true,
        configurable: true
    });
    return CandlestickSeriesDataItem;
}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__["ColumnSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a candlestick graph.
 *
 * @see {@link ICandlestickSeriesEvents} for a list of available Events
 * @see {@link ICandlestickSeriesAdapters} for a list of available Adapters
 * @todo Example
 * @important
 */
var CandlestickSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CandlestickSeries, _super);
    /**
     * Constructor
     */
    function CandlestickSeries() {
        var _this = _super.call(this) || this;
        _this.className = "CandlestickSeries";
        _this.groupFields.lowValueX = "low";
        _this.groupFields.lowValueY = "low";
        _this.groupFields.highValueX = "high";
        _this.groupFields.highValueY = "high";
        _this.strokeOpacity = 1;
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_5__["InterfaceColorSet"]();
        var positiveColor = interfaceColors.getFor("positive");
        var negativeColor = interfaceColors.getFor("negative");
        _this.dropFromOpenState.properties.fill = negativeColor;
        _this.dropFromOpenState.properties.stroke = negativeColor;
        _this.riseFromOpenState.properties.fill = positiveColor;
        _this.riseFromOpenState.properties.stroke = positiveColor;
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    CandlestickSeries.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Candlestick Series");
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    CandlestickSeries.prototype.createDataItem = function () {
        return new CandlestickSeriesDataItem();
    };
    /**
     * Validates data item's element, effectively redrawing it.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    CandlestickSeries.prototype.validateDataElementReal = function (dataItem) {
        _super.prototype.validateDataElementReal.call(this, dataItem);
        this.validateCandlestick(dataItem);
    };
    CandlestickSeries.prototype.validateCandlestick = function (dataItem) {
        var column = dataItem.column;
        if (column) {
            var lowLine_1 = column.lowLine;
            var highLine_1 = column.highLine;
            if (this.baseAxis == this.xAxis) {
                var x = column.pixelWidth / 2;
                lowLine_1.x = x;
                highLine_1.x = x;
                var open_1 = dataItem.getWorkingValue(this.yOpenField);
                var close_1 = dataItem.getWorkingValue(this.yField);
                var yOpen = this.yAxis.getY(dataItem, this.yOpenField);
                var yClose = this.yAxis.getY(dataItem, this.yField);
                var yLow = this.yAxis.getY(dataItem, this.yLowField);
                var yHigh = this.yAxis.getY(dataItem, this.yHighField);
                var pixelY = column.pixelY;
                lowLine_1.y1 = yLow - pixelY;
                highLine_1.y1 = yHigh - pixelY;
                if (open_1 < close_1) {
                    lowLine_1.y2 = yOpen - pixelY;
                    highLine_1.y2 = yClose - pixelY;
                }
                else {
                    lowLine_1.y2 = yClose - pixelY;
                    highLine_1.y2 = yOpen - pixelY;
                }
            }
            if (this.baseAxis == this.yAxis) {
                var y = column.pixelHeight / 2;
                lowLine_1.y = y;
                highLine_1.y = y;
                var open_2 = dataItem.getWorkingValue(this.xOpenField);
                var close_2 = dataItem.getWorkingValue(this.xField);
                var xOpen = this.xAxis.getX(dataItem, this.xOpenField);
                var xClose = this.xAxis.getX(dataItem, this.xField);
                var xLow = this.xAxis.getX(dataItem, this.xLowField);
                var xHigh = this.xAxis.getX(dataItem, this.xHighField);
                var pixelX = column.pixelX;
                lowLine_1.x1 = xLow - pixelX;
                highLine_1.x1 = xHigh - pixelX;
                if (open_2 < close_2) {
                    lowLine_1.x2 = xOpen - pixelX;
                    highLine_1.x2 = xClose - pixelX;
                }
                else {
                    lowLine_1.x2 = xClose - pixelX;
                    highLine_1.x2 = xOpen - pixelX;
                }
            }
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.axisRanges.iterator(), function (axisRange) {
                // LOW LINE
                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);
                if (rangeColumn) {
                    var rangeLowLine = rangeColumn.lowLine;
                    rangeLowLine.x = lowLine_1.x;
                    rangeLowLine.y = lowLine_1.y;
                    rangeLowLine.x1 = lowLine_1.x1;
                    rangeLowLine.x2 = lowLine_1.x2;
                    rangeLowLine.y1 = lowLine_1.y1;
                    rangeLowLine.y2 = lowLine_1.y2;
                    // HIGH LINE
                    var rangehighLine = rangeColumn.highLine;
                    rangehighLine.x = highLine_1.x;
                    rangehighLine.y = highLine_1.y;
                    rangehighLine.x1 = highLine_1.x1;
                    rangehighLine.x2 = highLine_1.x2;
                    rangehighLine.y1 = highLine_1.y1;
                    rangehighLine.y2 = highLine_1.y2;
                }
            });
        }
    };
    Object.defineProperty(CandlestickSeries.prototype, "xLowField", {
        /**
         * A data field to look for "low" value for horizontal axis.
         *
         * @ignore Exclude from docs
         * @return Field name
         */
        get: function () {
            return this._xLowField;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CandlestickSeries.prototype, "yLowField", {
        /**
         * A data field to look for "low" value for vertical axis.
         *
         * @ignore Exclude from docs
         * @return Field name
         */
        get: function () {
            return this._yLowField;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CandlestickSeries.prototype, "xHighField", {
        /**
         * A data field to look for "high" value for horizontal axis.
         *
         * @ignore Exclude from docs
         * @return Field name
         */
        get: function () {
            return this._xHighField;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CandlestickSeries.prototype, "yHighField", {
        /**
         * A data field to look for "high" value for vertical axis.
         *
         * @ignore Exclude from docs
         * @return Field name
         */
        get: function () {
            return this._yHighField;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets up which data fields to use for data access.
     */
    CandlestickSeries.prototype.defineFields = function () {
        _super.prototype.defineFields.call(this);
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        if (xAxis && yAxis) {
            if (this.baseAxis == xAxis) {
                var yAxisFieldName = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["capitalize"](yAxis.axisFieldName);
                this._yLowField = ("low" + yAxisFieldName + "Y");
                this._yHighField = ("high" + yAxisFieldName + "Y");
            }
            if (this.baseAxis == yAxis) {
                var xAxisFieldName = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["capitalize"](xAxis.axisFieldName);
                this._xLowField = ("low" + xAxisFieldName + "X");
                this._xHighField = ("high" + xAxisFieldName + "X");
            }
            this.addValueField(xAxis, this._xValueFields, this._xLowField);
            this.addValueField(xAxis, this._xValueFields, this._xHighField);
            this.addValueField(yAxis, this._yValueFields, this._yLowField);
            this.addValueField(yAxis, this._yValueFields, this._yHighField);
        }
    };
    /**
     * Creates elements in related legend container, that mimics the look of this
     * Series.
     *
     * @ignore Exclude from docs
     * @param marker  Legend item container
     */
    CandlestickSeries.prototype.createLegendMarker = function (marker) {
        var w = marker.pixelWidth;
        var h = marker.pixelHeight;
        marker.removeChildren();
        var column = marker.createChild(_elements_Candlestick__WEBPACK_IMPORTED_MODULE_3__["Candlestick"]);
        column.shouldClone = false;
        column.copyFrom(this.columns.template);
        var cw;
        var ch;
        var highLine = column.lowLine;
        var lowLine = column.highLine;
        if (this.baseAxis == this.yAxis) {
            cw = w / 3;
            ch = h;
            highLine.y = h / 2;
            lowLine.y = h / 2;
            highLine.x2 = w / 3;
            lowLine.x2 = w / 3;
            lowLine.x = w / 3 * 2;
            column.column.x = w / 3;
        }
        else {
            cw = w;
            ch = h / 3;
            highLine.x = w / 2;
            lowLine.x = w / 2;
            highLine.y2 = h / 3;
            lowLine.y2 = h / 3;
            lowLine.y = h / 3 * 2;
            column.column.y = h / 3;
        }
        column.width = cw;
        column.height = ch;
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_7__["copyProperties"](this, marker, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_7__["copyProperties"](this.columns.template, column, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        column.stroke = this.riseFromOpenState.properties.stroke;
        column.fill = column.stroke;
        var legendDataItem = marker.dataItem;
        legendDataItem.color = column.fill;
        legendDataItem.colorOrig = column.fill;
    };
    /**
     * Returns an element to use for Candlestick
     * @ignore
     * @return Element.
     */
    CandlestickSeries.prototype.createColumnTemplate = function () {
        return new _elements_Candlestick__WEBPACK_IMPORTED_MODULE_3__["Candlestick"]();
    };
    return CandlestickSeries;
}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__["ColumnSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["CandlestickSeries"] = CandlestickSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["CandlestickSeriesDataItem"] = CandlestickSeriesDataItem;
//# sourceMappingURL=CandlestickSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js ***!
  \**********************************************************************************/
/*! exports provided: ColumnSeriesDataItem, ColumnSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColumnSeriesDataItem", function() { return ColumnSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColumnSeries", function() { return ColumnSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _XYSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XYSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../axes/ValueAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js");
/* harmony import */ var _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axes/CategoryAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _elements_Column__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../elements/Column */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js");
/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/elements/RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/**
 * Column series module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */

















/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[ColumnSeries]].
 *
 * @see {@link DataItem}
 */
var ColumnSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ColumnSeriesDataItem, _super);
    /**
     * Constructor
     */
    function ColumnSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "ColumnSeriesDataItem";
        _this.locations["dateX"] = 0.5;
        _this.locations["dateY"] = 0.5;
        _this.locations["categoryX"] = 0.5;
        _this.locations["categoryY"] = 0.5;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(ColumnSeriesDataItem.prototype, "column", {
        /**
         * @return Column
         */
        get: function () {
            return this._column;
        },
        /**
         * A column used to draw a column for this data item.
         *
         * @param column
         */
        set: function (column) {
            this.setColumn(column);
        },
        enumerable: true,
        configurable: true
    });
    ColumnSeriesDataItem.prototype.setColumn = function (column) {
        var _this = this;
        if (this._column && column != this._column) {
            _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__["remove"](this.sprites, this._column);
        }
        this._column = column;
        if (column) {
            var prevDataItem = column.dataItem;
            if (prevDataItem && prevDataItem != this) {
                prevDataItem.column = undefined;
            }
            this.addSprite(column);
            this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_17__["Disposer"](function () {
                // TODO investigate why component is undefined
                // https://codepen.io/team/amcharts/pen/dac4be245d658233a6d7e5597df2208b?editors=0010
                if (_this.component) {
                    _this.component.columns.removeValue(column);
                }
            }));
        }
    };
    Object.defineProperty(ColumnSeriesDataItem.prototype, "width", {
        get: function () {
            var width = this.properties.width;
            if (this._adapterO) {
                width = this._adapterO.apply("width", width);
            }
            return width;
        },
        set: function (value) {
            if (this.properties.width != value) {
                this.properties.width = value;
                if (this.component) {
                    this.component.validateDataElement(this);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnSeriesDataItem.prototype, "height", {
        get: function () {
            var height = this.properties.height;
            if (this._adapterO) {
                height = this._adapterO.apply("height", height);
            }
            return height;
        },
        set: function (value) {
            if (this.properties.height != value) {
                this.properties.height = value;
                if (this.component) {
                    this.component.validateDataElement(this);
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnSeriesDataItem.prototype, "rangesColumns", {
        /**
         * A dictionary storing axes ranges columns by axis uid
         */
        get: function () {
            if (!this._rangesColumns) {
                this._rangesColumns = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_5__["Dictionary"]();
            }
            return this._rangesColumns;
        },
        enumerable: true,
        configurable: true
    });
    return ColumnSeriesDataItem;
}(_XYSeries__WEBPACK_IMPORTED_MODULE_1__["XYSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a column graph.
 *
 * @see {@link IColumnSeriesEvents} for a list of available Events
 * @see {@link IColumnSeriesAdapters} for a list of available Adapters
 * @todo Example
 * @important
 */
var ColumnSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ColumnSeries, _super);
    /**
     * Constructor
     */
    function ColumnSeries() {
        var _this = _super.call(this) || this;
        /**
         * Start location within cell for columns.
         */
        _this._startLocation = 0;
        /**
         * End location within cell for columns.
         */
        _this._endLocation = 1;
        _this.className = "ColumnSeries";
        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["percent"])(100);
        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["percent"])(100);
        _this.strokeOpacity = 0;
        _this.fillOpacity = 1;
        _this.clustered = true;
        var columnsContainer = _this.mainContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_3__["Container"]);
        columnsContainer.shouldClone = false;
        columnsContainer.isMeasured = false;
        columnsContainer.layout = "none";
        _this._columnsContainer = columnsContainer;
        _this.columns.template.pixelPerfect = false;
        _this.tooltipColorSource = _this.columns.template;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(ColumnSeries.prototype, "columnsContainer", {
        /**
         * A container that columns are created in.
         *
         * @ignore Exclude from docs
         */
        get: function () {
            return this._columnsContainer;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    ColumnSeries.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Column Series");
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    ColumnSeries.prototype.createDataItem = function () {
        return new ColumnSeriesDataItem();
    };
    /**
     * (Re)validates the whole series, effectively causing it to redraw.
     *
     * @ignore Exclude from docs
     */
    ColumnSeries.prototype.validate = function () {
        //@todo Check if we can do better than use `instanceof`
        // find start/end locations based on clustered/stacked settings
        // go through chart series instead of base axis series, because axis series doesn't maintain order
        var _this = this;
        this.group.node.removeAttribute("fill");
        if (this.chart && this.xAxis && this.yAxis) {
            var baseAxisSeries = this.chart.series;
            var clusterCount_1 = 0;
            var index_1 = 0;
            var sortedByAxis_1 = [];
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["each"](baseAxisSeries.iterator(), function (series) {
                if (series instanceof ColumnSeries) {
                    if (_this.baseAxis == series.baseAxis) {
                        var index_2;
                        if (_this.baseAxis == _this.xAxis) {
                            index_2 = _this.chart.yAxes.indexOf(series.yAxis);
                        }
                        else {
                            index_2 = _this.chart.xAxes.indexOf(series.xAxis);
                        }
                        sortedByAxis_1.push({ series: series, axis: index_2 });
                    }
                }
            });
            sortedByAxis_1.sort(function (a, b) { return a.axis - b.axis; });
            var prevAxisIndex_1;
            _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__["each"](sortedByAxis_1, function (sortedItem) {
                var series = sortedItem.series;
                if (series instanceof ColumnSeries) {
                    if ((!series.stacked && series.clustered) || (prevAxisIndex_1 != sortedItem.axis && series.clustered)) {
                        clusterCount_1++;
                    }
                    if (series == _this) {
                        index_1 = clusterCount_1 - 1;
                    }
                }
                prevAxisIndex_1 = sortedItem.axis;
            });
            if (!this.clustered) {
                index_1 = 0;
                clusterCount_1 = 1;
            }
            var renderer = this.baseAxis.renderer;
            var cellStartLocation = renderer.cellStartLocation;
            var cellEndLocation = renderer.cellEndLocation;
            this._startLocation = cellStartLocation + (index_1 / clusterCount_1) * (cellEndLocation - cellStartLocation);
            this._endLocation = cellStartLocation + (index_1 + 1) / clusterCount_1 * (cellEndLocation - cellStartLocation);
            var xAxis = this.xAxis;
            var yAxis = this.yAxis;
            if (xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__["CategoryAxis"] && yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"]) {
                if (xAxis.sortBySeries == this) {
                    this.sortCategoryAxis(xAxis, "valueY");
                }
            }
            if (yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__["CategoryAxis"] && xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"]) {
                if (yAxis.sortBySeries == this) {
                    this.sortCategoryAxis(yAxis, "valueX");
                }
            }
        }
        _super.prototype.validate.call(this);
        for (var i = 0; i < this.startIndex; i++) {
            var dataItem = this.dataItems.getIndex(i);
            this.disableUnusedColumns(dataItem);
        }
        for (var i = this.dataItems.length - 1; i > this.endIndex; i--) {
            var dataItem = this.dataItems.getIndex(i);
            this.disableUnusedColumns(dataItem);
        }
        this._propertiesChanged = false;
    };
    ColumnSeries.prototype.sortCategoryAxis = function (axis, key) {
        var _this = this;
        this.dataItems.values.sort(function (x, y) {
            return y.values[key].workingValue - x.values[key].workingValue;
        });
        var i = 0;
        this.dataItems.each(function (dataItem) {
            dataItem._index = i;
            i++;
        });
        axis.dataItems.each(function (dataItem) {
            var axis = dataItem.component;
            var currentPosition = axis.categoryToPosition(dataItem.category) - dataItem.deltaPosition;
            var seriesDataItem = axis.getSeriesDataItemByCategory(dataItem.category, _this);
            if (seriesDataItem) {
                var index = _this.dataItems.indexOf(seriesDataItem);
                dataItem._index = index;
                var deltaPosition = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"]((index + 0.5) / _this.dataItems.length - currentPosition, 3);
                if (dataItem.deltaAnimation && !dataItem.deltaAnimation.isDisposed() && dataItem.deltaAnimation.animationOptions[0].to == deltaPosition) {
                    // void
                }
                else if (deltaPosition != _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"](dataItem.deltaPosition, 3)) {
                    if (dataItem.deltaAnimation) {
                        dataItem.deltaAnimation.stop();
                    }
                    dataItem.deltaAnimation = dataItem.animate({ property: "deltaPosition", from: -deltaPosition, to: 0 }, axis.interpolationDuration, axis.interpolationEasing);
                    _this._disposers.push(dataItem.deltaAnimation);
                }
            }
        });
        axis.dataItems.values.sort(function (x, y) {
            return x.index - y.index;
        });
    };
    /**
     * Validates data item's element, effectively redrawing it.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    ColumnSeries.prototype.validateDataElement = function (dataItem) {
        // important oder here, first real, then super. we need this to know size
        if (this.chart && this.xAxis && this.yAxis) {
            this.validateDataElementReal(dataItem);
            _super.prototype.validateDataElement.call(this, dataItem);
        }
    };
    /**
     * Returns relative start location for the data item.
     *
     * @param dataItem  Data item
     * @return Location (0-1)
     */
    ColumnSeries.prototype.getStartLocation = function (dataItem) {
        var startLocation = this._startLocation;
        if (this.baseAxis == this.xAxis) {
            startLocation += dataItem.locations[this.xOpenField] - 0.5;
        }
        else {
            startLocation += dataItem.locations[this.yOpenField] - 0.5;
        }
        return startLocation;
    };
    /**
     * [handleDataItemWorkingValueChange description]
     *
     * @ignore Exclude from docs
     */
    /*
   public handleDataItemWorkingValueChange(dataItem?: this["_dataItem"], name?: string): void {
       if (this.simplifiedProcessing) {
           this.validateDataElement(dataItem);
       }
       else {
           super.handleDataItemWorkingValueChange(dataItem, name);
       }
   }*/
    /**
     * Returns relative end location for the data item.
     *
     * @param dataItem  Data item
     * @return Location (0-1)
     */
    ColumnSeries.prototype.getEndLocation = function (dataItem) {
        var endLocation = this._endLocation;
        if (this.baseAxis == this.xAxis) {
            endLocation += dataItem.locations[this.xField] - 0.5;
        }
        else {
            endLocation += dataItem.locations[this.yField] - 0.5;
        }
        return endLocation;
    };
    /**
     * Validates data item's elements.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    ColumnSeries.prototype.validateDataElementReal = function (dataItem) {
        var _this = this;
        //	if (dataItem.hasValue([this.xField, this.yField])) { // todo: this doesn't work with categories, think of a better way
        var l;
        var r;
        var t;
        var b;
        var startLocation = this.getStartLocation(dataItem);
        var endLocation = this.getEndLocation(dataItem);
        var xField = this.xField;
        var xOpenField = this.xOpenField;
        var yField = this.yField;
        var yOpenField = this.yOpenField;
        var template = this.columns.template;
        var percentWidth = template.percentWidth;
        var percentHeight = template.percentHeight;
        var pixelWidth = template.pixelWidth;
        var pixelHeight = template.pixelHeight;
        var maxWidth = template.maxWidth;
        var maxHeight = template.maxHeight;
        var paddingLeft = template.pixelPaddingLeft;
        var paddingRight = template.pixelPaddingRight;
        var paddingTop = template.pixelPaddingTop;
        var paddingBottom = template.pixelPaddingBottom;
        var outOfBounds = false;
        var diw = dataItem.width;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](diw)) {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNumber"](diw)) {
                pixelWidth = diw;
            }
            if (diw instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["Percent"]) {
                percentWidth = diw.value * 100;
            }
        }
        var dih = dataItem.height;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](dih)) {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNumber"](dih)) {
                pixelHeight = dih;
            }
            if (dih instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_11__["Percent"]) {
                percentHeight = dih.value * 100;
            }
        }
        // two category axes
        if ((this.xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__["CategoryAxis"]) && (this.yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__["CategoryAxis"])) {
            if (!dataItem.hasValue(this._xValueFields) || !dataItem.hasValue(this._yValueFields)) {
                return;
            }
            startLocation = 0;
            endLocation = 1;
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNaN"](percentWidth)) {
                var offset = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"]((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);
                startLocation += offset;
                endLocation -= offset;
            }
            l = this.xAxis.getX(dataItem, xOpenField, startLocation);
            r = this.xAxis.getX(dataItem, xField, endLocation);
            // in case width is set in pixels
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNaN"](percentWidth)) {
                var offset = ((r - l) - pixelWidth) / 2;
                l += offset;
                r -= offset;
            }
            // in case max width is set in pixels
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNaN"](maxWidth) && maxWidth < Math.abs(r - l)) {
                var offset = ((r - l) - maxWidth) / 2;
                l += offset;
                r -= offset;
            }
            startLocation = 0;
            endLocation = 1;
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNaN"](percentHeight)) {
                var offset = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"]((1 - percentHeight / 100) / 2, 5);
                startLocation += offset;
                endLocation -= offset;
            }
            t = this.yAxis.getY(dataItem, yOpenField, startLocation);
            b = this.yAxis.getY(dataItem, yField, endLocation);
            // in case width is set in pixels
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNaN"](percentHeight)) {
                var offset = ((b - t) - pixelHeight) / 2;
                b += offset;
                t -= offset;
            }
            // in case max width is set in pixels
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNaN"](maxHeight) && maxHeight < Math.abs(b - t)) {
                var offset = ((b - t) - maxHeight) / 2;
                b += offset;
                t -= offset;
            }
            r = this.fixHorizontalCoordinate(r);
            l = this.fixHorizontalCoordinate(l);
            t = this.fixVerticalCoordinate(t);
            b = this.fixVerticalCoordinate(b);
        }
        else if (this.baseAxis == this.xAxis) {
            if (!dataItem.hasValue(this._yValueFields)) {
                return;
            }
            // in case width is set in percent
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNaN"](percentWidth)) {
                var offset = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"]((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);
                startLocation += offset;
                endLocation -= offset;
            }
            l = this.xAxis.getX(dataItem, xOpenField, startLocation);
            r = this.xAxis.getX(dataItem, xField, endLocation);
            // in case width is set in pixels
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNaN"](percentWidth)) {
                var offset = ((r - l) - pixelWidth) / 2;
                l += offset;
                r -= offset;
            }
            // in case width is set in pixels
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNaN"](maxWidth) && maxWidth < Math.abs(r - l)) {
                var offset = ((r - l) - maxWidth) / 2;
                l += offset;
                r -= offset;
            }
            var bottomLocation = dataItem.locations[yOpenField];
            var topLocation = dataItem.locations[yField];
            // otherwise gantt chart will start items in the middle of a cell
            if (this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"]) {
                if (this.dataFields[this.yField] != this.dataFields[this.yOpenField]) {
                    bottomLocation = 0;
                    topLocation = 0;
                }
            }
            b = this.yAxis.getY(dataItem, yOpenField, bottomLocation);
            t = this.yAxis.getY(dataItem, yField, topLocation);
            // used to save location for bullets, but it's not a good approach
            // dataItem.locations[xField] = startLocation + (endLocation - startLocation) / 2;
            var axisLenght = Math.ceil(this.yAxis.axisLength);
            if ((t < 0 && b < 0) || (t > axisLenght && b > axisLenght)) {
                outOfBounds = true;
            }
            t = this.fixVerticalCoordinate(t);
            b = this.fixVerticalCoordinate(b);
            if (Math.abs(r - l) - paddingLeft - paddingRight == 0) {
                outOfBounds = true;
            }
        }
        // horizontal bars
        else {
            if (!dataItem.hasValue(this._xValueFields)) {
                return;
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNaN"](percentHeight)) {
                var offset = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["round"]((endLocation - startLocation) * (1 - percentHeight / 100) / 2, 5);
                startLocation += offset;
                endLocation -= offset;
            }
            t = this.yAxis.getY(dataItem, yOpenField, startLocation);
            b = this.yAxis.getY(dataItem, yField, endLocation);
            // in case height is set in pixels
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNaN"](percentHeight)) {
                var offset = ((b - t) - pixelHeight) / 2;
                b -= offset;
                t += offset;
            }
            // in case height is set in pixels
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNaN"](maxHeight) && maxHeight < Math.abs(b - t)) {
                var offset = ((b - t) - maxHeight) / 2;
                b -= offset;
                t += offset;
            }
            var rightLocation = dataItem.locations[xField];
            var leftLocation = dataItem.locations[xOpenField];
            // otherwise gantt chart will start items in the middle of a cell
            if (this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"]) {
                if (this.dataFields[this.xField] != this.dataFields[this.xOpenField]) {
                    rightLocation = 0;
                    leftLocation = 0;
                }
            }
            r = this.xAxis.getX(dataItem, xField, rightLocation);
            l = this.xAxis.getX(dataItem, xOpenField, leftLocation);
            // used to save location for bullets, but it's not a good approach
            // dataItem.locations[yField] = startLocation + (endLocation - startLocation) / 2;
            var axisLenght = Math.ceil(this.xAxis.axisLength);
            if ((r < 0 && l < 0) || (r > axisLenght && l > axisLenght)) {
                outOfBounds = true;
            }
            r = this.fixHorizontalCoordinate(r);
            l = this.fixHorizontalCoordinate(l);
            if (Math.abs(t - b) - paddingTop - paddingBottom == 0) {
                outOfBounds = true;
            }
        }
        var w = Math.abs(r - l);
        var h = Math.abs(b - t);
        var x = Math.min(l, r);
        var y = Math.min(t, b);
        if (!outOfBounds) {
            var column_1;
            if (!dataItem.column) {
                column_1 = this.columns.create();
                //$object.forceCopyProperties(this.columns.template, column, visualProperties);
                _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__["copyProperties"](this, column_1, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]); // need this because 3d columns are not in the same container
                _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__["copyProperties"](this.columns.template, column_1, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]); // second time, no force, so that columns.template would override series properties
                dataItem.addSprite(column_1);
                dataItem.column = column_1;
                column_1.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.
                // accessibility
                if (this.itemsFocusable()) {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](this.role)) {
                        this.role = "menu";
                    }
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](column_1.role)) {
                        column_1.role = "menuitem";
                    }
                    column_1.focusable = true;
                }
                else {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](this.role)) {
                        this.role = "list";
                    }
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](column_1.role)) {
                        column_1.role = "listitem";
                    }
                    column_1.focusable = false;
                }
                if (column_1.focusable) {
                    column_1.events.on("focus", function (ev) {
                        column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);
                    }, undefined, false);
                    column_1.events.on("blur", function (ev) {
                        column_1.readerTitle = "";
                    }, undefined, false);
                }
                if (column_1.hoverable) {
                    column_1.events.on("over", function (ev) {
                        column_1.readerTitle = _this.populateString(_this.itemReaderText, dataItem);
                    }, undefined, false);
                    column_1.events.on("out", function (ev) {
                        column_1.readerTitle = "";
                    }, undefined, false);
                }
                column_1.parent = this.columnsContainer;
                column_1.virtualParent = this;
            }
            else {
                column_1 = dataItem.column;
                if (this._propertiesChanged) {
                    _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__["copyProperties"](this, column_1, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
                    _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__["copyProperties"](this.columns.template, column_1, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__["each"](_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"], function (property) {
                        column_1[property] = column_1[property];
                    });
                }
            }
            column_1.width = w;
            column_1.height = h;
            column_1.x = x;
            column_1.y = y;
            column_1.realX = l;
            column_1.realY = t;
            column_1.realWidth = r - l;
            column_1.realHeight = b - t;
            this.setColumnStates(column_1);
            if (column_1.invalid) {
                column_1.validate(); // validate as if it was used previously, it will flicker with previous dimensions
            }
            column_1.__disabled = false;
            //column.returnAfterTemp();
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["each"](this.axisRanges.iterator(), function (axisRange) {
                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);
                if (!rangeColumn) {
                    rangeColumn = _this.columns.create();
                    //$object.forceCopyProperties(this.columns.template, rangeColumn, visualProperties);
                    _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__["copyProperties"](axisRange.contents, rangeColumn, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]); // need this because 3d columns are not in the same container
                    dataItem.addSprite(rangeColumn);
                    dataItem.rangesColumns.setKey(axisRange.uid, rangeColumn);
                    rangeColumn.paper = _this.paper; // sometimes pattern is not drawn if is set with adapter without this.
                }
                rangeColumn.parent = axisRange.contents;
                rangeColumn.width = w;
                rangeColumn.height = h;
                rangeColumn.x = x;
                rangeColumn.y = y;
                _this.setColumnStates(rangeColumn);
                if (rangeColumn.invalid) {
                    rangeColumn.validate(); // validate as if it was used previously, it will flicker with previous dimensions
                }
                rangeColumn.__disabled = false;
                //rangeColumn.returnAfterTemp();
            });
        }
        else {
            this.disableUnusedColumns(dataItem);
        }
        dataItem.itemWidth = w;
        dataItem.itemHeight = h;
    };
    /**
     * @ignore
     */
    ColumnSeries.prototype.disableUnusedColumns = function (dataItem) {
        if (dataItem) {
            if (dataItem.column) {
                // otherwise might flicker when enabling
                dataItem.column.width = 0;
                dataItem.column.height = 0;
                dataItem.column.__disabled = true;
            }
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["each"](this.axisRanges.iterator(), function (axisRange) {
                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);
                if (rangeColumn) {
                    // otherwise might flicker when enabling
                    rangeColumn.width = 0;
                    rangeColumn.height = 0;
                    rangeColumn.__disabled = true;
                }
            });
        }
    };
    /**
     * Apply different state/coloring to columns based on the change value.
     *
     * @param sprite  Sprite to apply state to
     * @todo Do not apply accessibility to wicks of the candlesticks
     */
    ColumnSeries.prototype.setColumnStates = function (sprite) {
        if (this._dropFromOpenState || this._dropFromPreviousState || this._riseFromOpenState || this._riseFromPreviousState) {
            var dataItem = sprite.dataItem;
            if (this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"] || this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"]) {
                var open_1;
                var value = void 0;
                var change = void 0;
                if (this.baseAxis == this.yAxis) {
                    if (this.xOpenField && this.xField && this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"]) {
                        open_1 = dataItem.getValue(this.xOpenField);
                        value = dataItem.getValue(this.xField);
                    }
                    change = dataItem.getValue(this.xAxis.axisFieldName + "X", "previousChange");
                }
                else {
                    if (this.yOpenField && this.yField && this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"]) {
                        open_1 = dataItem.getValue(this.yOpenField);
                        value = dataItem.getValue(this.yField);
                    }
                    change = dataItem.getValue(this.yAxis.axisFieldName + "Y", "previousChange");
                }
                if (value < open_1) {
                    dataItem.droppedFromOpen = true;
                    sprite.defaultState.copyFrom(this._dropFromOpenState);
                    sprite.setState(this._dropFromOpenState, 0);
                }
                else {
                    dataItem.droppedFromOpen = false;
                    sprite.defaultState.copyFrom(this._riseFromOpenState);
                    sprite.setState(this._riseFromOpenState, 0);
                }
                if (change < 0) {
                    dataItem.droppedFromPrevious = true;
                    sprite.defaultState.copyFrom(this._dropFromPreviousState);
                    sprite.setState((this._dropFromPreviousState), 0);
                }
                else {
                    dataItem.droppedFromPrevious = false;
                    sprite.defaultState.copyFrom(this._riseFromPreviousState);
                    sprite.setState((this._riseFromPreviousState), 0);
                }
            }
        }
    };
    Object.defineProperty(ColumnSeries.prototype, "columns", {
        /**
         * A list of column elements in the series.
         *
         * @return Columns
         */
        get: function () {
            if (!this._columns) {
                this._columns = new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__["ListTemplate"](this.createColumnTemplate());
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__["ListDisposer"](this._columns));
                this._disposers.push(this._columns.template);
            }
            return this._columns;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates and returns a column element to use as a template.
     *
     * @return Column template
     */
    ColumnSeries.prototype.createColumnTemplate = function () {
        return new _elements_Column__WEBPACK_IMPORTED_MODULE_9__["Column"]();
    };
    Object.defineProperty(ColumnSeries.prototype, "clustered", {
        /**
         * @return Clustered?
         */
        get: function () {
            return this.getPropertyValue("clustered");
        },
        /**
         * Cluster this series columns?
         *
         * Setting to `false` will make columns overlap with other series.
         *
         * @default true
         * @param value  Clustered?
         */
        set: function (value) {
            this.setPropertyValue("clustered", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnSeries.prototype, "dropFromOpenState", {
        /**
         * @return State
         */
        get: function () {
            if (!this._dropFromOpenState) {
                this._dropFromOpenState = this.states.create("dropFromOpenState");
            }
            return this._dropFromOpenState;
        },
        /**
         * A state to apply to a column when close value is lower than open value.
         *
         * Can be used to differentiate appearance based on value relations.
         *
         * NOTE: this will work only if at least one axis is [[ValueAxis]].
         *
         * @readonly You can modify state object, but can't overwrite it
         * @param  value  State
         */
        set: function (value) {
            this._dropFromOpenState = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnSeries.prototype, "dropFromPreviousState", {
        /**
         * @return State
         */
        get: function () {
            if (!this._dropFromPreviousState) {
                this._dropFromPreviousState = this.states.create("dropFromPreviousState");
            }
            return this._dropFromPreviousState;
        },
        /**
         * A state to apply to a column when its value is lower value of a previous
         * column.
         *
         * Can be used to differentiate appearance based on value relations.
         *
         * @readonly You can modify state object, but can't overwrite it
         * @param  value  State
         */
        set: function (value) {
            this._dropFromPreviousState = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnSeries.prototype, "riseFromOpenState", {
        /**
         * @return State
         */
        get: function () {
            if (!this._riseFromOpenState) {
                this._riseFromOpenState = this.states.create("riseFromOpenState");
            }
            return this._riseFromOpenState;
        },
        /**
         * A state to apply to a column when close value is same or higher than open
         * value.
         *
         * Can be used to differentiate appearance based on value relations.
         *
         * NOTE: this will work only if at least one axis is [[ValueAxis]].
         *
         * @readonly You can modify state object, but can't overwrite it
         * @param  value  State
         */
        set: function (value) {
            this._riseFromOpenState = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnSeries.prototype, "riseFromPreviousState", {
        /**
         * @return State
         */
        get: function () {
            if (!this._riseFromPreviousState) {
                this._riseFromPreviousState = this.states.create("riseFromPreviousState");
            }
            return this._riseFromPreviousState;
        },
        /**
         * A state to apply to a column when its value is same or higher than value
         * of a previous column.
         *
         * Can be used to differentiate appearance based on value relations.
         *
         * @readonly You can modify state object, but can't overwrite it
         * @param  value  State
         */
        set: function (value) {
            this._riseFromPreviousState = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates value of the related legend item.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    ColumnSeries.prototype.updateLegendValue = function (dataItem, notRange) {
        var _this = this;
        _super.prototype.updateLegendValue.call(this, dataItem, notRange);
        if (this.legendDataItem) {
            var marker = this.legendDataItem.marker;
            var fromOpenState_1;
            var fromPreviousState_1;
            if (dataItem) {
                if (dataItem.droppedFromOpen) {
                    fromOpenState_1 = this._dropFromOpenState;
                }
                else {
                    fromOpenState_1 = this._riseFromOpenState;
                }
                if (dataItem.droppedFromPrevious) {
                    fromPreviousState_1 = this._dropFromPreviousState;
                }
                else {
                    fromPreviousState_1 = this._riseFromPreviousState;
                }
            }
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["each"](marker.children.iterator(), function (child) {
                if (dataItem) {
                    child.setState(fromPreviousState_1);
                    child.setState(fromOpenState_1);
                }
                else {
                    // todo: think what to do here, maybe apply above states based on totals?
                    child.setState(_this._riseFromPreviousState);
                    child.setState(_this._riseFromOpenState);
                }
            });
        }
    };
    /**
     * Creates elements in related legend container, that mimics the look of this
     * Series.
     *
     * @ignore Exclude from docs
     * @param marker  Legend item container
     */
    ColumnSeries.prototype.createLegendMarker = function (marker) {
        var w = marker.pixelWidth;
        var h = marker.pixelHeight;
        marker.removeChildren();
        var column = marker.createChild(_core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_10__["RoundedRectangle"]);
        column.shouldClone = false;
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_13__["copyProperties"](this, column, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        column.copyFrom(this.columns.template);
        column.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow
        column.width = w;
        column.height = h;
        var legendDataItem = marker.dataItem;
        legendDataItem.color = this.fill;
        legendDataItem.colorOrig = this.fill;
    };
    /**
     * Copies all properties from another instance of [[ColumnSeries]].
     *
     * @param source  Source series
     */
    ColumnSeries.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.columns.template.copyFrom(source.columns.template);
    };
    /**
    * returns bullet x location
    * @ignore
    */
    ColumnSeries.prototype.getBulletLocationX = function (bullet, field) {
        if (this.baseAxis == this.xAxis) {
            var bulletLocationX = bullet.locationX;
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNumber"](bulletLocationX)) {
                bulletLocationX = 0.5;
            }
            var endLocation = this.getEndLocation(bullet.dataItem);
            var startLocation = this.getStartLocation(bullet.dataItem);
            return endLocation - (endLocation - startLocation) * bulletLocationX;
        }
        else {
            return _super.prototype.getBulletLocationX.call(this, bullet, field);
        }
    };
    /**
    * returns bullet y location
    * @ignore
    */
    ColumnSeries.prototype.getBulletLocationY = function (bullet, field) {
        if (this.baseAxis == this.yAxis) {
            var bulletLocationY = bullet.locationY;
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNumber"](bulletLocationY)) {
                bulletLocationY = 0.5;
            }
            var endLocation = this.getEndLocation(bullet.dataItem);
            var startLocation = this.getStartLocation(bullet.dataItem);
            return endLocation - (endLocation - startLocation) * bulletLocationY;
        }
        else {
            return _super.prototype.getBulletLocationY.call(this, bullet, field);
        }
    };
    ColumnSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {
        //if (this.baseAxis == this.xAxis) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNumber"](bulletLocationX)) {
            if (dataItem) {
                bulletLocationX = dataItem.locations[field];
            }
            else {
                bulletLocationX = 0.5;
            }
        }
        return this._endLocation - (this._endLocation - this._startLocation) * (1 - bulletLocationX);
        //}
        //else {
        //	return super.getAdjustedXLocation(dataItem, field);
        //}
    };
    ColumnSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {
        //if (this.baseAxis == this.yAxis) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["isNumber"](bulletLocationY)) {
            if (dataItem) {
                bulletLocationY = dataItem.locations[field];
            }
            else {
                bulletLocationY = 0.5;
            }
        }
        return this._endLocation - (this._endLocation - this._startLocation) * bulletLocationY;
        //}
        //else {
        //	return super.getAdjustedYLocation(dataItem, field);
        //}
    };
    /**
     * @ignore Exclude from docs
     */
    ColumnSeries.prototype.fixVerticalCoordinate = function (coordinate) {
        var paddingBottom = this.columns.template.pixelPaddingBottom;
        var paddingTop = this.columns.template.pixelPaddingTop;
        var minY = -paddingTop;
        var maxY = this.yAxis.axisLength + paddingBottom;
        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["fitToRange"](coordinate, minY, maxY);
    };
    /**
     * @ignore Exclude from docs
     */
    ColumnSeries.prototype.fixHorizontalCoordinate = function (coordinate) {
        var paddingLeft = this.columns.template.pixelPaddingLeft;
        var paddingRight = this.columns.template.pixelPaddingRight;
        var minX = -paddingLeft;
        var maxX = this.xAxis.axisLength + paddingRight;
        return _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["fitToRange"](coordinate, minX, maxX);
    };
    /**
     * @ignore
     */
    ColumnSeries.prototype.disposeData = function () {
        _super.prototype.disposeData.call(this);
        this.columns.clear();
    };
    return ColumnSeries;
}(_XYSeries__WEBPACK_IMPORTED_MODULE_1__["XYSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses["ColumnSeries"] = ColumnSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_8__["registry"].registeredClasses["ColumnSeriesDataItem"] = ColumnSeriesDataItem;
//# sourceMappingURL=ColumnSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries3D.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries3D.js ***!
  \************************************************************************************/
/*! exports provided: ColumnSeries3DDataItem, ColumnSeries3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColumnSeries3DDataItem", function() { return ColumnSeries3DDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ColumnSeries3D", function() { return ColumnSeries3D; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _series_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../series/ColumnSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js");
/* harmony import */ var _elements_Column3D__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../elements/Column3D */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column3D.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * 3D column series module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
var ColumnSeries3DDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ColumnSeries3DDataItem, _super);
    /**
     * Constructor
     */
    function ColumnSeries3DDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "ColumnSeries3DDataItem";
        _this.applyTheme();
        return _this;
    }
    return ColumnSeries3DDataItem;
}(_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__["ColumnSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a 3D column graph.
 *
 * @see {@link IColumnSeries3DEvents} for a list of available Events
 * @see {@link IColumnSeries3DAdapters} for a list of available Adapters
 * @todo Example
 * @important
 */
var ColumnSeries3D = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ColumnSeries3D, _super);
    /**
     * Constructor
     */
    function ColumnSeries3D() {
        var _this = _super.call(this) || this;
        _this.className = "ColumnSeries3D";
        _this.columns.template.column3D.applyOnClones = true;
        _this.columns.template.hiddenState.properties.visible = true;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(ColumnSeries3D.prototype, "columnsContainer", {
        /**
         * @ignore
         */
        get: function () {
            var chart = this.chart;
            if (chart && chart.columnsContainer && chart.leftAxesContainer.layout != "vertical" && chart.rightAxesContainer.layout != "vertical" && chart.bottomAxesContainer.layout != "horizontal" && chart.topAxesContainer.layout != "horizontal") {
                return chart.columnsContainer;
            }
            else {
                return this._columnsContainer;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Validates data item's elements.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    ColumnSeries3D.prototype.validateDataElementReal = function (dataItem) {
        _super.prototype.validateDataElementReal.call(this, dataItem);
        if (dataItem.column) {
            dataItem.column.dx = this.dx;
            dataItem.column.dy = this.dy;
            dataItem.column.visible = this.visible;
        }
    };
    /**
     * Validates data item's elements.
     *
     * @ignore Exclude from docs
     */
    ColumnSeries3D.prototype.validateDataElements = function () {
        _super.prototype.validateDataElements.call(this);
        if (this.chart) {
            this.chart.invalidateLayout();
        }
    };
    /**
     * Returns an element to use for 3D bar.
     * @ignore
     * @return Element.
     */
    ColumnSeries3D.prototype.createColumnTemplate = function () {
        return new _elements_Column3D__WEBPACK_IMPORTED_MODULE_2__["Column3D"]();
    };
    Object.defineProperty(ColumnSeries3D.prototype, "depth", {
        /**
         * @ignore Exclude from docs
         * @return Depth (px)
         */
        get: function () {
            return this.getPropertyValue("depth");
        },
        /**
         * Depth (height) of the slices in the series in pixels.
         *
         * @ignore Exclude from docs
         * @param value  Depth (px)
         */
        set: function (value) {
            this.setPropertyValue("depth", value, true);
            var template = this.columns.template; // todo: Cone is not Rectangle3D, maybe we should do some I3DShape?
            template.column3D.depth = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnSeries3D.prototype, "angle", {
        /**
         * @ignore Exclude from docs
         * @return Angle (0-360)
         */
        get: function () {
            return this.getPropertyValue("angle");
        },
        /**
         * Angle of view for the slices in series. (0-360)
         *
         * @ignore Exclude from docs
         * @param value  Angle (0-360)
         */
        set: function (value) {
            this.setPropertyValue("angle", value);
            var template = this.columns.template;
            template.column3D.angle = value;
        },
        enumerable: true,
        configurable: true
    });
    return ColumnSeries3D;
}(_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__["ColumnSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["ColumnSeries3D"] = ColumnSeries3D;
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["ColumnSeries3DDataItem"] = ColumnSeries3DDataItem;
//# sourceMappingURL=ColumnSeries3D.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ConeSeries.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/ConeSeries.js ***!
  \********************************************************************************/
/*! exports provided: ConeSeriesDataItem, ConeSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConeSeriesDataItem", function() { return ConeSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ConeSeries", function() { return ConeSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _ColumnSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ColumnSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js");
/* harmony import */ var _elements_ConeColumn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../elements/ConeColumn */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ConeColumn.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * ConeSeries module
 * Not recommended using if you use scrollbars or your chart is zoomable in some other way.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[ConeSeries]].
 *
 * @see {@link DataItem}
 */
var ConeSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ConeSeriesDataItem, _super);
    /**
     * Constructor
     */
    function ConeSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "ConeSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    return ConeSeriesDataItem;
}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__["ColumnSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a cone graph.
 *
 * @see {@link IConeSeriesEvents} for a list of available Events
 * @see {@link IConeSeriesAdapters} for a list of available Adapters
 * @todo Example
 * @important
 */
var ConeSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ConeSeries, _super);
    /**
     * Constructor
     */
    function ConeSeries() {
        var _this = _super.call(this) || this;
        _this.className = "ConeSeries";
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns an element to use for Candlestick
     * @ignore
     * @return Element.
     */
    ConeSeries.prototype.createColumnTemplate = function () {
        return new _elements_ConeColumn__WEBPACK_IMPORTED_MODULE_2__["ConeColumn"]();
    };
    /**
     * Returns an SVG path to use as series mask.
     *
     * @return SVG path
     */
    ConeSeries.prototype.getMaskPath = function () {
        var dx = 0;
        var dy = 0;
        var column = this.columns.getIndex(0);
        if (column) {
            if (this.baseAxis == this.xAxis) {
                dy = column.coneColumn.innerWidth / 2 + 1;
            }
            else {
                dx = column.coneColumn.innerHeight / 2 + 1;
            }
            return _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["rectToPath"]({
                x: -dx,
                y: 0,
                width: this.xAxis.axisLength + dx,
                height: this.yAxis.axisLength + dy
            });
        }
    };
    /**
     * Validates data item's elements.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    ConeSeries.prototype.validateDataElementReal = function (dataItem) {
        _super.prototype.validateDataElementReal.call(this, dataItem);
        var column = dataItem.column;
        if (column) {
            var coneColumn = dataItem.column.coneColumn;
            coneColumn.fill = dataItem.column.fill;
            if (this.baseAxis == this.yAxis) {
                coneColumn.orientation = "horizontal";
            }
            else {
                coneColumn.orientation = "vertical";
            }
        }
    };
    return ConeSeries;
}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__["ColumnSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["ConeSeries"] = ConeSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["ConeSeriesDataItem"] = ConeSeriesDataItem;
//# sourceMappingURL=ConeSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/CurvedColumnSeries.js":
/*!****************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/CurvedColumnSeries.js ***!
  \****************************************************************************************/
/*! exports provided: CurvedColumnSeriesDataItem, CurvedColumnSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CurvedColumnSeriesDataItem", function() { return CurvedColumnSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "CurvedColumnSeries", function() { return CurvedColumnSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _ColumnSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ColumnSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js");
/* harmony import */ var _elements_CurvedColumn__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../elements/CurvedColumn */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/CurvedColumn.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/**
 * CurvedColumnSeries module.
 *
 * Not recommended using if you use scrollbars or your chart is zoomable in some other way.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[CurvedColumnSeries]].
 *
 * @see {@link DataItem}
 */
var CurvedColumnSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CurvedColumnSeriesDataItem, _super);
    /**
     * Constructor
     */
    function CurvedColumnSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "CurvedColumnSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    return CurvedColumnSeriesDataItem;
}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__["ColumnSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a curved columns graph.
 *
 * @see {@link ICurvedColumnSeriesEvents} for a list of available Events
 * @see {@link ICurvedColumnSeriesAdapters} for a list of available Adapters
 * @important
 */
var CurvedColumnSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(CurvedColumnSeries, _super);
    /**
     * Constructor
     */
    function CurvedColumnSeries() {
        var _this = _super.call(this) || this;
        _this.className = "CurvedColumnSeries";
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns an element to use for the curved column.
     *
     * @ignore Exclude from docs
     * @return Element.
     */
    CurvedColumnSeries.prototype.createColumnTemplate = function () {
        return new _elements_CurvedColumn__WEBPACK_IMPORTED_MODULE_2__["CurvedColumn"]();
    };
    /**
     * Validates data item's elements.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    CurvedColumnSeries.prototype.validateDataElementReal = function (dataItem) {
        _super.prototype.validateDataElementReal.call(this, dataItem);
        var column = dataItem.column;
        column = dataItem.column;
        if (column) {
            var curvedColumn = dataItem.column.curvedColumn;
            curvedColumn.fill = dataItem.column.fill;
            if (this.baseAxis == this.yAxis) {
                column.orientation = "horizontal";
            }
            else {
                column.orientation = "vertical";
            }
        }
    };
    return CurvedColumnSeries;
}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__["ColumnSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["CurvedColumnSeries"] = CurvedColumnSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["CurvedColumnSeriesDataItem"] = CurvedColumnSeriesDataItem;
//# sourceMappingURL=CurvedColumnSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/FunnelSeries.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/FunnelSeries.js ***!
  \**********************************************************************************/
/*! exports provided: FunnelSeriesDataItem, FunnelSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FunnelSeriesDataItem", function() { return FunnelSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FunnelSeries", function() { return FunnelSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _PercentSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PercentSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js");
/* harmony import */ var _elements_FunnelSlice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../elements/FunnelSlice */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelSlice.js");
/* harmony import */ var _elements_FunnelTick__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../elements/FunnelTick */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelTick.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_Options__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/Options */ "./node_modules/@amcharts/amcharts4/.internal/core/Options.js");
/**
 * Defines Funnel Chart Series.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */












/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
//@todo: sequenced?
/**
 * Defines a [[DataItem]] for [[FunnelSeries]].
 *
 * @see {@link DataItem}
 */
var FunnelSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FunnelSeriesDataItem, _super);
    /**
     * Constructor
     */
    function FunnelSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "FunnelSeriesDataItem";
        // this helps to invalidate series when value is 0 an it is hidden (no other events are triggered then)
        _this.events.on("visibilitychanged", function () {
            if (_this.component) {
                _this.component.invalidateDataItems();
            }
        }, _this, false);
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(FunnelSeriesDataItem.prototype, "sliceLink", {
        /**
         * A [[FunnelSlice]] element, related to this data item ([[FunnelSlice]]).
         *
         * @readonly
         * @return Slice element
         */
        get: function () {
            var _this = this;
            if (!this._sliceLink) {
                var sliceLink_1 = this.component.sliceLinks.create();
                this._sliceLink = sliceLink_1;
                this._disposers.push(sliceLink_1);
                sliceLink_1.parent = this.component.slicesContainer;
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_11__["Disposer"](function () {
                    if (_this.component) {
                        _this.component.sliceLinks.removeValue(sliceLink_1);
                    }
                }));
                this.addSprite(sliceLink_1);
                sliceLink_1.visible = this.visible;
            }
            return this._sliceLink;
        },
        enumerable: true,
        configurable: true
    });
    return FunnelSeriesDataItem;
}(_PercentSeries__WEBPACK_IMPORTED_MODULE_1__["PercentSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].
 *
 * @see {@link IFunnelSeriesEvents} for a list of available Events
 * @see {@link IFunnelSeriesAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation
 * @important
 */
var FunnelSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FunnelSeries, _super);
    /**
     * Constructor
     */
    function FunnelSeries() {
        var _this = _super.call(this) || this;
        _this._nextY = 0;
        _this.className = "FunnelSeries";
        _this.orientation = "vertical";
        _this.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        _this.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        _this.slicesContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        _this.slicesContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
        _this._disposers.push(_this.slicesContainer.events.on("maxsizechanged", _this.invalidateDataItems, _this, false));
        _this.labelsOpposite = true;
        _this.labelsContainer.layout = "absolute";
        _this.bottomRatio = 0;
        _this.applyTheme();
        return _this;
    }
    /**
     * Creates a [[FunnelSlice]] element.
     *
     * @return Slice
     */
    FunnelSeries.prototype.createSlice = function () {
        return new _elements_FunnelSlice__WEBPACK_IMPORTED_MODULE_2__["FunnelSlice"]();
    };
    /**
     * Creates a [[FunnelTick]] element.
     *
     * @return Tick
     */
    FunnelSeries.prototype.createTick = function () {
        return new _elements_FunnelTick__WEBPACK_IMPORTED_MODULE_3__["FunnelTick"]();
    };
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    FunnelSeries.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Funnel Series");
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    FunnelSeries.prototype.createDataItem = function () {
        return new FunnelSeriesDataItem();
    };
    /**
     * Inits FunnelSlice.
     *
     * @param slice to init
     */
    FunnelSeries.prototype.initSlice = function (slice) {
        slice.isMeasured = false;
        slice.defaultState.properties.scale = 1;
        slice.observe("scale", this.handleSliceScale, this);
        slice.observe(["dx", "dy", "x", "y"], this.handleSliceMove, this);
        slice.tooltipText = "{category}: {value.percent.formatNumber('#.#')}% ({value.value})";
        var hoverState = slice.states.create("hover");
        hoverState.properties.expandDistance = 0.2;
    };
    /**
     * [initLabel description]
     *
     * @todo Description
     * @param label [description]
     */
    FunnelSeries.prototype.initLabel = function (label) {
        _super.prototype.initLabel.call(this, label);
        label.verticalCenter = "middle";
        label.horizontalCenter = "middle";
        label.isMeasured = true;
        label.padding(5, 5, 5, 5);
    };
    /**
     * (Re)validates the whole series, effectively causing it to redraw.
     *
     * @ignore Exclude from docs
     */
    FunnelSeries.prototype.validate = function () {
        _super.prototype.validate.call(this);
        this._nextY = 0;
    };
    /**
     * [validateDataElements description]
     *
     * @todo Description
     * @ignore Exclude from docs
     */
    FunnelSeries.prototype.validateDataElements = function () {
        var _this = this;
        var slicesContainer = this.slicesContainer;
        var labelsContainer = this.labelsContainer;
        var labelTemplate = this.labels.template;
        if (this.alignLabels) {
            labelTemplate.interactionsEnabled = true;
            slicesContainer.isMeasured = true;
            labelsContainer.isMeasured = true;
        }
        else {
            labelTemplate.interactionsEnabled = false;
            slicesContainer.isMeasured = false;
            labelsContainer.isMeasured = false;
        }
        var total = 0;
        var count = 0;
        this.dataItems.each(function (dItem) {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](dItem.value)) {
                count++;
                if (dItem.value > 0) {
                    total += Math.abs(dItem.getWorkingValue("value") / dItem.value);
                }
                else {
                    if (_this.ignoreZeroValues) {
                        count--;
                    }
                    else {
                        if (!dItem.visible || dItem.__disabled || dItem.isHiding) {
                            count--;
                        }
                        else {
                            total += 1;
                        }
                    }
                }
            }
        });
        this._total = 1 / count * total;
        this._count = count;
        _super.prototype.validateDataElements.call(this);
        this.arrangeLabels();
    };
    /**
     * [getNextValue description]
     *
     * @todo Description
     * @param dataItem  [description]
     * @return [description]
     */
    FunnelSeries.prototype.getNextValue = function (dataItem) {
        var index = dataItem.index;
        var nextValue = dataItem.getWorkingValue("value");
        if (index < this.dataItems.length - 1) {
            var nextItem = this.dataItems.getIndex(index + 1);
            nextValue = nextItem.getWorkingValue("value");
            if (!nextItem.visible || nextItem.isHiding || nextItem.__disabled || (nextItem.value == 0 && this.ignoreZeroValues)) {
                return this.getNextValue(nextItem);
            }
        }
        return nextValue;
    };
    /**
     * [formDataElement description]
     *
     * @todo Description
     */
    FunnelSeries.prototype.formDataElement = function () {
    };
    /**
     * Validates data item's element, effectively redrawing it.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    FunnelSeries.prototype.validateDataElement = function (dataItem) {
        var _this = this;
        //if ($type.hasValue(dataItem.value)) {
        // FunnelSlice
        var slice = dataItem.slice;
        slice.orientation = this.orientation;
        var sliceLink = dataItem.sliceLink;
        sliceLink.orientation = this.orientation;
        var tick = dataItem.tick;
        var label = dataItem.label;
        tick.slice = slice;
        tick.label = label;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](dataItem.value)) {
            this.decorateSlice(dataItem);
            _core_utils_Array__WEBPACK_IMPORTED_MODULE_9__["each"](dataItem.sprites, function (sprite) {
                if (dataItem.value == 0 && _this.ignoreZeroValues) {
                    sprite.__disabled = true;
                }
                else {
                    sprite.__disabled = false;
                }
            });
        }
        else {
            _core_utils_Array__WEBPACK_IMPORTED_MODULE_9__["each"](dataItem.sprites, function (sprite) {
                sprite.__disabled = true;
            });
        }
        if (dataItem.index == this.dataItems.length - 1) {
            sliceLink.disabled = true;
        }
        // do this at the end, otherwise bullets won't be positioned properly
        _super.prototype.validateDataElement.call(this, dataItem);
        sliceLink.fill = slice.fill;
        //}
    };
    /**
     * [decorateSlice description]
     *
     * @todo Description
     * @param dataItem [description]
     */
    FunnelSeries.prototype.decorateSlice = function (dataItem) {
        var slice = dataItem.slice;
        var sliceLink = dataItem.sliceLink;
        var label = dataItem.label;
        var tick = dataItem.tick;
        var maxWidth = this.slicesContainer.innerWidth;
        var maxHeight = this.slicesContainer.innerHeight;
        var nextValue = this.getNextValue(dataItem);
        var workingValue = Math.abs(dataItem.getWorkingValue("value"));
        var bottomRatio = this.bottomRatio;
        var d = 1;
        if (dataItem.value != 0) {
            d = workingValue / Math.abs(dataItem.value);
        }
        else {
            if (dataItem.__disabled || dataItem.isHiding || !dataItem.visible) {
                d = 0.000001;
            }
        }
        if (this.ignoreZeroValues && dataItem.value == 0) {
            dataItem.__disabled = true;
            return;
        }
        else {
            dataItem.__disabled = false;
        }
        if (this._nextY == Infinity) {
            this._nextY = 0;
        }
        if (this.orientation == "vertical") {
            var linkHeight = sliceLink.pixelHeight * d;
            maxHeight = maxHeight + linkHeight; // to avoid one link gap in the bottom
            slice.topWidth = workingValue / this.dataItem.values.value.high * maxWidth;
            slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxWidth;
            sliceLink.topWidth = slice.bottomWidth;
            sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxWidth;
            slice.y = this._nextY;
            slice.height = Math.min(100000, _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["max"](0, maxHeight / this._count * d / this._total - linkHeight));
            slice.x = maxWidth / 2;
            if (!this.alignLabels) {
                label.x = slice.x;
            }
            else {
                label.x = undefined;
            }
            label.y = slice.pixelY + slice.pixelHeight * tick.locationY;
            this._nextY += slice.pixelHeight + linkHeight;
            sliceLink.y = this._nextY - linkHeight;
            sliceLink.x = slice.x;
        }
        else {
            var linkWidth = sliceLink.pixelWidth * d;
            maxWidth = maxWidth + linkWidth; // to avoid one link gap in the bottom
            slice.topWidth = workingValue / this.dataItem.values.value.high * maxHeight;
            slice.bottomWidth = (workingValue - (workingValue - nextValue) * bottomRatio) / this.dataItem.values.value.high * maxHeight;
            sliceLink.topWidth = slice.bottomWidth;
            sliceLink.bottomWidth = (workingValue - (workingValue - nextValue)) / this.dataItem.values.value.high * maxHeight;
            slice.x = this._nextY;
            slice.width = Math.min(100000, maxWidth / this._count * d * 1 / this._total - linkWidth);
            slice.y = maxHeight / 2;
            if (!this.alignLabels) {
                label.y = slice.y;
            }
            else {
                label.y = this.labelsContainer.measuredHeight;
            }
            label.x = slice.pixelX + slice.pixelWidth * tick.locationX;
            this._nextY += slice.pixelWidth + linkWidth;
            sliceLink.x = this._nextY - linkWidth;
            sliceLink.y = slice.y;
        }
    };
    FunnelSeries.prototype.getLastLabel = function (index) {
        if (index > 0) {
            var lastLabel = this.labels.getIndex(index);
            if (lastLabel.__disabled || !lastLabel.visible) {
                return this.getLastLabel(index - 1);
            }
            else {
                return lastLabel;
            }
        }
    };
    /**
     * [arrangeLabels description]
     *
     * @todo Description
     */
    FunnelSeries.prototype.arrangeLabels = function () {
        if (this.alignLabels) {
            var count = this.labels.length;
            if (count > 1) {
                var lastLabel = this.getLastLabel(count - 1);
                if (lastLabel) {
                    var lastY = lastLabel.pixelY;
                    var lastX = lastLabel.pixelX;
                    if (count > 1) {
                        for (var i = count - 2; i >= 0; i--) {
                            var label = this.labels.getIndex(i);
                            if (label.visible && !label.__disabled) {
                                if (label.invalid) {
                                    label.validate();
                                }
                                if (this.orientation == "vertical") {
                                    if (label.pixelY + label.measuredHeight > lastY) {
                                        label.y = Math.min(1000000, lastY - label.measuredHeight);
                                    }
                                }
                                // horizontal
                                else {
                                    if (label.pixelX + label.measuredWidth > lastX) {
                                        label.x = Math.min(1000000, lastX - label.measuredWidth);
                                    }
                                }
                                lastY = label.pixelY;
                                lastX = label.pixelX;
                            }
                        }
                        lastY = 0;
                        lastX = 0;
                        for (var i = 0; i < count; i++) {
                            var label = this.labels.getIndex(i);
                            if (label.visible && !label.__disabled) {
                                if (label.invalid) {
                                    label.validate();
                                }
                                if (this.orientation == "vertical") {
                                    if (label.pixelY < lastY) {
                                        label.y = Math.min(1000000, lastY);
                                    }
                                }
                                // horizontal
                                else {
                                    if (label.pixelX < lastX) {
                                        label.x = Math.min(1000000, lastX);
                                    }
                                }
                                lastY += label.measuredHeight;
                                lastX += label.measuredWidth;
                            }
                        }
                    }
                }
            }
        }
    };
    /**
     * Positions series bullet.
     *
     * @ignore Exclude from docs
     * @param bullet  Bullet
     */
    FunnelSeries.prototype.positionBullet = function (bullet) {
        _super.prototype.positionBullet.call(this, bullet);
        var dataItem = bullet.dataItem;
        var slice = dataItem.slice;
        var locationX = bullet.locationX;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](locationX)) {
            locationX = 0.5;
        }
        var locationY = bullet.locationY;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](locationY)) {
            locationY = 1;
        }
        bullet.x = slice.pixelX + slice.measuredWidth * locationX;
        bullet.y = slice.pixelY + slice.measuredHeight * locationY;
    };
    Object.defineProperty(FunnelSeries.prototype, "orientation", {
        /**
         * @return Orientation
         */
        get: function () {
            return this.getPropertyValue("orientation");
        },
        /**
         * Orientation of the funnel slices: "horizontal" or "vertical" (default).
         *
         * @default "vertical"
         * @param value Orientation
         */
        set: function (value) {
            if (this.setPropertyValue("orientation", value)) {
                this.labelsOpposite = this.labelsOpposite;
                this.invalidate();
                if (value == "vertical") {
                    this.ticks.template.locationX = 1;
                    this.ticks.template.locationY = 0.5;
                    this.labels.template.rotation = 0;
                    this.layout = "horizontal";
                }
                else {
                    this.ticks.template.locationX = 0.5;
                    this.ticks.template.locationY = 1;
                    this.labels.template.rotation = -90;
                    this.layout = "vertical";
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunnelSeries.prototype, "bottomRatio", {
        /**
         * @return {number}
         */
        get: function () {
            return this.getPropertyValue("bottomRatio");
        },
        /**
         * Indicates how slice's bottom will change in relation to slices top AND
         * next slices top.
         *
         * Basically it's a relative value (0-1) that indicates bottom width
         * position between current slice's top width and the top withd of the next
         * one.
         *
         * The scale goes from 0 (closer to current slice width) to 1 (closer to next
         * slice with).
         *
         * `0` (default) will mean that bottom will be the same as top, resulting in
         * a prefectly square slice.
         *
         * From the data-viz standpoint `0` is a correct setting, since area of the
         * slices will depict their value correctly.
         *
         * `1` will mean that slice will become trapezoid with its bottom matching
         * width of the next slice.
         *
         * `0.5` will make bottom width be in the middle of width of current slice
         * and the next slice.
         *
         * @default 0
         * @param {number}
         */
        set: function (value) {
            if (this.setPropertyValue("bottomRatio", value)) {
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FunnelSeries.prototype, "sliceLinks", {
        /**
         * A list of elements linking each actual slice.
         *
         * Please note that links are [[FunnelSlice]] objects, just like real links,
         * so they have all the same configuration options.
         *
         * You can use `template` of this link, to specify how links will look.
         *
         * ```TypeScript
         * series.sliceLinks.template.fillOpacity = 0.5;
         * ```
         * ```JavaScript
         * series.sliceLinks.template.fillOpacity = 0.5;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "series": [{
         *     "type": "FunnelSeries",
         *      // ...
         *      "sliceLinks": {
         *        "fillOpacity": 0.5
         *      }
         *   }]
         * }
         * ```
         *
         * @return Funnel links
         */
        get: function () {
            if (!this._sliceLinks) {
                var sliceLink = new _elements_FunnelSlice__WEBPACK_IMPORTED_MODULE_2__["FunnelSlice"]();
                sliceLink.applyOnClones = true;
                sliceLink.fillOpacity = 0.5;
                sliceLink.expandDistance = -0.3;
                sliceLink.hiddenState.properties.opacity = 0;
                this._disposers.push(sliceLink);
                this._sliceLinks = new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__["ListTemplate"](sliceLink);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__["ListDisposer"](this._sliceLinks));
            }
            return this._sliceLinks;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Shows hidden series.
     *
     * @param duration  Duration of reveal animation (ms)
     * @return Animation
     */
    FunnelSeries.prototype.show = function (duration) {
        var _this = this;
        var startIndex = this.startIndex;
        var endIndex = this.endIndex;
        var interpolationDuration = this.defaultState.transitionDuration;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](duration)) {
            interpolationDuration = duration;
        }
        if (!_core_Options__WEBPACK_IMPORTED_MODULE_12__["options"].animationsEnabled) {
            interpolationDuration = 0;
        }
        var delay = 0;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["indexed"](this.dataItems.iterator()), function (a) {
            var i = a[0];
            var dataItem = a[1];
            if (_this.sequencedInterpolation) {
                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);
            }
            dataItem.show(interpolationDuration, delay, ["value"]);
        });
        var animation = _super.prototype.show.call(this, duration);
        return animation;
    };
    /**
     * Hides series.
     *
     * @param duration  Duration of hiding animation (ms)
     * @return Animation
     */
    FunnelSeries.prototype.hide = function (duration) {
        var _this = this;
        var fields = ["value"];
        var value = 0;
        var startIndex = this.startIndex;
        var endIndex = this.endIndex;
        var delay = 0;
        var interpolationDuration = this.hiddenState.transitionDuration;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](duration)) {
            interpolationDuration = duration;
        }
        if (!_core_Options__WEBPACK_IMPORTED_MODULE_12__["options"].animationsEnabled) {
            interpolationDuration = 0;
        }
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["indexed"](this.dataItems.iterator()), function (a) {
            var i = a[0];
            var dataItem = a[1];
            if (_this.sequencedInterpolation) {
                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);
            }
            dataItem.hide(interpolationDuration, delay, value, fields);
        });
        var animation = _super.prototype.hide.call(this, duration);
        if (animation && !animation.isFinished()) {
            animation.delay(delay);
        }
        return animation;
    };
    /**
     * @ignore
     */
    FunnelSeries.prototype.setAlignLabels = function (value) {
        _super.prototype.setAlignLabels.call(this, value);
        this.ticks.template.disabled = !value;
        var labelsContainer = this.labelsContainer;
        if (labelsContainer) {
            // do not align
            if (!value) {
                labelsContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
                labelsContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_10__["percent"])(100);
            }
            //align
            else {
                labelsContainer.height = undefined;
                labelsContainer.width = undefined;
                labelsContainer.margin(10, 10, 10, 10);
            }
        }
        this.labelsOpposite = this.labelsOpposite;
    };
    Object.defineProperty(FunnelSeries.prototype, "labelsOpposite", {
        /**
         * @return Labels on opposite side?
         */
        get: function () {
            return this.getPropertyValue("labelsOpposite");
        },
        /**
         * Put labels on the oppsite side of the series?
         *
         * This setting is only used if `alignLabels = true`.
         *
         * If set to `true` (default) labels will be drawn to the right (on vertical
         * series), or to the bottom (on horizontal series).
         *
         * If set to `false`, labels will be positioned to the left or top
         * respectively.
         *
         * @default true
         * @since 4.1.13
         * @param  value  Labels on opposite side?
         */
        set: function (value) {
            this.setPropertyValue("labelsOpposite", value);
            var labelTemplate = this.labels.template;
            var labelAlign = "none";
            var labelValign = "none";
            if (!this.alignLabels) {
                if (this.orientation == "vertical") {
                    labelAlign = "center";
                }
                else {
                    labelValign = "middle";
                }
            }
            else {
                // opposite (left/bottom)
                if (value) {
                    this.labelsContainer.toFront();
                    // left
                    if (this.orientation == "vertical") {
                        this.ticks.template.locationX = 1;
                        labelTemplate.horizontalCenter = "left";
                        labelAlign = "right";
                    }
                    // bottom
                    else {
                        this.ticks.template.locationY = 1;
                        labelTemplate.horizontalCenter = "right";
                        labelValign = "bottom";
                    }
                }
                // non oposite (right/top)
                else {
                    this.labelsContainer.toBack();
                    // right
                    if (this.orientation == "vertical") {
                        this.ticks.template.locationX = 0;
                        labelAlign = "left";
                    }
                    // top
                    else {
                        labelValign = "top";
                        this.ticks.template.locationY = 0;
                    }
                }
            }
            labelTemplate.align = labelAlign;
            labelTemplate.valign = labelValign;
            this.validateLayout();
            this.ticks.each(function (tick) {
                tick.invalidate();
            });
            this.invalidateDataItems();
        },
        enumerable: true,
        configurable: true
    });
    return FunnelSeries;
}(_PercentSeries__WEBPACK_IMPORTED_MODULE_1__["PercentSeries"]));

/**
 * bboxter class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["FunnelSeries"] = FunnelSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["FunnelSeriesDataItem"] = FunnelSeriesDataItem;
//# sourceMappingURL=FunnelSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeries.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeries.js ***!
  \********************************************************************************/
/*! exports provided: LineSeriesDataItem, LineSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LineSeriesDataItem", function() { return LineSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LineSeries", function() { return LineSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _XYSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XYSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _LineSeriesSegment__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./LineSeriesSegment */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeriesSegment.js");
/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../axes/ValueAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js");
/* harmony import */ var _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axes/DateAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js");
/* harmony import */ var _axes_DurationAxis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../axes/DurationAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DurationAxis.js");
/* harmony import */ var _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../axes/CategoryAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_elements_Line__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/elements/Line */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js");
/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _core_elements_Rectangle__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/elements/Rectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Rectangle.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _elements_Bullet__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../elements/Bullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js");
/**
 * Line series module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


















/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[LineSeries]].
 *
 * @see {@link DataItem}
 */
var LineSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(LineSeriesDataItem, _super);
    /**
     * Constructor
     */
    function LineSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "LineSeriesDataItem";
        return _this;
    }
    return LineSeriesDataItem;
}(_XYSeries__WEBPACK_IMPORTED_MODULE_1__["XYSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a line graph.
 *
 * @see {@link ILineSeriesEvents} for a list of available Events
 * @see {@link ILineSeriesAdapters} for a list of available Adapters
 * @todo Example
 * @important
 */
var LineSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(LineSeries, _super);
    /**
     * Constructor
     */
    function LineSeries() {
        var _this = _super.call(this) || this;
        /**
         * Minimum distance in pixels between two adjacent points.
         *
         * If the distance is less than this setting, a point is skipped.
         *
         * This allows acceptable performance with huge amounts of data points.
         *
         * @default 0.5
         */
        _this.minDistance = 0.5;
        _this.segments = new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__["ListTemplate"](_this.createSegment());
        _this.segments.template.applyOnClones = true;
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_4__["ListDisposer"](_this.segments));
        _this._disposers.push(_this.segments.template);
        _this._segmentsIterator = new _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["ListIterator"](_this.segments, function () { return _this.segments.create(); });
        _this._segmentsIterator.createNewItems = true;
        _this.className = "LineSeries";
        _this.strokeOpacity = 1;
        _this.fillOpacity = 0;
        _this.connect = true;
        _this.tensionX = 1;
        _this.tensionY = 1;
        _this.autoGapCount = 1.1;
        _this.smoothing = "bezier";
        _this.segmentsContainer = _this.mainContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_3__["Container"]);
        _this.segmentsContainer.isMeasured = false;
        // line series might have multiple segments and it has a separate sprite for fill and stroke for each segment. So we need to observe all the changes on series and set them on the segments
        // todo: we need list here, otherwise everything will be redrawn event on change of properties like tooltipX or similar.
        // this.addEventListener(SpriteEvent.PROPERTY_CHANGED, this.validateDataElements, false, this);
        _this.bulletsContainer.toFront();
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    LineSeries.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Line Series");
        }
    };
    /**
     * @ignore
     */
    LineSeries.prototype.createSegment = function () {
        return new _LineSeriesSegment__WEBPACK_IMPORTED_MODULE_5__["LineSeriesSegment"]();
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    LineSeries.prototype.createDataItem = function () {
        return new LineSeriesDataItem();
    };
    /**
     * Inits data item's working values.
     *
     * @param dataItem  Data item
     * @param index     Data item's index
     */
    LineSeries.prototype.setInitialWorkingValues = function (dataItem) {
        // this makes data items animate when added
        var yAxis = this._yAxis.get();
        var xAxis = this._xAxis.get();
        if (this.appeared && this.visible) {
            var previousDataItem = this.dataItems.getIndex(dataItem.index - 1);
            dataItem.component = this; // as these values are set before, we don't know component yet
            if (this.baseAxis == xAxis) {
                if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"]) {
                    var initialY = yAxis.minZoomed;
                    if (previousDataItem) {
                        initialY = previousDataItem.values["valueY"].workingValue;
                    }
                    // this makes line animate from previous point to newly added point
                    dataItem.setWorkingValue("valueY", initialY, 0);
                    dataItem.setWorkingValue("valueY", dataItem.values.valueY.value);
                    if (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__["DateAxis"]) {
                        dataItem.setWorkingLocation("dateX", dataItem.locations.dateX - 1, 0); // instantly move it to previous
                        dataItem.setWorkingLocation("dateX", dataItem.locations.dateX); // animate to it's location
                    }
                    else if (xAxis instanceof _axes_DurationAxis__WEBPACK_IMPORTED_MODULE_8__["DurationAxis"]) {
                        if (previousDataItem) {
                            var value = dataItem.valueX;
                            dataItem.setWorkingValue("valueX", previousDataItem.valueX, 0); // instantly move it to previous
                            dataItem.setWorkingValue("valueX", value); // animate to new value
                        }
                    }
                }
            }
            if (this.baseAxis == yAxis) {
                if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"]) {
                    var initialX = xAxis.minZoomed;
                    if (previousDataItem) {
                        initialX = previousDataItem.values["valueX"].workingValue;
                    }
                    dataItem.setWorkingValue("valueX", initialX, 0);
                    dataItem.setWorkingValue("valueX", dataItem.values.valueX.value);
                    if (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__["DateAxis"]) {
                        dataItem.setWorkingLocation("dateY", dataItem.locations.dateX - 1, 0); // instantly move it to previous
                        dataItem.setWorkingLocation("dateY", dataItem.locations.dateY); // animate to it's location
                    }
                    else if (yAxis instanceof _axes_DurationAxis__WEBPACK_IMPORTED_MODULE_8__["DurationAxis"]) {
                        if (previousDataItem) {
                            var value = dataItem.valueY;
                            dataItem.setWorkingValue("valueY", previousDataItem.valueY, 0); // instantly move it to previous
                            dataItem.setWorkingValue("valueY", value); // animate to new value
                        }
                    }
                }
            }
        }
        else {
            if (this.baseAxis == xAxis) {
                if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"]) {
                    if (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__["DateAxis"]) {
                        dataItem.setWorkingLocation("dateX", dataItem.locations.dateX);
                    }
                    if (xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__["CategoryAxis"]) {
                        dataItem.setWorkingLocation("categoryX", dataItem.locations.categoryX);
                    }
                }
            }
            if (this.baseAxis == yAxis) {
                if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_6__["ValueAxis"]) {
                    if (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__["DateAxis"]) {
                        dataItem.setWorkingLocation("dateY", dataItem.locations.dateY);
                    }
                    if (yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__["CategoryAxis"]) {
                        dataItem.setWorkingLocation("categoryY", dataItem.locations.categoryY);
                    }
                }
            }
        }
    };
    /**
     * Updates corresponding legend data item with current values.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    LineSeries.prototype.updateLegendValue = function (dataItem, notRange) {
        _super.prototype.updateLegendValue.call(this, dataItem, notRange);
        //This is hack to save some methos, used to set tooltip color source only
        if (dataItem && dataItem.segment) {
            this.tooltipColorSource = dataItem.segment;
        }
    };
    /**
     * (Re)validates the whole series, effectively causing it to redraw.
     *
     * @ignore Exclude from docs
     */
    LineSeries.prototype.validate = function () {
        var _this = this;
        _super.prototype.validate.call(this);
        if (this.xAxis && this.yAxis) {
            this._segmentsIterator.reset();
            this.openSegmentWrapper(this._adjustedStartIndex);
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["each"](this.axisRanges.iterator(), function (range) {
                _this.openSegmentWrapper(_this._adjustedStartIndex, range);
            });
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["each"](this._segmentsIterator.iterator(), function (segment) {
                segment.__disabled = true;
            });
        }
    };
    /**
     * [sliceData description]
     *
     * @todo Description
     */
    LineSeries.prototype.sliceData = function () {
        var startIndex = this.startIndex;
        var endIndex = this.endIndex;
        // we need extra one item to both sides with values for line series, otherwise the line will not continue out of bounds of the chart while scrolling
        // find first to the left
        // TODO use iterator instead
        for (var i = this.startIndex - 1; i >= 0; i--) {
            var dataItem = this.dataItems.getIndex(i);
            if (dataItem && dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {
                startIndex = i;
                break;
            }
        }
        this._adjustedStartIndex = this.findAdjustedIndex(startIndex, ["stroke", "strokeWidth", "strokeDasharray", "strokeOpacity", "fill", "fillOpacity", "opacity"]);
        // find first to the right
        // TODO use iterator instead
        for (var i = this.endIndex, len = this.dataItems.length; i < len; i++) {
            var dataItem = this.dataItems.getIndex(i);
            if (dataItem && dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {
                endIndex = i + 1;
                break;
            }
        }
        this._workingStartIndex = startIndex;
        this._workingEndIndex = endIndex;
    };
    /**
     * @ignore
     */
    LineSeries.prototype.findAdjustedIndex = function (adjustedIndex, properties) {
        var _this = this;
        var propertyFields = this.propertyFields;
        var startIndex = adjustedIndex;
        _core_utils_Array__WEBPACK_IMPORTED_MODULE_17__["each"](properties, function (property) {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](propertyFields[property])) {
                for (var i = startIndex; i >= 0; i--) {
                    var dataItem = _this.dataItems.getIndex(i);
                    if (dataItem) {
                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](dataItem.properties[property])) {
                            if (adjustedIndex > i) {
                                adjustedIndex = i;
                            }
                            break;
                        }
                    }
                }
            }
        });
        return adjustedIndex;
    };
    /**
     * Wraps openSegment call with iterative solution to prevent stack overflow
     *
     * @param openIndex  Index
     * @param axisRange  Range
     */
    LineSeries.prototype.openSegmentWrapper = function (openIndex, axisRange) {
        var params = {
            "index": openIndex,
            "axisRange": axisRange
        };
        do {
            params = this.openSegment(params.index, params.axisRange);
        } while (params);
    };
    LineSeries.prototype.getSegment = function () {
        var segment = this._segmentsIterator.getFirst();
        segment.series = this;
        if (segment.isDisposed()) {
            this.segments.removeValue(segment);
            return this.getSegment();
        }
        return segment;
    };
    /**
     * [openSegment description]
     *
     * @todo Description
     * @param openIndex  [description]
     * @param axisRange  [description]
     */
    LineSeries.prototype.openSegment = function (openIndex, axisRange) {
        var addToClose = false;
        var points = [];
        openIndex = Math.min(openIndex, this.dataItems.length);
        var endIndex = Math.min(this._workingEndIndex, this.dataItems.length);
        this._workingEndIndex = Math.min(this._workingEndIndex, this.dataItems.length);
        var closeIndex;
        var propertiesChanged = false;
        var segment = this.getSegment();
        segment.strokeDasharray = undefined;
        segment.__disabled = false;
        if (axisRange) {
            segment.parent = axisRange.contents;
            _core_utils_Object__WEBPACK_IMPORTED_MODULE_15__["copyProperties"](axisRange.contents, segment, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        }
        else {
            _core_utils_Object__WEBPACK_IMPORTED_MODULE_15__["copyProperties"](this, segment, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
            segment.filters.clear();
            segment.parent = this.segmentsContainer;
        }
        this.group.node.removeAttribute("fill");
        var connect = this.connect;
        var valuesFound = false; // some flag to avoid multiple closes if no values found
        for (var i = openIndex; i < endIndex; i++) {
            var dataItem = this.dataItems.getIndex(i);
            dataItem.segment = segment;
            if (dataItem.hasProperties) {
                // if this is first item of segment
                if (i == openIndex) {
                    this.updateSegmentProperties(dataItem.properties, segment);
                }
                else {
                    // this time we only need to know if properties changed, so we don't pass segment
                    propertiesChanged = this.updateSegmentProperties(dataItem.properties, segment, true);
                }
            }
            if (dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) {
                this.addPoints(points, dataItem, this.xField, this.yField);
                valuesFound = true;
            }
            else {
                // if no values in first data item, go to next
                if (i == openIndex) {
                    continue;
                }
                else {
                    // stop cycle
                    if (!connect && valuesFound) {
                        closeIndex = i;
                        break;
                    }
                }
            }
            closeIndex = i;
            if (this.baseAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_7__["DateAxis"]) {
                var next = this.dataItems.getIndex(i + 1);
                if (next && this.baseAxis.makeGap(next, dataItem)) {
                    addToClose = true;
                    break;
                }
            }
            if (propertiesChanged) {
                break;
            }
        }
        return this.closeSegment(segment, points, openIndex, closeIndex, axisRange, addToClose);
    };
    /**
     * [addPoints description]
     *
     * @todo Description
     * @param points    [description]
     * @param dataItem  [description]
     * @param xField    [description]
     * @param yField    [description]
     * @param backwards [description]
     */
    LineSeries.prototype.addPoints = function (points, dataItem, xField, yField, backwards) {
        var point = this.getPoint(dataItem, xField, yField, dataItem.workingLocations[xField], dataItem.workingLocations[yField]);
        if (!backwards) {
            dataItem.point = point;
        }
        points.push(point);
    };
    /**
     * [closeSegment description]
     *
     * @todo Description
     * @param segment    [description]
     * @param points     [description]
     * @param openIndex  [description]
     * @param closeIndex [description]
     * @param axisRange  [description]
     */
    LineSeries.prototype.closeSegment = function (segment, points, openIndex, closeIndex, axisRange, add) {
        var closePoints = [];
        if (this.dataFields[this._xOpenField] ||
            this.dataFields[this._yOpenField] ||
            this.stacked) {
            for (var i = closeIndex; i >= openIndex; i--) {
                var dataItem = this.dataItems.getIndex(i);
                if (dataItem.hasValue(this._xValueFields) && dataItem.hasValue(this._yValueFields)) { // not sure, this means that open point will only be added if value is also set for this point, but maybe it's ok.
                    this.addPoints(closePoints, dataItem, this.xOpenField, this.yOpenField, true);
                }
            }
        }
        else {
            var baseAxis = this.baseAxis;
            var count = points.length;
            var xAxis = this.xAxis;
            var yAxis = this.yAxis;
            if (count > 0) {
                if (baseAxis == xAxis) {
                    closePoints.push({ x: points[count - 1].x, y: yAxis.basePoint.y }); // last x
                    closePoints.push({ x: points[0].x, y: yAxis.basePoint.y }); // first x
                }
                else {
                    closePoints.push({ x: xAxis.basePoint.x, y: points[count - 1].y }); // last y
                    closePoints.push({ x: xAxis.basePoint.x, y: points[0].y }); // first y
                }
            }
        }
        this.drawSegment(segment, points, closePoints);
        if (add) {
            closeIndex++;
        }
        if (closeIndex < this._workingEndIndex - 1) {
            return { "index": closeIndex, "axisRange": axisRange };
        }
        else {
            return null;
        }
    };
    /**
     * Draws the line segment.
     *
     * @param segment     Segment
     * @param points      Segment points
     * @param closePoints Segment close points
     */
    LineSeries.prototype.drawSegment = function (segment, points, closePoints) {
        segment.drawSegment(points, closePoints, this.tensionX, this.tensionY);
    };
    /**
     * Segement will get its colors from `this.dataItem`, as thats how
     * `getPropertyValue()` method works.
     *
     * We pass `lineSeriesDataItem.properties` as item here each time when a flag
     * `hasProperties` is set to `true` on data item (this means it can contain
     * some properties set).
     *
     * @param itemProperties  Item properties
     * @param segment         Segment
     * @return Properties changed?
     */
    LineSeries.prototype.updateSegmentProperties = function (itemProperties, segment, checkOnly) {
        var changed = false;
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_15__["each"](itemProperties, function (propertyName, value) {
            // some value must be defined
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](value)) {
                var currentValue = segment[propertyName];
                var currentValueStr = void 0;
                // current value can be Color, number, anything. So we check if it has toString, otherwise just do String().
                // toString() will return hex if it's color. The only problem is that it will return lowercased hex and if we have uppercase in data, it will think that it changed
                if (currentValue) {
                    if (currentValue.toString) {
                        currentValueStr = currentValue.toString();
                    }
                    else {
                        currentValueStr = currentValue; // not doing String(currentValue) as this will make all Objects the same
                    }
                }
                var valueStr = void 0;
                if (value) {
                    if (value.toString) {
                        valueStr = value.toString();
                    }
                    else {
                        valueStr = value; // not doing String(currentValue) as this will make all Objects the same
                    }
                }
                if (currentValue == value || (currentValueStr != undefined && valueStr != undefined && currentValueStr == valueStr)) {
                    // void
                }
                else {
                    if (!checkOnly) {
                        segment[propertyName] = value;
                    }
                    changed = true;
                }
            }
        });
        return changed;
    };
    Object.defineProperty(LineSeries.prototype, "connect", {
        /**
         * @return Connect?
         */
        get: function () {
            return this.getPropertyValue("connect");
        },
        /**
         * Connect the lines over empty data points?
         *
         * If set to `true` the line will connect two adjacent data points by a
         * straight line. Even if there are data points with missing values
         * in-between.
         *
         * If you set this to `false`, the line will break when there are missing
         * values.
         *
         * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/#Line_series_with_gaps} for more information about this feature
         * @default true
         * @param value  Connect?
         */
        set: function (value) {
            if (this.setPropertyValue("connect", value)) {
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LineSeries.prototype, "tensionX", {
        /**
         * @return Horizontal tension (0-1)
         */
        get: function () {
            return this.getPropertyValue("tensionX");
        },
        /**
         * Horizontal tension setting of the line (0-1).
         *
         * Can be used to create smoothed lines. It works like this:
         *
         * Accepted values are in the range between 0 and 1. The biggest value (1)
         * will mean that the "tension" is very high, so the line is maximally
         * attracted to the points it connects, hence the straight line.
         *
         * Using smaller numbers will "relax" the tension, creating some curving.
         *
         * The smaller the tension setting, the more relaxed the line and the more
         * wide the curve.
         *
         * This setting is for horizontal tension, meaning the curve will bend in
         * such way that it never goes below or above connecting points. To enable
         * vertical bending as well, use `tensionY`.
         *
         * IMPORTANT: line smoothing works best when data items are placed at regular
         * intervals. For setups where data items are spaced erratically, enabling
         * smoothing might result in awkwardly looking lines.
         *
         * @default 1
         * @param value  Horizontal tension (0-1)
         */
        set: function (value) {
            this.setPropertyValue("tensionX", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LineSeries.prototype, "tensionY", {
        /**
         * @return Vertical tension (0-1)
         */
        get: function () {
            return this.getPropertyValue("tensionY");
        },
        /**
         * Can be used to create smoothed lines. It works like this:
         *
         * Accepted values are in the range between 0 and 1. The biggest value (1)
         * will mean that the "tension" is very high, so the line is maximally
         * attracted to the points it connects, hence the straight line.
         *
         * Using smaller numbers will "relax" the tension, creating some curving.
         *
         * The smaller the tension setting, the more relaxed the line and the more
         * wide the curve.
         *
         * This setting is for vertical tension, meaning the curve might bend in
         * such way that it will go below or above connected points.
         *
         * Combine this setting with `tensionX` to create beautifully looking
         * smoothed line series.
         *
         * @default 1
         * @param value  Vertical tension (0-1)
         */
        set: function (value) {
            this.setPropertyValue("tensionY", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates elements in related legend container, that mimics the look of this
     * Series.
     *
     * @ignore Exclude from docs
     * @param marker  Legend item container
     */
    LineSeries.prototype.createLegendMarker = function (marker) {
        var _this = this;
        var w = marker.pixelWidth;
        var h = marker.pixelHeight;
        marker.disposeChildren();
        var line = marker.createChild(_core_elements_Line__WEBPACK_IMPORTED_MODULE_11__["Line"]);
        line.shouldClone = false;
        //line.copyFrom(<any>this); coppies events which is not good
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_15__["copyProperties"](this, line, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        line.x2 = w;
        line.y = h / 2;
        line.y2 = 0.00001;
        line.visible = true;
        if (this.fillOpacity > 0) {
            var fill = marker.createChild(_core_elements_Rectangle__WEBPACK_IMPORTED_MODULE_13__["Rectangle"]);
            //fill.copyFrom(<any>this); coppies events which is not good
            _core_utils_Object__WEBPACK_IMPORTED_MODULE_15__["copyProperties"](this, fill, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
            fill.width = w;
            fill.height = h;
            fill.y = 0;
            fill.strokeOpacity = 0;
            fill.visible = true;
            line.y = 0;
        }
        var legendDataItem = marker.dataItem;
        legendDataItem.color = this.stroke;
        legendDataItem.colorOrig = this.fill;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["eachContinue"](this.bullets.iterator(), function (bullet) {
            if ((bullet instanceof _elements_Bullet__WEBPACK_IMPORTED_MODULE_18__["Bullet"]) && !bullet.copyToLegendMarker) {
                return false;
            }
            var hasLabels = false;
            if (bullet instanceof _core_Container__WEBPACK_IMPORTED_MODULE_3__["Container"]) {
                // do not copy bullets with labels
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_14__["each"](bullet.children.iterator(), function (child) {
                    if (child instanceof _core_elements_Label__WEBPACK_IMPORTED_MODULE_12__["Label"]) {
                        hasLabels = true;
                        return true;
                    }
                });
            }
            if (!hasLabels) {
                var clone = bullet.clone();
                clone.parent = marker;
                clone.isMeasured = true;
                clone.tooltipText = undefined;
                clone.x = w / 2;
                if (_this.fillOpacity > 0) {
                    clone.y = 0;
                }
                else {
                    clone.y = h / 2;
                }
                clone.visible = true;
                // otherwise will not transit to color after hiding
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](clone.fill)) {
                    clone.fill = _this.fill;
                }
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_16__["hasValue"](clone.stroke)) {
                    clone.stroke = _this.stroke;
                }
                return false;
            }
        });
    };
    /**
     * @ignore
     */
    LineSeries.prototype.disposeData = function () {
        _super.prototype.disposeData.call(this);
        this.segments.clear();
    };
    Object.defineProperty(LineSeries.prototype, "autoGapCount", {
        /**
         * @return Gap count
         */
        get: function () {
            return this.getPropertyValue("autoGapCount");
        },
        /**
         * If `connect = false` and distance between two data points is bigger
         * than `baseInterval * autoGapCount`, a line will break automatically.
         *
         * @since 4.2.4
         * @param  value  Gap count
         */
        set: function (value) {
            this.setPropertyValue("autoGapCount", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(LineSeries.prototype, "smoothing", {
        /**
         * @return Smoothing algorithm
         */
        get: function () {
            return this.getPropertyValue("smoothing");
        },
        /**
         * Smoothing algorithm to be used for lines.
         *
         * Available options: `"bezier"` (default), `"monotoneX"`, and `"monotoneY"`.
         *
         * Monotone options are best suited for data with irregular intervals. Use `"monotoneX"` for
         * horizontal lines, and `"monotoneY"` vertical ones.
         *
         * NOTE: Both "monotone" algorithms will ignore `tensionX` and `tensionY` settings.
         *
         * @since 4.10.0
         * @param  value  Smoothing algorithm
         */
        set: function (value) {
            this.setPropertyValue("smoothing", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return LineSeries;
}(_XYSeries__WEBPACK_IMPORTED_MODULE_1__["XYSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].registeredClasses["LineSeries"] = LineSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_10__["registry"].registeredClasses["LineSeriesDataItem"] = LineSeriesDataItem;
//# sourceMappingURL=LineSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeriesSegment.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeriesSegment.js ***!
  \***************************************************************************************/
/*! exports provided: LineSeriesSegment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "LineSeriesSegment", function() { return LineSeriesSegment; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/rendering/Smoothing */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Smoothing.js");
/**
 * Line series segment module.
 * @todo Add description about what this is
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */








/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Represents a line series segment.
 *
 * A line segment can be used to apply different properties to a part of the
 * line series, between two data points.
 *
 * @see {@link ILineSeriesSegmentEvents} for a list of available events
 * @see {@link ILineSeriesSegmentAdapters} for a list of available Adapters
 * @todo Example
 */
var LineSeriesSegment = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(LineSeriesSegment, _super);
    /**
     * Constructor
     */
    function LineSeriesSegment() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "LineSeriesSegment";
        // Set defaults
        _this.isMeasured = false;
        _this.interactionsEnabled = false;
        _this.layout = "none";
        // Create fill element
        var fillSprite = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        _this.fillSprite = fillSprite;
        fillSprite.shouldClone = false;
        fillSprite.setElement(_this.paper.add("path"));
        fillSprite.isMeasured = false;
        _this._disposers.push(fillSprite);
        // Create line element
        var strokeSprite = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        _this.strokeSprite = strokeSprite;
        strokeSprite.shouldClone = false;
        strokeSprite.fill = Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_7__["color"])();
        strokeSprite.setElement(_this.paper.add("path"));
        strokeSprite.isMeasured = false;
        _this._disposers.push(strokeSprite);
        return _this;
    }
    /**
     * Draws the series segment.
     *
     * @ignore Exclude from docs
     * @param points       Points to connect
     * @param closePoints  ?
     * @param smoothnessX  Horizontal bezier setting (?)
     * @param smoothnessY  Vertical bezier setting (?)
     */
    LineSeriesSegment.prototype.drawSegment = function (points, closePoints, smoothnessX, smoothnessY) {
        if (!this.disabled) {
            if (points.length > 0 && closePoints.length > 0 && _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](points[0].x) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](points[0].y)) {
                // first moveTo helps to avoid Chrome straight line in the mask bug.
                var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"]({ x: points[0].x - 0.2, y: points[0].y - 0.2 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["moveTo"](points[0]);
                var series = this.series;
                if (series.smoothing == "bezier") {
                    path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__["Tension"](smoothnessX, smoothnessY).smooth(points);
                }
                else if (series.smoothing == "monotoneX") {
                    path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__["MonotoneX"]({ closed: false }).smooth(points);
                }
                else if (series.smoothing == "monotoneY") {
                    path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__["MonotoneY"]({ closed: false }).smooth(points);
                }
                if (this.strokeOpacity == 0 || this.strokeSprite.strokeOpacity == 0) {
                    // like this and not if != 0, otherwise ranges stroke won't be drawn.
                }
                else {
                    this.strokeSprite.path = path;
                }
                if (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](closePoints[0].x) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_6__["isNumber"](closePoints[0].y)) {
                        path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"](closePoints[0]);
                        if (series.smoothing == "bezier") {
                            path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__["Tension"](smoothnessX, smoothnessY).smooth(closePoints);
                        }
                        else if (series.smoothing == "monotoneX") {
                            path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__["MonotoneX"]({ closed: false }).smooth(closePoints);
                        }
                        else if (series.smoothing == "monotoneY") {
                            path += new _core_rendering_Smoothing__WEBPACK_IMPORTED_MODULE_8__["MonotoneY"]({ closed: false }).smooth(closePoints);
                        }
                        path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["lineTo"](points[0]);
                        path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["closePath"]();
                        this.fillSprite.path = path;
                    }
                }
            }
            else {
                this.fillSprite.path = "";
                this.strokeSprite.path = "";
            }
        }
    };
    /**
     * Copies properties from a [[Sprite]] to both line and fill elements.
     *
     * @param source Source [[Sprite]] to copy properties from
     */
    LineSeriesSegment.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        var lineElement = this.strokeSprite;
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_5__["copyProperties"](source, lineElement.properties, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        lineElement.events.copyFrom(source.strokeSprite.events);
        lineElement.fillOpacity = 0;
        var fillElement = this.fillSprite;
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_5__["copyProperties"](source, fillElement.properties, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        fillElement.events.copyFrom(source.fillSprite.events);
        fillElement.strokeOpacity = 0;
    };
    return LineSeriesSegment;
}(_core_Container__WEBPACK_IMPORTED_MODULE_1__["Container"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["LineSeriesSegment"] = LineSeriesSegment;
//# sourceMappingURL=LineSeriesSegment.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/OHLCSeries.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/OHLCSeries.js ***!
  \********************************************************************************/
/*! exports provided: OHLCSeriesDataItem, OHLCSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OHLCSeriesDataItem", function() { return OHLCSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "OHLCSeries", function() { return OHLCSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _CandlestickSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./CandlestickSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/CandlestickSeries.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _elements_OHLC__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../elements/OHLC */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/OHLC.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Candlestick Series module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */







/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[OHLCSeries]].
 *
 * @see {@link DataItem}
 */
var OHLCSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(OHLCSeriesDataItem, _super);
    /**
     * Defines a type of [[Component]] this data item is used for
     * @todo Disabled to work around TS bug (see if we can re-enable it again)
     */
    //public _component!: OHLCSeries;
    /**
     * Constructor
     */
    function OHLCSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "OHLCSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    return OHLCSeriesDataItem;
}(_CandlestickSeries__WEBPACK_IMPORTED_MODULE_1__["CandlestickSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a candlestick graph.
 *
 * @see {@link IOHLCSeriesEvents} for a list of available Events
 * @see {@link IOHLCSeriesAdapters} for a list of available Adapters
 * @todo Example
 * @important
 */
var OHLCSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(OHLCSeries, _super);
    /**
     * Constructor
     */
    function OHLCSeries() {
        var _this = _super.call(this) || this;
        _this.className = "OHLCSeries";
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    OHLCSeries.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("OHLC Series");
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    OHLCSeries.prototype.createDataItem = function () {
        return new OHLCSeriesDataItem();
    };
    OHLCSeries.prototype.validateCandlestick = function (dataItem) {
        var column = dataItem.column;
        if (column) {
            var openLine_1 = column.openLine;
            var highLowLine_1 = column.highLowLine;
            var closeLine_1 = column.closeLine;
            if (this.baseAxis == this.xAxis) {
                var x = column.pixelWidth / 2;
                highLowLine_1.x = x;
                // TODO can these be removed ?
                dataItem.getWorkingValue(this.yOpenField);
                dataItem.getWorkingValue(this.yField);
                var yOpen = this.yAxis.getY(dataItem, this.yOpenField);
                var yClose = this.yAxis.getY(dataItem, this.yField);
                var yLow = this.yAxis.getY(dataItem, this.yLowField);
                var yHigh = this.yAxis.getY(dataItem, this.yHighField);
                var pixelY = column.pixelY;
                openLine_1.y1 = yOpen - pixelY;
                openLine_1.y2 = yOpen - pixelY;
                openLine_1.x1 = 0;
                openLine_1.x2 = x;
                closeLine_1.y1 = yClose - pixelY;
                closeLine_1.y2 = yClose - pixelY;
                closeLine_1.x1 = x;
                closeLine_1.x2 = 2 * x;
                highLowLine_1.y1 = yHigh - pixelY;
                highLowLine_1.y2 = yLow - pixelY;
            }
            if (this.baseAxis == this.yAxis) {
                var y = column.pixelHeight / 2;
                highLowLine_1.y = y;
                // TODO can these be removed ?
                dataItem.getWorkingValue(this.xOpenField);
                dataItem.getWorkingValue(this.xField);
                var xOpen = this.xAxis.getX(dataItem, this.xOpenField);
                var xClose = this.xAxis.getX(dataItem, this.xField);
                var xLow = this.xAxis.getX(dataItem, this.xLowField);
                var xHigh = this.xAxis.getX(dataItem, this.xHighField);
                var pixelX = column.pixelX;
                openLine_1.x1 = xOpen - pixelX;
                openLine_1.x2 = xOpen - pixelX;
                openLine_1.y1 = y;
                openLine_1.y2 = 2 * y;
                closeLine_1.x1 = xClose - pixelX;
                closeLine_1.x2 = xClose - pixelX;
                closeLine_1.y1 = 0;
                closeLine_1.y2 = y;
                highLowLine_1.x1 = xHigh - pixelX;
                highLowLine_1.x2 = xLow - pixelX;
            }
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_6__["each"](this.axisRanges.iterator(), function (axisRange) {
                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);
                if (rangeColumn) {
                    var rangeOpenLine = rangeColumn.openLine;
                    rangeOpenLine.x = openLine_1.x;
                    rangeOpenLine.y = openLine_1.y;
                    rangeOpenLine.x1 = openLine_1.x1;
                    rangeOpenLine.x2 = openLine_1.x2;
                    rangeOpenLine.y1 = openLine_1.y1;
                    rangeOpenLine.y2 = openLine_1.y2;
                    var rangeCloseLine = rangeColumn.closeLine;
                    rangeCloseLine.x = closeLine_1.x;
                    rangeCloseLine.y = closeLine_1.y;
                    rangeCloseLine.x1 = closeLine_1.x1;
                    rangeCloseLine.x2 = closeLine_1.x2;
                    rangeCloseLine.y1 = closeLine_1.y1;
                    rangeCloseLine.y2 = closeLine_1.y2;
                    var rangeHighLowLine = rangeColumn.highLowLine;
                    rangeHighLowLine.x = highLowLine_1.x;
                    rangeHighLowLine.y = highLowLine_1.y;
                    rangeHighLowLine.x1 = highLowLine_1.x1;
                    rangeHighLowLine.x2 = highLowLine_1.x2;
                    rangeHighLowLine.y1 = highLowLine_1.y1;
                    rangeHighLowLine.y2 = highLowLine_1.y2;
                }
            });
        }
    };
    /**
     * Creates elements in related legend container, that mimics the look of this
     * Series.
     *
     * @ignore Exclude from docs
     * @param marker  Legend item container
     */
    OHLCSeries.prototype.createLegendMarker = function (marker) {
        var w = marker.pixelWidth;
        var h = marker.pixelHeight;
        marker.removeChildren();
        var column = marker.createChild(_elements_OHLC__WEBPACK_IMPORTED_MODULE_3__["OHLC"]);
        column.shouldClone = false;
        column.copyFrom(this.columns.template);
        var cw;
        var ch;
        var openLine = column.openLine;
        var closeLine = column.closeLine;
        var highLowLine = column.highLowLine;
        if (this.baseAxis == this.yAxis) {
            cw = w / 3;
            ch = h;
            highLowLine.y = h / 2;
            highLowLine.x2 = w;
            openLine.x = w / 3 * 2;
            openLine.y2 = h / 2;
            closeLine.x = w / 3;
            closeLine.y2 = h;
            closeLine.y1 = h / 2;
        }
        else {
            cw = w;
            ch = h / 3;
            highLowLine.x = w / 2;
            highLowLine.y2 = h;
            openLine.y = h / 3 * 2;
            openLine.x2 = w / 2;
            closeLine.y = h / 3;
            closeLine.x2 = w;
            closeLine.x1 = w / 2;
        }
        column.width = cw;
        column.height = ch;
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_5__["copyProperties"](this, marker, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_5__["copyProperties"](this.columns.template, column, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        column.stroke = this.riseFromOpenState.properties.stroke;
        var legendDataItem = marker.dataItem;
        legendDataItem.color = column.stroke;
        legendDataItem.colorOrig = column.stroke;
    };
    /**
     * Returns an element to use for Candlestick
     * @ignore
     * @return Element.
     */
    OHLCSeries.prototype.createColumnTemplate = function () {
        return new _elements_OHLC__WEBPACK_IMPORTED_MODULE_3__["OHLC"]();
    };
    return OHLCSeries;
}(_CandlestickSeries__WEBPACK_IMPORTED_MODULE_1__["CandlestickSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["OHLCSeries"] = OHLCSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["OHLCSeriesDataItem"] = OHLCSeriesDataItem;
//# sourceMappingURL=OHLCSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js ***!
  \***********************************************************************************/
/*! exports provided: PercentSeriesDataItem, PercentSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PercentSeriesDataItem", function() { return PercentSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PercentSeries", function() { return PercentSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Series__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Series */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_elements_Label__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/elements/Label */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Label.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _elements_Tick__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../elements/Tick */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/ColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/ColorSet.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Ease__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Ease */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Responsive */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Responsive.js");
/**
 * Defines Percent Chart Series.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */














/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
//@todo: sequenced?
/**
 * Defines a [[DataItem]] for [[PercentSeries]].
 *
 * @see {@link DataItem}
 */
var PercentSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PercentSeriesDataItem, _super);
    /**
     * Constructor
     */
    function PercentSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "PercentSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    /**
     * Adds an `id` attribute the the slice element and returns its id.
     *
     * @ignore Exclude from docs
     */
    PercentSeriesDataItem.prototype.uidAttr = function () {
        return this.slice.uidAttr();
    };
    /**
     * Hide the data item (and corresponding visual elements).
     *
     * @param duration  Duration (ms)
     * @param delay     Delay hiding (ms)
     * @param toValue   Target value for animation
     * @param fields    Fields to animate while hiding
     */
    PercentSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {
        if (!fields) {
            fields = ["value"];
        }
        return _super.prototype.hide.call(this, duration, delay, 0, fields);
    };
    /**
     * Sets visibility of the Data Item.
     *
     * @param value Data Item
     */
    PercentSeriesDataItem.prototype.setVisibility = function (value, noChangeValues) {
        if (!noChangeValues) {
            if (value) {
                this.setWorkingValue("value", this.values["value"].value, 0, 0);
            }
            else {
                this.setWorkingValue("value", 0, 0, 0);
            }
        }
        _super.prototype.setVisibility.call(this, value, noChangeValues);
    };
    /**
     * Show hidden data item (and corresponding visual elements).
     *
     * @param duration  Duration (ms)
     * @param delay     Delay hiding (ms)
     * @param fields    Fields to animate while hiding
     */
    PercentSeriesDataItem.prototype.show = function (duration, delay, fields) {
        if (!fields) {
            fields = ["value"];
        }
        return _super.prototype.show.call(this, duration, delay, fields);
    };
    Object.defineProperty(PercentSeriesDataItem.prototype, "category", {
        /**
         * @return Category
         */
        get: function () {
            return this.properties.category;
        },
        /**
         * Category.
         *
         * @param value  Category
         */
        set: function (value) {
            this.setProperty("category", value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates a marker used in the legend for this slice.
     *
     * @ignore Exclude from docs
     * @param marker  Marker container
     */
    PercentSeriesDataItem.prototype.createLegendMarker = function (marker) {
        this.component.createLegendMarker(marker, this);
    };
    Object.defineProperty(PercentSeriesDataItem.prototype, "legendDataItem", {
        /**
         * @return Legend data item
         */
        get: function () {
            return this._legendDataItem;
        },
        /**
         * A legend's data item, that corresponds to this data item.
         *
         * @param value  Legend data item
         */
        set: function (value) {
            this._legendDataItem = value;
            if (value.label) {
                value.label.dataItem = this;
            }
            if (value.valueLabel) {
                value.valueLabel.dataItem = this;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PercentSeriesDataItem.prototype, "tick", {
        /**
         * A Tick element, related to this data item. (slice)
         *
         * @readonly
         * @return Tick element
         */
        get: function () {
            var _this = this;
            if (!this._tick) {
                var tick_1 = this.component.ticks.create();
                this._tick = tick_1;
                this.addSprite(tick_1);
                this._disposers.push(tick_1);
                tick_1.parent = this.component.ticksContainer;
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_13__["Disposer"](function () {
                    if (_this.component) {
                        _this.component.ticks.removeValue(tick_1);
                    }
                }));
                tick_1.visible = this.visible;
            }
            return this._tick;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PercentSeriesDataItem.prototype, "label", {
        /**
         * A Label element, related to this data item. (slice)
         *
         * @readonly
         * @return Label element
         */
        get: function () {
            var _this = this;
            if (!this._label) {
                var label_1 = this.component.labels.create();
                this.addSprite(label_1);
                this._label = label_1;
                this._disposers.push(label_1);
                label_1.parent = this.component.labelsContainer;
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_13__["Disposer"](function () {
                    if (_this.component) {
                        _this.component.labels.removeValue(label_1);
                    }
                }));
                label_1.visible = this.visible;
            }
            return this._label;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PercentSeriesDataItem.prototype, "slice", {
        /**
         * An element, related to this data item. (slice)
         *
         * @readonly
         * @return Slice element
         */
        get: function () {
            var _this = this;
            if (!this._slice) {
                var component_1 = this.component;
                var slice_1 = component_1.slices.create();
                this.addSprite(slice_1);
                this._slice = slice_1;
                this._disposers.push(slice_1);
                slice_1.parent = component_1.slicesContainer;
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_13__["Disposer"](function () {
                    component_1.slices.removeValue(slice_1);
                }));
                slice_1.visible = this.visible;
                // Apply accessibility
                if (component_1.itemsFocusable()) {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](this.component.role)) {
                        this.component.role = "menu";
                    }
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](slice_1.role)) {
                        slice_1.role = "menuitem";
                    }
                    slice_1.focusable = true;
                }
                else {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](this.component.role)) {
                        this.component.role = "list";
                    }
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](slice_1.role)) {
                        slice_1.role = "listitem";
                    }
                    slice_1.focusable = false;
                }
                // Apply screen reader label
                if (slice_1.focusable) {
                    slice_1.events.on("focus", function (ev) {
                        slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);
                    }, undefined, false);
                    slice_1.events.on("blur", function (ev) {
                        slice_1.readerTitle = "";
                    }, undefined, false);
                }
                if (slice_1.hoverable) {
                    slice_1.events.on("over", function (ev) {
                        slice_1.readerTitle = component_1.populateString(component_1.itemReaderText, _this);
                    }, undefined, false);
                    slice_1.events.on("out", function (ev) {
                        slice_1.readerTitle = "";
                    }, undefined, false);
                }
            }
            return this._slice;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PercentSeriesDataItem.prototype, "hiddenInLegend", {
        /**
         * @return Disabled in legend?
         */
        get: function () {
            return this.properties.hiddenInLegend;
        },
        /**
         * Should dataItem (slice) be hidden in legend?
         *
         * @param value Visible in legend?
         */
        set: function (value) {
            this.setProperty("hiddenInLegend", value);
        },
        enumerable: true,
        configurable: true
    });
    return PercentSeriesDataItem;
}(_Series__WEBPACK_IMPORTED_MODULE_1__["SeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[PercentSeries]] which is a base class for [[PieSeries]],
 * [[FunnelSeries]], and [[PyramidSeries]].
 *
 * @see {@link IPercentSeriesEvents} for a list of available Events
 * @see {@link IPercentSeriesAdapters} for a list of available Adapters
 */
var PercentSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PercentSeries, _super);
    /**
     * Constructor
     */
    function PercentSeries() {
        var _this = _super.call(this) || this;
        _this.className = "PercentSeries";
        _this._addAllDataItems = false;
        _this.colors = new _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_8__["ColorSet"]();
        _this.colors.step = 1;
        _this.isMeasured = true;
        _this.calculatePercent = true;
        var slicesContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_7__["Container"]);
        slicesContainer.shouldClone = false;
        slicesContainer.isMeasured = false;
        _this.slicesContainer = slicesContainer;
        var ticksContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_7__["Container"]);
        ticksContainer.shouldClone = false;
        ticksContainer.isMeasured = false;
        ticksContainer.layout = "none";
        _this.ticksContainer = ticksContainer;
        var labelsContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_7__["Container"]);
        labelsContainer.shouldClone = false;
        labelsContainer.isMeasured = false;
        labelsContainer.layout = "none";
        _this.labelsContainer = labelsContainer;
        _this.alignLabels = false;
        _this.bulletsContainer.toFront();
        // Make all slices focusable
        _this.skipFocusThreshold = 50;
        var defaultState = _this.defaultState;
        defaultState.transitionEasing = _core_utils_Ease__WEBPACK_IMPORTED_MODULE_11__["sinOut"];
        // Accessibility
        _this.itemReaderText = "{category}: {value.percent.formatNumber('#.#')}%";
        _this.applyTheme();
        return _this;
    }
    /**
     * Creates a slice element.
     *
     * @return Slice
     */
    PercentSeries.prototype.createSlice = function () {
        return new _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]();
    };
    /**
     * Creates a tick element.
     *
     * @return Tick
     */
    PercentSeries.prototype.createTick = function () {
        return new _elements_Tick__WEBPACK_IMPORTED_MODULE_5__["Tick"]();
    };
    /**
     * Sreates label element.
     *
     * @return label
     */
    PercentSeries.prototype.createLabel = function () {
        return new _core_elements_Label__WEBPACK_IMPORTED_MODULE_3__["Label"]();
    };
    Object.defineProperty(PercentSeries.prototype, "slices", {
        /**
         * A list of slice elements for the series.
         *
         * Use its `template` to configure look and behavior of the slices. E.g.:
         *
         * ```TypeScript
         * series.slices.template.stroke = am4core.color("#fff");
         * series.slices.template.strokeWidth = 2;
         * ```
         * ```JavaScript
         * series.slices.template.stroke = am4core.color("#fff");
         * series.slices.template.strokeWidth = 2;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "series": [{
         *     // ...
         *     "slices": {
         *       "stroke": "#fff",
         *       "strokeWidth": 2
         *     }
         *   }]
         * }
         * ```
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates
         * @return Slices
         */
        get: function () {
            if (!this._slices) {
                var slice = this.createSlice();
                slice.applyOnClones = true;
                this._disposers.push(slice);
                this.initSlice(slice);
                this._slices = new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__["ListTemplate"](slice);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__["ListDisposer"](this._slices));
            }
            return this._slices;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PercentSeries.prototype, "ticks", {
        /**
         * A list of tick elements for the series. Ticks connect slice to its label.
         *
         * Use its `template` to configure look and behavior of the ticks. E.g.:
         *
         * ```TypeScript
         * series.ticks.template.strokeWidth = 2;
         * ```
         * ```JavaScript
         * series.ticks.template.strokeWidth = 2;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "series": [{
         *     // ...
         *     "ticks": {
         *       "strokeWidth": 2
         *     }
         *   }]
         * }
         * ```
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates
         * @return Ticks
         */
        get: function () {
            if (!this._ticks) {
                var tick = this.createTick();
                tick.applyOnClones = true;
                this._disposers.push(tick);
                this.initTick(tick);
                this._ticks = new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__["ListTemplate"](tick);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__["ListDisposer"](this._ticks));
            }
            return this._ticks;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PercentSeries.prototype, "labels", {
        /**
         * A list of slice label elements for the series.
         *
         * Use its `template` to configure look and behavior of the labels. E.g.:
         *
         * ```TypeScript
         * series.labels.template.fill = am4core.color("#c00");
         * series.labels.template.fontSize = 20;
         * ```
         * ```JavaScript
         * series.labels.template.fill = am4core.color("#c00");
         * series.labels.template.fontSize = 20;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "series": [{
         *     // ...
         *     "labels": {
         *       "stroke": "#c00",
         *       "fontSize": 20
         *     }
         *   }]
         * }
         * ```
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/list-templates/} for more information about list templates
         * @return Labels
         */
        get: function () {
            if (!this._labels) {
                var label = this.createLabel();
                label.applyOnClones = true;
                this._disposers.push(label);
                this.initLabel(label);
                this._labels = new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__["ListTemplate"](label);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_6__["ListDisposer"](this._labels));
            }
            return this._labels;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    PercentSeries.prototype.createDataItem = function () {
        return new PercentSeriesDataItem();
    };
    /**
     * Creates and returns a new slice element.
     *
     * @param sliceType  Type of the slice element
     * @return Slice
     */
    PercentSeries.prototype.initSlice = function (slice) {
    };
    PercentSeries.prototype.initLabel = function (label) {
        label.text = "{category}: {value.percent.formatNumber('#.0')}%";
        label.isMeasured = false;
        label.padding(5, 5, 5, 5);
    };
    PercentSeries.prototype.initTick = function (label) {
    };
    /**
     * Validates (processes) data items.
     *
     * @ignore Exclude from docs
     */
    PercentSeries.prototype.validateDataItems = function () {
        this.colors.reset();
        if (this.patterns) {
            this.patterns.reset();
        }
        _super.prototype.validateDataItems.call(this);
    };
    /**
     * Validates data item's element, effectively redrawing it.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    PercentSeries.prototype.validateDataElement = function (dataItem) {
        var slice = dataItem.slice;
        if (slice) {
            if (slice.fill == undefined) {
                if (this.patterns) {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](slice.stroke)) {
                        slice.stroke = this.colors.next();
                    }
                    slice.fill = this.patterns.next();
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](slice.fillOpacity)) {
                        slice.fill.backgroundOpacity = slice.fillOpacity;
                    }
                    if (slice.stroke instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"]) {
                        slice.fill.stroke = slice.stroke;
                        slice.fill.fill = slice.stroke;
                    }
                }
                else {
                    slice.fill = this.colors.next();
                }
            }
            else {
                this.colors.currentStep += this.colors.step;
            }
            if (slice.stroke == undefined) {
                slice.stroke = slice.fill;
            }
        }
        // do this at the end, otherwise bullets won't be positioned properly
        _super.prototype.validateDataElement.call(this, dataItem);
        if (slice) {
            dataItem.bullets.each(function (key, bullet) {
                if (bullet.fill == undefined) {
                    bullet.fill = slice.fill;
                }
                if (bullet.stroke == undefined) {
                    bullet.stroke = slice.stroke;
                }
            });
        }
        this.updateLegendValue(dataItem);
    };
    /**
     * Validates (processes) data.
     *
     * @ignore Exclude from docs
     */
    PercentSeries.prototype.validateData = function () {
        _super.prototype.validateData.call(this);
        if (this.chart) {
            this.chart.feedLegend();
        }
    };
    /**
     * Arranges slice labels according to position settings.
     *
     * @ignore Exclude from docs
     * @param dataItems  Data items
     */
    PercentSeries.prototype.arrangeLabels = function (dataItems) {
        for (var i = 0, len = dataItems.length; i < len; i++) {
            var dataItem = dataItems[i];
            var label = dataItem.label;
            if (label) {
                if (label.invalid) {
                    label.validate();
                }
                var lh = label.measuredHeight;
                if (!label.visible) {
                    lh = 0;
                }
                if (label.pixelY - lh / 2 < -this.maxHeight / 2) {
                    label.y = -this.maxHeight / 2 + lh / 2;
                }
                var nextLabel = this.getNextLabel(i + 1, dataItems);
                var bottom = label.pixelY + lh;
                if (nextLabel) {
                    if (nextLabel.y < bottom) {
                        nextLabel.y = bottom;
                    }
                }
            }
        }
    };
    PercentSeries.prototype.arrangeLabels2 = function (dataItems) {
        var previousTop = this.maxHeight / 2;
        for (var i = dataItems.length - 1; i >= 0; i--) {
            var dataItem = dataItems[i];
            var label = dataItem.label;
            if (label) {
                if (label.invalid) {
                    label.validate();
                }
                var lh = label.measuredHeight;
                if (!label.visible) {
                    lh = 0;
                }
                if (i == dataItems.length - 1) {
                    previousTop += lh / 2;
                }
                if (label.pixelY + lh > previousTop) {
                    label.y = previousTop - lh;
                    previousTop = label.y;
                }
            }
        }
    };
    /**
     * Returns the next label according to `index`.
     *
     * @param index      Current index
     * @param dataItems  Data items
     * @return Label element
     */
    PercentSeries.prototype.getNextLabel = function (index, dataItems) {
        if (dataItems.length >= index) {
            var nextDataItem = dataItems[index];
            if (nextDataItem) {
                if (nextDataItem.label) {
                    if (nextDataItem.visible) {
                        return nextDataItem.label;
                    }
                    else {
                        return this.getNextLabel(index + 1, dataItems);
                    }
                }
                else {
                    return this.getNextLabel(index + 1, dataItems);
                }
            }
        }
    };
    Object.defineProperty(PercentSeries.prototype, "colors", {
        /**
         * @return Color set
         */
        get: function () {
            return this.getPropertyValue("colors");
        },
        /**
         * A color set to be used for slices.
         *
         * For each new subsequent slice, the chart will assign the next color in
         * this set.
         *
         * @param value  Color set
         */
        set: function (value) {
            this.setPropertyValue("colors", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PercentSeries.prototype, "patterns", {
        /**
         * @return Pattern set
         */
        get: function () {
            return this.getPropertyValue("patterns");
        },
        /**
         * A [[PatternSet]] to use when creating patterned fills for slices.
         *
         * @since 4.7.5
         * @param value  Pattern set
         */
        set: function (value) {
            this.setPropertyValue("patterns", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Binds related legend data item's visual settings to this series' visual
     * settings.
     *
     * @ignore Exclude from docs
     * @param marker    Container
     * @param dataItem  Data item
     */
    PercentSeries.prototype.createLegendMarker = function (marker, dataItem) {
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](marker.children.iterator(), function (child) {
            var slice = dataItem.slice;
            child.defaultState.properties.fill = slice.fill;
            child.defaultState.properties.stroke = slice.stroke;
            child.defaultState.properties.fillOpacity = slice.fillOpacity;
            child.defaultState.properties.strokeOpacity = slice.strokeOpacity;
            child.fill = slice.fill;
            child.stroke = slice.stroke;
            child.fillOpacity = slice.fillOpacity;
            child.strokeOpacity = slice.strokeOpacity;
            if (child.fill == undefined) {
                child.__disabled = true;
            }
            var legendDataItem = marker.dataItem;
            legendDataItem.color = slice.fill;
            legendDataItem.colorOrig = slice.fill;
            child.addDisposer(slice.events.on("propertychanged", function (ev) {
                if (ev.property == "fill") {
                    child.__disabled = false;
                    if (!child.isActive) {
                        child.fill = slice.fill;
                    }
                    child.defaultState.properties.fill = slice.fill;
                    legendDataItem.color = slice.fill;
                    legendDataItem.colorOrig = slice.fill;
                }
                if (ev.property == "stroke") {
                    if (!child.isActive) {
                        child.stroke = slice.stroke;
                    }
                    child.defaultState.properties.stroke = slice.stroke;
                }
            }, undefined, false));
        });
    };
    /**
     * Repositions bullets when slice's size changes.
     *
     * @ignore Exclude from docs
     * @param event  Event
     */
    PercentSeries.prototype.handleSliceScale = function (event) {
        var _this = this;
        var slice = event.target;
        var dataItem = slice.dataItem;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](dataItem.bullets.iterator(), function (a) {
            var value = a[1];
            _this.positionBullet(value);
        });
    };
    /**
     * Repositions bullet and labels when slice moves.
     *
     * @ignore Exclude from docs
     * @param event  Event
     */
    PercentSeries.prototype.handleSliceMove = function (event) {
    };
    /**
     * Copies all properties from another instance of [[PercentSeries]].
     *
     * @param source  Source series
     */
    PercentSeries.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.slices.template.copyFrom(source.slices.template);
        this.labels.template.copyFrom(source.labels.template);
        this.ticks.template.copyFrom(source.ticks.template);
        this.colors = source.colors.clone();
    };
    Object.defineProperty(PercentSeries.prototype, "alignLabels", {
        /**
         * @return Align labels?
         */
        get: function () {
            return this.getPropertyValue("alignLabels");
        },
        /**
         * Align labels into nice vertical columns?
         *
         * This will ensure that labels never overlap with each other.
         *
         * Arranging labels into columns makes them more readble, and better user
         * experience.
         *
         * If set to `false` labels will be positioned at `label.radius` distance,
         * and may, in some cases, overlap.
         *
         * @default true
         * @param value  Align labels?
         */
        set: function (value) {
            this.setAlignLabels(value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    PercentSeries.prototype.setAlignLabels = function (value) {
        this.setPropertyValue("alignLabels", value, true);
    };
    Object.defineProperty(PercentSeries.prototype, "ignoreZeroValues", {
        /**
         * @return Ignore zero values
         */
        get: function () {
            return this.getPropertyValue("ignoreZeroValues");
        },
        /**
         * If set to `true` the chart will not show slices with zero values.
         *
         * @default false
         * @since 4.7.9
         * @param  value  Ignore zero values
         */
        set: function (value) {
            this.setPropertyValue("ignoreZeroValues", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates corresponding legend data item with current values.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    PercentSeries.prototype.updateLegendValue = function (dataItem) {
        if (dataItem) {
            var legendDataItem = dataItem.legendDataItem;
            var legendSettings = dataItem.legendSettings;
            if (legendDataItem && legendSettings) {
                if (legendSettings) {
                    if (legendSettings.labelText) {
                        legendDataItem.label.text = legendSettings.labelText;
                    }
                    if (legendSettings.itemLabelText) {
                        legendDataItem.label.text = legendSettings.itemLabelText;
                    }
                    if (legendSettings.valueText) {
                        legendDataItem.valueLabel.text = legendSettings.valueText;
                    }
                    if (legendSettings.itemValueText) {
                        legendDataItem.valueLabel.text = legendSettings.itemValueText;
                    }
                }
            }
        }
    };
    return PercentSeries;
}(_Series__WEBPACK_IMPORTED_MODULE_1__["Series"]));

/**
 * bboxter class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_9__["registry"].registeredClasses["PercentSeries"] = PercentSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_9__["registry"].registeredClasses["PercentSeriesDataItem"] = PercentSeriesDataItem;
/**
 * Add default responsive rules
 */
/**
 * Disable labels and ticks.
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_14__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_14__["ResponsiveBreakpoints"].maybeXS,
    state: function (target, stateId) {
        if (target instanceof PercentSeries) {
            var state = target.states.create(stateId);
            var labelState = target.labels.template.states.create(stateId);
            labelState.properties.disabled = true;
            var tickState = target.ticks.template.states.create(stateId);
            tickState.properties.disabled = true;
            return state;
        }
        return null;
    }
});
//# sourceMappingURL=PercentSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PictorialStackedSeries.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/PictorialStackedSeries.js ***!
  \********************************************************************************************/
/*! exports provided: PictorialStackedSeriesDataItem, PictorialStackedSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PictorialStackedSeriesDataItem", function() { return PictorialStackedSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PictorialStackedSeries", function() { return PictorialStackedSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _PyramidSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PyramidSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PyramidSeries.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/**
 * Defines Pictorial Stacked Series.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
//@todo: sequenced?
/**
 * Defines a [[DataItem]] for [[PictorialStackedSeries]].
 *
 * @see {@link DataItem}
 */
var PictorialStackedSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PictorialStackedSeriesDataItem, _super);
    /**
     * Constructor
     */
    function PictorialStackedSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "PictorialStackedSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    return PictorialStackedSeriesDataItem;
}(_PyramidSeries__WEBPACK_IMPORTED_MODULE_1__["PyramidSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a PictorialStacked series on a [[SlicedChart]].
 *
 * @see {@link IPictorialStackedSeriesEvents} for a list of available Events
 * @see {@link IPictorialStackedSeriesAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation
 * @important
 */
var PictorialStackedSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PictorialStackedSeries, _super);
    /**
     * Constructor
     */
    function PictorialStackedSeries() {
        var _this = _super.call(this) || this;
        _this.className = "PictorialStackedSeries";
        _this.topWidth = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
        _this.bottomWidth = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_6__["percent"])(100);
        _this.valueIs = "height";
        _this.applyTheme();
        _this.startLocation = 0;
        _this.endLocation = 1;
        _this.align = "center";
        _this.valign = "middle";
        _this._maskSprite = _this.slicesContainer.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        _this._maskSprite.visible = false;
        _this._maskSprite.zIndex = 100;
        _this._maskSprite.shouldClone = false;
        return _this;
    }
    /**
     * Sizes the mask to fit the series.
     *
     * @ignore
     */
    PictorialStackedSeries.prototype.validateDataElements = function () {
        var maxWidth = this.slicesContainer.maxWidth;
        var maxHeight = this.slicesContainer.maxHeight;
        var maskSprite = this._maskSprite;
        //maskSprite.validatePosition(); // for some reason size of the maskSprite is 0x0 after we removed validatePosition in afterdraw
        var pictureWidth = maskSprite.measuredWidth / maskSprite.scale;
        var pictureHeight = maskSprite.measuredHeight / maskSprite.scale;
        var scale = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["min"](maxHeight / pictureHeight, maxWidth / pictureWidth);
        if (scale == Infinity) {
            scale = 1; // can't return here, won't draw legend properly
        }
        scale = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["max"](0.001, scale);
        var startLocation = this.startLocation;
        var endLocation = this.endLocation;
        var newWidth = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["min"](maxWidth, pictureWidth * scale);
        var newHeight = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["min"](maxHeight, pictureHeight * scale);
        maskSprite.scale = scale;
        if (this.orientation == "vertical") {
            this.topWidth = newWidth + 4;
            this.bottomWidth = newWidth + 4;
            this.pyramidHeight = newHeight * (endLocation - startLocation);
            maskSprite.x = maxWidth / 2;
            maskSprite.y = newHeight / 2;
        }
        else {
            this.topWidth = newHeight + 4;
            this.bottomWidth = newHeight + 4;
            this.pyramidHeight = newWidth * (endLocation - startLocation);
            maskSprite.valign = "middle";
            maskSprite.x = newWidth / 2;
            maskSprite.y = maxHeight / 2;
        }
        maskSprite.verticalCenter = "middle";
        maskSprite.horizontalCenter = "middle";
        _super.prototype.validateDataElements.call(this);
        var y;
        var x;
        if (this.orientation == "vertical") {
            if (this.valign == "bottom") {
                y = (maxHeight - newHeight);
            }
            if (this.valign == "middle") {
                y = (maxHeight - newHeight) / 2;
            }
            if (this.valign == "top") {
                y = 0;
            }
            if (this.align == "left") {
                x = -(maxWidth - newWidth) / 2;
            }
            if (this.align == "center") {
                x = 0;
            }
            if (this.align == "right") {
                x = (maxWidth - newWidth) / 2;
            }
            this.slices.template.dy = startLocation * newHeight;
            if (this.alignLabels) {
                this.slicesContainer.dx = x;
            }
        }
        else {
            if (this.valign == "bottom") {
                y = (maxHeight - newHeight) / 2;
            }
            if (this.valign == "middle") {
                y = 0;
            }
            if (this.valign == "top") {
                y = -(maxHeight - newHeight) / 2;
            }
            if (this.align == "left") {
                x = 0;
            }
            if (this.align == "center") {
                x = (maxWidth - newWidth) / 2;
            }
            if (this.align == "right") {
                x = (maxWidth - newWidth);
            }
            this.slices.template.dx = startLocation * newWidth;
            if (this.alignLabels) {
                this.slicesContainer.dy = y;
            }
        }
        this.slicesContainer.x = x;
        this.labelsContainer.x = x;
        this.ticksContainer.x = x;
        this.slicesContainer.y = y;
        this.labelsContainer.y = y;
        this.ticksContainer.y = y;
        if (newWidth > 0 && newHeight > 0) {
            this.slicesContainer.mask = maskSprite;
        }
    };
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    PictorialStackedSeries.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Pyramid Series");
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    PictorialStackedSeries.prototype.createDataItem = function () {
        return new PictorialStackedSeriesDataItem();
    };
    Object.defineProperty(PictorialStackedSeries.prototype, "maskSprite", {
        /**
         * A [[Sprite]] element that is used as a series mask.
         *
         * If set, this element's shape will be used to apply shape to the whole
         * stacked pictorial series.
         *
         * You can use this element's `path` property to set an SVG path for the
         * shape:
         *
         * ```TypeScript
         * let iconPath = "M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z";
         * // ...
         * series.maskSprite.path = iconPath;
         * ```
         * ```JavaScript
         * let iconPath = "M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z";
         * // ...
         * series.maskSprite.path = iconPath;
         * ```
         * ```JSON
         * let iconPath = "M511.82,329.991c-0.256-1.212-1.064-2.244-2.192-2.784l-24.396-11.684c17.688-29.776,11.804-68.912-15.58-91.88 c-53.756-45.084-131.696-70.936-213.828-70.936c-82.128,0-160.068,25.856-213.82,70.936c-27.416,22.992-33.28,62.18-15.524,91.972 L2.276,327.203c-1.128,0.54-1.936,1.572-2.192,2.792c-0.256,1.22,0.08,2.496,0.896,3.436l21.204,24.388 c0.764,0.88,1.868,1.376,3.02,1.376c0.084,0,0.172,0,0.26-0.008c1.244-0.084,2.384-0.74,3.072-1.776l14.852-22.376 c12.648,10.112,28.392,15.776,44.916,15.776c16.872,0,33.284-5.98,46.232-16.836c27.828-23.34,73.172-37.272,121.288-37.272 c48.12,0,93.464,13.932,121.296,37.272c12.944,10.856,29.36,16.836,46.228,16.836c16.596,0,32.4-5.724,45.08-15.916l14.94,22.512 c0.692,1.04,1.824,1.696,3.076,1.776c0.084,0.008,0.172,0.008,0.256,0.008c1.156,0,2.256-0.496,3.02-1.376l21.2-24.388C511.74,332.487,512.068,331.211,511.82,329.991z";
         * // ...
         * {
         *   // ...
         *   "series": [{
         *     "type": "PictorialStackedSeries",
         *     // ...
         *     "maskSprite": {
         *       "path": iconPath
         *     }
         *   }]
         * }
         * ```
         *
         * @return Mask sprite
         */
        get: function () {
            return this._maskSprite;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Inits FunnelSlice.
     *
     * @param slice to init
     */
    PictorialStackedSeries.prototype.initSlice = function (slice) {
        _super.prototype.initSlice.call(this, slice);
        var hs = slice.states.getKey("hover");
        if (hs) {
            hs.properties.expandDistance = 0;
        }
    };
    Object.defineProperty(PictorialStackedSeries.prototype, "startLocation", {
        /**
         * @return  Start location
         */
        get: function () {
            return this.getPropertyValue("startLocation");
        },
        /**
         * Relative location to start series from.
         *
         * Range of values: 0 to 1.
         *
         * This setting indicates where actual slices will start relatively to the
         * whole height/width of the series.
         *
         * For example, if we want slices to start at 30% from the top/left of the
         * series, we can set `startLocation = 0.3`.
         *
         * To fill shape outside of the location range, use background of the
         * property `slicesContainer`.
         *
         * ```TypeScript
         * series.startLocation = 0.2;
         * series.endLocation = 0.8;
         * series.slicesContainer.background.fill = am4core.color("#eee");
         * ```
         * ```JavaScript
         * series.startLocation = 0.2;
         * series.endLocation = 0.8;
         * series.slicesContainer.background.fill = am4core.color("#eee");
         * ```
         * ```JSON
         * {
         *   // ...
         *   "series": [{
         *     // ...
         *     "startLocation": 0.2,
         *     "endLocation": 0.8,
         *     "slicesContainer": {
         *       "background": {
         *         "fill": "#eee"
         *       }
         *     }
         *   }]
         * }
         * ```
         *
         * @default 0
         * @since 4.1.13
         * @param  value  Start location
         */
        set: function (value) {
            if (this.setPropertyValue("startLocation", value)) {
                this.invalidateDataItems();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PictorialStackedSeries.prototype, "endLocation", {
        /**
         * @return End location
         */
        get: function () {
            return this.getPropertyValue("endLocation");
        },
        /**
         * Relative location to end series at.
         *
         * Range of values: 0 to 1.
         *
         * This setting indicates where actual slices will end relatively to the
         * whole height/width of the series.
         *
         * For example, if we want slices to end at 70% from the top/left of the
         * series, we can set `endLocation = 0.7`.
         *
         * To fill shape outside of the location range, use background of the
         * property `slicesContainer`.
         *
         * ```TypeScript
         * series.startLocation = 0.2;
         * series.endLocation = 0.8;
         * series.slicesContainer.background.fill = am4core.color("#eee");
         * ```
         * ```JavaScript
         * series.startLocation = 0.2;
         * series.endLocation = 0.8;
         * series.slicesContainer.background.fill = am4core.color("#eee");
         * ```
         * ```JSON
         * {
         *   // ...
         *   "series": [{
         *     // ...
         *     "startLocation": 0.2,
         *     "endLocation": 0.8,
         *     "slicesContainer": {
         *       "background": {
         *         "fill": "#eee"
         *       }
         *     }
         *   }]
         * }
         * ```
         *
         * @default 1
         * @since 4.1.13
         * @param  value  End location
         */
        set: function (value) {
            if (this.setPropertyValue("endLocation", value)) {
                this.invalidateDataItems();
            }
        },
        enumerable: true,
        configurable: true
    });
    return PictorialStackedSeries;
}(_PyramidSeries__WEBPACK_IMPORTED_MODULE_1__["PyramidSeries"]));

/**
 * bboxter class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["PictorialStackedSeries"] = PictorialStackedSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["PictorialStackedSeriesDataItem"] = PictorialStackedSeriesDataItem;
//# sourceMappingURL=PictorialStackedSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js ***!
  \*******************************************************************************/
/*! exports provided: PieSeriesDataItem, PieSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PieSeriesDataItem", function() { return PieSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PieSeries", function() { return PieSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _PercentSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PercentSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js");
/* harmony import */ var _core_elements_Slice__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/Slice */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Slice.js");
/* harmony import */ var _axes_AxisLabelCircular__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../axes/AxisLabelCircular */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js");
/* harmony import */ var _elements_PieTick__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../elements/PieTick */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/PieTick.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/**
 * Defines Pie Chart Series.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


//import { Slice3D } from "../../core/elements/3D/Slice3D";






/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
//@todo: sequenced?
/**
 * Defines a [[DataItem]] for [[PieSeries]].
 *
 * @see {@link DataItem}
 */
var PieSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PieSeriesDataItem, _super);
    /**
     * Constructor
     */
    function PieSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "PieSeriesDataItem";
        _this.values.radiusValue = {};
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(PieSeriesDataItem.prototype, "radiusValue", {
        /**
         * @return Radius
         */
        get: function () {
            return this.values.radiusValue.value;
        },
        /**
         * Slice's radius, if other than default.
         *
         * @param value  Radius
         */
        set: function (value) {
            this.setValue("radiusValue", value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Hide the data item (and corresponding visual elements).
     *
     * @param duration  Duration (ms)
     * @param delay     Delay hiding (ms)
     * @param toValue   Target value for animation
     * @param fields    Fields to animate while hiding
     */
    PieSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {
        return _super.prototype.hide.call(this, duration, delay, 0, ["value", "radiusValue"]);
    };
    /**
     * Show hidden data item (and corresponding visual elements).
     *
     * @param duration  Duration (ms)
     * @param delay     Delay hiding (ms)
     * @param fields    Fields to animate while hiding
     */
    PieSeriesDataItem.prototype.show = function (duration, delay, fields) {
        return _super.prototype.show.call(this, duration, delay, ["value", "radiusValue"]);
    };
    return PieSeriesDataItem;
}(_PercentSeries__WEBPACK_IMPORTED_MODULE_1__["PercentSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a slice series on a Pie chart.
 *
 * @see {@link IPieSeriesEvents} for a list of available Events
 * @see {@link IPieSeriesAdapters} for a list of available Adapters
 * @todo Example
 * @important
 */
var PieSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PieSeries, _super);
    /**
     * Constructor
     */
    function PieSeries() {
        var _this = _super.call(this) || this;
        _this.className = "PieSeries";
        _this.alignLabels = true;
        //this.startAngle = -90;
        //this.endAngle = 270;
        _this.layout = "none";
        _this.labels.template.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_8__["percent"])(5);
        _this.addDisposer(_this.labels.template.events.on("enabled", _this.invalidate, _this, false));
        _this.applyTheme();
        return _this;
    }
    /**
     * creates slice
     */
    PieSeries.prototype.createSlice = function () {
        return new _core_elements_Slice__WEBPACK_IMPORTED_MODULE_2__["Slice"]();
    };
    /**
     * creates tick
     */
    PieSeries.prototype.createTick = function () {
        return new _elements_PieTick__WEBPACK_IMPORTED_MODULE_4__["PieTick"]();
    };
    /**
     * creates label
     */
    PieSeries.prototype.createLabel = function () {
        return new _axes_AxisLabelCircular__WEBPACK_IMPORTED_MODULE_3__["AxisLabelCircular"]();
    };
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    PieSeries.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Pie Slice Series");
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    PieSeries.prototype.createDataItem = function () {
        return new PieSeriesDataItem();
    };
    /**
     * Inits slice.
     *
     * @param slice to init
     */
    PieSeries.prototype.initSlice = function (slice) {
        slice.isMeasured = false;
        slice.defaultState.properties.scale = 1;
        slice.observe("scale", this.handleSliceScale, this);
        slice.observe(["dx", "dy", "x", "y", "shiftRadius"], this.handleSliceMove, this);
        slice.tooltipText = "{category}: {value.percent.formatNumber('#.#')}% ({value.value})";
        var hoverState = slice.states.create("hover");
        hoverState.properties.scale = 1.05;
        var defaultState = slice.defaultState;
        defaultState.properties.shiftRadius = 0;
        slice.togglable = true;
        slice.events.on("toggled", function (event) {
            event.target.hideTooltip();
            // The following takes care of removing hover on subsequent click of
            // a slice
            if (event.target.interactions.lastHitPointer
                && event.target.interactions.lastHitPointer.touch
                && !event.target.isActive) {
                event.target.isHover = false;
            }
        });
        var activeState = slice.states.create("active");
        activeState.properties.shiftRadius = 0.10;
    };
    /**
     * (Re)validates the whole series, effectively causing it to redraw.
     *
     * @ignore Exclude from docs
     */
    PieSeries.prototype.validate = function () {
        this._leftItems = [];
        this._rightItems = [];
        this._currentStartAngle = this.startAngle;
        this._arcRect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["getArcRect"](this.startAngle, this.endAngle);
        this._maxRadiusPercent = 0;
        for (var i = this.startIndex; i < this.endIndex; i++) {
            var dataItem = this.dataItems.getIndex(i);
            var radiusValuePercent = dataItem.values.radiusValue.percent;
            if (radiusValuePercent > this._maxRadiusPercent) {
                this._maxRadiusPercent = radiusValuePercent;
            }
        }
        _super.prototype.validate.call(this);
        if (this.alignLabels) {
            if (this.startAngle > this.endAngle) {
                this._rightItems.reverse();
            }
            else {
                this._leftItems.reverse();
            }
            this._rightItems.sort(function (a, b) {
                var aAngle = (a.slice.middleAngle + 360) % 360;
                var bAngle = (b.slice.middleAngle + 360) % 360;
                if (aAngle > 270) {
                    aAngle -= 360;
                }
                if (bAngle > 270) {
                    bAngle -= 360;
                }
                if (aAngle < bAngle) {
                    return -1;
                }
                else if (aAngle > bAngle) {
                    return 1;
                }
                else {
                    return 0;
                }
            });
            this._leftItems.sort(function (a, b) {
                var aAngle = (a.slice.middleAngle + 360) % 360;
                var bAngle = (b.slice.middleAngle + 360) % 360;
                if (aAngle < bAngle) {
                    return 1;
                }
                else if (aAngle > bAngle) {
                    return -1;
                }
                else {
                    return 0;
                }
            });
            this.arrangeLabels(this._rightItems);
            this.arrangeLabels2(this._rightItems);
            this.arrangeLabels(this._leftItems);
            this.arrangeLabels2(this._leftItems);
        }
    };
    /**
     * Validates data item's element, effectively redrawing it.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    PieSeries.prototype.validateDataElement = function (dataItem) {
        if (this.pixelRadius > 0) {
            if (this.ignoreZeroValues && (dataItem.value == 0 || dataItem.value == null)) {
                dataItem.__disabled = true;
            }
            else {
                dataItem.__disabled = false;
            }
            // SLICE
            var slice = dataItem.slice;
            slice.radius = this.pixelRadius;
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](dataItem.radiusValue)) {
                slice.radius = this.pixelInnerRadius + (this.pixelRadius - this.pixelInnerRadius) * dataItem.values.radiusValue.percent / this._maxRadiusPercent;
            }
            if (!(slice.innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_8__["Percent"])) {
                slice.innerRadius = this.pixelInnerRadius;
            }
            slice.startAngle = this._currentStartAngle;
            slice.arc = Math.abs(dataItem.values.value.percent) * (this.endAngle - this.startAngle) / 100;
            // LABEL
            if (!this.labels.template.disabled) {
                var label = dataItem.label;
                var tick = dataItem.tick;
                tick.slice = slice;
                tick.label = label;
                var normalizedMiddleAngle = (slice.middleAngle + 360) % 360; // force angle to be 0 - 360;
                var point = void 0;
                if (this.alignLabels) {
                    var labelRadius = label.pixelRadius(slice.radius);
                    var x = tick.length + labelRadius;
                    label.dx = 0;
                    label.dy = 0;
                    label.verticalCenter = "middle";
                    var arcRect = this._arcRect;
                    // right half
                    if (normalizedMiddleAngle > 270 || normalizedMiddleAngle <= 90) {
                        x += (arcRect.width + arcRect.x) * this.pixelRadius;
                        label.horizontalCenter = "left";
                        this._rightItems.push(dataItem);
                    }
                    // left half
                    else {
                        x -= arcRect.x * this.pixelRadius;
                        label.horizontalCenter = "right";
                        this._leftItems.push(dataItem);
                        x *= -1;
                    }
                    var distance = slice.radius + tick.length + labelRadius;
                    point = { x: x, y: slice.iy * distance };
                    label.moveTo(point);
                }
                else {
                    var depth = slice["depth"];
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](depth)) {
                        depth = 0;
                    }
                    label.fixPosition(slice.middleAngle, slice.radius, slice.radiusY, 0, -depth);
                }
            }
            this._currentStartAngle += slice.arc;
            // do this at the end, otherwise bullets won't be positioned properly
            _super.prototype.validateDataElement.call(this, dataItem);
        }
    };
    Object.defineProperty(PieSeries.prototype, "radius", {
        /**
         * @return Radius
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * Outer radius for the series' slices in pixels or [[Percent]].
         *
         * @param value  Radius
         */
        set: function (value) {
            if (this.setPercentProperty("radius", value, true, false, 10, false)) {
                this.invalidateDataItems();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieSeries.prototype, "pixelRadius", {
        /**
         * @return Radius
         * @ignore
         */
        get: function () {
            return this._pixelRadius;
        },
        /**
         * @ignore
         */
        set: function (value) {
            if (this._pixelRadius != value) {
                this._pixelRadius = value;
                this.invalidateDataItems();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieSeries.prototype, "pixelInnerRadius", {
        /**
         * @return Pixel inner radius
         * @ignore
         */
        get: function () {
            return this._pixelInnerRadius;
        },
        /**
         * @ignore
         */
        set: function (value) {
            if (this._pixelInnerRadius != value) {
                this._pixelInnerRadius = value;
                this.invalidateDataItems();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieSeries.prototype, "innerRadius", {
        /**
         * @ignore Exclude from docs
         * @return Radius
         */
        get: function () {
            return this.getPropertyValue("innerRadius");
        },
        /**
         * Inner radius for the series' slices in pixels.
         *
         * @ignore Exclude from docs
         * @todo Redo so that users can set it
         * @param value  Radius
         */
        set: function (value) {
            this.setPercentProperty("innerRadius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieSeries.prototype, "startAngle", {
        /**
         * @return Angle
         */
        get: function () {
            var startAngle = this.getPropertyValue("startAngle");
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](startAngle)) {
                return startAngle;
            }
            else {
                return this._startAngleInternal;
            }
        },
        /**
         * Start angle for the series' slices in degrees. (0-360)
         *
         * @param value  Angle
         */
        set: function (value) {
            this.setPropertyValue("startAngle", _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["normalizeAngle"](value), true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieSeries.prototype, "endAngle", {
        /**
         * @return Angle
         */
        get: function () {
            var endAngle = this.getPropertyValue("endAngle");
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](endAngle)) {
                return endAngle;
            }
            else {
                return this._endAngleInternal;
            }
        },
        /**
         * End angle for the series' slices in degrees. (0-360)
         *
         * @param value  Angle
         */
        set: function (value) {
            this.setPropertyValue("endAngle", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Positions series bullet.
     *
     * @ignore Exclude from docs
     * @param bullet  Bullet
     */
    PieSeries.prototype.positionBullet = function (bullet) {
        _super.prototype.positionBullet.call(this, bullet);
        var dataItem = bullet.dataItem;
        var slice = dataItem.slice;
        var locationX = bullet.locationX;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](locationX)) {
            locationX = 0.5;
        }
        var locationY = bullet.locationY;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_7__["isNumber"](locationY)) {
            locationY = 1;
        }
        var angle = slice.startAngle + slice.arc * locationX;
        bullet.x = locationY * slice.radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["cos"](angle);
        bullet.y = locationY * slice.radiusY * _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["sin"](angle);
    };
    /**
     * Repositions bullet and labels when slice moves.
     *
     * @ignore Exclude from docs
     * @param event  Event
     */
    PieSeries.prototype.handleSliceMove = function (event) {
        if (!this.alignLabels) {
            var slice = event.target;
            var dataItem = slice.dataItem;
            // moving textelement, as label dx and dy are already employed for aligning
            //@labeltodo
            if (dataItem) {
                var label = dataItem.label;
                if (label) {
                    label.dx = label.fdx + slice.dx + slice.pixelX;
                    label.dy = label.fdy + slice.dy + slice.pixelY;
                }
            }
        }
    };
    Object.defineProperty(PieSeries.prototype, "bbox", {
        /**
         * Returns bounding box (square) for this element.
         *
         * @ignore Exclude from docs
         */
        get: function () {
            if (this.definedBBox) {
                return this.definedBBox;
            }
            var chart = this.chart;
            if (chart) {
                return _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["getArcRect"](chart.startAngle, chart.endAngle, this.pixelRadius);
            }
            return _core_utils_Math__WEBPACK_IMPORTED_MODULE_6__["getArcRect"](this.startAngle, this.endAngle, this.pixelRadius);
        },
        enumerable: true,
        configurable: true
    });
    return PieSeries;
}(_PercentSeries__WEBPACK_IMPORTED_MODULE_1__["PercentSeries"]));

/**
 * bboxter class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["PieSeries"] = PieSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["PieSeriesDataItem"] = PieSeriesDataItem;
//# sourceMappingURL=PieSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries3D.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries3D.js ***!
  \*********************************************************************************/
/*! exports provided: PieSeries3DDataItem, PieSeries3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PieSeries3DDataItem", function() { return PieSeries3DDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PieSeries3D", function() { return PieSeries3D; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _series_PieSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../series/PieSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js");
/* harmony import */ var _core_elements_3d_Slice3D__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/elements/3d/Slice3D */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/3d/Slice3D.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[PieSeries3D]].
 *
 * @see {@link DataItem}
 */
var PieSeries3DDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PieSeries3DDataItem, _super);
    /**
     * Constructor
     */
    function PieSeries3DDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "PieSeries3DDataItem";
        _this.values.depthValue = {};
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(PieSeries3DDataItem.prototype, "depthValue", {
        /**
         * @return Depth
         */
        get: function () {
            return this.values["depthValue"].value;
        },
        /**
         * Slice depth (height).
         *
         * @param value  Depth
         */
        set: function (value) {
            this.setValue("depthValue", value);
        },
        enumerable: true,
        configurable: true
    });
    return PieSeries3DDataItem;
}(_series_PieSeries__WEBPACK_IMPORTED_MODULE_1__["PieSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a slice series on a 3D pie chart.
 *
 * @see {@link IPieSeries3DEvents} for a list of available Events
 * @see {@link IPieSeries3DAdapters} for a list of available Adapters
 * @todo Example
 * @important
 */
var PieSeries3D = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PieSeries3D, _super);
    /**
     * Constructor
     */
    function PieSeries3D() {
        var _this = _super.call(this) || this;
        _this.className = "PieSeries3D";
        _this.applyTheme();
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object
     * @see {@link DataItem}
     * @return Data Item
     */
    PieSeries3D.prototype.createDataItem = function () {
        return new PieSeries3DDataItem();
    };
    /**
     * creates slice
     */
    PieSeries3D.prototype.createSlice = function () {
        return new _core_elements_3d_Slice3D__WEBPACK_IMPORTED_MODULE_2__["Slice3D"]();
    };
    /**
     * Validates data item's element, effectively redrawing it.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    PieSeries3D.prototype.validateDataElement = function (dataItem) {
        var slice = dataItem.slice;
        var depth = this.depth;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](depth)) {
            depth = this.chart.depth;
        }
        var depthPercent = dataItem.values.depthValue.percent;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](depthPercent)) {
            depthPercent = 100;
        }
        slice.depth = depthPercent * depth / 100;
        var angle = this.angle;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_4__["isNumber"](angle)) {
            angle = this.chart.angle;
        }
        slice.angle = angle;
        _super.prototype.validateDataElement.call(this, dataItem);
    };
    /**
     * (Re)validates the whole series, effectively causing it to redraw.
     *
     * @ignore Exclude from docs
     */
    PieSeries3D.prototype.validate = function () {
        _super.prototype.validate.call(this);
        for (var i = this._workingStartIndex; i < this._workingEndIndex; i++) {
            var dataItem = this.dataItems.getIndex(i);
            var slice = dataItem.slice;
            var startAngle = slice.startAngle;
            // find quarter
            //q0 || q1
            if ((startAngle >= -90 && startAngle < 90)) {
                slice.toFront();
            }
            //q2 || q3
            else if ((startAngle >= 90)) {
                slice.toBack();
            }
        }
    };
    Object.defineProperty(PieSeries3D.prototype, "depth", {
        /**
         * @return Depth (px)
         */
        get: function () {
            return this.getPropertyValue("depth");
        },
        /**
         * Depth (height) of the pie slice in pixels.
         *
         * @param value  Depth (px)
         */
        set: function (value) {
            this.setPropertyValue("depth", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieSeries3D.prototype, "angle", {
        /**
         * @return Angle
         */
        get: function () {
            return this.getPropertyValue("angle");
        },
        /**
         * Angle of the view point of the 3D pie. (0-360)
         *
         * @param value  Angle
         */
        set: function (value) {
            this.setPropertyValue("angle", value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Positions series bullet.
     *
     * @ignore Exclude from docs
     * @param bullet  Bullet
     */
    PieSeries3D.prototype.positionBullet = function (bullet) {
        _super.prototype.positionBullet.call(this, bullet);
        var dataItem = bullet.dataItem;
        var slice = dataItem.slice;
        bullet.y = bullet.pixelY - slice.depth;
    };
    return PieSeries3D;
}(_series_PieSeries__WEBPACK_IMPORTED_MODULE_1__["PieSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["PieSeries3D"] = PieSeries3D;
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["PieSeries3DDataItem"] = PieSeries3DDataItem;
//# sourceMappingURL=PieSeries3D.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PyramidSeries.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/PyramidSeries.js ***!
  \***********************************************************************************/
/*! exports provided: PyramidSeriesDataItem, PyramidSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PyramidSeriesDataItem", function() { return PyramidSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PyramidSeries", function() { return PyramidSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _FunnelSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FunnelSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/FunnelSeries.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/**
 * Defines Pyramid Series.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
//@todo: sequenced?
/**
 * Defines a [[DataItem]] for [[PyramidSeries]].
 *
 * @see {@link DataItem}
 */
var PyramidSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PyramidSeriesDataItem, _super);
    /**
     * Constructor
     */
    function PyramidSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "PyramidSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    return PyramidSeriesDataItem;
}(_FunnelSeries__WEBPACK_IMPORTED_MODULE_1__["FunnelSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a FunnelSlice series on a [[SlicedChart]].
 *
 * @see {@link IPyramidSeriesEvents} for a list of available Events
 * @see {@link IPyramidSeriesAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation
 * @important
 */
var PyramidSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PyramidSeries, _super);
    /**
     * Constructor
     */
    function PyramidSeries() {
        var _this = _super.call(this) || this;
        _this.className = "PyramidSeries";
        _this.topWidth = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(0);
        _this.bottomWidth = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        _this.pyramidHeight = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        _this.valueIs = "area";
        _this.sliceLinks.template.width = 0;
        _this.sliceLinks.template.height = 0;
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    PyramidSeries.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Pyramid Series");
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    PyramidSeries.prototype.createDataItem = function () {
        return new PyramidSeriesDataItem();
    };
    /**
     * (Re)validates the whole series, effectively causing it to redraw.
     *
     * @ignore Exclude from docs
     */
    PyramidSeries.prototype.validate = function () {
        _super.prototype.validate.call(this);
        this._nextWidth = undefined;
    };
    /**
     * [getNextValue description]
     *
     * @todo Description
     * @param dataItem [description]
     * @return [description]
     */
    PyramidSeries.prototype.getNextValue = function (dataItem) {
        var index = dataItem.index;
        var nextValue = dataItem.getWorkingValue("value");
        if (index < this.dataItems.length - 1) {
            var nextItem = this.dataItems.getIndex(index + 1);
            nextValue = nextItem.getWorkingValue("value");
        }
        if (nextValue == 0) {
            nextValue = 0.000001;
        }
        return nextValue;
    };
    /**
     * [validateDataElements description]
     *
     * @todo Description
     * @ignore Exclude from docs
     */
    PyramidSeries.prototype.validateDataElements = function () {
        var _this = this;
        var maxWidth = this.slicesContainer.innerWidth;
        var maxHeight = this.slicesContainer.innerHeight;
        this.dataItems.each(function (dataItem) {
            if (dataItem.value > 0) {
                var relValue = dataItem.getWorkingValue("value") / dataItem.value;
                var sliceLink = dataItem.sliceLink;
                if (_this.orientation == "vertical") {
                    maxHeight -= (sliceLink.pixelHeight * relValue);
                }
                else {
                    maxWidth -= (sliceLink.pixelWidth * relValue);
                }
            }
        });
        this._pyramidHeight = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__["relativeToValue"](this.pyramidHeight, maxHeight);
        this._pyramidWidth = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__["relativeToValue"](this.pyramidHeight, maxWidth);
        if (this.orientation == "vertical") {
            var y = (maxHeight - this._pyramidHeight) / 2;
            this.slicesContainer.y = y;
            this.labelsContainer.y = y;
            this.ticksContainer.y = y;
        }
        else {
            var x = (maxWidth - this._pyramidWidth) / 2;
            this.slicesContainer.x = x;
            this.labelsContainer.x = x;
            this.ticksContainer.x = x;
        }
        _super.prototype.validateDataElements.call(this);
    };
    /**
     * [decorateSlice description]
     *
     * @todo Description
     * @param dataItem [description]
     */
    PyramidSeries.prototype.decorateSlice = function (dataItem) {
        var sum = this.dataItem.values.value.absoluteSum;
        if (sum == 0) {
            return;
        }
        var slice = dataItem.slice;
        var sliceLink = dataItem.sliceLink;
        var label = dataItem.label;
        var tick = dataItem.tick;
        // TODO can this be removed ?
        this.getNextValue(dataItem);
        var workingValue = Math.abs(dataItem.getWorkingValue("value"));
        var pyramidWidth = this._pyramidWidth;
        var pyramidHeight = this._pyramidHeight;
        var maxWidth = this.slicesContainer.innerWidth;
        var maxHeight = this.slicesContainer.innerHeight;
        var linkWidth = sliceLink.pixelWidth;
        var linkHeight = sliceLink.pixelHeight;
        if ((dataItem.value == 0 || dataItem.value == null) && this.ignoreZeroValues) {
            dataItem.__disabled = true;
        }
        else {
            dataItem.__disabled = false;
        }
        if (this.orientation == "vertical") {
            var topWidth = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__["relativeToValue"](this.topWidth, maxWidth);
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](this._nextWidth)) {
                this._nextWidth = topWidth;
            }
            var bottomWidth = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__["relativeToValue"](this.bottomWidth, maxWidth);
            var sliceTopWidth = this._nextWidth;
            var angle = Math.atan2(pyramidHeight, topWidth - bottomWidth);
            var c = Math.tan(Math.PI / 2 - angle);
            if (c == 0) {
                c = 0.00000001;
            }
            var sliceHeight = void 0;
            var sliceBottomWidth = void 0;
            if (this.valueIs == "area") {
                var totalSquare = (topWidth + bottomWidth) / 2 * pyramidHeight;
                var square = totalSquare * workingValue / sum;
                var s = Math.abs(sliceTopWidth * sliceTopWidth - 2 * square * c);
                sliceHeight = (sliceTopWidth - Math.sqrt(s)) / c;
                if (sliceHeight > 0) {
                    sliceBottomWidth = (2 * square - sliceHeight * sliceTopWidth) / sliceHeight;
                }
                else {
                    sliceBottomWidth = sliceTopWidth;
                }
            }
            else {
                sliceHeight = pyramidHeight * workingValue / sum;
                sliceBottomWidth = sliceTopWidth - sliceHeight * c;
            }
            slice.height = sliceHeight;
            slice.width = maxWidth;
            slice.bottomWidth = sliceBottomWidth;
            slice.topWidth = sliceTopWidth;
            sliceLink.topWidth = slice.bottomWidth;
            sliceLink.bottomWidth = slice.bottomWidth;
            slice.y = this._nextY;
            //slice.x = maxWidth / 2;
            if (!this.alignLabels) {
                label.x = maxWidth / 2;
            }
            else {
                label.x = 0;
            }
            label.y = slice.pixelY + slice.pixelHeight * tick.locationY + slice.dy;
            this._nextY += slice.pixelHeight + linkHeight * workingValue / Math.max(Math.abs(dataItem.value), 0.00000001);
            sliceLink.y = this._nextY - linkHeight;
            sliceLink.x = maxWidth / 2;
        }
        else {
            var topWidth = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__["relativeToValue"](this.topWidth, maxHeight);
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["isNumber"](this._nextWidth)) {
                this._nextWidth = topWidth;
            }
            var bottomWidth = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_4__["relativeToValue"](this.bottomWidth, maxHeight);
            var sliceTopWidth = this._nextWidth;
            var angle = Math.atan2(pyramidWidth, topWidth - bottomWidth);
            var c = Math.tan(Math.PI / 2 - angle);
            if (c == 0) {
                c = 0.00000001;
            }
            var sliceWidth = void 0;
            var sliceBottomWidth = void 0;
            if (this.valueIs == "area") {
                var totalSquare = (topWidth + bottomWidth) / 2 * pyramidWidth;
                var square = totalSquare * workingValue / sum;
                sliceWidth = (sliceTopWidth - Math.sqrt(sliceTopWidth * sliceTopWidth - 2 * square * c)) / c;
                sliceBottomWidth = (2 * square - sliceWidth * sliceTopWidth) / sliceWidth;
            }
            else {
                sliceWidth = pyramidWidth * workingValue / sum;
                sliceBottomWidth = sliceTopWidth - sliceWidth * c;
            }
            slice.width = sliceWidth;
            slice.height = maxHeight;
            slice.bottomWidth = sliceBottomWidth;
            slice.topWidth = sliceTopWidth;
            sliceLink.topWidth = slice.bottomWidth;
            sliceLink.bottomWidth = slice.bottomWidth;
            slice.x = this._nextY;
            if (!this.alignLabels) {
                label.y = maxHeight / 2;
            }
            else {
                label.y = this.labelsContainer.measuredHeight;
            }
            label.x = slice.pixelX + slice.pixelWidth * tick.locationX + slice.dx;
            this._nextY += slice.pixelWidth + linkWidth * workingValue / Math.max(Math.abs(dataItem.value), 0.00000001);
            sliceLink.x = this._nextY - linkWidth;
            sliceLink.y = maxHeight / 2;
        }
        this._nextWidth = slice.bottomWidth;
    };
    Object.defineProperty(PyramidSeries.prototype, "topWidth", {
        /**
         * @return {number | Percent}
         */
        get: function () {
            return this.getPropertyValue("topWidth");
        },
        /**
         * Width of the pyramid's tip in pixels or relative (`Percent`).
         *
         * `0%` (default) means the pyramid will be perfectly pointy.
         * `50%` will have a cut off / blunt top that is half the width of the chart.
         * `100%` will take the whole width of the chart.
         *
         * If you need the downward-pointing pyramid, you might want to `topWidth` to
         * `100%` and `bottomWidth` to `0%`.
         *
         * @default 0%
         * @param {number | Percent}
         */
        set: function (value) {
            if (this.setPercentProperty("topWidth", value, false, false, 10, false)) {
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PyramidSeries.prototype, "pyramidHeight", {
        /**
         * @return {number | Percent}
         */
        get: function () {
            return this.getPropertyValue("pyramidHeight");
        },
        /**
         * Height of pyramid
         *
         *
         * @default 100%
         * @param {number | Percent}
         */
        set: function (value) {
            if (this.setPercentProperty("pyramidHeight", value, false, false, 10, false)) {
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PyramidSeries.prototype, "bottomWidth", {
        /**
         * @return {number | Percent}
         */
        get: function () {
            return this.getPropertyValue("bottomWidth");
        },
        /**
         * Width of the pyramid's bottom (bsae) in pixels or relative (`Percent`).
         *
         * `0%` means the pyramid's botto will be pointy.
         * `50%` will have a cut off / blunt bottom that is half the width of the chart.
         * `100%` (default) will take the whole width of the chart.
         *
         * If you need the downward-pointing pyramid, you might want to `topWidth` to
         * `100%` and `bottomWidth` to `0%`.
         *
         * @param {number | Percent}
         */
        set: function (value) {
            if (this.setPercentProperty("bottomWidth", value, false, false, 10, false)) {
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PyramidSeries.prototype, "valueIs", {
        /**
         * @return {"area" | "height"}
         */
        get: function () {
            return this.getPropertyValue("valueIs");
        },
        /**
         * Indicates how slice's value will influence its size.
         *
         * `"area"` (default) means that the whole area of the pyramid (counting in
         * modifications by `topWidth` and `bottomWidth`) will be divvied up between
         * slices based on their value.
         *
         * With this setting at `"area"` the area of the trapezoids of each slice
         * will represent their value relatively to values of the other slices.
         *
         * This is a correct way to depict "weight" of each slice based on their
         * values.
         *
         * `"height"` means whole height (as opposed to area) of the pyramid will be
         * divvied up between slices. Actual slice width or area is not counted in.
         *
         * From the data-viz standpoint this does not make a lot of sense, since
         * slices with lesser values might appear more prominent if they are placed
         * towards thick end of the pyramid since their areas will be bigger.
         *
         * @default "area"
         * @param {"area" | "height"}
         */
        set: function (value) {
            if (this.setPropertyValue("valueIs", value)) {
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    return PyramidSeries;
}(_FunnelSeries__WEBPACK_IMPORTED_MODULE_1__["FunnelSeries"]));

/**
 * bboxter class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["PyramidSeries"] = PyramidSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["PyramidSeriesDataItem"] = PyramidSeriesDataItem;
//# sourceMappingURL=PyramidSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarColumnSeries.js":
/*!***************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarColumnSeries.js ***!
  \***************************************************************************************/
/*! exports provided: RadarColumnSeriesDataItem, RadarColumnSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadarColumnSeriesDataItem", function() { return RadarColumnSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadarColumnSeries", function() { return RadarColumnSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _series_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../series/ColumnSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../axes/CategoryAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js");
/* harmony import */ var _elements_RadarColumn__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../elements/RadarColumn */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/RadarColumn.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/**
 * Radar column series module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */











/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[RadarColumnSeries]].
 *
 * @see {@link DataItem}
 */
var RadarColumnSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(RadarColumnSeriesDataItem, _super);
    /**
     * Constructor
     */
    function RadarColumnSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "ColumnSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    return RadarColumnSeriesDataItem;
}(_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__["ColumnSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a 3D column graph.
 *
 * @see {@link IRadarColumnSeriesEvents} for a list of available Events
 * @see {@link IRadarColumnSeriesAdapters} for a list of available Adapters
 * @todo Example
 * @important
 */
var RadarColumnSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(RadarColumnSeries, _super);
    /**
     * Constructor
     */
    function RadarColumnSeries() {
        var _this = _super.call(this) || this;
        _this.className = "RadarColumnSeries";
        _this.applyTheme();
        return _this;
    }
    /**
     * Creates and returns a RadarColumn element to use as column in radar chart.
     *
     * @return RadarColumn.
     */
    RadarColumnSeries.prototype.createColumnTemplate = function () {
        return new _elements_RadarColumn__WEBPACK_IMPORTED_MODULE_4__["RadarColumn"]();
    };
    /**
     * (Re)validates the whole series, effectively causing it to redraw.
     *
     * @ignore Exclude from docs
     */
    RadarColumnSeries.prototype.validate = function () {
        // so that radius would be updated
        if (this.chart.invalid) {
            this.chart.validate();
        }
        _super.prototype.validate.call(this);
    };
    /**
     * @ignore
     */
    RadarColumnSeries.prototype.disableUnusedColumns = function (dataItem) {
        if (dataItem) {
            if (dataItem.column) {
                dataItem.column.__disabled = true;
            }
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](this.axisRanges.iterator(), function (axisRange) {
                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);
                if (rangeColumn) {
                    rangeColumn.__disabled = true;
                }
            });
        }
    };
    /**
     * Validates data item's element, effectively redrawing it.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    RadarColumnSeries.prototype.validateDataElementReal = function (dataItem) {
        var _this = this;
        var startAngle = this.chart.startAngle;
        var endAngle = this.chart.endAngle;
        var yField = this.yField;
        var yOpenField = this.yOpenField;
        var xField = this.xField;
        var xOpenField = this.xOpenField;
        var lAngle;
        var rAngle;
        var tRadius;
        var bRadius;
        var startLocation = this.getStartLocation(dataItem);
        var endLocation = this.getEndLocation(dataItem);
        var cellAngle = (endAngle - startAngle) / (this.dataItems.length * (this.end - this.start));
        var radarColumn = dataItem.column;
        if (!radarColumn) {
            radarColumn = this.columns.create();
            dataItem.column = radarColumn;
            _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__["copyProperties"](this, radarColumn, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]); // need this 
            _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__["copyProperties"](this.columns.template, radarColumn, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]); // second time, no force, so that columns.template would override series properties			
            dataItem.addSprite(radarColumn);
            radarColumn.paper = this.paper; // sometimes pattern is not drawn if is set with adapter without this.
            this.setColumnStates(radarColumn);
        }
        var width = radarColumn.width;
        var percentWidth = 100;
        if (width instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_9__["Percent"]) {
            percentWidth = width.percent;
        }
        var offset = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["round"]((endLocation - startLocation) * (1 - percentWidth / 100) / 2, 5);
        startLocation += offset;
        endLocation -= offset;
        // two category axes
        if ((this.xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_3__["CategoryAxis"]) && (this.yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_3__["CategoryAxis"])) {
            tRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getDistance"]({ x: this.yAxis.getX(dataItem, yField, 0, "valueY"), y: this.yAxis.getY(dataItem, yField, 0, "valueY") });
            bRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getDistance"]({ x: this.yAxis.getX(dataItem, yOpenField, 1, "valueY"), y: this.yAxis.getY(dataItem, yOpenField, 1, "valueY") });
            lAngle = this.xAxis.getAngle(dataItem, xOpenField, 0, "valueX");
            rAngle = this.xAxis.getAngle(dataItem, xField, 1, "valueX");
            startAngle = startAngle + startLocation * cellAngle;
            endAngle = endAngle - (1 - endLocation) * cellAngle;
        }
        else if (this.baseAxis == this.xAxis) {
            tRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getDistance"]({ x: this.yAxis.getX(dataItem, yField, dataItem.locations[yField], "valueY"), y: this.yAxis.getY(dataItem, yField, dataItem.locations[yField], "valueY") });
            bRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getDistance"]({ x: this.yAxis.getX(dataItem, yOpenField, dataItem.locations[yOpenField], "valueY"), y: this.yAxis.getY(dataItem, yOpenField, dataItem.locations[yOpenField], "valueY") });
            lAngle = this.xAxis.getAngle(dataItem, xOpenField, startLocation, "valueX");
            rAngle = this.xAxis.getAngle(dataItem, xField, endLocation, "valueX");
            startAngle = startAngle + startLocation * cellAngle;
            endAngle = endAngle - (1 - endLocation) * cellAngle;
        }
        else {
            tRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getDistance"]({ x: this.yAxis.getX(dataItem, yField, startLocation, "valueY"), y: this.yAxis.getY(dataItem, yField, startLocation, "valueY") });
            bRadius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getDistance"]({ x: this.yAxis.getX(dataItem, yOpenField, endLocation, "valueY"), y: this.yAxis.getY(dataItem, yOpenField, endLocation, "valueY") });
            lAngle = this.xAxis.getAngle(dataItem, xField, dataItem.locations[xField], "valueX");
            rAngle = this.xAxis.getAngle(dataItem, xOpenField, dataItem.locations[xOpenField], "valueX");
        }
        if (rAngle < lAngle) {
            var temp = rAngle;
            rAngle = lAngle;
            lAngle = temp;
        }
        lAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](lAngle, startAngle, endAngle);
        rAngle = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["fitToRange"](rAngle, startAngle, endAngle);
        var slice = radarColumn.radarColumn;
        slice.startAngle = lAngle;
        var arc = rAngle - lAngle;
        if (arc > 0) {
            slice.arc = arc;
            slice.radius = tRadius;
            slice.innerRadius = bRadius;
            radarColumn.__disabled = false;
            radarColumn.parent = this.columnsContainer;
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](this.axisRanges.iterator(), function (axisRange) {
                var rangeColumn = dataItem.rangesColumns.getKey(axisRange.uid);
                if (!rangeColumn) {
                    rangeColumn = _this.columns.create();
                    _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__["forceCopyProperties"](_this.columns.template, rangeColumn, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
                    _core_utils_Object__WEBPACK_IMPORTED_MODULE_8__["copyProperties"](axisRange.contents, rangeColumn, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]); // need this because 3d columns are not in the same container
                    if (rangeColumn.dataItem) {
                        _core_utils_Array__WEBPACK_IMPORTED_MODULE_11__["remove"](rangeColumn.dataItem.sprites, rangeColumn);
                    }
                    dataItem.addSprite(rangeColumn);
                    rangeColumn.paper = _this.paper; // sometimes pattern is not drawn if is set with adapter without this.					
                    _this.setColumnStates(rangeColumn);
                    dataItem.rangesColumns.setKey(axisRange.uid, rangeColumn);
                }
                var slice = rangeColumn.radarColumn;
                slice.startAngle = lAngle;
                slice.arc = arc;
                slice.radius = tRadius;
                slice.innerRadius = bRadius;
                if (slice.invalid) {
                    slice.paper = _this.paper;
                    slice.validate(); // validate as if it was used previously, it will flicker with previous dimensions
                }
                rangeColumn.__disabled = false;
                rangeColumn.parent = axisRange.contents;
            });
        }
        else {
            this.disableUnusedColumns(dataItem);
        }
    };
    /**
     * Returns an [[IPoint]] coordinates of the specific Serie's data point.
     *
     * @param    dataItem   Data item
     * @param    xKey       Name of X data field
     * @param    yKey       Name of Y data field
     * @param    locationX  X location
     * @param    locationY  Y location
     * @param    stackKeyX  ?
     * @param    stackKeyY  ?
     * @returns             Coordinates
     */
    RadarColumnSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {
        if (!stackKeyX) {
            stackKeyX = "valueX";
        }
        if (!stackKeyY) {
            stackKeyY = "valueY";
        }
        var x = this.yAxis.getX(dataItem, yKey, locationY, stackKeyY);
        var y = this.yAxis.getY(dataItem, yKey, locationY, stackKeyY);
        var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getDistance"]({ x: x, y: y });
        // hack to be able to determine angle later
        if (radius == 0) {
            radius = 0.00001;
        }
        var angle = this.xAxis.getAngle(dataItem, xKey, locationX, stackKeyX);
        return { x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["cos"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["sin"](angle) };
    };
    /**
     * Returns an SVG path to be used as a mask for the series.
     *
     * @return SVG path
     */
    RadarColumnSeries.prototype.getMaskPath = function () {
        var renderer = this.yAxis.renderer;
        return _core_rendering_Path__WEBPACK_IMPORTED_MODULE_6__["arc"](renderer.startAngle, renderer.endAngle - renderer.startAngle, renderer.pixelRadius, renderer.pixelInnerRadius);
    };
    RadarColumnSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        if (positionX < xAxis.start || positionX > xAxis.end || positionY < yAxis.start || positionY > yAxis.end) {
            bullet.visible = false;
        }
        bullet.moveTo(this.xAxis.renderer.positionToPoint(positionX, positionY));
    };
    RadarColumnSeries.prototype.setXAxis = function (axis) {
        _super.prototype.setXAxis.call(this, axis);
        this.updateRendererRefs();
    };
    RadarColumnSeries.prototype.setYAxis = function (axis) {
        _super.prototype.setYAxis.call(this, axis);
        this.updateRendererRefs();
    };
    RadarColumnSeries.prototype.updateRendererRefs = function () {
        var rendererX = this.xAxis.renderer;
        var rendererY = this.yAxis.renderer;
        rendererX.axisRendererY = rendererY;
    };
    return RadarColumnSeries;
}(_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__["ColumnSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["RadarColumnSeries"] = RadarColumnSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["RadarColumnSeriesDataItem"] = RadarColumnSeriesDataItem;
//# sourceMappingURL=RadarColumnSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarSeries.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarSeries.js ***!
  \*********************************************************************************/
/*! exports provided: RadarSeriesDataItem, RadarSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadarSeriesDataItem", function() { return RadarSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadarSeries", function() { return RadarSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _LineSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LineSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeries.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Radar series module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




//import { AxisRendererCircular } from "../axes/AxisRendererCircular";
//import { Sprite } from "../../core/Sprite";
/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[RadarSeries]].
 *
 * @see {@link DataItem}
 */
var RadarSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(RadarSeriesDataItem, _super);
    /**
     * Constructor
     */
    function RadarSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "RadarSeriesDataItem";
        _this.setLocation("dateX", 0, 0);
        _this.setLocation("dateY", 0, 0);
        _this.setLocation("categoryX", 0, 0);
        _this.setLocation("categoryY", 0, 0);
        _this.applyTheme();
        return _this;
    }
    return RadarSeriesDataItem;
}(_LineSeries__WEBPACK_IMPORTED_MODULE_1__["LineSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a radar graph.
 *
 * @see {@link IRadarSeriesEvents} for a list of available Events
 * @see {@link IRadarSeriesAdapters} for a list of available Adapters
 * @todo Example
 * @important
 */
var RadarSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(RadarSeries, _super);
    /**
     * Constructor
     */
    function RadarSeries() {
        var _this = _super.call(this) || this;
        _this.className = "RadarSeries";
        _this.connectEnds = true;
        _this.applyTheme();
        return _this;
    }
    /**
     * (Re)validates the whole series, effectively causing it to redraw.
     *
     * @ignore Exclude from docs
     */
    RadarSeries.prototype.validate = function () {
        // so that radius would be updated
        if (this.chart.invalid) {
            this.chart.validate();
        }
        _super.prototype.validate.call(this);
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    RadarSeries.prototype.createDataItem = function () {
        return new RadarSeriesDataItem();
    };
    /**
     * Returns an [[IPoint]] coordinates of the specific Serie's data point.
     *
     * @param    dataItem   Data item
     * @param    xKey       Name of X data field
     * @param    yKey       Name of Y data field
     * @param    locationX  X location
     * @param    locationY  Y location
     * @param    stackKeyX  ?
     * @param    stackKeyY  ?
     * @returns             Coordinates
     */
    RadarSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {
        if (!stackKeyX) {
            stackKeyX = "valueX";
        }
        if (!stackKeyY) {
            stackKeyY = "valueY";
        }
        var x = this.yAxis.getX(dataItem, yKey, locationY, stackKeyY);
        var y = this.yAxis.getY(dataItem, yKey, locationY, stackKeyY);
        var radius = _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["getDistance"]({ x: x, y: y });
        // hack to be able to determine angle later
        if (radius == 0) {
            radius = 0.00001;
        }
        var angle = this.xAxis.getAngle(dataItem, xKey, locationX, stackKeyX);
        var startAngle = this.chart.startAngle;
        var endAngle = this.chart.endAngle;
        //		angle = $math.fitToRange(angle, startAngle, endAngle);
        if (angle < startAngle || angle > endAngle) {
            return undefined;
        }
        else {
            return { x: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["cos"](angle), y: radius * _core_utils_Math__WEBPACK_IMPORTED_MODULE_3__["sin"](angle) };
        }
    };
    /**
     * [addPoints description]
     *
     * @todo Description
     * @param points    [description]
     * @param dataItem  [description]
     * @param xField    [description]
     * @param yField    [description]
     * @param backwards [description]
     */
    RadarSeries.prototype.addPoints = function (points, dataItem, xField, yField, backwards) {
        var point = this.getPoint(dataItem, xField, yField, dataItem.locations[xField], dataItem.locations[yField]);
        if (point) {
            points.push(point);
        }
    };
    /**
     * Returns an SVG path to be used as a mask for the series.
     *
     * @return SVG path
     */
    RadarSeries.prototype.getMaskPath = function () {
        var renderer = this.yAxis.renderer;
        return _core_rendering_Path__WEBPACK_IMPORTED_MODULE_4__["arc"](renderer.startAngle, renderer.endAngle - renderer.startAngle, renderer.pixelRadius, renderer.pixelInnerRadius);
    };
    /**
     * [drawSegment description]
     *
     * @todo Description
     * @param segment      [description]
     * @param points       [description]
     * @param closePoints  [description]
     */
    RadarSeries.prototype.drawSegment = function (segment, points, closePoints) {
        var axis = this.yAxis;
        var renderer = axis.renderer;
        if (this.connectEnds && Math.abs(renderer.endAngle - renderer.startAngle) == 360) {
            // adds one point to the beginning of closePoints array, if needed
            if (this.dataFields[this._xOpenField] ||
                this.dataFields[this._yOpenField] ||
                this.stacked) {
                points.push(points[0]);
                if (closePoints.length > 0) {
                    closePoints.unshift(closePoints[closePoints.length - 1]);
                }
            }
        }
        _super.prototype.drawSegment.call(this, segment, points, closePoints);
    };
    Object.defineProperty(RadarSeries.prototype, "connectEnds", {
        /**
         * @return Connect?
         */
        get: function () {
            return this.getPropertyValue("connectEnds");
        },
        /**
         * Should the last and and first data points be connected, forming a complete
         * closed circle?
         *
         * @default true
         * @param value  Connect?
         */
        set: function (value) {
            this.setPropertyValue("connectEnds", value, true);
        },
        enumerable: true,
        configurable: true
    });
    RadarSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        if (positionX < xAxis.start || positionX > xAxis.end || positionY < yAxis.start || positionY > yAxis.end) {
            bullet.visible = false;
        }
        bullet.moveTo(this.xAxis.renderer.positionToPoint(positionX, positionY));
    };
    RadarSeries.prototype.setXAxis = function (axis) {
        _super.prototype.setXAxis.call(this, axis);
        this.updateRendererRefs();
    };
    RadarSeries.prototype.setYAxis = function (axis) {
        _super.prototype.setYAxis.call(this, axis);
        this.updateRendererRefs();
    };
    RadarSeries.prototype.updateRendererRefs = function () {
        var rendererX = this.xAxis.renderer;
        var rendererY = this.yAxis.renderer;
        rendererX.axisRendererY = rendererY;
    };
    return RadarSeries;
}(_LineSeries__WEBPACK_IMPORTED_MODULE_1__["LineSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["RadarSeries"] = RadarSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["RadarSeriesDataItem"] = RadarSeriesDataItem;
//# sourceMappingURL=RadarSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js ***!
  \****************************************************************************/
/*! exports provided: SeriesDataItem, Series */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SeriesDataItem", function() { return SeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Series", function() { return Series; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _core_Component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../core/Component */ "./node_modules/@amcharts/amcharts4/.internal/core/Component.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _core_DataItem__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/DataItem */ "./node_modules/@amcharts/amcharts4/.internal/core/DataItem.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_elements_Tooltip__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/elements/Tooltip */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Tooltip.js");
/* harmony import */ var _elements_Bullet__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../elements/Bullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js");
/* harmony import */ var _Legend__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../Legend */ "./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js");
/* harmony import */ var _core_Options__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/Options */ "./node_modules/@amcharts/amcharts4/.internal/core/Options.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Ease__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Ease */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Colors__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../core/utils/Colors */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Colors.js");
/**
 * Functionality for any series-based elements, like Line Series (graphs),
 * Pie slice lists, etc.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




















/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[Series]].
 *
 * @see {@link DataItem}
 */
var SeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SeriesDataItem, _super);
    /**
     * Constructor
     */
    function SeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "SeriesDataItem";
        //@todo Should we make `bullets` list disposable?
        //this._disposers.push(new DictionaryDisposer(this.bullets));
        _this.values.value = {};
        _this.values.value = {};
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(SeriesDataItem.prototype, "bullets", {
        /**
         * A dictionary of data items bullets, where key is uid of a bullet template.
         */
        get: function () {
            if (!this._bullets) {
                this._bullets = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
                this._disposers.push(new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["DictionaryDisposer"](this._bullets));
            }
            return this._bullets;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Destroys this object and all related data.
     */
    SeriesDataItem.prototype.dispose = function () {
        this.bullets.clear();
        _super.prototype.dispose.call(this);
    };
    Object.defineProperty(SeriesDataItem.prototype, "value", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.value.value;
        },
        /**
         * data items's numeric value.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("value", value);
        },
        enumerable: true,
        configurable: true
    });
    return SeriesDataItem;
}(_core_DataItem__WEBPACK_IMPORTED_MODULE_5__["DataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines base class for any kind of serial data.
 *
 * @see {@link ISeriesEvents} for a list of available Events
 * @see {@link ISeriesAdapters} for a list of available Adapters
 * @todo Separate axis-related stuff to some other class so that MapSeries would not have unrelated stuff
 */
var Series = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Series, _super);
    /**
     * Constructor
     */
    function Series() {
        var _this = _super.call(this) || this;
        /**
         * Should this series excluded from the axis scale calculations?
         *
         * @default false
         */
        _this._ignoreMinMax = false;
        /**
         * Should series' bullets?
         *
         * @default true
         */
        _this._showBullets = true;
        /**
         * Settings for the appearance of the related legend items.
         */
        _this.legendSettings = new _Legend__WEBPACK_IMPORTED_MODULE_9__["LegendSettings"]();
        /**
         * Lowest overal values by type.
         */
        _this._tmin = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * Highest overal values by type.
         */
        _this._tmax = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * Lowest values in current selection by type.
         */
        _this._smin = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * Highest values in current selection by type.
         */
        _this._smax = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * [dataItemsByAxis description]
         *
         * Both by category and date.
         *
         * @ignore Exclude from docs
         * @todo Description
         */
        _this.dataItemsByAxis = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]();
        /**
         * Normally series items are focusable using keyboard, so that people can
         * select them with a TAB key. However, if there are a lot of data points on
         * screen it might be long and useless to tab through all o fthem.
         *
         * This is where `skipFocusThreshold` comes in. If there are more items than
         * the value set here, we will not make those focusable and rather let screen
         * reader software rely on the series summary, or authors provide alternative
         * detailed information display, such as HTML table.
         *
         * Different series might have different threshold defaults.
         */
        _this.skipFocusThreshold = 20;
        /**
         * Used to indicate if `itemReaderText` was changed "from the outside".
         */
        _this._itemReaderTextChanged = false;
        /**
         * Most of the series use absolute values. However sometimes various
         * calculated percent values are need, e.g. item's percent representation
         * across all values in series, etc.
         *
         * It's a resource-intensive operation, so it is disabled by default.
         *
         * If you need percents to be calculated, e.g. for showing them in tooltips,
         * or creating 100% stacks, this setting needs to be set to `true`.
         *
         * NOTE: `PieChart`, which relies on slice percentages, has this
         * automatically set to `true`.
         *
         * @default false
         */
        _this.calculatePercent = false;
        /**
         * When `calculatePercent` is enabled and data item's percent value is
         * calculated, last item's real value is used instead of its working value.
         *
         * This is done for the animations when last item in series (e.g. slice in
         * a `PieSeries`) is hidden or shown. (if we would use real value, the
         * calculated percent would always be 100%).
         *
         * Sometimes there is a need (e.g. for drill-down Sunburst) to disable this
         * hack by setting `usePercentHack` to `false`.
         *
         * @since 4.9.13
         * @default true
         */
        _this.usePercentHack = true;
        /**
         * Specifies if series should be automatically disposed when removing from
         * chart's `series` list.
         *
         * @default true
         */
        _this.autoDispose = true;
        /**
         * When chart/series' data is processed, all kinds of derivative values are
         * calculated. E.g. sum, min, max, change, etc. This is a potentially
         * time-consuming operation, especially prominent in data-heavy charts.
         *
         * If your chart does not need those values, and you have a lot of data,
         * setting this to `true` might give a dramatic increase in initial chart
         * load speed.
         *
         * Please note, regular column and line series usage scenarios do not
         * require derivative values. Those come into play only when you do advanced
         * functionality like coloring segments of charts in different colors
         * depending on change between open and close values, have stacked series, or
         * display any of the derived values, like percent, in tooltips or bullets.
         *
         * @default false
         */
        _this.simplifiedProcessing = false;
        if (_this.constructor === Series) {
            throw new Error("'Series' cannot be instantiated directly. Please use a specific series type.");
        }
        _this.className = "Series";
        _this.isMeasured = false;
        _this.layout = "none";
        _this.shouldClone = false;
        _this.setPropertyValue("hidden", false);
        _this.axisRanges = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
        _this.axisRanges.events.on("inserted", _this.processAxisRange, _this, false);
        _this.minBulletDistance = 0; // otherwise we'll have a lot of cases when people won't see bullets and think it's a bug
        _this.mainContainer = _this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]);
        _this.mainContainer.shouldClone = false;
        _this.mainContainer.mask = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]);
        _this._disposers.push(_this.mainContainer);
        // all bullets should go on top of lines/fills. So we add a separate container for bullets and later set it's parent to chart.bulletsContainer
        var bulletsContainer = _this.mainContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]);
        _this._shouldBeReady.push(bulletsContainer);
        bulletsContainer.shouldClone = false;
        bulletsContainer.layout = "none";
        bulletsContainer.virtualParent = _this;
        _this._disposers.push(bulletsContainer);
        _this.bulletsContainer = bulletsContainer;
        _this.tooltip = new _core_elements_Tooltip__WEBPACK_IMPORTED_MODULE_7__["Tooltip"]();
        _this.tooltip.virtualParent = _this;
        _this._disposers.push(_this.tooltip);
        _this.hiddenState.transitionEasing = _core_utils_Ease__WEBPACK_IMPORTED_MODULE_15__["cubicIn"];
        // this data item holds sums, averages, etc
        _this.dataItem = _this.createDataItem();
        _this._disposers.push(_this.dataItem);
        _this.dataItem.component = _this;
        // Apply accessibility
        _this.role = "group";
        _this.applyTheme();
        return _this;
    }
    /**
     * We need this here so that class names can be applied to bullets container.
     *
     * @ignore Exclude from docs
     */
    Series.prototype.applyTheme = function () {
        _super.prototype.applyTheme.call(this);
        if (_core_Options__WEBPACK_IMPORTED_MODULE_10__["options"].autoSetClassName && this.bulletsContainer) {
            this.bulletsContainer.className = this.className + "-bullets";
            this.bulletsContainer.setClassName();
        }
    };
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    Series.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Series");
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    Series.prototype.createDataItem = function () {
        return new SeriesDataItem();
    };
    Object.defineProperty(Series.prototype, "chart", {
        /**
         * @return Chart
         */
        get: function () {
            return this._chart;
        },
        /**
         * Chart series is used on.
         *
         * @param value  Chart
         */
        set: function (value) {
            this._chart = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Positions bullet.
     *
     * @param bullet  Sprite
     */
    Series.prototype.positionBullet = function (bullet) {
        // Placeholder method for extending classes to override.
    };
    /**
     * Decorates newly created bullet after it has been instert into the list.
     *
     * @param event  List event
     * @todo investigate why itemReaderText is undefined
     */
    Series.prototype.processBullet = function (event) {
        var _this = this;
        var bullet = event.newValue;
        bullet.isTemplate = true;
        // Add accessibility options to bullet
        // If there are relatively few bullets, make them focusable
        this.events.once("datavalidated", function (ev) {
            if (_this.itemsFocusable()) {
                bullet.focusable = true;
            }
        });
        this.invalidate();
    };
    /**
     * removes bullets
     *
     * @param event  List event
     */
    Series.prototype.removeBullet = function (event) {
        var bullet = event.oldValue;
        this.dataItems.each(function (dataItem) {
            var eachBullet = dataItem.bullets.getKey(bullet.uid);
            if (eachBullet) {
                eachBullet.dispose();
            }
        });
        this.invalidate();
    };
    /**
     * Validates data items.
     *
     * @ignore Exclude from docs
     */
    Series.prototype.validateDataItems = function () {
        _super.prototype.validateDataItems.call(this);
        this.processValues(false);
    };
    /**
     * Returns first value for the specific key in the series.
     *
     * @param key  Key
     * @return Value
     * @todo Description
     * @todo Convert to propert object property iterator
     */
    Series.prototype.getFirstValue = function (key, startIndex) {
        // find first
        /*
        return $iter.findMap(this.dataItems.iterator(), (dataItem) => {
            for (let key in dataItem.values) {
                if ($object.hasKey(dataItem.values, key)) {
                    let value: number = dataItem.values[key].workingValue;
                    if ($type.isNumber(value)) {
                        return value;
                    }
                }
            }

            return null;
        });*/
        //if (startIndex > 0 && startIndex < this.dataItems.length - 1) {
        //startIndex++;
        //}
        for (var i = startIndex; i >= 0; i--) {
            var dataItem = this.dataItems.getIndex(i);
            var value = dataItem.getActualWorkingValue(key);
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](value)) {
                return value;
            }
        }
        return null;
    };
    /**
     * Returns first value for the specific key in the series.
     *
     * @param key  Key
     * @return Value
     * @todo Description
     * @todo Convert to propert object property iterator
     */
    Series.prototype.getAbsoluteFirstValue = function (key) {
        for (var i = 0; i < this.dataItems.length; i++) {
            var dataItem = this.dataItems.getIndex(i);
            var value = dataItem.values[key].value;
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](value)) {
                return value;
            }
        }
        return null;
    };
    /**
     * [rangeChangeUpdate description]
     *
     * @todo Description
     */
    Series.prototype.rangeChangeUpdate = function () {
        _super.prototype.rangeChangeUpdate.call(this);
        this.processValues(true);
    };
    /**
     * [processValues description]
     *
     * @todo Description
     * @todo Convert to propert object property iterator
     * @param dataItems [description]
     */
    Series.prototype.processValues = function (working) {
        var _this = this;
        if (!this.simplifiedProcessing) {
            var dataItems = this.dataItems;
            var count_1 = {};
            var sum_1 = {};
            var absoluteSum_1 = {};
            var low_1 = {};
            var high_1 = {};
            var open_1 = {};
            var close_1 = {};
            var previous_1 = {};
            var first_1 = {};
            var absoluteFirst_1 = {};
            //let duration: number = 0; // todo: check if series uses selection.change or selection.change.percent and set duration to interpolationduration
            var startIndex_1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_14__["max"](0, this.startIndex);
            startIndex_1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_14__["min"](startIndex_1, this.dataItems.length);
            var endIndex = _core_utils_Math__WEBPACK_IMPORTED_MODULE_14__["min"](this.endIndex, this.dataItems.length);
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](startIndex_1)) {
                startIndex_1 = 0;
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](endIndex)) {
                endIndex = this.dataItems.length;
            }
            if (startIndex_1 > 0) {
                var dataItem_1 = dataItems.getIndex(startIndex_1 - 1);
                _core_utils_Object__WEBPACK_IMPORTED_MODULE_17__["each"](dataItem_1.values, function (key, values) {
                    var value = dataItem_1.getActualWorkingValue(key);
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](value)) {
                        // save previous
                        previous_1[key] = value;
                    }
                });
            }
            var _loop_1 = function (i) {
                var dataItem_2 = dataItems.getIndex(i);
                _core_utils_Object__WEBPACK_IMPORTED_MODULE_17__["each"](dataItem_2.values, function (key, values) {
                    var value = dataItem_2.getActualWorkingValue(key);
                    //if (i >= startIndex && i <= endIndex) { // do not add to count, sum etc if it is not within start/end index
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](value)) {
                        // count values
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](count_1[key])) {
                            count_1[key] = 0;
                        }
                        count_1[key]++;
                        // sum values
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](sum_1[key])) {
                            sum_1[key] = 0;
                        }
                        sum_1[key] += value;
                        // absolute sum values
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](absoluteSum_1[key])) {
                            absoluteSum_1[key] = 0;
                        }
                        absoluteSum_1[key] += Math.abs(value);
                        // open
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](open_1[key])) {
                            open_1[key] = value;
                        }
                        // close
                        close_1[key] = value;
                        // low
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](low_1[key])) {
                            low_1[key] = value;
                        }
                        else {
                            if (low_1[key] > value) {
                                low_1[key] = value;
                            }
                        }
                        // high
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](high_1[key])) {
                            high_1[key] = value;
                        }
                        else {
                            if (high_1[key] < value) {
                                high_1[key] = value;
                            }
                        }
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](first_1[key])) {
                            first_1[key] = _this.getFirstValue(key, startIndex_1);
                        }
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](absoluteFirst_1[key])) {
                            absoluteFirst_1[key] = _this.getAbsoluteFirstValue(key);
                        }
                        // change
                        dataItem_2.setCalculatedValue(key, value - first_1[key], "change");
                        // change from start percent
                        // will fail if first value is 0
                        dataItem_2.setCalculatedValue(key, (value - first_1[key]) / first_1[key] * 100, "changePercent");
                        dataItem_2.setCalculatedValue(key, (value - absoluteFirst_1[key]), "startChange");
                        dataItem_2.setCalculatedValue(key, (value - absoluteFirst_1[key]) / absoluteFirst_1[key] * 100, "startChangePercent");
                        // previous change
                        var prevValue = previous_1[key];
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](prevValue)) {
                            prevValue = value;
                        }
                        dataItem_2.setCalculatedValue(key, value - prevValue, "previousChange");
                        // previous change percent
                        dataItem_2.setCalculatedValue(key, (value - prevValue) / prevValue * 100, "previousChangePercent");
                        // save previous
                        previous_1[key] = value;
                    }
                });
            };
            for (var i = startIndex_1; i < endIndex; i++) {
                _loop_1(i);
            }
            if (this.calculatePercent) {
                var _loop_2 = function (i) {
                    var dataItem_3 = dataItems.getIndex(i);
                    _core_utils_Object__WEBPACK_IMPORTED_MODULE_17__["each"](dataItem_3.values, function (key) {
                        var ksum = absoluteSum_1[key];
                        var value = dataItem_3.getActualWorkingValue(key);
                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](value)) {
                            if (ksum > 0) {
                                if (_this.usePercentHack) {
                                    // this hack is made in order to make it possible to animate single slice to 0
                                    // if there is only one slice left, percent value is always 100%, so it won't animate
                                    // so we use real value of a slice instead of current value
                                    if (value == ksum) {
                                        ksum = dataItem_3.values[key].value;
                                    }
                                }
                                var percent = value / ksum * 100;
                                dataItem_3.setCalculatedValue(key, percent, "percent");
                            }
                            else {
                                dataItem_3.setCalculatedValue(key, 0, "percent");
                            }
                        }
                    });
                };
                for (var i = startIndex_1; i < endIndex; i++) {
                    _loop_2(i);
                }
            }
            // calculate one before first (cant do that in cycle, as we don't know open yet
            // when drawing line chart we should draw line to the invisible data point to the left, otherwise the line will always look like it starts from the selected point
            // so we do startIndex - 1
            if (startIndex_1 > 0) {
                var zeroItem_1 = dataItems.getIndex(startIndex_1 - 1);
                _core_utils_Object__WEBPACK_IMPORTED_MODULE_17__["each"](zeroItem_1.values, function (key) {
                    var value = zeroItem_1.values[key].value;
                    // change
                    zeroItem_1.setCalculatedValue(key, value - open_1[key], "change");
                    // change percent
                    zeroItem_1.setCalculatedValue(key, (value - open_1[key]) / open_1[key] * 100, "changePercent");
                });
            }
            // we save various data like sum, average to dataPoint of the series
            var dataItem_4 = this.dataItem;
            _core_utils_Object__WEBPACK_IMPORTED_MODULE_17__["each"](dataItem_4.values, function (key) {
                dataItem_4.setCalculatedValue(key, sum_1[key], "sum");
                dataItem_4.setCalculatedValue(key, absoluteSum_1[key], "absoluteSum");
                dataItem_4.setCalculatedValue(key, sum_1[key] / count_1[key], "average");
                dataItem_4.setCalculatedValue(key, open_1[key], "open");
                dataItem_4.setCalculatedValue(key, close_1[key], "close");
                dataItem_4.setCalculatedValue(key, low_1[key], "low");
                dataItem_4.setCalculatedValue(key, high_1[key], "high");
                dataItem_4.setCalculatedValue(key, count_1[key], "count");
            });
        }
    };
    /**
     * (Re)validates the whole series, effectively causing it to redraw.
     *
     * @ignore Exclude from docs
     */
    Series.prototype.validate = function () {
        if (_core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["isIE"]()) {
            this.filters.clear();
        }
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](this.axisRanges.iterator(), function (axisRange) {
            //axisRange.contents.disposeChildren(); // not good for columns, as they are reused
            //			axisRange.appendChildren();
            axisRange.validate();
        });
        _super.prototype.validate.call(this);
        var bulletsContainer = this.bulletsContainer;
        bulletsContainer.fill = this.fill;
        bulletsContainer.stroke = this.stroke;
        bulletsContainer.x = this.pixelX;
        bulletsContainer.y = this.pixelY;
        if (this.bulletsContainer.children.length > 0) {
            if (this._showBullets) {
                for (var i = 0; i < this.startIndex; i++) {
                    var dataItem = this.dataItems.getIndex(i);
                    if (dataItem) {
                        dataItem.bullets.each(function (key, bullet) {
                            bullet.__disabled = true;
                        });
                    }
                }
                for (var i = this.dataItems.length - 1; i > this.endIndex; i--) {
                    var dataItem = this.dataItems.getIndex(i);
                    if (dataItem) {
                        dataItem.bullets.each(function (key, bullet) {
                            bullet.__disabled = true;
                        });
                    }
                }
            }
            else {
                this.bulletsContainer.children.each(function (bullet) {
                    bullet.__disabled = true;
                });
            }
        }
        this.updateTooltipBounds();
    };
    /**
     * @ignore
     */
    Series.prototype.updateTooltipBounds = function () {
        if (this.topParent) {
            var x = 0;
            var y = 0;
            var w = this.topParent.maxWidth;
            var h = this.topParent.maxHeight;
            var rect = { x: x, y: y, width: w, height: h };
            this.tooltip.setBounds(rect);
        }
    };
    Series.prototype.shouldCreateBullet = function (dataItem, bulletTemplate) {
        return true;
    };
    /**
     * Validates data item's element, effectively redrawing it.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    Series.prototype.validateDataElement = function (dataItem) {
        var _this = this;
        _super.prototype.validateDataElement.call(this, dataItem);
        if (this._showBullets) {
            if (!this.isHidden) {
                this.bulletsContainer.visible = true;
            }
            this.bullets.each(function (bulletTemplate) {
                // always better to use the same, this helps to avoid redrawing
                var bullet = dataItem.bullets.getKey(bulletTemplate.uid);
                if (_this.shouldCreateBullet(dataItem, bulletTemplate)) {
                    if (!bullet) {
                        var disabledField = bulletTemplate.propertyFields.disabled;
                        var dataContext = dataItem.dataContext;
                        if (disabledField && dataContext && dataContext[disabledField] === false) {
                            bulletTemplate.applyOnClones = false;
                            bulletTemplate.disabled = false;
                            bullet = bulletTemplate.clone();
                            bulletTemplate.disabled = true;
                            bulletTemplate.applyOnClones = true;
                        }
                        else {
                            bullet = bulletTemplate.clone();
                        }
                        bullet.shouldClone = false;
                        dataItem.addSprite(bullet);
                        if (!_this.visible || _this.isHiding) {
                            bullet.hide(0);
                        }
                    }
                    var currentDataItem = bullet.dataItem;
                    if (currentDataItem != dataItem) {
                        // set to undefined in order not to reuse
                        if (currentDataItem) {
                            currentDataItem.bullets.setKey(bulletTemplate.uid, undefined);
                        }
                        var readerText_1 = _this.itemReaderText;
                        if (bullet instanceof _elements_Bullet__WEBPACK_IMPORTED_MODULE_8__["Bullet"]) {
                            if (!readerText_1) {
                                readerText_1 = ("{" + bullet.xField + "}: {" + bullet.yField + "}");
                            }
                            if (bullet.isDynamic) {
                                dataItem.events.on("workingvaluechanged", bullet.deepInvalidate, bullet, false);
                                //dataItem.events.on("calculatedvaluechanged", bullet.deepInvalidate, bullet, false);
                                _this.dataItem.events.on("workingvaluechanged", bullet.deepInvalidate, bullet, false);
                            }
                            bullet.deepInvalidate();
                        }
                        // Add accessibility to bullet
                        if (bullet.focusable) {
                            bullet.events.on("focus", function (ev) {
                                bullet.readerTitle = _this.populateString(readerText_1, bullet.dataItem);
                            }, undefined, false);
                            bullet.events.on("blur", function (ev) {
                                bullet.readerTitle = "";
                            }, undefined, false);
                        }
                        if (bullet.hoverable) {
                            bullet.events.on("over", function (ev) {
                                bullet.readerTitle = _this.populateString(readerText_1, bullet.dataItem);
                            }, undefined, false);
                            bullet.events.on("out", function (ev) {
                                bullet.readerTitle = "";
                            }, undefined, false);
                        }
                    }
                    bullet.parent = _this.bulletsContainer;
                    dataItem.bullets.setKey(bulletTemplate.uid, bullet);
                    // pass max w/h so we'd know if we should show/hide somethings
                    bullet.maxWidth = dataItem.itemWidth;
                    bullet.maxHeight = dataItem.itemHeight;
                    bullet.__disabled = false;
                    _this.positionBullet(bullet);
                }
                else {
                    if (bullet) {
                        bullet.__disabled = true;
                    }
                }
            });
        }
        else {
            this.bulletsContainer.visible = false;
        }
    };
    /**
     * [handleDataItemWorkingValueChange description]
     *
     * @ignore Exclude from docs
     */
    Series.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {
        if (!this.dataRangeInvalid) {
            this.invalidateProcessedData();
        }
    };
    Object.defineProperty(Series.prototype, "ignoreMinMax", {
        /**
         * @return Exclude from calculations?
         */
        get: function () {
            return this._ignoreMinMax;
        },
        /**
         * Should this series excluded from the axis scale calculations?
         *
         * @default false
         * @param value  Exclude from calculations?
         */
        set: function (value) {
            this._ignoreMinMax = value;
            this.invalidateDataItems();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Create a mask for the series.
     *
     * @ignore Exclude from docs
     */
    Series.prototype.createMask = function () {
        // A placeholder method for extending classes to override.
    };
    /**
     * Process axis range after it has been added to the list.
     *
     * @param event  Event
     */
    Series.prototype.processAxisRange = function (event) {
        // create container if not existing
        if (!this.rangesContainer) {
            this.rangesContainer = this.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]);
            this.rangesContainer.shouldClone = false;
            this.rangesContainer.isMeasured = false;
        }
        var axisRange = event.newValue;
        if (axisRange) {
            axisRange.contents.parent = this.rangesContainer;
            axisRange.isRange = true;
            axisRange.events.on("valuechanged", this.invalidateDataItems, this, false);
        }
    };
    /**
     * [getAxisField description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param axis  [description]
     * @return [description]
     */
    Series.prototype.getAxisField = function (axis) {
        return;
    };
    /**
     * Shows the tooltip at specific position.
     *
     * @ignore Exclude from docs
     * @param xPosition  X
     * @param yPosition  Y
     */
    Series.prototype.showTooltipAtPosition = function (xPosition, yPosition) {
        // Placeholder method for extending classes to override.
    };
    Object.defineProperty(Series.prototype, "minBulletDistance", {
        /**
         * @return Distance (px)
         */
        get: function () {
            return this.getPropertyValue("minBulletDistance");
        },
        /**
         * Minimal distance between data points in pixels.
         *
         * If distance gets smaller than this, bullets are turned off to avoid
         * overlapping.
         *
         * `0` (zero) disables this behavior.
         *
         * IMPORTANT: This setting will work only when Series' base axis
         * is [[CategoryAxis]] or [[DateAxis]]. If base axis is [[ValueAxis]] the
         * setting will be ignored, because it would be a huge overhead to measure
         * distance between each and every bullet.
         *
         * @default 0
         * @param value  Distance (px)
         */
        set: function (value) {
            this.setPropertyValue("minBulletDistance", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Series.prototype, "bullets", {
        /**
         * A list of bullets that will be added to each and every items in the
         * series.
         *
         * You can push any object that is a descendant of a [[Sprite]] here. All
         * items added to this list will be copied and used as a bullet on all data
         * items, including their properties, events, etc.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/bullets/} for more info about the concept of Bullets
         * @return List of bullets.
         */
        get: function () {
            if (!this._bullets) {
                this._bullets = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListTemplate"](new _elements_Bullet__WEBPACK_IMPORTED_MODULE_8__["Bullet"]());
                this._bullets.template.virtualParent = this;
                this._bullets.events.on("inserted", this.processBullet, this, false);
                this._bullets.events.on("removed", this.removeBullet, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](this._bullets));
                this._disposers.push(this._bullets.template);
            }
            return this._bullets;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Binds related legend data item's visual settings to this series' visual
     * settings.
     *
     * @ignore Exclude from docs
     * @param marker  Legend item container
     */
    Series.prototype.createLegendMarker = function (marker) {
        // This is a placeholder method for extending classes to override.
    };
    Object.defineProperty(Series.prototype, "hiddenInLegend", {
        /**
         * @return Hidden in legend?
         */
        get: function () {
            return this.getPropertyValue("hiddenInLegend");
        },
        /**
         * Should the series be hidden in legend?
         *
         * @param value Hidden in legend?
         */
        set: function (value) {
            if (this.setPropertyValue("hiddenInLegend", value)) {
                if (this.chart) {
                    this.chart.feedLegend();
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Series.prototype, "name", {
        /**
         * @return Name
         */
        get: function () {
            return this.getPropertyValue("name");
        },
        /**
         * Series' name.
         *
         * @param value  Name
         */
        set: function (value) {
            this.setPropertyValue("name", value);
            var legendDataItem = this.legendDataItem;
            if (legendDataItem) {
                legendDataItem.component.invalidate();
                legendDataItem.component.invalidateRawData();
            }
            this.readerTitle = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Series.prototype, "itemReaderText", {
        /**
         * @return Screen reader text template
         */
        get: function () {
            // Get explicitly set reader text
            var readerText = this._itemReaderText;
            // Not set? Let's try something else
            if (!readerText) {
                // Tooltip text?
                if (this.tooltipText) {
                    readerText = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["plainText"](this.tooltipText);
                }
                else if (this.tooltipHTML) {
                    readerText = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["plainText"](this.tooltipHTML);
                }
            }
            if (!this._adapterO) {
                return readerText;
            }
            else {
                return this._adapterO.apply("itemReaderText", readerText);
            }
        },
        /**
         * Screen reader text to be applied to each individual data item, such
         * as bullets, columns or slices.
         *
         * The template can contain field reference meta codes, i.e. `{dateX}`,
         * `{valueY}`, etc.
         *
         * Any text formatting options, e.g. `[bold]` will be ignored.
         *
         * @param value Screen reader text template
         */
        set: function (value) {
            this._itemReaderText = value;
            this._itemReaderTextChanged = true;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns if number of data items in the series are beyond non-focusable
     * count and should not be available for TAB-through.
     *
     * @ignore Exclude from docs
     * @return Items focusable?
     */
    Series.prototype.itemsFocusable = function () {
        return this.dataItems.length >= this.skipFocusThreshold ? false : true;
    };
    Object.defineProperty(Series.prototype, "legendDataItem", {
        /**
         * @return Data item
         */
        get: function () {
            return this._legendDataItem;
        },
        /**
         * Legend data item that corresponds to this series.
         *
         * @param value  Data item
         */
        set: function (value) {
            this._legendDataItem = value;
            this._legendDataItem.itemContainer.deepInvalidate();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Updates corresponding legend data item with current values.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    Series.prototype.updateLegendValue = function (dataItem, notRange) {
        // if this series has legend item
        if (this.legendDataItem) {
            var legendSettings = this.legendSettings;
            var legendDataItem = this.legendDataItem;
            var label = legendDataItem.label;
            var valueLabel = legendDataItem.valueLabel;
            // update legend
            if ((dataItem && !dataItem.isDisposed()) || notRange) {
                if (valueLabel) {
                    if (legendSettings.itemValueText) {
                        valueLabel.text = legendSettings.itemValueText;
                    }
                    valueLabel.dataItem = dataItem;
                }
                if (label) {
                    if (legendSettings.itemLabelText) {
                        label.text = legendSettings.itemLabelText;
                    }
                    label.dataItem = dataItem;
                }
            }
            else {
                if (label) {
                    // if itemLabelText is set, means we have to reset label even if labelText is not set
                    if (legendSettings.labelText || legendSettings.itemLabelText != undefined) {
                        label.text = legendSettings.labelText;
                    }
                    label.dataItem = this.dataItem;
                }
                if (valueLabel) {
                    if (legendSettings.valueText || legendSettings.itemValueText != undefined) {
                        valueLabel.text = legendSettings.valueText;
                    }
                    valueLabel.dataItem = this.dataItem;
                }
            }
        }
    };
    /**
     * Copies all properties from another instance of [[Series]].
     *
     * @param source  Source series
     */
    Series.prototype.copyFrom = function (source) {
        this.bullets.copyFrom(source.bullets);
        this.bulletsContainer.copyFrom(source.bulletsContainer);
        this.calculatePercent = source.calculatePercent;
        this.usePercentHack = source.usePercentHack;
        this.simplifiedProcessing = source.simplifiedProcessing;
        _super.prototype.copyFrom.call(this, source);
    };
    /**
     * Displays a modal or console message with error, and halts any further
     * processing of this element.
     *
     * @param e Error
     */
    Series.prototype.raiseCriticalError = function (e) {
        if (this._chart && this._chart.modal) {
            this._chart.modal.content = this._chart.adapter.apply("criticalError", e).message;
            this._chart.modal.closable = false;
            if (!_core_Options__WEBPACK_IMPORTED_MODULE_10__["options"].suppressErrors) {
                this._chart.modal.open();
            }
            this._chart.disabled = true;
        }
        if (_core_Options__WEBPACK_IMPORTED_MODULE_10__["options"].verbose) {
            console.log(e);
        }
    };
    /**
     * Applies filters to the element.
     *
     * @ignore Exclude from docs
     */
    Series.prototype.applyFilters = function () {
        var _this = this;
        _super.prototype.applyFilters.call(this);
        this.bulletsContainer.filters.clear();
        // copyFrom of a list copies, does not clone
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](this.filters.iterator(), function (filter) {
            _this.bulletsContainer.filters.push(filter.clone());
        });
    };
    Object.defineProperty(Series.prototype, "heatRules", {
        /**
         * A list of heat rules to apply to series' elements based on the value
         * of the data item.
         *
         * Heat rules can be any "numeric" (including `Color`) property, and can also
         * be applied to child objects of series, like columns, bullets, etc.
         *
         * E.g.:
         *
         * ```TypeScript
         * series.heatRules.push({
         *  "target": series.columns.template,
         *  "property": "fill",
         *  "min": am4core.color("#F5DBCB"),
         *  "max": am4core.color("#ED7B84"),
         *  "dataField": "valueY"
         *});
         *```
         * ```Javacript
         * series.heatRules.push({
         *  "target": series.columns.template,
         *  "property": "fill",
         *  "min": am4core.color("#F5DBCB"),
         *  "max": am4core.color("#ED7B84"),
         *  "dataField": "valueY"
         *});
         *```
         *```JSON
         *{
         *  // ...
         *  "series": [{
         *    "type": "ColumnSeries",
         *    "heatRules": [{
         *      "target": "columns.template",
         *      "property": "fill",
         *      "min": "#F5DBCB",
         *      "max": "#ED7B84",
         *      "dataField": "valueY"
         *    }]
         *  }]
         *}
         *```
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/series/#Heat_maps} for more about heat rules
         * @return  Heat rules
         */
        get: function () {
            var _this = this;
            if (!this._heatRules) {
                this._heatRules = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
                this._heatRules.events.on("inserted", function (event) {
                    var heatRule = event.newValue;
                    var target = heatRule.target;
                    if (target) {
                        var dataField_1 = heatRule.dataField;
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](dataField_1)) {
                            dataField_1 = "value";
                        }
                        var seriesDataItem_1 = _this.dataItem;
                        var property_1 = heatRule.property;
                        var minValue = _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["toNumber"](heatRule.minValue);
                        var maxValue = _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["toNumber"](heatRule.maxValue);
                        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](minValue) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](maxValue)) {
                            _this.dataItem.events.on("calculatedvaluechanged", function (event) {
                                if (event.property == dataField_1) {
                                    _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](_this.dataItems.iterator(), function (dataItem) {
                                        var foundSprite = false;
                                        _core_utils_Array__WEBPACK_IMPORTED_MODULE_19__["each"](dataItem.sprites, function (sprite) {
                                            if (sprite.clonedFrom == target) {
                                                var anySprite = sprite;
                                                anySprite[property_1] = anySprite[property_1];
                                                foundSprite = true;
                                            }
                                        });
                                        if (!foundSprite) {
                                            _core_utils_Array__WEBPACK_IMPORTED_MODULE_19__["each"](dataItem.sprites, function (sprite) {
                                                if (sprite instanceof _core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]) {
                                                    _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](sprite.children.iterator(), function (child) {
                                                        if (child.className == target.className) {
                                                            var anyChild = child;
                                                            anyChild[property_1] = anyChild[property_1];
                                                        }
                                                        // giveup here
                                                        else if (child instanceof _core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]) {
                                                            child.deepInvalidate();
                                                        }
                                                    });
                                                }
                                            });
                                        }
                                    });
                                }
                            });
                        }
                        _this.dataItems.template.events.on("workingvaluechanged", function (event) {
                            if (event.property == dataField_1) {
                                var dataItem = event.target;
                                var foundSprite_1 = false;
                                _core_utils_Array__WEBPACK_IMPORTED_MODULE_19__["each"](dataItem.sprites, function (sprite) {
                                    if (sprite.clonedFrom == target) {
                                        var anySprite = sprite;
                                        anySprite[property_1] = anySprite[property_1];
                                        foundSprite_1 = true;
                                    }
                                });
                                if (!foundSprite_1) {
                                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_19__["each"](dataItem.sprites, function (sprite) {
                                        if (sprite instanceof _core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]) {
                                            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_13__["each"](sprite.children.iterator(), function (child) {
                                                if (child.className == target.className) {
                                                    var anyChild = child;
                                                    anyChild[property_1] = anyChild[property_1];
                                                }
                                                // givup here
                                                else if (child instanceof _core_Container__WEBPACK_IMPORTED_MODULE_6__["Container"]) {
                                                    child.deepInvalidate();
                                                }
                                            });
                                        }
                                    });
                                }
                            }
                        });
                        target.adapter.add(property_1, function (value, ruleTarget, property) {
                            var minValue = _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["toNumber"](heatRule.minValue);
                            var maxValue = _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["toNumber"](heatRule.maxValue);
                            var min = heatRule.min;
                            var max = heatRule.max;
                            if (ruleTarget instanceof _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]) {
                                var anySprite = ruleTarget;
                                var propertyField = anySprite.propertyFields[property];
                                if (propertyField && ruleTarget.dataItem) {
                                    var dataContext = ruleTarget.dataItem.dataContext;
                                    if (dataContext && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](dataContext[propertyField])) {
                                        return value;
                                    }
                                }
                            }
                            var dataItem = ruleTarget.dataItem;
                            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](minValue)) {
                                minValue = seriesDataItem_1.values[dataField_1].low;
                            }
                            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](maxValue)) {
                                maxValue = seriesDataItem_1.values[dataField_1].high;
                            }
                            if (dataItem) {
                                var fieldValues = dataItem.values[dataField_1];
                                if (fieldValues) {
                                    var workingValue = dataItem.getActualWorkingValue(dataField_1);
                                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](min) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](max) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](minValue) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](maxValue) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](workingValue)) {
                                        var percent = void 0;
                                        if (heatRule.logarithmic) {
                                            percent = (Math.log(workingValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E) / ((Math.log(maxValue) * Math.LOG10E - Math.log(minValue) * Math.LOG10E));
                                        }
                                        else {
                                            percent = (workingValue - minValue) / (maxValue - minValue);
                                        }
                                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](workingValue) && (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](percent) || Math.abs(percent) == Infinity)) {
                                            percent = 0.5;
                                        }
                                        // fixes problems if all values are the same
                                        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](min)) {
                                            return min + (max - min) * percent;
                                        }
                                        else if (min instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_11__["Color"]) {
                                            return new _core_utils_Color__WEBPACK_IMPORTED_MODULE_11__["Color"](_core_utils_Colors__WEBPACK_IMPORTED_MODULE_20__["interpolate"](min.rgb, max.rgb, percent));
                                        }
                                    }
                                }
                            }
                            return value;
                        });
                    }
                });
            }
            return this._heatRules;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    Series.prototype.processConfig = function (config) {
        var heatRules;
        if (config) {
            // Set up bullets
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.bullets) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isArray"](config.bullets)) {
                for (var i = 0, len = config.bullets.length; i < len; i++) {
                    var bullets = config.bullets[i];
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](bullets.type)) {
                        bullets.type = "Bullet";
                    }
                }
            }
            // Let's take heatRules out of the config, so that we can process
            // them later, when bullets are already there
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.heatRules) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isArray"](config.heatRules)) {
                heatRules = config.heatRules;
                delete config.heatRules;
            }
        }
        _super.prototype.processConfig.call(this, config);
        // Process heat rules again, when all other elements are ready
        if (heatRules) {
            for (var i = 0, len = heatRules.length; i < len; i++) {
                var rule = heatRules[i];
                // Resolve target
                var target = this;
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](rule.target) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isString"](rule.target)) {
                    // Check if we can find this element by id
                    if (this.map.hasKey(rule.target)) {
                        target = this.map.getKey(rule.target);
                    }
                    else {
                        var parts = rule.target.split(".");
                        for (var x = 0; x < parts.length; x++) {
                            if (target instanceof _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]) {
                                var listitem = target.getIndex(_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["toNumber"](parts[x]));
                                if (!listitem) {
                                    target = target[parts[x]];
                                }
                                else {
                                    target = listitem;
                                }
                            }
                            else {
                                var maybeIndex = parts[x].match(/^(.*)\[([0-9]+)\]/);
                                if (maybeIndex) {
                                    if (target[maybeIndex[1]] instanceof _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]) {
                                        target = target[maybeIndex[1]].getIndex(_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["toNumber"](maybeIndex[2]));
                                    }
                                    else {
                                        target = target[maybeIndex[1]][_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["toNumber"](maybeIndex[2])];
                                    }
                                }
                                else {
                                    target = target[parts[x]];
                                }
                            }
                        }
                    }
                }
                rule.target = target;
                // Resolve colors and percents
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](rule.min)) {
                    rule.min = this.maybeColorOrPercent(rule.min);
                }
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](rule.max)) {
                    rule.max = this.maybeColorOrPercent(rule.max);
                }
            }
            _super.prototype.processConfig.call(this, {
                heatRules: heatRules
            });
        }
    };
    /**
     * Returns visibility value
     * @ignore
     */
    /*
        protected getVisibility(): boolean {
            let hidden = this.getPropertyValue("hidden");
            if (hidden) {
                return false;
            }
            else {
                return super.getVisibility();
            }
        }*/
    /**
     * This function is used to sort element's JSON config properties, so that
     * some properties that absolutely need to be processed last, can be put at
     * the end.
     *
     * @ignore Exclude from docs
     * @param a  Element 1
     * @param b  Element 2
     * @return Sorting number
     */
    Series.prototype.configOrder = function (a, b) {
        if (a == b) {
            return 0;
        }
        // Must come last
        else if (a == "heatRules") {
            return 1;
        }
        else if (b == "heatRules") {
            return -1;
        }
        else {
            return _super.prototype.configOrder.call(this, a, b);
        }
    };
    /**
     * Sets `visibility` property:
     *
     * * `true` - visible
     * * `false` - hidden
     *
     * @param value  true - visible, false - hidden
     * @return Current visibility
     */
    Series.prototype.setVisibility = function (value) {
        _super.prototype.setVisibility.call(this, value);
        this.bulletsContainer.visible = value;
    };
    return Series;
}(_core_Component__WEBPACK_IMPORTED_MODULE_1__["Component"]));

/**
 * Register class, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_12__["registry"].registeredClasses["Series"] = Series;
_core_Registry__WEBPACK_IMPORTED_MODULE_12__["registry"].registeredClasses["SeriesDataItem"] = SeriesDataItem;
//# sourceMappingURL=Series.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeries.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeries.js ***!
  \************************************************************************************/
/*! exports provided: StepLineSeriesDataItem, StepLineSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StepLineSeriesDataItem", function() { return StepLineSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StepLineSeries", function() { return StepLineSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _LineSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LineSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeries.js");
/* harmony import */ var _StepLineSeriesSegment__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./StepLineSeriesSegment */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeriesSegment.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * Step line series module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[StepLineSeries]].
 *
 * @see {@link DataItem}
 */
var StepLineSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(StepLineSeriesDataItem, _super);
    /**
     * Constructor
     */
    function StepLineSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "StepLineSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    return StepLineSeriesDataItem;
}(_LineSeries__WEBPACK_IMPORTED_MODULE_1__["LineSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines [[Series]] for a step line graph.
 *
 * @see {@link IStepLineSeriesEvents} for a list of available Events
 * @see {@link IStepLineSeriesAdapters} for a list of available Adapters
 * @todo Example
 * @important
 */
var StepLineSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(StepLineSeries, _super);
    /**
     * Constructor
     */
    function StepLineSeries() {
        var _this = _super.call(this) || this;
        _this.className = "StepLineSeries";
        _this.applyTheme();
        _this.startLocation = 0;
        _this.endLocation = 1;
        return _this;
    }
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    StepLineSeries.prototype.createDataItem = function () {
        return new StepLineSeriesDataItem();
    };
    /**
     * [addPoints description]
     *
     * @todo Description
     * @param points     [description]
     * @param dataItem   [description]
     * @param xField     [description]
     * @param yField     [description]
     * @param backwards  [description]
     */
    StepLineSeries.prototype.addPoints = function (points, dataItem, xField, yField, backwards) {
        var startLocationX;
        var endLocationX;
        var startLocationY;
        var endLocationY;
        if (this.baseAxis == this.xAxis) {
            startLocationX = this.startLocation;
            endLocationX = this.endLocation;
            startLocationY = this.getAdjustedXLocation(dataItem, this.yOpenField);
            endLocationY = this.getAdjustedXLocation(dataItem, this.yField);
        }
        if (this.baseAxis == this.yAxis) {
            startLocationY = this.startLocation;
            endLocationY = this.endLocation;
            startLocationX = this.getAdjustedXLocation(dataItem, this.xOpenField);
            endLocationX = this.getAdjustedXLocation(dataItem, this.xField);
        }
        var x0 = this.xAxis.getX(dataItem, xField, startLocationX);
        var y0 = this.yAxis.getY(dataItem, yField, startLocationY);
        var x1 = this.xAxis.getX(dataItem, xField, endLocationX);
        var y1 = this.yAxis.getY(dataItem, yField, endLocationY);
        x0 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["fitToRange"](x0, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.
        y0 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["fitToRange"](y0, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.
        x1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["fitToRange"](x1, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.
        y1 = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["fitToRange"](y1, -100000, 100000); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.
        // this might make an impression that points are duplicated, and they indeed are, but this is needed to handle gaps in data
        if (!this.noRisers) {
            if (points.length > 1) {
                var prevPoint = points[points.length - 1];
                if (this.baseAxis == this.xAxis) {
                    if (backwards) {
                        points.push({ x: prevPoint.x, y: y1 });
                    }
                    else {
                        points.push({ x: x0, y: prevPoint.y });
                    }
                }
                if (this.baseAxis == this.yAxis) {
                    if (backwards) {
                        points.push({ x: x1, y: prevPoint.y });
                    }
                    else {
                        points.push({ x: prevPoint.x, y: y0 });
                    }
                }
            }
        }
        var point0 = { x: x0, y: y0 };
        var point1 = { x: x1, y: y1 };
        if (backwards) {
            points.push(point1, point0);
        }
        else {
            points.push(point0, point1);
        }
    };
    /**
     * Draws the line segment.
     *
     * @param segment     Segment
     * @param points      Segment points
     * @param closePoints Segment close points
     */
    StepLineSeries.prototype.drawSegment = function (segment, points, closePoints) {
        var vertical = false;
        if (this.yAxis == this.baseAxis) {
            vertical = true;
        }
        segment.drawSegment(points, closePoints, this.tensionX, this.tensionY, this.noRisers, vertical);
    };
    /**
     * @ignore
     */
    StepLineSeries.prototype.createSegment = function () {
        return new _StepLineSeriesSegment__WEBPACK_IMPORTED_MODULE_2__["StepLineSeriesSegment"]();
    };
    Object.defineProperty(StepLineSeries.prototype, "noRisers", {
        /**
         * @return No risers
         */
        get: function () {
            return this.getPropertyValue("noRisers");
        },
        /**
         * Specifies if step line series should draw only horizontal (or only
         * vertical, depending on base axis) lines, instead of connecting them with
         * vertical (or horizontal) lines.
         *
         * @default false
         * @param value  No risers
         */
        set: function (value) {
            this.setPropertyValue("noRisers", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StepLineSeries.prototype, "startLocation", {
        /**
         * @return Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("startLocation");
        },
        /**
         * start location of the step
         *
         * @param value Location (0-1)
         * @default 0
         */
        set: function (value) {
            this.setPropertyValue("startLocation", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(StepLineSeries.prototype, "endLocation", {
        /**
         * @return Location (0-1)
         */
        get: function () {
            return this.getPropertyValue("endLocation");
        },
        /**
         * Step end location.
         *
         * @param value Location (0-1)
         * #default 1
         */
        set: function (value) {
            this.setPropertyValue("endLocation", value, true);
        },
        enumerable: true,
        configurable: true
    });
    return StepLineSeries;
}(_LineSeries__WEBPACK_IMPORTED_MODULE_1__["LineSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["StepLineSeries"] = StepLineSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["StepLineSeriesDataItem"] = StepLineSeriesDataItem;
//# sourceMappingURL=StepLineSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeriesSegment.js":
/*!*******************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeriesSegment.js ***!
  \*******************************************************************************************/
/*! exports provided: StepLineSeriesSegment */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "StepLineSeriesSegment", function() { return StepLineSeriesSegment; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _LineSeriesSegment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./LineSeriesSegment */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeriesSegment.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Line series segment module.
 * @todo Add description about what this is
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Represents a line series segment.
 *
 * A line segment can be used to apply different properties to a part of the
 * line series, between two data points.
 *
 * @see {@link IStepLineSeriesSegmentEvents} for a list of available events
 * @see {@link IStepLineSeriesSegmentAdapters} for a list of available Adapters
 * @todo Example
 */
var StepLineSeriesSegment = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(StepLineSeriesSegment, _super);
    /**
     * Constructor
     */
    function StepLineSeriesSegment() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "StepLineSeriesSegment";
        return _this;
    }
    /**
     * Draws the series segment.
     *
     * @ignore Exclude from docs
     * @param points       Points to connect
     * @param closePoints  ?
     * @param smoothnessX  Horizontal bezier setting (?)
     * @param smoothnessY  Vertical bezier setting (?)
     */
    StepLineSeriesSegment.prototype.drawSegment = function (points, closePoints, smoothnessX, smoothnessY, noRisers, vertical) {
        if (points.length > 0 && closePoints.length > 0) {
            if (noRisers) {
                var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"](points[0]);
                if (points.length > 0) {
                    for (var i = 1; i < points.length; i++) {
                        var point = points[i];
                        if (i / 2 == Math.round(i / 2)) {
                            path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"](point);
                        }
                        else {
                            path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"](point);
                        }
                    }
                }
                this.strokeSprite.path = path;
                if (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible
                    path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"](points[0]) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["polyline"](points);
                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"](closePoints[0]) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["polyline"](closePoints);
                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"](points[0]);
                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["closePath"]();
                    this.fillSprite.path = path;
                }
                else {
                }
            }
            else {
                var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"](points[0]) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["polyline"](points);
                this.strokeSprite.path = path;
                if (this.fillOpacity > 0 || this.fillSprite.fillOpacity > 0) { // helps to avoid drawing fill object if fill is not visible
                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"](closePoints[0]) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["polyline"](closePoints);
                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["lineTo"](points[0]);
                    path += _core_rendering_Path__WEBPACK_IMPORTED_MODULE_3__["closePath"]();
                    this.fillSprite.path = path;
                }
            }
        }
        else {
            this.strokeSprite.path = "";
            this.fillSprite.path = "";
        }
    };
    return StepLineSeriesSegment;
}(_LineSeriesSegment__WEBPACK_IMPORTED_MODULE_1__["LineSeriesSegment"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["StepLineSeriesSegment"] = StepLineSeriesSegment;
//# sourceMappingURL=StepLineSeriesSegment.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/TreeMapSeries.js":
/*!***********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/TreeMapSeries.js ***!
  \***********************************************************************************/
/*! exports provided: TreeMapSeriesDataItem, TreeMapSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TreeMapSeriesDataItem", function() { return TreeMapSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TreeMapSeries", function() { return TreeMapSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _ColumnSeries__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ColumnSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/elements/RoundedRectangle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/RoundedRectangle.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/**
 * TreeMap series module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */







/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[TreeMapSeries]].
 *
 * @see {@link DataItem}
 */
var TreeMapSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(TreeMapSeriesDataItem, _super);
    /**
     * Constructor
     */
    function TreeMapSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "TreeMapSeriesDataItem";
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(TreeMapSeriesDataItem.prototype, "parentName", {
        /**
         * Data for the this particular item.
         *
         * @param value  Item's data
         */
        //public set dataContext(value: Object) {
        //	this._dataContext = value;
        //}
        /**
         * @return Item's data
         */
        /*
       public get dataContext(): Object {
           // It's because data of tree series is TreeMapDataItems.
           if (this._dataContext) {
               return (<any>this._dataContext).dataContext;
           }
       }*/
        /**
         * The name of the item's parent item.
         *
         * @return Parent name
         */
        get: function () {
            var treeMapDataItem = this.treeMapDataItem;
            if (treeMapDataItem && treeMapDataItem.parent) {
                return treeMapDataItem.parent.name;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMapSeriesDataItem.prototype, "value", {
        /**
         * Item's numeric value.
         *
         * @readonly
         * @return Value
         */
        get: function () {
            var treeMapDataItem = this.treeMapDataItem;
            if (treeMapDataItem) {
                return treeMapDataItem.value;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMapSeriesDataItem.prototype, "treeMapDataItem", {
        /**
         * A corresponding data item from the tree map.
         *
         * @readonly
         * @return Data item
         */
        get: function () {
            return this._dataContext;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Hides the Data Item and related visual elements.
     *
     * @param duration  Animation duration (ms)
     * @param delay     Delay animation (ms)
     * @param toValue   A value to set to `fields` when hiding
     * @param fields    A list of data fields to set value to `toValue`
     */
    TreeMapSeriesDataItem.prototype.hide = function (duration, delay, toValue, fields) {
        var treeMapDataItem = this.treeMapDataItem;
        if (treeMapDataItem) {
            treeMapDataItem.hide(duration);
        }
        return _super.prototype.hide.call(this, duration, delay, toValue, fields);
    };
    /**
     * Shows the Data Item and related visual elements.
     *
     * @param duration  Animation duration (ms)
     * @param delay     Delay animation (ms)
     * @param fields    A list of fields to set values of
     */
    TreeMapSeriesDataItem.prototype.show = function (duration, delay, fields) {
        var treeMapDataItem = this.treeMapDataItem;
        if (treeMapDataItem) {
            treeMapDataItem.show(duration, delay, fields);
        }
        return _super.prototype.show.call(this, duration, delay, fields);
    };
    return TreeMapSeriesDataItem;
}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__["ColumnSeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines Series for a TreeMap chart.
 *
 * @see {@link ITreeMapSeriesEvents} for a list of available Events
 * @see {@link ITreeMapSeriesAdapters} for a list of available Adapters
 * @todo Example
 * @important
 */
var TreeMapSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(TreeMapSeries, _super);
    /**
     * Constructor
     */
    function TreeMapSeries() {
        var _this = _super.call(this) || this;
        _this.className = "TreeMapSeries";
        _this.applyTheme();
        _this.fillOpacity = 1;
        _this.strokeOpacity = 1;
        _this.minBulletDistance = 0;
        _this.columns.template.tooltipText = "{parentName} {name}: {value}"; //@todo add format number?
        _this.columns.template.configField = "config";
        var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_4__["InterfaceColorSet"]();
        _this.stroke = interfaceColors.getFor("background");
        _this.dataFields.openValueX = "x0";
        _this.dataFields.valueX = "x1";
        _this.dataFields.openValueY = "y0";
        _this.dataFields.valueY = "y1";
        _this.sequencedInterpolation = false;
        _this.showOnInit = false;
        // otherwise nodes don't stack nicely to each other
        _this.columns.template.pixelPerfect = false;
        return _this;
    }
    /**
     * Processes data item.
     *
     * @param dataItem     Data item
     * @param dataContext  Raw data
     * @param index        Index of the data item
     */
    TreeMapSeries.prototype.processDataItem = function (dataItem, dataContext) {
        dataContext.seriesDataItem = dataItem; // save a reference here. dataContext is TreeMapDataItem and we need to know dataItem sometimes
        _super.prototype.processDataItem.call(this, dataItem, dataContext);
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    TreeMapSeries.prototype.createDataItem = function () {
        return new TreeMapSeriesDataItem();
    };
    /**
     * Shows series.
     *
     * @param duration  Duration of fade in (ms)
     * @return Animation
     */
    TreeMapSeries.prototype.show = function (duration) {
        if (this.preventShow) {
            return;
        }
        var interpolationDuration = this.defaultState.transitionDuration;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](duration)) {
            interpolationDuration = duration;
        }
        this.dataItems.each(function (dataItem) {
            //dataItem.treeMapDataItem.setWorkingValue("value", dataItem.treeMapDataItem.values.value.value);
            dataItem.show(duration);
        });
        return _super.prototype.showReal.call(this, interpolationDuration);
    };
    /**
     * Hides series.
     *
     * @param duration  Duration of fade out (ms)
     * @return Animation
     */
    TreeMapSeries.prototype.hide = function (duration) {
        var interpolationDuration = this.defaultState.transitionDuration;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](duration)) {
            interpolationDuration = duration;
        }
        var animation = _super.prototype.hideReal.call(this, interpolationDuration);
        this.dataItems.each(function (dataItem) {
            //dataItem.treeMapDataItem.setWorkingValue("value", 0);
            dataItem.hide(duration);
        });
        return animation;
    };
    /**
     * Process values.
     *
     * @ignore Exclude from docs
     */
    TreeMapSeries.prototype.processValues = function () {
        // Just overriding so that inherited method does not kick in.
    };
    /**
     * Returns relative start location for the data item.
     *
     * @param dataItem  Data item
     * @return Location (0-1)
     */
    TreeMapSeries.prototype.getStartLocation = function (dataItem) {
        return 0;
    };
    /**
     * Returns relative end location for the data item.
     *
     * @param dataItem  Data item
     * @return Location (0-1)
     */
    TreeMapSeries.prototype.getEndLocation = function (dataItem) {
        return 1;
    };
    /**
     * @ignore
     */
    TreeMapSeries.prototype.dataChangeUpdate = function () {
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    TreeMapSeries.prototype.processConfig = function (config) {
        if (config) {
            // Add empty data fields if the they are not set, so that XYSeries
            // dataField check does not result in error.
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](config.dataFields) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isObject"](config.dataFields)) {
                config.dataFields = {};
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    /**
     * Creates elements in related legend container, that mimics the look of this
     * Series.
     *
     * @ignore Exclude from docs
     * @param marker  Legend item container
     */
    TreeMapSeries.prototype.createLegendMarker = function (marker) {
        var w = marker.pixelWidth;
        var h = marker.pixelHeight;
        marker.removeChildren();
        var column = marker.createChild(_core_elements_RoundedRectangle__WEBPACK_IMPORTED_MODULE_6__["RoundedRectangle"]);
        column.shouldClone = false;
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_7__["copyProperties"](this, column, _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"]);
        //column.copyFrom(<any>this.columns.template);
        column.padding(0, 0, 0, 0); // if columns will have padding (which is often), legend marker will be very narrow
        column.width = w;
        column.height = h;
        var legendDataItem = marker.dataItem;
        legendDataItem.color = column.fill;
        legendDataItem.colorOrig = column.fill;
    };
    TreeMapSeries.prototype.disableUnusedColumns = function (dataItem) {
        _super.prototype.disableUnusedColumns.call(this, dataItem);
        if (dataItem.column) {
            dataItem.column.__disabled = false;
        }
    };
    return TreeMapSeries;
}(_ColumnSeries__WEBPACK_IMPORTED_MODULE_1__["ColumnSeries"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["TreeMapSeries"] = TreeMapSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["TreeMapSeriesDataItem"] = TreeMapSeriesDataItem;
//# sourceMappingURL=TreeMapSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js ***!
  \******************************************************************************/
/*! exports provided: XYSeriesDataItem, XYSeries */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XYSeriesDataItem", function() { return XYSeriesDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XYSeries", function() { return XYSeries; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Series__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Series */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../axes/ValueAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js");
/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _types_XYChart__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../types/XYChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js");
/* harmony import */ var _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axes/CategoryAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js");
/* harmony import */ var _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../axes/DateAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Time__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Time */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Time.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_Options__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../core/Options */ "./node_modules/@amcharts/amcharts4/.internal/core/Options.js");
/**
 * XY series module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */


















/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[XYSeries]].
 *
 * @see {@link DataItem}
 */
var XYSeriesDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(XYSeriesDataItem, _super);
    /**
     * Constructor
     */
    function XYSeriesDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "XYSeriesDataItem";
        _this.values.customValue = {};
        _this.values.valueX = { stack: 0 };
        _this.values.valueY = { stack: 0 };
        _this.values.openValueX = {};
        _this.values.openValueY = {};
        _this.values.dateX = {};
        _this.values.dateY = {};
        _this.values.openDateX = {};
        _this.values.openDateY = {};
        _this.setLocation("dateX", 0.5, 0);
        _this.setLocation("dateY", 0.5, 0);
        _this.setLocation("categoryX", 0.5, 0);
        _this.setLocation("categoryY", 0.5, 0);
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(XYSeriesDataItem.prototype, "valueX", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.valueX.value;
        },
        /**
         * Item's numeric value on X value axis.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("valueX", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeriesDataItem.prototype, "customValue", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.customValue.value;
        },
        /**
         * Item's custom numeric value.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("customValue", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeriesDataItem.prototype, "valueY", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.valueY.value;
        },
        /**
         * Item's numeric value on Y value axis.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("valueY", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeriesDataItem.prototype, "dateX", {
        /**
         * @return Date
         */
        get: function () {
            return this.getDate("dateX");
        },
        /**
         * Item's date value on X date-based axis.
         *
         * @param date  Date
         */
        set: function (date) {
            this.setDate("dateX", date);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeriesDataItem.prototype, "dateY", {
        /**
         * @return Date
         */
        get: function () {
            return this.getDate("dateY");
        },
        /**
         * Item's date value on Y date-based axis.
         *
         * @param date  Date
         */
        set: function (date) {
            this.setDate("dateY", date);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeriesDataItem.prototype, "categoryX", {
        /**
         * @return Category
         */
        get: function () {
            return this.categories.categoryX;
        },
        /**
         * Item's category on X category axis.
         *
         * @param category  Category
         */
        set: function (category) {
            this.setCategory("categoryX", category);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeriesDataItem.prototype, "categoryY", {
        /**
         * @return Category
         */
        get: function () {
            return this.categories.categoryY;
        },
        /**
         * Item's category on Y category axis.
         *
         * @param category  Category
         */
        set: function (category) {
            this.setCategory("categoryY", category);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeriesDataItem.prototype, "openValueX", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.openValueX.value;
        },
        /**
         * Item's open numeric value on X value axis.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("openValueX", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeriesDataItem.prototype, "openValueY", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.openValueY.value;
        },
        /**
         * Item's open numeric value on Y value axis.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("openValueY", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeriesDataItem.prototype, "openDateX", {
        /**
         * @return Date
         */
        get: function () {
            return this.getDate("openDateX");
        },
        /**
         * Item's open date value on X date-based axis.
         *
         * @param date  Date
         */
        set: function (date) {
            this.setDate("openDateX", date);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeriesDataItem.prototype, "openDateY", {
        /**
         * @return Date
         */
        get: function () {
            return this.getDate("openDateY");
        },
        /**
         * Item's open date value on Y date-based axis.
         *
         * @param date  Date
         */
        set: function (date) {
            this.setDate("openDateY", date);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeriesDataItem.prototype, "openCategoryX", {
        /**
         * @return Category
         */
        get: function () {
            return this.categories.openCategoryX;
        },
        /**
         * Item's open category on X category axis.
         *
         * @param category  Category
         */
        set: function (category) {
            this.setCategory("openCategoryX", category);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeriesDataItem.prototype, "openCategoryY", {
        /**
         * @return Category
         */
        get: function () {
            return this.categories.openCategoryY;
        },
        /**
         * Item's open category on Y category axis.
         *
         * @param category  Category
         */
        set: function (category) {
            this.setCategory("openCategoryY", category);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Return smallest value out of all item's value fields.
     *
     * @ignore Exclude from docs
     * @param fields      Fields to check in
     * @param working     Include working (temporary) values
     * @param stackValue  If item is in a stack, the value item starts as
     * @return Value
     */
    XYSeriesDataItem.prototype.getMin = function (fields, working, stackValue) {
        var _this = this;
        //if (this.visible) {  // dumped because of non smooth zooming
        var min;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](stackValue)) {
            stackValue = 0;
        }
        _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__["each"](fields, function (field) {
            var value;
            if (working) {
                value = _this.getWorkingValue(field);
            }
            else {
                value = _this.getValue(field);
            }
            value += stackValue;
            if (value < min || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](min)) {
                min = value;
            }
        });
        return min;
        //}
    };
    /**
     * Return biggest value out of all item's value fields.
     *
     * @ignore Exclude from docs
     * @param fields      Fields to check in
     * @param working     Include working (temporary) values
     * @param stackValue  If item is in a stack, the value item starts as
     * @return Value
     */
    XYSeriesDataItem.prototype.getMax = function (fields, working, stackValue) {
        var _this = this;
        //if (this.visible) { // dumped because of non smooth zooming
        var max;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](stackValue)) {
            stackValue = 0;
        }
        _core_utils_Array__WEBPACK_IMPORTED_MODULE_15__["each"](fields, function (field) {
            var value;
            if (working) {
                value = _this.getWorkingValue(field);
            }
            else {
                value = _this.getValue(field);
            }
            value += stackValue;
            if (value > max || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](max)) {
                max = value;
            }
        });
        return max;
        //}
    };
    return XYSeriesDataItem;
}(_Series__WEBPACK_IMPORTED_MODULE_1__["SeriesDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Defines Series for [[XYChart]].
 *
 * @see {@link IXYSeriesEvents} for a list of available Events
 * @see {@link IXYSeriesAdapters} for a list of available Adapters
 * @important
 */
var XYSeries = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(XYSeries, _super);
    /**
     * Constructor
     */
    function XYSeries() {
        var _this = _super.call(this) || this;
        /**
         * Indicates which of the series' `dataFields` to calculate aggregate values
         * for.
         *
         * Available data fields for all [[XYSeries]] are:
         * `valueX`, `valueY`, `openValueX`, and `openValueY`.
         *
         * [[CandlestickSeries]] adds:
         * `lowValueX`, `lowValueY`, `highValueX`, and `highValueY`.
         *
         * Available options:
         * `"open"`, `"close"`, `"low"`, `"high"`, `"average"`, `"sum"`.
         *
         * Defaults are as follows:
         * * `valueX`: `"close"`
         * * `valueY`: `"close"`
         * * `openValueX`: `"open"`
         * * `openValueY`: `"open"`
         * * `lowValueX`: `"low"`
         * * `lowValueY`: `"low"`
         * * `highValueX`: `"high"`
         * * `highValueY`: `"high"`
         *
         * Is required only if data being plotted on a `DateAxis` and
         * its `groupData` is set to `true`.
         *
         * ```TypeScript
         * let dateAxis = chart.xAxes.push(new am4charts.DateAxis());
         * dateAxis.groupData = true;
         *
         * let valueAxis = chart.xAxes.push(new am4charts.valueAxis());
         *
         * let series = chart.series.push(new am4charts.LineSeries());
         * series.dataFields.dateX = "date";
         * series.dataFields.valueY = "value";
         * series.groupFields.valueY = "average";
         * ```
         * ```JavaScript
         * var dateAxis = chart.xAxes.push(new am4charts.DateAxis());
         * dateAxis.groupData = true;
         *
         * var valueAxis = chart.xAxes.push(new am4charts.valueAxis());
         *
         * var series = chart.series.push(new am4charts.LineSeries());
         * series.dataFields.dateX = "date";
         * series.dataFields.valueY = "value";
         * series.groupFields.valueY = "average";
         * ```
         * ```JSON
         * {
         *   // ...
         *   "xAxes": [{
         *     "type": "DateAxis",
         *     "groupData": true
         *   }],
         *   "yAxes": [{
         *     "type": "ValueAxis"
         *   }],
         *   "series": [{
         *     "type": "LineSeries",
         *     "dataFields": {
         *       "dateX": "date",
         *       "valueY": "value"
         *     },
         *     "groupFields": {
         *       "valueY": "average"
         *     }
         *   }]
         * }
         * ```
         *
         * The above setup will ensure, that if there are many data items within
         * selected range, they will be grouped into aggregated data points, using
         * average value of all the values.
         *
         * For example if we have 2 years worth of daily data (~700 data items), when
         * fully zoomed out, the chart would show ~100 data items instead: one for
         * each week in those two years.
         *
         * Grouping will occur automatically, based on current selection range, and
         * will change dynamically when user zooms in/out the chart.
         *
         * @see {@link https://www.amcharts.com/docs/v4/concepts/axes/date-axis/#Dynamic_data_item_grouping} for more information about dynamic data item grouping.
         * @since 4.7.0
         */
        _this.groupFields = {};
        /**
         * X axis the series is attached to.
         */
        _this._xAxis = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_5__["MutableValueDisposer"]();
        /**
         * Y axis the series is attached to.
         */
        _this._yAxis = new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_5__["MutableValueDisposer"]();
        /**
         * [_xValueFields description]
         *
         * @todo Description
         */
        _this._xValueFields = [];
        /**
         * [_yValueFields description]
         *
         * @todo Description
         */
        _this._yValueFields = [];
        /**
         * @ignore
         */
        _this._baseInterval = {};
        /**
         * @ignore
         */
        _this.dataGrouped = false;
        /**
         * @ignore
         */
        _this.usesShowFields = false;
        /**
         * @ignore
         */
        _this._dataSetChanged = false;
        _this._maxxX = 100000;
        _this._maxxY = 100000;
        _this._propertiesChanged = false;
        /**
         * @ignore
         */
        _this.outOfRange = false;
        _this.className = "XYSeries";
        _this.isMeasured = false;
        _this.groupFields.valueX = "close";
        _this.groupFields.valueY = "close";
        _this.groupFields.customValue = "close";
        _this.groupFields.openValueX = "open";
        _this.groupFields.openValueY = "open";
        _this.cursorTooltipEnabled = true;
        _this.cursorHoverEnabled = true;
        _this.excludeFromTotal = false;
        _this.mainContainer.mask = new _core_Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]();
        _this.mainContainer.mask.setElement(_this.paper.add("path"));
        _this.stacked = false;
        _this.snapTooltip = false;
        _this._showBullets = false;
        _this.tooltip.pointerOrientation = "horizontal";
        _this.properties.stackToNegative = true;
        _this.hideTooltipWhileZooming = true;
        _this.setPropertyValue("maskBullets", true);
        _this.tooltip.events.on("hidden", function () {
            _this.returnBulletDefaultState();
        }, undefined, false);
        _this._disposers.push(_this._xAxis);
        _this._disposers.push(_this._yAxis);
        _this.observe(_core_Sprite__WEBPACK_IMPORTED_MODULE_2__["visualProperties"], function () {
            if (_this.inited) {
                _this._propertiesChanged = true;
                if (_this.legendDataItem) {
                    _this.legendDataItem.childrenCreated = false;
                }
                if (_this.chart && _this.chart.legend) {
                    _this.chart.legend.invalidateDataItems();
                }
                _this.invalidate();
            }
        }, undefined, false);
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    XYSeries.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("X/Y Series");
        }
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    XYSeries.prototype.createDataItem = function () {
        return new XYSeriesDataItem();
    };
    /**
     * @ignore
     */
    XYSeries.prototype.resetExtremes = function () {
        this._tmin.clear();
        this._tmax.clear();
        this._smin.clear();
        this._smax.clear();
    };
    /**
     * @ignore
     */
    XYSeries.prototype.dataChangeUpdate = function () {
        this.dataGrouped = false;
        this._baseInterval = {};
        this._currentDataSetId = "";
        this.resetExtremes();
        if (this.xAxis) {
            this.xAxis.seriesDataChangeUpdate(this);
        }
        if (this.yAxis) {
            this.yAxis.seriesDataChangeUpdate(this);
        }
    };
    /**
     * (Re)validates the series' data.
     *
     * @ignore Exclude from docs
     */
    XYSeries.prototype.validateData = function () {
        this._baseInterval = {};
        var dataFields = this.dataFields;
        if (dataFields.valueYShow || dataFields.openValueXShow || dataFields.openValueXShow || dataFields.openValueYShow) {
            this.usesShowFields = true;
        }
        else {
            this.usesShowFields = false;
        }
        this.defineFields();
        if (this.data.length > 0) {
            this.dataChangeUpdate();
        }
        _super.prototype.validateData.call(this);
        this.updateItemReaderText();
        if (this.chart) {
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.dataFields[this._xField]) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.dataFields[this._yField])) {
                throw Error("Data fields for series \"" + (this.name ? this.name : this.uid) + "\" are not properly defined.");
            }
        }
        // 4.7.21 solves 51540
        if (this.inited && this.isHidden) {
            this.hide(0);
        }
        this.dataGrouped = false;
    };
    /**
     * Processes data item.
     *
     * @param dataItem     Data item
     * @param dataContext  Raw data
     * @param index        Index of the data item
     */
    XYSeries.prototype.processDataItem = function (dataItem, dataContext) {
        try {
            _super.prototype.processDataItem.call(this, dataItem, dataContext);
            this.xAxis.processSeriesDataItem(dataItem, "X");
            this.yAxis.processSeriesDataItem(dataItem, "Y");
            this.setInitialWorkingValues(dataItem);
        }
        catch (e) {
            if (this._chart) {
                this._chart.raiseCriticalError(e);
            }
        }
    };
    /**
     *
     * When validating raw data, instead of processing data item, we update it
     *
     * @ignore Exclude from docs
     * @param item
     */
    XYSeries.prototype.updateDataItem = function (dataItem) {
        _super.prototype.updateDataItem.call(this, dataItem);
        //dataItem.events.disable();
        this.xAxis.processSeriesDataItem(dataItem, "X");
        this.yAxis.processSeriesDataItem(dataItem, "Y");
        //dataItem.events.enable();		
    };
    /**
     * Inits data item's working values.
     *
     * @param dataItem  Data item
     * @param index     Data item's index
     */
    XYSeries.prototype.setInitialWorkingValues = function (dataItem) {
    };
    /**
     * @ignore
     */
    XYSeries.prototype.disposeData = function () {
        _super.prototype.disposeData.call(this);
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        if (xAxis) {
            var dataItemsX = this.dataItemsByAxis.getKey(xAxis.uid);
            if (dataItemsX) {
                dataItemsX.clear();
            }
            if (xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__["CategoryAxis"]) {
                this.clearCatAxis(xAxis);
            }
        }
        if (yAxis) {
            var dataItemsY = this.dataItemsByAxis.getKey(yAxis.uid);
            if (dataItemsY) {
                dataItemsY.clear();
            }
            if (yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__["CategoryAxis"]) {
                this.clearCatAxis(yAxis);
            }
        }
    };
    /**
     * @ignore
     */
    XYSeries.prototype.clearCatAxis = function (axis) {
        var uid = this.uid;
        axis.dataItems.each(function (dataItem) {
            if (dataItem.seriesDataItems[uid]) {
                dataItem.seriesDataItems[uid] = [];
            }
        });
    };
    /**
     * Sets up which data fields to use for data access.
     */
    XYSeries.prototype.defineFields = function () {
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        if (xAxis && yAxis) {
            var xAxisFieldName = xAxis.axisFieldName;
            var xField = (xAxisFieldName + "X");
            var xOpenField = ("open" + _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__["capitalize"](xAxisFieldName) + "X");
            var yAxisFieldName = yAxis.axisFieldName;
            var yField = (yAxisFieldName + "Y");
            var yOpenField = ("open" + _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__["capitalize"](yAxisFieldName) + "Y");
            this._xField = xField;
            this._yField = yField;
            if (this.dataFields[xOpenField]) {
                this._xOpenField = xOpenField;
            }
            if (this.dataFields[yOpenField]) {
                this._yOpenField = yOpenField;
            }
            if (!this.dataFields[yOpenField] && this.baseAxis == yAxis) {
                this._yOpenField = yField;
            }
            if (!this.dataFields[xOpenField] && this.baseAxis == xAxis) {
                this._xOpenField = xField;
            }
            if (this.stacked && this.baseAxis == xAxis) {
                this._xOpenField = xField;
            }
            if (this.stacked && this.baseAxis == yAxis) {
                this._yOpenField = yField;
            }
            if ((xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__["CategoryAxis"]) && (yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__["CategoryAxis"])) {
                if (!this._yOpenField) {
                    this._yOpenField = yField;
                }
            }
            this._xValueFields = [];
            this._yValueFields = [];
            this.addValueField(xAxis, this._xValueFields, this._xField);
            this.addValueField(xAxis, this._xValueFields, this._xOpenField);
            this.addValueField(yAxis, this._yValueFields, this._yField);
            this.addValueField(yAxis, this._yValueFields, this._yOpenField);
        }
    };
    /**
     * [axis description]
     *
     * @todo Description
     * @param axis    Axis
     * @param fields  Fields (?)
     * @param field   Field
     */
    XYSeries.prototype.addValueField = function (axis, fields, field) {
        if (axis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"]) {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.dataFields[field]) && fields.indexOf(field) == -1) {
                fields.push(field);
            }
        }
    };
    /**
     * Sets category field from the category axis.
     *
     * User might set field for category axis only, but not for series. In such
     * case, we take field value from axis and set it for series.
     *
     * @param field  Field
     * @param axis   Axis
     */
    XYSeries.prototype.setCategoryAxisField = function (field, axis) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.dataFields[field])) {
            this.dataFields[field] = axis.dataFields.category;
        }
    };
    /**
     * Sets date field from the date axis.
     *
     * User might set field for category axis only, but not for series. In such
     * case, we take field value from axis and set it for series.
     *
     * @param field  Field
     * @param axis   Axis
     */
    XYSeries.prototype.setDateAxisField = function (field, axis) {
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](this.dataFields[field])) {
            this.dataFields[field] = axis.dataFields.date;
        }
    };
    /**
     * Performs after-draw tasks, e.g. creates masks.
     */
    XYSeries.prototype.afterDraw = function () {
        _super.prototype.afterDraw.call(this);
        this.createMask();
    };
    /**
     * Create a mask for the series.
     *
     * @ignore Exclude from docs
     */
    XYSeries.prototype.createMask = function () {
        // this mask from which we cut out ranges. does not work well if ranges overlap.
        if (this.mainContainer.mask) {
            var path_1 = this.getMaskPath();
            // @todo: this approach won't work well on circluar or other non x/y axes
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](this.axisRanges.iterator(), function (range) {
                if (range.axisFill.fillPath) {
                    range.axisFill.validate();
                    path_1 += range.axisFill.fillPath;
                }
            });
            this.mainContainer.mask.path = path_1;
        }
    };
    /**
     * Returns an SVG path to use as series mask.
     *
     * @return SVG path
     */
    XYSeries.prototype.getMaskPath = function () {
        if (this.xAxis && this.yAxis) {
            return _core_rendering_Path__WEBPACK_IMPORTED_MODULE_17__["rectToPath"]({
                x: 0,
                y: 0,
                width: this.xAxis.axisLength,
                height: this.yAxis.axisLength
            });
        }
        return "";
    };
    /**
     * Returns axis data field to use.
     *
     * @param axis  Axis
     * @return Field name
     */
    XYSeries.prototype.getAxisField = function (axis) {
        if (axis == this.xAxis) {
            return this.xField;
        }
        if (axis == this.yAxis) {
            return this.yField;
        }
    };
    /**
     * Validates data items.
     *
     * @ignore Exclude from docs
     */
    XYSeries.prototype.validateDataItems = function () {
        var chart = this.chart;
        if (chart) {
            this._maxxX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__["max"](100000, chart.plotContainer.maxWidth * 2);
            this._maxxY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__["max"](100000, chart.plotContainer.maxHeight * 2);
        }
        // this helps date axis to check which baseInterval we should use
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        if (xAxis && yAxis) {
            xAxis.updateAxisBySeries();
            yAxis.updateAxisBySeries();
        }
        _super.prototype.validateDataItems.call(this);
        if (xAxis && yAxis) {
            xAxis.postProcessSeriesDataItems(this);
            yAxis.postProcessSeriesDataItems(this);
        }
    };
    /**
     * Validates data range.
     *
     * @ignore Exclude from docs
     */
    XYSeries.prototype.validateDataRange = function () {
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        if (xAxis && yAxis) {
            if (xAxis.dataRangeInvalid) {
                xAxis.validateDataRange();
            }
            if (yAxis.dataRangeInvalid) {
                yAxis.validateDataRange();
            }
        }
        _super.prototype.validateDataRange.call(this);
    };
    /**
     * (Re)validates the whole series, effectively causing it to redraw.
     *
     * @ignore Exclude from docs
     */
    XYSeries.prototype.validate = function () {
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        if (xAxis && yAxis) {
            if (xAxis.invalid) {
                xAxis.validate();
            }
            if (yAxis.invalid) {
                yAxis.validate();
            }
            this.y = yAxis.pixelY;
            this.x = xAxis.pixelX;
            this._showBullets = true;
            var minBulletDistance = this.minBulletDistance;
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](minBulletDistance)) {
                if (this.baseAxis.axisLength / (this.endIndex - this.startIndex) < minBulletDistance) {
                    this._showBullets = false;
                }
            }
        }
        this.updateTooltip();
        if ((xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"] && xAxis.groupData && !this.dataGrouped) || (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"] && yAxis.groupData && !this.dataGrouped)) {
            return;
        }
        _super.prototype.validate.call(this);
        var chart = this.chart;
        var maskBullets = this.maskBullets;
        if (chart && maskBullets) {
            if (chart.className == "XYChart") {
                if (chart.leftAxesContainer.layout == "vertical" || chart.rightAxesContainer.layout == "vertical") {
                    if (this.yAxis) {
                        this.bulletsContainer.mask = this.yAxis.renderer.gridContainer;
                    }
                    else {
                        this.bulletsContainer.mask = undefined;
                    }
                }
                if (chart.topAxesContainer.layout == "horizontal" || chart.bottomAxesContainer.layout == "horizontal") {
                    if (this.xAxis) {
                        this.bulletsContainer.mask = this.xAxis.renderer.gridContainer;
                    }
                    else {
                        this.bulletsContainer.mask = undefined;
                    }
                }
            }
        }
    };
    Object.defineProperty(XYSeries.prototype, "xAxis", {
        /**
         * @return Axis
         */
        get: function () {
            if (this.chart) {
                if (!this._xAxis.get()) {
                    var axis = this.chart.xAxes.getIndex(0);
                    if (!axis) {
                        throw Error("There are no X axes on chart.");
                    }
                    this.xAxis = axis;
                }
                return this._xAxis.get();
            }
        },
        /**
         * X axis the series is attached to.
         *
         * @param axis  Axis
         */
        set: function (axis) {
            this.setXAxis(axis);
        },
        enumerable: true,
        configurable: true
    });
    XYSeries.prototype.setXAxis = function (axis) {
        var oldAxis = this._xAxis.get();
        if (oldAxis != axis) {
            if (oldAxis) {
                this.dataItemsByAxis.removeKey(oldAxis.uid);
                // TODO why is this here ?
                this._xAxis.dispose();
                // temp @todo: why it is not disposed?
                oldAxis.series.removeValue(this);
            }
            this._xAxis.set(axis, axis.registerSeries(this));
            this.dataItemsByAxis.setKey(axis.uid, new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]());
            this.invalidateData();
        }
    };
    Object.defineProperty(XYSeries.prototype, "yAxis", {
        /**
         * @return Axis
         */
        get: function () {
            if (this.chart) {
                if (!this._yAxis.get()) {
                    var axis = this.chart.yAxes.getIndex(0);
                    if (!axis) {
                        throw Error("There are no Y axes on chart.");
                    }
                    this.yAxis = axis;
                }
                return this._yAxis.get();
            }
        },
        /**
         * Y axis the series is attached to.
         *
         * @param axis  Axis
         */
        set: function (axis) {
            this.setYAxis(axis);
        },
        enumerable: true,
        configurable: true
    });
    XYSeries.prototype.setYAxis = function (axis) {
        var oldAxis = this._yAxis.get();
        if (oldAxis != axis) {
            if (oldAxis) {
                this.dataItemsByAxis.removeKey(oldAxis.uid);
                // TODO why is this here ?
                this._yAxis.dispose();
                // temp @todo: why it is not disposed?
                oldAxis.series.removeValue(this);
            }
            this._yAxis.set(axis, axis.registerSeries(this));
            if (axis.chart instanceof _types_XYChart__WEBPACK_IMPORTED_MODULE_6__["XYChart"]) {
                axis.chart.handleYAxisSet(this);
            }
            this.dataItemsByAxis.setKey(axis.uid, new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_4__["Dictionary"]());
            this.invalidateData();
        }
    };
    Object.defineProperty(XYSeries.prototype, "baseAxis", {
        /**
         * @return Axis
         */
        get: function () {
            var xAxis = this.xAxis;
            var yAxis = this.yAxis;
            if (!this._baseAxis && xAxis && yAxis) {
                if (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"]) {
                    this._baseAxis = yAxis;
                }
                if (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"]) {
                    this._baseAxis = xAxis;
                }
                if (yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__["CategoryAxis"]) {
                    this._baseAxis = yAxis;
                }
                if (xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__["CategoryAxis"]) {
                    this._baseAxis = xAxis;
                }
                if (!this._baseAxis) {
                    this._baseAxis = xAxis;
                }
            }
            return this._baseAxis;
        },
        /**
         * The main (base) axis.
         *
         * This is the axis that series fills will go to, or grow animations will
         * happen from.
         *
         * @param value  Axis
         */
        set: function (value) {
            if (this._baseAxis != value) {
                this._baseAxis = value;
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Adds one or several (array) of data items to the existing data.
     *
     * @param rawDataItem One or many raw data item objects
     */
    XYSeries.prototype.addData = function (rawDataItem, removeCount, skipRaw) {
        _super.prototype.addData.call(this, rawDataItem, removeCount, skipRaw);
        var scrollbarSeries = this.scrollbarSeries;
        if (scrollbarSeries) {
            this.scrollbarSeries.addData(rawDataItem, removeCount, true);
        }
    };
    XYSeries.prototype.setData = function (value) {
        _super.prototype.setData.call(this, value);
        if (this.scrollbarSeries) {
            this.scrollbarSeries.setData(value);
        }
    };
    /**
     * Makes the chart use particular data set.
     *
     * If `id` is not provided or there is no such data set, main data will be
     * used.
     *
     * @ignore
     * @since 4.7.0
     * @param  id  Data set id
     */
    XYSeries.prototype.setDataSet = function (id) {
        var changed = _super.prototype.setDataSet.call(this, id);
        if (changed) {
            this._dataSetChanged = true;
            var dataItems = this.dataItems;
            this.resetExtremes();
            if (dataItems && dataItems.length > 0) {
                var xAxis = this.xAxis;
                var yAxis = this.yAxis;
                this._prevStartIndex = undefined;
                this._prevEndIndex = undefined;
                this._startIndex = undefined;
                this._endIndex = undefined;
                if (!this.appeared) {
                    this.processValues(false); // this will slow down!
                }
                if (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"] && xAxis == this.baseAxis) {
                    this._tmin.setKey(xAxis.uid, dataItems.getIndex(0).dateX.getTime());
                    this._tmax.setKey(xAxis.uid, dataItems.getIndex(dataItems.length - 1).dateX.getTime());
                    this.dispatch("extremeschanged");
                }
                if (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"] && yAxis == this.baseAxis) {
                    this._tmin.setKey(yAxis.uid, dataItems.getIndex(0).dateY.getTime());
                    this._tmax.setKey(yAxis.uid, dataItems.getIndex(dataItems.length - 1).dateY.getTime());
                    this.dispatch("extremeschanged");
                }
            }
        }
        return changed;
    };
    /**
     * Processes values after data items' were added.
     *
     * @ignore Exclude from docs
     * @param dataItems  Data items
     */
    XYSeries.prototype.processValues = function (working) {
        _super.prototype.processValues.call(this, working);
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        if (!xAxis || !yAxis) {
            return;
        }
        var dataItems = this.dataItems;
        var minX = Infinity;
        var maxX = -Infinity;
        var minY = Infinity;
        var maxY = -Infinity;
        var startIndex = this.startIndex;
        var endIndex = this.endIndex;
        var workingStartIndex = startIndex;
        var workingEndIndex = endIndex;
        if (!working) {
            startIndex = 0;
            endIndex = this.dataItems.length;
        }
        for (var i = startIndex; i < endIndex; i++) {
            var dataItem = dataItems.getIndex(i);
            this.getStackValue(dataItem, working);
            var stackX = dataItem.getValue("valueX", "stack");
            var stackY = dataItem.getValue("valueY", "stack");
            minX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__["min"](dataItem.getMin(this._xValueFields, working, stackX), minX);
            minY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__["min"](dataItem.getMin(this._yValueFields, working, stackY), minY);
            maxX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__["max"](dataItem.getMax(this._xValueFields, working, stackX), maxX);
            maxY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__["max"](dataItem.getMax(this._yValueFields, working, stackY), maxY);
            // if it's stacked, pay attention to stack value
            if (this.stacked) {
                if (this.baseAxis == xAxis) {
                    if (stackY < minY) {
                        minY = stackY;
                    }
                    if (stackY > maxY) {
                        maxY = stackY;
                    }
                }
                if (this.baseAxis == yAxis) {
                    if (stackX < minX) {
                        minX = stackX;
                    }
                    if (stackX > maxX) {
                        maxX = stackX;
                    }
                }
            }
        }
        // this is mainly for value axis to calculate total and perecent.total of each series category
        xAxis.processSeriesDataItems();
        yAxis.processSeriesDataItems();
        var xAxisId = xAxis.uid;
        var yAxisId = yAxis.uid;
        if (this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && (minX == Infinity || maxX == -Infinity)) {
            this._smin.setKey(xAxisId, undefined);
            this._smax.setKey(xAxisId, undefined);
            this.dispatchImmediately("selectionextremeschanged");
            return;
        }
        if (this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && (minY == Infinity || maxY == -Infinity)) {
            this._smin.setKey(yAxisId, undefined);
            this._smax.setKey(yAxisId, undefined);
            this.dispatchImmediately("selectionextremeschanged");
            return;
        }
        if (!working) {
            if (this._tmin.getKey(xAxisId) != minX || this._tmax.getKey(xAxisId) != maxX || this._tmin.getKey(yAxisId) != minY || this._tmax.getKey(yAxisId) != maxY) {
                this._tmin.setKey(xAxisId, minX);
                this._tmax.setKey(xAxisId, maxX);
                this._tmin.setKey(yAxisId, minY);
                this._tmax.setKey(yAxisId, maxY);
                var stackedSeries = this.stackedSeries;
                if (stackedSeries) {
                    if (stackedSeries.isDisposed()) {
                        this.stackedSeries = undefined;
                    }
                    else {
                        stackedSeries.processValues(false);
                    }
                }
                this.dispatchImmediately("extremeschanged");
            }
        }
        if (startIndex != workingStartIndex || endIndex != workingEndIndex) {
            minX = Infinity;
            maxX = -Infinity;
            minY = Infinity;
            maxY = -Infinity;
            for (var i = workingStartIndex; i < workingEndIndex; i++) {
                var dataItem = dataItems.getIndex(i);
                this.getStackValue(dataItem, working);
                var stackX = dataItem.getValue("valueX", "stack");
                var stackY = dataItem.getValue("valueY", "stack");
                minX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__["min"](dataItem.getMin(this._xValueFields, working, stackX), minX);
                minY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__["min"](dataItem.getMin(this._yValueFields, working, stackY), minY);
                maxX = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__["max"](dataItem.getMax(this._xValueFields, working, stackX), maxX);
                maxY = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__["max"](dataItem.getMax(this._yValueFields, working, stackY), maxY);
                // if it's stacked, pay attention to stack value
                if (this.stacked) {
                    if (this.baseAxis == xAxis) {
                        if (stackY < minY) {
                            minY = stackY;
                        }
                        if (stackY > maxY) {
                            maxY = stackY;
                        }
                    }
                    if (this.baseAxis == yAxis) {
                        if (stackX < minX) {
                            minX = stackX;
                        }
                        if (stackX > maxX) {
                            maxX = stackX;
                        }
                    }
                }
            }
        }
        if (this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && (minX == Infinity || maxX == -Infinity)) {
            this._smin.setKey(xAxisId, undefined);
            this._smax.setKey(xAxisId, undefined);
            this.dispatchImmediately("selectionextremeschanged");
            return;
        }
        if (this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && (minY == Infinity || maxY == -Infinity)) {
            this._smin.setKey(yAxisId, undefined);
            this._smax.setKey(yAxisId, undefined);
            this.dispatchImmediately("selectionextremeschanged");
            return;
        }
        if (this._smin.getKey(xAxisId) != minX || this._smax.getKey(xAxisId) != maxX || this._smin.getKey(yAxisId) != minY || this._smax.getKey(yAxisId) != maxY) {
            this._smin.setKey(xAxisId, minX);
            this._smax.setKey(xAxisId, maxX);
            this._smin.setKey(yAxisId, minY);
            this._smax.setKey(yAxisId, maxY);
            if (this.appeared || this.start != 0 || this.end != 1 || this.dataItems != this.mainDataSet) {
                /// new, helps to handle issues with change percent
                var changed = false;
                if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && !(yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"])) {
                    var tmin = this._tmin.getKey(yAxisId);
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](tmin) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"] && xAxis.groupData && this.isShowing)) && minY < tmin) || (this.stackedSeries && !this.isHidden)) {
                        this._tmin.setKey(yAxisId, minY);
                        changed = true;
                    }
                    var tmax = this._tmax.getKey(yAxisId);
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](tmax) || ((this.usesShowFields || this._dataSetChanged || (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"] && xAxis.groupData && this.isShowing)) && maxY > tmax) || (this.stackedSeries && !this.isHidden)) {
                        this._tmax.setKey(yAxisId, maxY);
                        changed = true;
                    }
                }
                if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && !(xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"])) {
                    var tmin = this._tmin.getKey(xAxisId);
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](tmin) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"] && yAxis.groupData && this.isShowing)) && minX < tmin) || (this.stackedSeries && !this.isHidden)) {
                        this._tmin.setKey(xAxisId, minX);
                        changed = true;
                    }
                    var tmax = this._tmax.getKey(xAxisId);
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](tmax) || ((this.usesShowFields || this._dataSetChanged || (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"] && yAxis.groupData && this.isShowing)) && maxX > tmax) || (this.stackedSeries && !this.isHidden)) {
                        this._tmax.setKey(xAxisId, maxX);
                        changed = true;
                    }
                }
                if (changed) {
                    this.dispatchImmediately("extremeschanged");
                }
                if (this.start == 0 && this.end == 1) {
                    // yes, its ok. otherwise min/max won't be updated when zooming out
                    this._dataSetChanged = false;
                }
                this.dispatchImmediately("selectionextremeschanged");
            }
        }
        if (!working && this.stacked) {
            this.processValues(true);
        }
    };
    /**
     * Hides element's [[Tooltip]].
     *
     * @see {@link Tooltip}
     */
    XYSeries.prototype.hideTooltip = function (duration) {
        _super.prototype.hideTooltip.call(this, duration);
        this.returnBulletDefaultState();
        this._prevTooltipDataItem = undefined;
    };
    /**
     * Shows series tooltip at specific position.
     *
     * @param xPosition  X
     * @param yPosition  Y
     */
    XYSeries.prototype.showTooltipAtPosition = function (xPosition, yPosition) {
        var dataItem;
        if (this.visible && !this.isHiding && !this.isShowing) {
            var xAxis = this._xAxis.get();
            var yAxis = this._yAxis.get();
            if (xAxis == this.baseAxis) {
                dataItem = xAxis.getSeriesDataItem(this, xAxis.toAxisPosition(xPosition), this.snapTooltip);
            }
            if (yAxis == this.baseAxis) {
                dataItem = yAxis.getSeriesDataItem(this, yAxis.toAxisPosition(yPosition), this.snapTooltip);
            }
            var point = this.showTooltipAtDataItem(dataItem);
            if (point) {
                return point;
            }
            // so that if tooltip is shown on columns or bullets for it not to be hidden
            if (!this.tooltipText && !this.tooltipHTML) {
                return;
            }
        }
        this.hideTooltip();
    };
    XYSeries.prototype.getAdjustedXLocation = function (dataItem, field, bulletLocationX) {
        return dataItem.locations[field];
    };
    XYSeries.prototype.getAdjustedYLocation = function (dataItem, field, bulletLocationY) {
        return dataItem.locations[field];
    };
    /**
     * Shows series tooltip at specific dataItem.
     *
     * @param dataItem
     */
    XYSeries.prototype.showTooltipAtDataItem = function (dataItem) {
        var e_1, _a;
        var cursor = this.chart.cursor;
        if (cursor && cursor.hideSeriesTooltipsOnSelection && cursor.selection.visible && cursor.downPoint) {
            this.hideTooltip();
            return;
        }
        this.returnBulletDefaultState(dataItem);
        if (dataItem && dataItem.visible) {
            this.updateLegendValue(dataItem);
            if (this.cursorTooltipEnabled) {
                this.tooltipDataItem = dataItem;
                // todo: add tooltipXField and tooltipYField.
                var tooltipXField = this.tooltipXField;
                var tooltipYField = this.tooltipYField;
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](dataItem[tooltipXField]) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](dataItem[tooltipYField])) {
                    var tooltipPoint = this.getPoint(dataItem, tooltipXField, tooltipYField, this.getAdjustedXLocation(dataItem, tooltipXField), this.getAdjustedYLocation(dataItem, tooltipYField));
                    if (tooltipPoint) {
                        if (this.chart.className == "XYChart" && (tooltipPoint.y < -1 || tooltipPoint.y > this.yAxis.pixelHeight + 1 || tooltipPoint.x < -1 || tooltipPoint.x > this.xAxis.pixelWidth + 1)) {
                            // void
                        }
                        else {
                            this.tooltipX = tooltipPoint.x;
                            this.tooltipY = tooltipPoint.y;
                            if (this._prevTooltipDataItem != dataItem) {
                                this.dispatchImmediately("tooltipshownat", {
                                    type: "tooltipshownat",
                                    target: this,
                                    dataItem: dataItem
                                });
                                this._prevTooltipDataItem = dataItem;
                            }
                            if (this.cursorHoverEnabled) {
                                try {
                                    for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(dataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {
                                        var sprite = _c.value;
                                        if (!sprite.parent.visible || sprite.isHidden || sprite.__disabled || sprite.disabled || sprite.isHiding) {
                                        }
                                        else {
                                            if (!sprite.interactions.isRealHover) {
                                                sprite.dispatchImmediately("over");
                                                sprite.interactions.isRealHover = true;
                                            }
                                            sprite.isHover = true;
                                        }
                                    }
                                }
                                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                                finally {
                                    try {
                                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                                    }
                                    finally { if (e_1) throw e_1.error; }
                                }
                            }
                            if (this.showTooltip()) {
                                return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__["spritePointToSvg"]({ x: tooltipPoint.x, y: tooltipPoint.y }, this);
                            }
                            return;
                        }
                    }
                }
            }
        }
        else {
            this.updateLegendValue(dataItem, true);
        }
    };
    /**
     * Returns default state to bullets when tooltip is shown at some other data
     * item or hidden
     */
    XYSeries.prototype.returnBulletDefaultState = function (dataItem) {
        var e_2, _a;
        if (this._prevTooltipDataItem && this._prevTooltipDataItem != dataItem) {
            try {
                for (var _b = Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__values"])(this._prevTooltipDataItem.sprites), _c = _b.next(); !_c.done; _c = _b.next()) {
                    var sprite = _c.value;
                    if (!sprite.isDisposed()) {
                        var fireEvent = sprite.interactions.isRealHover;
                        sprite.isHover = false;
                        if (fireEvent) {
                            sprite.dispatchImmediately("out");
                        }
                    }
                    else {
                        this._prevTooltipDataItem = undefined;
                    }
                }
            }
            catch (e_2_1) { e_2 = { error: e_2_1 }; }
            finally {
                try {
                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                }
                finally { if (e_2) throw e_2.error; }
            }
        }
    };
    XYSeries.prototype.shouldCreateBullet = function (dataItem, bulletTemplate) {
        // use series xField/yField if bullet doesn't have fields set
        var xField = bulletTemplate.xField;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](xField)) {
            xField = this.xField;
        }
        var yField = bulletTemplate.yField;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](yField)) {
            yField = this.yField;
        }
        if ((this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && !dataItem.hasValue([xField])) || (this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && !dataItem.hasValue([yField]))) {
            return false;
        }
        if (bulletTemplate.disabled) {
            var disabledField = bulletTemplate.propertyFields.disabled;
            var dataContext = dataItem.dataContext;
            if (dataContext && dataContext[disabledField] === false) {
                return true;
            }
            else {
                return false;
            }
        }
        return true;
    };
    /**
     * @ignore
     */
    XYSeries.prototype.updateTooltip = function () {
        if (!this.hideTooltipWhileZooming && this.tooltip && !this.tooltip.isHidden && !this.isHiding && !this.isHidden && this.tooltipDataItem) {
            this.showTooltipAtDataItem(this.tooltipDataItem);
        }
    };
    /**
     * @ignore
     */
    XYSeries.prototype.positionBullet = function (bullet) {
        _super.prototype.positionBullet.call(this, bullet);
        var dataItem = bullet.dataItem;
        // use series xField/yField if bullet doesn't have fields set
        var xField = bullet.xField;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](xField)) {
            xField = this.xField;
        }
        var yField = bullet.yField;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](yField)) {
            yField = this.yField;
        }
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        if ((xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && !dataItem.hasValue([xField])) || (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && !dataItem.hasValue([yField]))) {
            bullet.visible = false;
        }
        else {
            var bulletLocationX = this.getBulletLocationX(bullet, xField);
            var bulletLocationY = this.getBulletLocationY(bullet, yField);
            var point = this.getPoint(dataItem, xField, yField, bulletLocationX, bulletLocationY);
            if (point) {
                var xOpenField = this.xOpenField;
                var yOpenField = this.yOpenField;
                var positionX = void 0;
                var positionY = void 0;
                if (xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"]) {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](bulletLocationX)) {
                        bulletLocationX = 0;
                    }
                    var openValue = void 0;
                    var closeValue = dataItem.getWorkingValue(xField);
                    if (!xOpenField) {
                        if (xAxis == this.baseAxis) {
                            openValue = xAxis.baseValue;
                        }
                    }
                    else {
                        openValue = dataItem.getWorkingValue(xOpenField);
                    }
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](openValue)) {
                        openValue = closeValue;
                    }
                    var stack = dataItem.getValue("valueX", "stack");
                    openValue += stack;
                    closeValue += stack;
                    if (openValue == closeValue) {
                        var baseInterval = xAxis.baseInterval;
                        var dateFormatter = xAxis.dateFormatter;
                        openValue = _core_utils_Time__WEBPACK_IMPORTED_MODULE_14__["round"](new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes).getTime();
                        closeValue = _core_utils_Time__WEBPACK_IMPORTED_MODULE_14__["add"](new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();
                    }
                    var middleValue = void 0;
                    if (xAxis == this.baseAxis) {
                        middleValue = openValue + (closeValue - openValue) * bulletLocationX;
                    }
                    else {
                        middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);
                    }
                    positionX = xAxis.valueToPosition(middleValue);
                }
                else if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"]) {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](bulletLocationX)) {
                        bulletLocationX = 0;
                    }
                    var openValue = void 0;
                    var closeValue = dataItem.getWorkingValue(xField);
                    if (!xOpenField) {
                        openValue = xAxis.baseValue;
                    }
                    else {
                        openValue = dataItem.getWorkingValue(xOpenField);
                    }
                    var stack = dataItem.getValue("valueX", "stack");
                    openValue += stack;
                    closeValue += stack;
                    var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationX);
                    positionX = xAxis.valueToPosition(middleValue);
                }
                else if (xAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__["CategoryAxis"]) {
                    var rightLocation = this.getAdjustedXLocation(dataItem, xField, bullet.locationX);
                    var leftLocation = this.getAdjustedXLocation(dataItem, xOpenField, bullet.locationX);
                    positionX = xAxis.categoryToPosition(dataItem[xField], rightLocation);
                    var openPositionX = void 0;
                    if (xOpenField) {
                        openPositionX = xAxis.categoryToPosition(dataItem[xOpenField], leftLocation);
                    }
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](openPositionX)) {
                        openPositionX = 1;
                    }
                    positionX = openPositionX + (positionX - openPositionX) * bulletLocationX;
                }
                if (yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"]) {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](bulletLocationY)) {
                        bulletLocationY = 0;
                    }
                    var openValue = void 0;
                    var closeValue = dataItem.getWorkingValue(yField);
                    if (!yOpenField) {
                        if (yAxis == this.baseAxis) {
                            openValue = yAxis.baseValue;
                        }
                    }
                    else {
                        openValue = dataItem.getWorkingValue(yOpenField);
                    }
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](openValue)) {
                        openValue = closeValue;
                    }
                    var stack = dataItem.getValue("valueY", "stack");
                    openValue += stack;
                    closeValue += stack;
                    if (openValue == closeValue) {
                        var baseInterval = yAxis.baseInterval;
                        var dateFormatter = yAxis.dateFormatter;
                        openValue = _core_utils_Time__WEBPACK_IMPORTED_MODULE_14__["round"](new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.firstDayOfWeek, dateFormatter.utc, undefined, dateFormatter.timezoneMinutes).getTime();
                        closeValue = _core_utils_Time__WEBPACK_IMPORTED_MODULE_14__["add"](new Date(openValue), baseInterval.timeUnit, baseInterval.count, dateFormatter.utc).getTime();
                    }
                    var middleValue = void 0;
                    if (yAxis == this.baseAxis) {
                        middleValue = openValue + (closeValue - openValue) * bulletLocationY;
                    }
                    else {
                        middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);
                    }
                    positionY = yAxis.valueToPosition(middleValue);
                }
                else if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"]) {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](bulletLocationY)) {
                        bulletLocationY = 0;
                    }
                    var openValue = void 0;
                    var closeValue = dataItem.getWorkingValue(yField);
                    if (!yOpenField) {
                        openValue = yAxis.baseValue;
                    }
                    else {
                        openValue = dataItem.getWorkingValue(yOpenField);
                    }
                    var stack = dataItem.getValue("valueY", "stack");
                    openValue += stack;
                    closeValue += stack;
                    var middleValue = openValue + (closeValue - openValue) * (1 - bulletLocationY);
                    positionY = yAxis.valueToPosition(middleValue);
                }
                else if (yAxis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_7__["CategoryAxis"]) {
                    positionY = yAxis.categoryToPosition(dataItem[yField], bulletLocationY);
                    var topLocation = this.getAdjustedYLocation(dataItem, yField, bullet.locationY);
                    var bottomLocation = this.getAdjustedYLocation(dataItem, yOpenField, bullet.locationY);
                    positionY = yAxis.categoryToPosition(dataItem[yField], topLocation);
                    var openPositionY = void 0;
                    if (yOpenField) {
                        openPositionY = yAxis.categoryToPosition(dataItem[yOpenField], bottomLocation);
                    }
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](openPositionY)) {
                        openPositionY = 1;
                    }
                    positionY = openPositionY + (positionY - openPositionY) * bulletLocationY;
                }
                bullet.visible = true;
                this.positionBulletReal(bullet, positionX, positionY);
            }
            else {
                bullet.visible = false;
            }
        }
    };
    XYSeries.prototype.positionBulletReal = function (bullet, positionX, positionY) {
        bullet.x = this.xAxis.renderer.positionToPoint(positionX, positionY).x;
        bullet.y = this.yAxis.renderer.positionToPoint(positionY, positionX).y;
    };
    /**
     * returns bullet x location
     * @ignore
     */
    XYSeries.prototype.getBulletLocationX = function (bullet, field) {
        var bulletLocation = bullet.locationX;
        var dataItem = bullet.dataItem;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](bulletLocation)) {
            bulletLocation = dataItem.workingLocations[field];
        }
        return bulletLocation;
    };
    /**
     * Returns bullet x location
     * @ignore
     */
    XYSeries.prototype.getBulletLocationY = function (bullet, field) {
        var bulletLocation = bullet.locationY;
        var dataItem = bullet.dataItem;
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](bulletLocation)) {
            bulletLocation = dataItem.workingLocations[field];
        }
        return bulletLocation;
    };
    /**
     * This method must be called if you update Series' data fields that might
     * affect stacking of the series.
     *
     * Since individual `dataField` changes are not being monitored, you need
     * todo it manually for changes to take affect.
     *
     * @since 4.7.21
     */
    XYSeries.prototype.updateStacking = function () {
        var _this = this;
        this.invalidateDataItems();
        if (this.chart) {
            this.chart.series.each(function (series) {
                if (series.baseAxis == _this.baseAxis) {
                    series.stackedSeries = undefined;
                    series.invalidateDataItems();
                    series.invalidateProcessedData();
                }
            });
        }
    };
    Object.defineProperty(XYSeries.prototype, "stacked", {
        /**
         * @return Can be stacked?
         */
        get: function () {
            return this.getPropertyValue("stacked");
        },
        /**
         * Can items from this series be included into stacks?
         *
         * Note: proper stacking is only possible if series have the same number
         * of data items. To ensure this, don't set data directly on series
         * but do this on chart instead.
         *
         * @default false
         * @param stacked  Can be stacked?
         */
        set: function (stacked) {
            if (this.setPropertyValue("stacked", stacked, true)) {
                this.updateStacking();
                var xAxis = this.xAxis;
                var yAxis = this.yAxis;
                if (!stacked) {
                    var field_1;
                    if (xAxis != this.baseAxis && xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"]) {
                        field_1 = this.xField;
                    }
                    if (yAxis != this.baseAxis && yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"]) {
                        field_1 = this.yField;
                    }
                    if (field_1) {
                        this.dataItems.each(function (dataItem) {
                            dataItem.setCalculatedValue(field_1, 0, "stack");
                        });
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeries.prototype, "snapTooltip", {
        /**
         * @return Should snap?
         */
        get: function () {
            return this.getPropertyValue("snapTooltip");
        },
        /**
         * Should the nearest tooltip be shown if no data item is found on the
         * current cursor position? In order this to work, you should set snapTooltip = false on the series baseAxis.
         *
         * @default false
         * @param value  Should snap?
         */
        set: function (value) {
            this.setPropertyValue("snapTooltip", value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Shows hidden series.
     *
     * @param duration  Duration of reveal animation (ms)
     * @return Animation
     */
    XYSeries.prototype.show = function (duration) {
        var _this = this;
        if (this.appeared && this.xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"] && this.xAxis.groupData) {
            this._tmin.setKey(this.yAxis.uid, undefined);
            this._tmax.setKey(this.yAxis.uid, undefined);
        }
        if (this.appeared && this.yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_8__["DateAxis"] && this.yAxis.groupData) {
            this._tmin.setKey(this.xAxis.uid, undefined);
            this._tmax.setKey(this.xAxis.uid, undefined);
        }
        var fields;
        if (this.xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && this.xAxis != this.baseAxis) {
            fields = this._xValueFields;
        }
        if (this.yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && this.yAxis != this.baseAxis) {
            fields = this._yValueFields;
        }
        var startIndex = this.startIndex;
        var endIndex = this.endIndex;
        var delay = 0;
        var interpolationDuration = this.defaultState.transitionDuration;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](duration)) {
            interpolationDuration = duration;
        }
        if (!_core_Options__WEBPACK_IMPORTED_MODULE_18__["options"].animationsEnabled) {
            interpolationDuration = 0;
        }
        var anim;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["indexed"](this.dataItems.iterator()), function (a) {
            var i = a[0];
            var dataItem = a[1];
            var realDuration = interpolationDuration;
            if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {
                realDuration = 0;
                delay = 0;
            }
            if (_this.sequencedInterpolation && realDuration > 0) {
                delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);
            }
            anim = dataItem.show(realDuration, delay, fields);
        });
        // other data sets
        this.dataSets.each(function (key, dataSet) {
            if (dataSet != _this.dataItems) {
                dataSet.each(function (dataItem) {
                    dataItem.events.disable();
                    dataItem.show(0, 0, fields);
                    dataItem.events.enable();
                });
            }
        });
        if (this.mainDataSet != this.dataItems) {
            this.mainDataSet.each(function (dataItem) {
                dataItem.events.disable();
                dataItem.show(0, 0, fields);
                dataItem.events.enable();
            });
        }
        var animation = _super.prototype.show.call(this, duration);
        if (anim && !anim.isFinished()) {
            animation = anim;
        }
        if (this.hidden) {
            this.dispatchImmediately("selectionextremeschanged");
            this.hidden = false;
        }
        return animation;
    };
    /**
     * Hides series.
     *
     * @param duration  Duration of hiding animation (ms)
     * @return Animation
     */
    XYSeries.prototype.hide = function (duration) {
        var _this = this;
        var fields;
        var value;
        var xAxis = this.xAxis;
        if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && xAxis != this.baseAxis) {
            fields = this._xValueFields;
            // animate to zero if 0 is within zoomMin/zoomMax
            if (this.stacked || (xAxis.minZoomed < xAxis.baseValue && xAxis.maxZoomed > xAxis.baseValue) || this.stackedSeries) {
                value = xAxis.baseValue;
            }
            else {
                value = xAxis.min;
            }
        }
        var yAxis = this.yAxis;
        if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"] && yAxis != this.baseAxis) {
            fields = this._yValueFields;
            // animate to zero if 0 is within zoomMin/zoomMax
            if (this.stacked || (yAxis.minZoomed < yAxis.baseValue && yAxis.maxZoomed > yAxis.baseValue) || this.stackedSeries) {
                value = yAxis.baseValue;
            }
            else {
                value = yAxis.min;
            }
        }
        //if ($type.hasValue(fields)) {
        var startIndex = this.startIndex;
        var endIndex = this.endIndex;
        var interpolationDuration = this.hiddenState.transitionDuration;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isNumber"](duration)) {
            interpolationDuration = duration;
        }
        if (!_core_Options__WEBPACK_IMPORTED_MODULE_18__["options"].animationsEnabled) {
            interpolationDuration = 0;
        }
        var delay = 0;
        var anim;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["indexed"](this.dataItems.iterator()), function (a) {
            var i = a[0];
            var dataItem = a[1];
            var realDuration = interpolationDuration;
            if (i < _this.startIndex - 10 || i > _this.endIndex + 10) {
                realDuration = 0;
            }
            if (realDuration == 0) {
                dataItem.hide(0, 0, value, fields);
            }
            else {
                if (_this.sequencedInterpolation && realDuration > 0) {
                    delay = _this.sequencedInterpolationDelay * i + interpolationDuration * (i - startIndex) / (endIndex - startIndex);
                }
                anim = dataItem.hide(realDuration, delay, value, fields);
            }
        });
        // other data sets
        this.dataSets.each(function (key, dataSet) {
            if (dataSet != _this.dataItems) {
                dataSet.each(function (dataItem) {
                    dataItem.events.disable();
                    dataItem.hide(0, 0, value, fields);
                    dataItem.events.enable();
                });
            }
        });
        if (this.mainDataSet != this.dataItems) {
            this.mainDataSet.each(function (dataItem) {
                dataItem.events.disable();
                dataItem.hide(0, 0, value, fields);
                dataItem.events.enable();
            });
        }
        var animation = _super.prototype.hide.call(this, interpolationDuration);
        if (animation && !animation.isFinished()) {
            animation.delay(delay);
        }
        if (anim && !anim.isFinished()) {
            animation = anim;
        }
        // helps to avoid flicker. otherwise columns will show up at full size and only on next frame will animate from 0
        this.validateDataElements();
        //}
        return animation;
    };
    /**
     * [handleDataItemWorkingValueChange description]
     *
     * @ignore Exclude from docs
     */
    XYSeries.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {
        _super.prototype.handleDataItemWorkingValueChange.call(this, dataItem, name);
        // to calculate stack values
        var axisSeries = this.baseAxis.series;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](axisSeries.iterator(), function (series) {
            if (series.stacked || series.stackedSeries) {
                series.invalidateProcessedData();
            }
        });
    };
    /**
     * [getStackValue description]
     *
     * @ignore Exclude from docs
     * @todo Description
     * @param dataItem  Data item
     */
    XYSeries.prototype.getStackValue = function (dataItem, working) {
        // todo: here wer stack x and y values only. question is - what should we do with other values, like openX, openY?
        // if this series is not stacked or new stack begins, return.
        var _this = this;
        var xAxis = this.xAxis;
        var yAxis = this.yAxis;
        if (!this.stacked || !xAxis || !yAxis) {
            return;
        }
        else {
            // it might seem that it's better to go through base axis series, but we do not maintain the same order as in chart.series there.
            var chart = this.chart;
            var index = chart.series.indexOf(this);
            var field_2;
            if (xAxis != this.baseAxis && xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"]) {
                field_2 = this.xField;
            }
            if (yAxis != this.baseAxis && yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_3__["ValueAxis"]) {
                field_2 = this.yField;
            }
            if (!field_2) {
                return;
            }
            //this is good for removing series, otherwise stack values will remain the same and chart won't pay atention when adding/removing series			
            dataItem.setCalculatedValue(field_2, 0, "stack");
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["eachContinue"](chart.series.range(0, index).backwards().iterator(), function (prevSeries) {
                // stacking is only possible if both axes are the same
                if (prevSeries.xAxis == xAxis && prevSeries.yAxis == yAxis && prevSeries.className == _this.className) {
                    // saving value
                    prevSeries.stackedSeries = _this;
                    var prevDataItem = prevSeries.dataItems.getIndex(dataItem.index); // indexes should match
                    if (prevDataItem && prevDataItem.hasValue(_this._xValueFields) && prevDataItem.hasValue(_this._yValueFields)) {
                        var value = dataItem.getValue(field_2);
                        var prevValue = void 0;
                        var prevRealValue = prevDataItem.getValue(field_2) + prevDataItem.getValue(field_2, "stack");
                        if (working) {
                            prevValue = prevDataItem.getWorkingValue(field_2) + prevDataItem.getValue(field_2, "stack");
                        }
                        else {
                            prevValue = prevDataItem.getValue(field_2) + prevDataItem.getValue(field_2, "stack");
                        }
                        if (_this.stackToNegative) {
                            if ((value >= 0 && prevRealValue >= 0) || (value < 0 && prevRealValue < 0)) {
                                dataItem.setCalculatedValue(field_2, prevValue, "stack");
                                return false;
                            }
                        }
                        else {
                            dataItem.setCalculatedValue(field_2, prevValue, "stack");
                            return false;
                        }
                    }
                    else if (!prevSeries.stacked) {
                        return false;
                    }
                }
                return true;
            });
        }
    };
    Object.defineProperty(XYSeries.prototype, "stackToNegative", {
        /**
         * @return Stack to base line
         */
        get: function () {
            return this.getPropertyValue("stackToNegative");
        },
        /**
         * This setting indicates how negative values are treated in stacked stacked
         * series.
         *
         * If set to `true` (default), negative values will stack on the base line.
         *
         * If set to `false`, negative value will stack in relation to the previous
         * value in the stack.
         *
         * @since 4.9.34
         * @param  value  Stack to base line
         */
        set: function (value) {
            this.setPropertyValue("stackToNegative", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeries.prototype, "xField", {
        /**
         * [xField description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @return [description]
         */
        get: function () {
            return this._xField;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeries.prototype, "yField", {
        /**
         * [yField description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @return [description]
         */
        get: function () {
            return this._yField;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeries.prototype, "xOpenField", {
        /**
         * [xOpenField description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @return [description]
         */
        get: function () {
            return this._xOpenField;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeries.prototype, "yOpenField", {
        /**
         * [yOpenField description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @return [description]
         */
        get: function () {
            return this._yOpenField;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeries.prototype, "tooltipXField", {
        /**
         * @ignore Exclude from docs
         * @todo Description
         * @return [description]
         */
        get: function () {
            if (this._tooltipXField) {
                return this._tooltipXField;
            }
            return this._xField;
        },
        /**
         * [tooltipXField description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @param value [description]
         */
        set: function (value) {
            this._tooltipXField = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeries.prototype, "tooltipYField", {
        /**
         * @ignore Exclude from docs
         * @todo Description
         * @return [description]
         */
        get: function () {
            if (this._tooltipYField) {
                return this._tooltipYField;
            }
            return this._yField;
        },
        /**
         * [tooltipYField description]
         *
         * @ignore Exclude from docs
         * @todo Description
         * @param value [description]
         */
        set: function (value) {
            this._tooltipYField = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns lowest value in the series for the specific axis.
     *
     * @ignore Exclude from docs
     * @param axis  Axis
     * @return value
     */
    XYSeries.prototype.min = function (axis) {
        return this._tmin.getKey(axis.uid);
    };
    /**
     * Returns highest value in the series for the specific axis.
     *
     * @ignore Exclude from docs
     * @param axis  Axis
     * @return value
     */
    XYSeries.prototype.max = function (axis) {
        return this._tmax.getKey(axis.uid);
    };
    /**
     * Returns lowest value in the series for the specific axis within current
     * selection.
     *
     * @ignore Exclude from docs
     * @param axis  Axis
     * @return value
     */
    XYSeries.prototype.selectionMin = function (axis) {
        var value = this._smin.getKey(axis.uid);
        // not good, because bad if there are no items with values in selection
        //if (!$type.isNumber(value)) {
        //value = this.min(axis);
        //}		
        return value;
    };
    /**
     * Returns highest value in the series for the specific axis within current
     * selection.
     *
     * @ignore Exclude from docs
     * @param axis  Axis
     * @return value
     */
    XYSeries.prototype.selectionMax = function (axis) {
        var value = this._smax.getKey(axis.uid);
        // not good, because bad if there are no items with values in selection
        //if (!$type.isNumber(value)) {
        //value = this.max(axis);
        //}
        return value;
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    XYSeries.prototype.processConfig = function (config) {
        if (config) {
            // Set up base axes
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](config.baseAxis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isString"](config.baseAxis)) {
                if (this.map.hasKey(config.baseAxis)) {
                    config.baseAxis = this.map.getKey(config.baseAxis);
                }
                else {
                    this.processingErrors.push("[XYSeries (" + (this.name || "unnamed") + ")] No axis with id \"" + config.baseAxis + "\" found for `baseAxis`.");
                    delete config.baseAxis;
                }
            }
            // Set up axes
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](config.xAxis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isString"](config.xAxis)) {
                if (this.map.hasKey(config.xAxis)) {
                    config.xAxis = this.map.getKey(config.xAxis);
                }
                else {
                    this.processingErrors.push("[XYSeries (" + (this.name || "unnamed") + ")] No axis with id \"" + config.xAxis + "\" found for `xAxis`.");
                    delete config.xAxis;
                }
            }
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](config.yAxis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isString"](config.yAxis)) {
                if (this.map.hasKey(config.yAxis)) {
                    config.yAxis = this.map.getKey(config.yAxis);
                }
                else {
                    this.processingErrors.push("[XYSeries (" + (this.name || "unnamed") + ")] No axis with id \"" + config.yAxis + "\" found for `yAxis`.");
                    delete config.yAxis;
                }
            }
            // Set up axis ranges
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](config.axisRanges) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isArray"](config.axisRanges)) {
                for (var i = 0, len = config.axisRanges.length; i < len; i++) {
                    var range = config.axisRanges[i];
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](range.type)) {
                        range.type = "AxisDataItem";
                    }
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](range.axis) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isString"](range.axis) && this.map.hasKey(range.axis)) {
                        range.component = this.map.getKey(range.axis);
                    }
                    else if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](range.component) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isString"](range.component) && this.map.hasKey(range.component)) {
                        range.component = this.map.getKey(range.component);
                    }
                }
            }
            // Parse date fields based on the series fields
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["hasValue"](config.dataFields) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_13__["isObject"](config.dataFields)) {
                this.processingErrors.push("`dataFields` is not set for series [" + (this.name || "unnamed") + "]");
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    /**
     * Returns an [[IPoint]] coordinates of the specific Serie's data point.
     *
     * @param    dataItem   Data item
     * @param    xKey       Name of X data field
     * @param    yKey       Name of Y data field
     * @param    locationX  X location
     * @param    locationY  Y location
     * @param    stackKeyX  ?
     * @param    stackKeyY  ?
     * @returns             Coordinates
     */
    XYSeries.prototype.getPoint = function (dataItem, xKey, yKey, locationX, locationY, stackKeyX, stackKeyY) {
        if (this.xAxis && this.yAxis) {
            var x = this.xAxis.getX(dataItem, xKey, locationX);
            var y = this.yAxis.getY(dataItem, yKey, locationY);
            x = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__["fitToRange"](x, -this._maxxX, this._maxxX); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.
            y = _core_utils_Math__WEBPACK_IMPORTED_MODULE_11__["fitToRange"](y, -this._maxxY, this._maxxY); // from geometric point of view this is not right, but practically it's ok. this is done to avoid too big objects.
            return { x: x, y: y };
        }
    };
    /**
     * Updates item reader text based on the type and set up of axis.
     */
    XYSeries.prototype.updateItemReaderText = function () {
        // We do not want to overwrite this if `itemReaderText` was changed by
        // user code.
        if (this._itemReaderTextChanged) {
            return;
        }
        var text = "";
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_16__["each"](this.dataFields, function (key, val) {
            text += "{" + key + "} ";
        });
        this.itemReaderText = text;
        this._itemReaderTextChanged = false;
    };
    Object.defineProperty(XYSeries.prototype, "cursorTooltipEnabled", {
        /**
         * @return Display tooltip?
         */
        get: function () {
            return this.getPropertyValue("cursorTooltipEnabled");
        },
        /**
         * Indicates if series should display a tooltip for chart's cursor.
         *
         * If set to `true` (default), the tooltips set for all series item's
         * elements like columns and bullets will be automatically shown
         * when [[XYCursor]] passes over category/date, even if its not hovered
         * directly over the item.
         *
         * Set this to `false` to disable such behavior and display item-specific
         * tooltips only when hovered directly over them
         *
         * @default true
         * @param value Display tooltip?
         */
        set: function (value) {
            this.setPropertyValue("cursorTooltipEnabled", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeries.prototype, "cursorHoverEnabled", {
        /**
         * @return Hover enabled?
         */
        get: function () {
            return this.getPropertyValue("cursorHoverEnabled");
        },
        /**
         * Indicates if series should apply hover state on bullets/columns/etc when
         * cursor is over the data item.
         *
         * If set to `true` (default) and chart cursor is enabled on th chart,
         * hovering over date/category will trigger hover states on related Series
         * items like bullets and columns.
         *
         * @default true
         * @since 4.2.2
         * @param  value  Hover enabled?
         */
        set: function (value) {
            this.setPropertyValue("cursorHoverEnabled", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeries.prototype, "excludeFromTotal", {
        /**
         * @return Exclude from totals?
         */
        get: function () {
            return this.getPropertyValue("excludeFromTotal");
        },
        /**
         * Indicates if series' values should be excluded when calculating totals.
         *
         * @default false
         * @since 4.4.9
         * @param  value  Exclude from totals?
         */
        set: function (value) {
            this.setPropertyValue("excludeFromTotal", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeries.prototype, "hideTooltipWhileZooming", {
        /**
         * @return Hide tooltip while zooming?
         */
        get: function () {
            return this.getPropertyValue("hideTooltipWhileZooming");
        },
        /**
         * Indicates if series' tooltip should be hidden while series axis range is
         * animating (zooming).
         *
         * @default true
         * @since 4.7.16
         * @param  value  Hide tooltip while zooming?
         */
        set: function (value) {
            this.setPropertyValue("hideTooltipWhileZooming", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYSeries.prototype, "maskBullets", {
        /**
         * @return Mask bullets?
         */
        get: function () {
            return this.getPropertyValue("maskBullets");
        },
        /**
         * Indicates if series' bullets should be masked.
         *
         * @default true
         * @since 4.7.17
         * @param  value  Mask bullets?
         */
        set: function (value) {
            this.setPropertyValue("maskBullets", value);
            var chart = this.chart;
            if (chart) {
                if (value) {
                    this.bulletsContainer.parent = chart.bulletsContainer;
                }
                else {
                    this.bulletsContainer.parent = chart.axisBulletsContainer;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all properties from another instance of [[Series]].
     *
     * @param source  Source series
     */
    XYSeries.prototype.copyFrom = function (source) {
        this.groupFields = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__["copyProperties"](source.groupFields, {});
        _super.prototype.copyFrom.call(this, source);
    };
    /**
     * Destroys this object and all related data.
     */
    XYSeries.prototype.dispose = function () {
        if (this.scrollbarSeries) {
            this.scrollbarSeries.dispose();
        }
        _super.prototype.dispose.call(this);
    };
    return XYSeries;
}(_Series__WEBPACK_IMPORTED_MODULE_1__["Series"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_9__["registry"].registeredClasses["XYSeries"] = XYSeries;
_core_Registry__WEBPACK_IMPORTED_MODULE_9__["registry"].registeredClasses["XYSeriesDataItem"] = XYSeriesDataItem;
//# sourceMappingURL=XYSeries.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/ChordDiagram.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/ChordDiagram.js ***!
  \*********************************************************************************/
/*! exports provided: ChordDiagramDataItem, ChordDiagram */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChordDiagramDataItem", function() { return ChordDiagramDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ChordDiagram", function() { return ChordDiagram; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _FlowDiagram__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FlowDiagram */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/FlowDiagram.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _elements_ChordNode__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../elements/ChordNode */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordNode.js");
/* harmony import */ var _elements_ChordLink__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../elements/ChordLink */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordLink.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/**
 * Chord diagram module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */










/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
//@todo rearange notes after dragged
/**
 * Defines a [[DataItem]] for [[ChordDiagram]].
 *
 * @see {@link DataItem}
 */
var ChordDiagramDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ChordDiagramDataItem, _super);
    /**
     * Constructor
     */
    function ChordDiagramDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "ChordDiagramDataItem";
        _this.applyTheme();
        return _this;
    }
    return ChordDiagramDataItem;
}(_FlowDiagram__WEBPACK_IMPORTED_MODULE_1__["FlowDiagramDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a Chord Diagram chart.
 *
 * @see {@link IChordDiagramEvents} for a list of available Events
 * @see {@link IChordDiagramAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/chord-diagram/} for documentation
 * @important
 */
var ChordDiagram = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(ChordDiagram, _super);
    /**
     * Constructor
     */
    function ChordDiagram() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * [valueAngle description]
         *
         * @ignore Exclude from docs
         * @todo Description
         */
        _this.valueAngle = 0;
        _this.className = "ChordDiagram";
        _this.startAngle = -90;
        _this.endAngle = 270;
        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(80);
        _this.innerRadius = -15;
        _this.nodePadding = 5;
        var chordContainer = _this.chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_3__["Container"]);
        chordContainer.align = "center";
        chordContainer.valign = "middle";
        chordContainer.shouldClone = false;
        chordContainer.layout = "absolute";
        _this.chordContainer = chordContainer;
        _this.nodesContainer.parent = chordContainer;
        _this.linksContainer.parent = chordContainer;
        _this.chartContainer.events.on("maxsizechanged", _this.invalidate, _this, false);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Redraws the chart.
     *
     * @ignore Exclude from docs
     */
    ChordDiagram.prototype.validate = function () {
        var _this = this;
        var chartContainer = this.chartContainer;
        var endAngle = this.endAngle;
        var startAngle = this.startAngle + this.nodePadding / 2;
        var rect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_8__["getArcRect"](this.startAngle, this.endAngle, 1);
        var innerRect = { x: 0, y: 0, width: 0, height: 0 };
        rect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_8__["getCommonRectangle"]([rect, innerRect]);
        var maxRadius = Math.min(chartContainer.innerWidth / rect.width, chartContainer.innerHeight / rect.height);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](maxRadius)) {
            maxRadius = 0;
        }
        var radius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_10__["relativeRadiusToValue"](this.radius, maxRadius);
        var pixelInnerRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_10__["relativeRadiusToValue"](this.innerRadius, radius, true);
        var total = this.dataItem.values.value.sum;
        var count = 0;
        var newTotal = 0;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this._sorted, function (strNode) {
            var node = strNode[1];
            _this.getNodeValue(node);
            count++;
            var value = node.total;
            if (node.total / total < _this.minNodeSize) {
                value = total * _this.minNodeSize;
            }
            newTotal += value;
        });
        this.valueAngle = (endAngle - this.startAngle - this.nodePadding * count) / newTotal;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this._sorted, function (strNode) {
            var node = strNode[1];
            var slice = node.slice;
            slice.radius = radius;
            slice.innerRadius = pixelInnerRadius;
            var value = node.total;
            if (node.total / total < _this.minNodeSize) {
                value = total * _this.minNodeSize;
            }
            node.adjustedTotal = value;
            var arc;
            if (_this.nonRibbon) {
                arc = (endAngle - _this.startAngle) / count - _this.nodePadding;
            }
            else {
                arc = _this.valueAngle * value;
            }
            slice.arc = arc;
            slice.startAngle = startAngle;
            node.trueStartAngle = startAngle;
            node.parent = _this.nodesContainer;
            node.validate(); // otherwise flickers - nodes are already created, but not yet positioned etc.
            startAngle += arc + _this.nodePadding;
        });
        this.chordContainer.definedBBox = { x: radius * rect.x, y: radius * rect.y, width: radius * rect.width, height: radius * rect.height };
        this.chordContainer.invalidateLayout();
        _super.prototype.validate.call(this);
    };
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    ChordDiagram.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Add a default screen reader title for accessibility
        // This will be overridden in screen reader if there are any `titles` set
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Chord diagram");
        }
    };
    /**
     * Creates and returns a new data item.
     *
     * @return Data item
     */
    ChordDiagram.prototype.createDataItem = function () {
        return new ChordDiagramDataItem();
    };
    Object.defineProperty(ChordDiagram.prototype, "startAngle", {
        /**
         * @return Start angle (degrees)
         */
        get: function () {
            return this.getPropertyValue("startAngle");
        },
        /**
         * Starting angle of the Radar face. (degrees)
         *
         * Normally, a circular radar face begins (the radial axis is drawn) at the
         * top center. (at -90 degrees)
         *
         * You can use `startAngle` to change this setting.
         *
         * E.g. setting this to 0 will make the radial axis start horizontally to
         * the right, as opposed to vertical.
         *
         * For a perfect circle the absolute sum of `startAngle` and `endAngle`
         * needs to be 360.
         *
         * However, it's **not** necessary to do so. You can set those to lesser
         * numbers, to create semi-circles.
         *
         * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that
         * looks like a quarter of a circle.
         *
         * @default -90
         * @param value  Start angle (degrees)
         */
        set: function (value) {
            this.setPropertyValue("startAngle", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChordDiagram.prototype, "endAngle", {
        /**
         * @return End angle (degrees)
         */
        get: function () {
            return this.getPropertyValue("endAngle");
        },
        /**
         * Starting angle of the Radar face. (degrees)
         *
         * Normally, a circular radar face ends (the radial axis is drawn) exactly
         * where it has started, forming a full 360 circle. (at 270 degrees)
         *
         * You can use `endAngle` to end the circle somewhere else.
         *
         * E.g. setting this to 180 will make the radar face end at horizontal line
         * to the left off the center.
         *
         * For a perfect circle the absolute sum of `startAngle` and `endAngle`
         * needs to be 360.
         *
         * However, it's **not** necessary to do so. You can set those to lesser
         * numbers, to create semi-circles.
         *
         * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that
         * looks like a quarter of a circle.
         *
         * @default -90
         * @param value  End angle (degrees)
         */
        set: function (value) {
            this.setPropertyValue("endAngle", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChordDiagram.prototype, "radius", {
        /**
         * @return Outer radius
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * Outer radius of the Radar face.
         *
         * This can either be in absolute pixel value, or relative [[Percent]].
         *
         * @param value  Outer radius
         */
        set: function (value) {
            this.setPercentProperty("radius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChordDiagram.prototype, "innerRadius", {
        /**
         * @return Inner radius
         */
        get: function () {
            return this.getPropertyValue("innerRadius");
        },
        /**
         * Inner radius of the Chord nodes.
         *
         * This can either be in absolute pixel value, or relative [[Percent]].
         *
         * @param value  Outer radius
         */
        set: function (value) {
            this.setPercentProperty("innerRadius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ChordDiagram.prototype, "nonRibbon", {
        /**
         * @return Non-ribbon
         */
        get: function () {
            return this.getPropertyValue("nonRibbon");
        },
        /**
         *
         * If you set this to true, all the lines will be of the same width. This is done by making middleLine of a ChordLink visible.
         *
         * @param value
         */
        set: function (value) {
            this.setPropertyValue("nonRibbon", value, true);
            this.links.template.middleLine.strokeOpacity = 1;
            this.links.template.link.fillOpacity = 0;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    ChordDiagram.prototype.createNode = function () {
        var node = new _elements_ChordNode__WEBPACK_IMPORTED_MODULE_5__["ChordNode"]();
        this._disposers.push(node);
        return node;
    };
    /**
     * @ignore
     */
    ChordDiagram.prototype.createLink = function () {
        var link = new _elements_ChordLink__WEBPACK_IMPORTED_MODULE_6__["ChordLink"]();
        this._disposers.push(link);
        return link;
    };
    return ChordDiagram;
}(_FlowDiagram__WEBPACK_IMPORTED_MODULE_1__["FlowDiagram"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["ChordDiagram"] = ChordDiagram;
//# sourceMappingURL=ChordDiagram.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/FlowDiagram.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/FlowDiagram.js ***!
  \********************************************************************************/
/*! exports provided: FlowDiagramDataItem, FlowDiagram */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowDiagramDataItem", function() { return FlowDiagramDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "FlowDiagram", function() { return FlowDiagram; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Chart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Chart */ "./node_modules/@amcharts/amcharts4/.internal/charts/Chart.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _elements_FlowDiagramNode__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../elements/FlowDiagramNode */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js");
/* harmony import */ var _elements_FlowDiagramLink__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../elements/FlowDiagramLink */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js");
/* harmony import */ var _core_rendering_fills_LinearGradientModifier__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/rendering/fills/LinearGradientModifier */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/fills/LinearGradientModifier.js");
/* harmony import */ var _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/ColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/ColorSet.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Number__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Number */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Number.js");
/* harmony import */ var _core_utils_Order__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/utils/Order */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Order.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/**
 * FlowDiagram module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */















/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
//@todo rearange notes after dragged
/**
 * Defines a [[DataItem]] for [[FlowDiagram]].
 *
 * @see {@link DataItem}
 */
var FlowDiagramDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FlowDiagramDataItem, _super);
    /**
     * Constructor
     */
    function FlowDiagramDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "FlowDiagramDataItem";
        _this.values.value = {};
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(FlowDiagramDataItem.prototype, "fromName", {
        /**
         * @return name
         */
        get: function () {
            return this.properties.fromName;
        },
        /**
         * Source node's name.
         *
         * @param value  Name
         */
        set: function (value) {
            this.setProperty("fromName", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramDataItem.prototype, "toName", {
        /**
         * @return name
         */
        get: function () {
            return this.properties.toName;
        },
        /**
         * Destination node's name.
         *
         * @param value  Name
         */
        set: function (value) {
            this.setProperty("toName", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramDataItem.prototype, "color", {
        /**
         * @return color
         */
        get: function () {
            return this.properties.color;
        },
        /**
         * Node color
         *
         * @param value  Name
         */
        set: function (value) {
            this.setProperty("color", Object(_core_utils_Color__WEBPACK_IMPORTED_MODULE_10__["toColor"])(value));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramDataItem.prototype, "value", {
        /**
         * @return Value
         */
        get: function () {
            return this.values.value.value;
        },
        /**
         * Link's value.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("value", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagramDataItem.prototype, "link", {
        /**
         * A visual element, representing link between the source and target nodes.
         *
         * Link's actual thickness will be determined by `value` of this link and
         * `value` of the source node.
         *
         * @readonly
         * @return Link element
         */
        get: function () {
            var _this = this;
            if (!this._link) {
                var link_1 = this.component.links.create();
                this._link = link_1;
                this.addSprite(link_1);
                this._disposers.push(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_15__["Disposer"](function () {
                    if (_this.component) {
                        _this.component.links.removeValue(link_1);
                    }
                }));
            }
            return this._link;
        },
        enumerable: true,
        configurable: true
    });
    return FlowDiagramDataItem;
}(_Chart__WEBPACK_IMPORTED_MODULE_1__["ChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a Pie chart
 * @see {@link IFlowDiagramEvents} for a list of available Events
 * @see {@link IFlowDiagramAdapters} for a list of available Adapters
 * @important
 */
var FlowDiagram = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(FlowDiagram, _super);
    /**
     * Constructor
     */
    function FlowDiagram() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A Color Set to use when applying/generating colors for each subsequent
         * node.
         */
        _this.colors = new _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_9__["ColorSet"]();
        _this.className = "FlowDiagram";
        _this.nodePadding = 20;
        _this.sortBy = "none";
        _this.sequencedInterpolation = true;
        _this.colors.step = 2;
        _this.minNodeSize = 0.02;
        var linksContainer = _this.chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_4__["Container"]);
        linksContainer.shouldClone = false;
        linksContainer.layout = "none";
        linksContainer.isMeasured = false;
        _this.linksContainer = linksContainer;
        var nodesContainer = _this.chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_4__["Container"]);
        nodesContainer.shouldClone = false;
        nodesContainer.layout = "none";
        nodesContainer.isMeasured = false;
        _this.nodesContainer = nodesContainer;
        // this data item holds sums, averages, etc
        _this.dataItem = _this.createDataItem();
        _this.dataItem.component = _this;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    FlowDiagram.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        this.dataItem.dispose();
    };
    /**
     * (Re)validates chart's data, effectively causing the chart to redraw.
     *
     * @ignore Exclude from docs
     */
    FlowDiagram.prototype.validateData = function () {
        var _this = this;
        if (this._parseDataFrom == 0) {
            this.nodes.clear();
        }
        this.sortNodes();
        this.colors.reset();
        _super.prototype.validateData.call(this);
        var sum = 0;
        var count = 0;
        var low;
        var high;
        // build blocks
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__["each"](this.dataItems.iterator(), function (dataItem) {
            var fromName = dataItem.fromName;
            if (fromName) {
                var node = _this.nodes.getKey(fromName);
                if (!node) {
                    node = _this.nodes.create(fromName);
                    node.name = fromName;
                    node.chart = _this;
                    node.dataItem = dataItem;
                }
                dataItem.fromNode = node;
                dataItem.fromNode.outgoingDataItems.push(dataItem);
            }
            var toName = dataItem.toName;
            if (toName) {
                var node = _this.nodes.getKey(toName);
                if (!node) {
                    node = _this.nodes.create(toName);
                    node.name = toName;
                    node.chart = _this;
                    node.dataItem = dataItem;
                }
                dataItem.toNode = node;
                dataItem.toNode.incomingDataItems.push(dataItem);
            }
            if (!dataItem.fromNode) {
                var strokeModifier = new _core_rendering_fills_LinearGradientModifier__WEBPACK_IMPORTED_MODULE_8__["LinearGradientModifier"]();
                strokeModifier.opacities = [0, 1];
                dataItem.link.strokeModifier = strokeModifier;
            }
            if (!dataItem.toNode) {
                var fillModifier = new _core_rendering_fills_LinearGradientModifier__WEBPACK_IMPORTED_MODULE_8__["LinearGradientModifier"]();
                fillModifier.opacities = [1, 0];
                dataItem.link.strokeModifier = fillModifier;
            }
            var value = dataItem.value;
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](value)) {
                sum += value;
                count++;
                if (low > value || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](low)) {
                    low = value;
                }
                if (high < value || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](high)) {
                    high = value;
                }
            }
        });
        var key = "value";
        this.dataItem.setCalculatedValue(key, high, "high");
        this.dataItem.setCalculatedValue(key, low, "low");
        this.dataItem.setCalculatedValue(key, sum, "sum");
        this.dataItem.setCalculatedValue(key, sum / count, "average");
        this.dataItem.setCalculatedValue(key, count, "count");
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__["each"](this.nodes.iterator(), function (strNode) {
            var node = strNode[1];
            if (node.fill instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_10__["Color"]) {
                node.color = node.fill;
            }
            if (node.color == undefined) {
                node.color = _this.colors.next();
            }
            if (node.dataItem.color != undefined) {
                node.color = node.dataItem.color;
            }
            if (!node.dataItem.visible) {
                node.hide(0);
            }
            _this.getNodeValue(node);
        });
        this.sortNodes();
        this.feedLegend();
    };
    /**
     * [handleDataItemWorkingValueChange description]
     *
     * @ignore Exclude from docs
     */
    FlowDiagram.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {
        this.invalidate();
    };
    /**
     * Sorts nodes by either their values or names, based on `sortBy` setting.
     */
    FlowDiagram.prototype.sortNodes = function () {
        if (this.sortBy == "name") {
            this._sorted = this.nodes.sortedIterator();
        }
        else if (this.sortBy == "value") {
            this._sorted = _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__["sort"](this.nodes.iterator(), function (x, y) { return _core_utils_Order__WEBPACK_IMPORTED_MODULE_14__["reverse"](_core_utils_Number__WEBPACK_IMPORTED_MODULE_13__["order"](x[1].total, y[1].total)); });
        }
        else {
            this._sorted = this.nodes.iterator();
        }
    };
    /**
     * Updates a cummulative value of the node.
     *
     * A node's value is determined by summing values of all of the incoming
     * links or all of the outgoing links, whichever results in bigger number.
     *
     * @param node  Node value
     */
    FlowDiagram.prototype.getNodeValue = function (node) {
        // todo: totalIncomming totalOutgoing, total
        var incomingTotal = 0;
        var outgoingTotal = 0;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__["each"](node.incomingDataItems.iterator(), function (dataItem) {
            var value = dataItem.getWorkingValue("value");
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](value)) {
                incomingTotal += value;
            }
        });
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_11__["each"](node.outgoingDataItems.iterator(), function (dataItem) {
            var value = dataItem.getWorkingValue("value");
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["isNumber"](value)) {
                outgoingTotal += value;
            }
        });
        node.total = incomingTotal + outgoingTotal;
        node.totalIncoming = incomingTotal;
        node.totalOutgoing = outgoingTotal;
    };
    ;
    /**
     * Changes the sort type of the nodes.
     *
     * This will actually reshuffle nodes using nice animation.
     */
    FlowDiagram.prototype.changeSorting = function () {
        this.sortNodes();
    };
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    FlowDiagram.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Add a default screen reader title for accessibility
        // This will be overridden in screen reader if there are any `titles` set
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_12__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Flow diagram");
        }
    };
    /**
     * Creates and returns a new data item.
     *
     * @return Data item
     */
    FlowDiagram.prototype.createDataItem = function () {
        return new FlowDiagramDataItem();
    };
    Object.defineProperty(FlowDiagram.prototype, "nodePadding", {
        /**
         * @return Padding (px)
         */
        get: function () {
            return this.getPropertyValue("nodePadding");
        },
        /**
         * Padding for node square in pixels.
         *
         * Padding will add extra space around node's name label.
         *
         * @param value Padding (px)
         */
        set: function (value) {
            this.setPropertyValue("nodePadding", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagram.prototype, "sortBy", {
        /**
         * @returns Node sorting
         */
        get: function () {
            return this.getPropertyValue("sortBy");
        },
        /**
         * Sort nodes by "name" or "value" or do not sort at all. If not sorted, nodes will appear in the same order as they are in the data.
         * @default "none"
         * @param value  Node sorting
         */
        set: function (value) {
            this.setPropertyValue("sortBy", value);
            this.changeSorting();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagram.prototype, "minNodeSize", {
        /**
         * @returns min node size
         */
        get: function () {
            return this.getPropertyValue("minNodeSize");
        },
        /**
         * Sometimes nodes can get very small if their value is little. With this setting you
         * can set min size of a node (this is relative value from the total size of all nodes)
         * @default 0.02
         * @param value  Node sorting
         */
        set: function (value) {
            this.setPropertyValue("minNodeSize", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FlowDiagram.prototype, "nodes", {
        /**
         * A list of chart's nodes.
         *
         * @param {DictionaryTemplate<string, this["_node"]>}
         */
        get: function () {
            if (!this._nodes) {
                var template = this.createNode();
                template.events.on("hit", function (event) {
                    event.target.handleHit(event);
                });
                this._nodes = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__["DictionaryTemplate"](template);
                this._disposers.push(new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__["DictionaryDisposer"](this._nodes));
            }
            return this._nodes;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    FlowDiagram.prototype.createNode = function () {
        var node = new _elements_FlowDiagramNode__WEBPACK_IMPORTED_MODULE_6__["FlowDiagramNode"]();
        this._disposers.push(node);
        return node;
    };
    Object.defineProperty(FlowDiagram.prototype, "links", {
        /**
         * A list of chart's links.
         *
         * @param {ListTemplate<this["_link"]>}
         */
        get: function () {
            if (!this._links) {
                this._links = new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__["ListTemplate"](this.createLink());
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__["ListDisposer"](this._links));
            }
            return this._links;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    FlowDiagram.prototype.createLink = function () {
        var link = new _elements_FlowDiagramLink__WEBPACK_IMPORTED_MODULE_7__["FlowDiagramLink"]();
        this._disposers.push(link);
        return link;
    };
    /**
     * Setups the legend to use the chart's data.
     * @ignore
     */
    FlowDiagram.prototype.feedLegend = function () {
        var legend = this.legend;
        if (legend) {
            var legendData_1 = [];
            this.nodes.each(function (key, node) {
                legendData_1.push(node);
            });
            legend.data = legendData_1;
            legend.dataFields.name = "name";
        }
    };
    /**
     * @ignore
     */
    FlowDiagram.prototype.disposeData = function () {
        _super.prototype.disposeData.call(this);
        this.nodes.clear();
    };
    return FlowDiagram;
}(_Chart__WEBPACK_IMPORTED_MODULE_1__["Chart"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_5__["registry"].registeredClasses["FlowDiagram"] = FlowDiagram;
//# sourceMappingURL=FlowDiagram.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/GaugeChart.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/GaugeChart.js ***!
  \*******************************************************************************/
/*! exports provided: GaugeChartDataItem, GaugeChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeChartDataItem", function() { return GaugeChartDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "GaugeChart", function() { return GaugeChart; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _RadarChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./RadarChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/RadarChart.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _elements_ClockHand__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../elements/ClockHand */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ClockHand.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Module for building Gauge charts.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[GaugeChart]].
 *
 * @see {@link DataItem}
 */
var GaugeChartDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(GaugeChartDataItem, _super);
    /**
     * Constructor
     */
    function GaugeChartDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "GaugeChartDataItem";
        _this.applyTheme();
        return _this;
    }
    return GaugeChartDataItem;
}(_RadarChart__WEBPACK_IMPORTED_MODULE_1__["RadarChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a Gauge chart.
 *
 * @see {@link IGaugeChartEvents} for a list of available Events
 * @see {@link IGaugeChartAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/gauge-chart/} for documentation
 * @important
 */
var GaugeChart = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(GaugeChart, _super);
    /**
     * Constructor
     */
    function GaugeChart() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "GaugeChart";
        _this.startAngle = 180;
        _this.endAngle = 360;
        _this.hands = new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__["ListTemplate"](new _elements_ClockHand__WEBPACK_IMPORTED_MODULE_3__["ClockHand"]());
        _this.hands.events.on("inserted", _this.processHand, _this, false);
        _this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__["ListDisposer"](_this.hands));
        _this._disposers.push(_this.hands.template);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    GaugeChart.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Add a default screen reader title for accessibility
        // This will be overridden in screen reader if there are any `titles` set
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_5__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Gauge chart");
        }
    };
    /**
     * Decorates a [[ClockHand]] when it is added to the chart.
     *
     * @param event  Event
     */
    GaugeChart.prototype.processHand = function (event) {
        var hand = event.newValue;
        if (!hand.axis) {
            hand.axis = this.xAxes.getIndex(0);
        }
    };
    /**
     * This function is used to sort element's JSON config properties, so that
     * some properties that absolutely need to be processed last, can be put at
     * the end.
     *
     * @ignore Exclude from docs
     * @param a  Element 1
     * @param b  Element 2
     * @return Sorting number
     */
    GaugeChart.prototype.configOrder = function (a, b) {
        if (a == b) {
            return 0;
        }
        // Must come last
        else if (a == "hands") {
            return 1;
        }
        else if (b == "hands") {
            return -1;
        }
        else {
            return _super.prototype.configOrder.call(this, a, b);
        }
    };
    return GaugeChart;
}(_RadarChart__WEBPACK_IMPORTED_MODULE_1__["RadarChart"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["GaugeChart"] = GaugeChart;
//# sourceMappingURL=GaugeChart.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/MapChart.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/MapChart.js ***!
  \*****************************************************************************/
/*! exports provided: MapChartDataItem, MapChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapChartDataItem", function() { return MapChartDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MapChart", function() { return MapChart; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _SerialChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SerialChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _map_MapSeries__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../map/MapSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js");
/* harmony import */ var _map_MapImage__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../map/MapImage */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImage.js");
/* harmony import */ var _map_MapPolygon__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../map/MapPolygon */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygon.js");
/* harmony import */ var _map_MapPolygonSeries__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../map/MapPolygonSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygonSeries.js");
/* harmony import */ var _map_projections_Projection__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../map/projections/Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony import */ var _core_elements_Circle__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/elements/Circle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Circle.js");
/* harmony import */ var _map_SmallMap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../map/SmallMap */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/SmallMap.js");
/* harmony import */ var _map_MapUtils__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../map/MapUtils */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js");
/* harmony import */ var _core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Keyboard */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Keyboard.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_Options__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/Options */ "./node_modules/@amcharts/amcharts4/.internal/core/Options.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Ease__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/utils/Ease */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Ease.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _map_Geo__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../map/Geo */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/Geo.js");
/* harmony import */ var _map_GraticuleSeries__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../map/GraticuleSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/GraticuleSeries.js");
/* harmony import */ var _core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../core/interaction/Interaction */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Interaction.js");
/**
 * Map module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






















/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[MapChart]].
 *
 * @see {@link DataItem}
 */
var MapChartDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapChartDataItem, _super);
    /**
     * Constructor
     */
    function MapChartDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "MapChartDataItem";
        _this.applyTheme();
        return _this;
    }
    return MapChartDataItem;
}(_SerialChart__WEBPACK_IMPORTED_MODULE_1__["SerialChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a map.
 *
 * @see {@link IMapChartEvents} for a list of available Events
 * @see {@link IMapChartAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/} for documentation
 */
var MapChart = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(MapChart, _super);
    /**
     * Constructor
     */
    function MapChart() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * A ratio to be used when scaling the map shapes.
         *
         * @readonly
         */
        _this.scaleRatio = 1;
        /**
         * Default duration of zoom animations (ms).
         */
        _this.zoomDuration = 1000;
        /**
         * Default zooming animation easing function.
         */
        _this.zoomEasing = _core_utils_Ease__WEBPACK_IMPORTED_MODULE_17__["cubicOut"];
        /**
         * Smallest available zoom level. The map will not allow to zoom out past
         * this setting.
         *
         * NOTE: Should be power of 2.
         *
         * @default 1
         */
        _this.minZoomLevel = 1;
        /**
         * Biggest available zoom level. The map will not allow to zoom in past
         * this setting.
         *
         * NOTE: Should be power of 2.
         *
         * @default 32
         */
        _this.maxZoomLevel = 32;
        /**
         * [_prevZoomGeoPoint description]
         *
         * @todo Description
         */
        _this._prevZoomGeoPoint = { latitude: 0, longitude: 0 };
        _this.className = "MapChart";
        // Set default projection
        _this.projection = new _map_projections_Projection__WEBPACK_IMPORTED_MODULE_8__["Projection"]();
        _this.setPropertyValue("deltaLatitude", 0);
        _this.setPropertyValue("deltaLongitude", 0);
        _this.setPropertyValue("deltaGamma", 0);
        _this.maxPanOut = 0.7;
        _this.homeZoomLevel = 1;
        _this.zoomStep = 2;
        _this.layout = "absolute";
        _this.centerMapOnZoomOut = true;
        // Set padding
        _this.padding(0, 0, 0, 0);
        _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["used"](_this.backgroundSeries);
        // so that the map would render in a hidden div too
        _this.minWidth = 10;
        _this.minHeight = 10;
        _this.events.once("inited", _this.handleAllInited, _this, false);
        // Create a container for map series
        var seriesContainer = _this.seriesContainer;
        seriesContainer.visible = false;
        seriesContainer.inert = true;
        seriesContainer.resizable = true;
        seriesContainer.events.on("transformed", _this.handleMapTransform, _this, false);
        seriesContainer.events.on("doublehit", _this.handleDoubleHit, _this, false);
        seriesContainer.events.on("dragged", _this.handleDrag, _this, false);
        seriesContainer.zIndex = 0;
        seriesContainer.dragWhileResize = true;
        //seriesContainer.background.fillOpacity = 0;
        seriesContainer.adapter.add("scale", function (scale, target) {
            return _core_utils_Math__WEBPACK_IMPORTED_MODULE_15__["fitToRange"](scale, _this.minZoomLevel, _this.maxZoomLevel);
        });
        // Set up events
        //this.events.on("validated", this.updateExtremes, this);
        //this.events.on("datavalidated", this.handleAllValidated, this, false);
        //this.events.on("datavalidated", this.updateExtremes, this, false);
        _this.events.on("maxsizechanged", function (event) {
            if (event.previousWidth == 0 || event.previousHeight == 0) {
                _this.updateExtremes();
                _this.updateCenterGeoPoint();
            }
        }, undefined, false);
        // Set up main chart container, e.g. set backgrounds and events to monitor
        // size changes, etc.
        var chartContainer = _this.chartContainer;
        chartContainer.parent = _this;
        chartContainer.zIndex = -1;
        _this._disposers.push(_this.events.on("maxsizechanged", function () {
            if (_this.inited) {
                if (_this._mapAnimation) {
                    _this._mapAnimation.stop();
                }
                var allInited_1 = true;
                _this.series.each(function (series) {
                    series.updateTooltipBounds();
                    if (!series.inited || series.dataInvalid) {
                        allInited_1 = false;
                    }
                });
                if (allInited_1) {
                    _this.updateScaleRatio();
                }
                _this.zoomToGeoPoint(_this._zoomGeoPointReal, _this.zoomLevel, true, 0);
            }
        }, undefined, false));
        var chartContainerBg = chartContainer.background;
        chartContainerBg.fillOpacity = 0;
        chartContainerBg.events.on("down", function (e) { _this.seriesContainer.dragStart(e.target.interactions.downPointers.getIndex(0)); }, _this);
        chartContainerBg.events.on("up", function (e) { _this.seriesContainer.dragStop(); }, _this);
        chartContainerBg.events.on("doublehit", _this.handleDoubleHit, _this);
        chartContainerBg.focusable = true;
        chartContainer.events.on("down", _this.handleMapDown, _this, false);
        _this.addDisposer(seriesContainer.events.on("down", function () {
            // Cancel any move inertia if there is one
            var inertia = _this.seriesContainer.interactions.inertias.getKey("move");
            if (inertia) {
                inertia.done();
            }
        }));
        // Add description to background
        _this.background.fillOpacity = 0;
        // Add keyboard events for panning
        _this._disposers.push(Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_22__["getInteraction"])().body.events.on("keyup", function (ev) {
            if (_this.topParent.hasFocused) {
                var key = _core_utils_Keyboard__WEBPACK_IMPORTED_MODULE_12__["keyboard"].getEventKey(ev.event);
                if (!_this._zoomControl || !_this._zoomControl.thumb.isFocused) {
                    switch (key) {
                        case "up":
                            _this.pan({ x: 0, y: 0.1 });
                            break;
                        case "down":
                            _this.pan({ x: 0, y: -0.1 });
                            break;
                        case "left":
                            _this.pan({ x: 0.1, y: 0 });
                            break;
                        case "right":
                            _this.pan({ x: -0.1, y: 0 });
                            break;
                    }
                }
            }
        }, _this));
        _this.mouseWheelBehavior = "zoom";
        var interaction = Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_22__["getInteraction"])();
        _this._disposers.push(interaction.body.events.on("down", _this.handlePanDown, _this));
        _this._disposers.push(interaction.body.events.on("up", _this.handlePanUp, _this));
        //this._disposers.push(interaction.body.events.on("track", this.handlePanMove, this));
        var panSprite = _this.seriesContainer.createChild(_core_elements_Circle__WEBPACK_IMPORTED_MODULE_9__["Circle"]);
        panSprite.radius = 10;
        panSprite.inert = true;
        panSprite.isMeasured = false;
        panSprite.events.on("transformed", _this.handlePanMove, _this, false);
        panSprite.interactionsEnabled = false;
        panSprite.opacity = 0;
        panSprite.x = 0;
        panSprite.y = 0;
        _this.panSprite = panSprite;
        _this.panBehavior = "move";
        /*
                this.panSprite.inertiaOptions.setKey("move", {
                    "time": 100,
                    "duration": 1000,
                    "factor": 3,
                    "easing": $ease.sinOut
                });*/
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * @ignore
     */
    MapChart.prototype.handlePanDown = function (event) {
        var svgPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["documentPointToSvg"](event.pointer.point, this.htmlContainer);
        if (svgPoint.x > 0 && svgPoint.y > 0 && svgPoint.x < this.svgContainer.width && svgPoint.y < this.svgContainer.height) {
            // Get local point
            this._downPointOrig = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["documentPointToSprite"](event.pointer.point, this.seriesContainer);
            this.panSprite.moveTo(this._downPointOrig);
            this.panSprite.dragStart(event.pointer);
            this._downDeltaLongitude = this.deltaLongitude;
            this._downDeltaLatitude = this.deltaLatitude;
        }
    };
    /**
     * @ignore
     */
    MapChart.prototype.handlePanUp = function (event) {
        if (this._downPointOrig) {
            this.panSprite.dragStop(event.pointer, true);
        }
        this._downPointOrig = undefined;
    };
    /**
     * @ignore
     */
    MapChart.prototype.handlePanMove = function () {
        if (!this.seriesContainer.isResized) {
            if (Object(_core_interaction_Interaction__WEBPACK_IMPORTED_MODULE_22__["getInteraction"])().areTransformed([this.panSprite.interactions, this.seriesContainer.interactions])) {
                return;
            }
            var d3Projection = this.projection.d3Projection;
            var panBehavior = this.panBehavior;
            if (panBehavior != "move" && panBehavior != "none" && this._downPointOrig && d3Projection.rotate) {
                var rotation = d3Projection.rotate();
                var dln = rotation[0];
                var dlt = rotation[1];
                var dlg = rotation[2];
                d3Projection.rotate([0, 0, 0]);
                var downGeoLocal = this.projection.invert(this._downPointOrig);
                var local = { x: this.panSprite.pixelX, y: this.panSprite.pixelY };
                var geoLocal = void 0;
                if (local) {
                    geoLocal = this.projection.invert(local);
                }
                d3Projection.rotate([dln, dlt, dlg]);
                if (geoLocal) {
                    if (panBehavior == "rotateLat" || panBehavior == "rotateLongLat") {
                        this.deltaLatitude = this._downDeltaLatitude + geoLocal.latitude - downGeoLocal.latitude;
                    }
                    if (panBehavior == "rotateLong" || panBehavior == "rotateLongLat") {
                        this.deltaLongitude = this._downDeltaLongitude + geoLocal.longitude - downGeoLocal.longitude;
                    }
                }
            }
        }
    };
    /**
     * @ignore
     */
    MapChart.prototype.handleAllInited = function () {
        var _this = this;
        var inited = true;
        this.seriesContainer.visible = true;
        this.series.each(function (series) {
            if (!series.inited || series.dataInvalid) {
                inited = false;
            }
        });
        if (inited) {
            this.updateCenterGeoPoint();
            this.updateScaleRatio();
            this.goHome(0);
        }
        else {
            // TODO verify that this is correct
            var disposer_1 = _core_Registry__WEBPACK_IMPORTED_MODULE_13__["registry"].events.once("exitframe", function () {
                _this.removeDispose(disposer_1);
                _this.handleAllInited();
            }, this, false);
            this.addDisposer(disposer_1);
        }
    };
    /**
     * @ignore
     */
    MapChart.prototype.updateZoomGeoPoint = function () {
        var seriesPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["svgPointToSprite"]({ x: this.innerWidth / 2 + this.pixelPaddingLeft, y: this.innerHeight / 2 + this.pixelPaddingTop }, this.series.getIndex(0));
        var geoPoint = this.projection.invert(seriesPoint);
        this._zoomGeoPointReal = geoPoint;
    };
    /**
     * @ignore
     */
    MapChart.prototype.updateCenterGeoPoint = function () {
        var maxLeft;
        var maxRight;
        var maxTop;
        var maxBottom;
        if (this.backgroundSeries) {
            var features = this.backgroundSeries.getFeatures();
            if (features.length > 0) {
                var bounds = this.projection.d3Path.bounds(features[0].geometry);
                maxLeft = bounds[0][0];
                maxTop = bounds[0][1];
                maxRight = bounds[1][0];
                maxBottom = bounds[1][1];
            }
        }
        else {
            this.series.each(function (series) {
                var bbox = series.group.node.getBBox();
                if (maxLeft > bbox.x || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](maxLeft)) {
                    maxLeft = bbox.x;
                }
                if (maxRight < bbox.x + bbox.width || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](maxRight)) {
                    maxRight = bbox.x + bbox.width;
                }
                if (maxTop > bbox.y || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](maxTop)) {
                    maxTop = bbox.y;
                }
                if (maxBottom < bbox.y + bbox.height || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](maxBottom)) {
                    maxBottom = bbox.y + bbox.height;
                }
            });
        }
        this.seriesMaxLeft = maxLeft;
        this.seriesMaxRight = maxRight;
        this.seriesMaxTop = maxTop;
        this.seriesMaxBottom = maxBottom;
        this.seriesWidth = maxRight - maxLeft;
        this.seriesHeight = maxBottom - maxTop;
        if (this.seriesWidth > 0 && this.seriesHeight > 0) {
            this.chartContainer.visible = true;
            this._centerGeoPoint = this.projection.invert({ x: maxLeft + (maxRight - maxLeft) / 2, y: maxTop + (maxBottom - maxTop) / 2 });
            if (!this._zoomGeoPointReal || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](this._zoomGeoPointReal.latitude)) {
                this._zoomGeoPointReal = this._centerGeoPoint;
            }
        }
        else {
            this.chartContainer.visible = false;
        }
    };
    /**
     * Prevents map to be dragged out of the container area
     * @ignore
     */
    MapChart.prototype.handleDrag = function () {
        var d = this.zoomLevel * this.scaleRatio;
        var ww = this.seriesWidth * d;
        var hh = this.seriesHeight * d;
        var seriesContainer = this.seriesContainer;
        var maxLeft = this.seriesMaxLeft * d;
        var maxRight = this.seriesMaxRight * d;
        var maxTop = this.seriesMaxTop * d;
        var maxBottom = this.seriesMaxBottom * d;
        var x = seriesContainer.pixelX;
        var y = seriesContainer.pixelY;
        var maxPanOut = this.maxPanOut;
        var minX = Math.min(this.maxWidth * (1 - maxPanOut) - ww - maxLeft, -maxLeft);
        if (x < minX) {
            x = minX;
        }
        var maxX = Math.max(this.maxWidth * maxPanOut - maxLeft, this.maxWidth - maxRight);
        if (x > maxX) {
            x = maxX;
        }
        var minY = Math.min(this.maxHeight * (1 - maxPanOut) - hh - maxTop, -maxTop);
        if (y < minY) {
            y = minY;
        }
        var maxY = Math.max(this.maxHeight * maxPanOut - maxTop, this.maxHeight - maxBottom);
        if (y > maxY) {
            y = maxY;
        }
        seriesContainer.moveTo({ x: x, y: y }, undefined, undefined, true);
        this._zoomGeoPointReal = this.zoomGeoPoint;
    };
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    MapChart.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Add a default screen reader title for accessibility
        // This will be overridden in screen reader if there are any `titles` set
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Map");
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["hasValue"](this.background.readerTitle)) {
            this.background.readerTitle = this.language.translate("Use plus and minus keys on your keyboard to zoom in and out");
        }
    };
    /**
     * Handles event when a pointer presses down on the map, e.g. user presses
     * down mouse or touches the map on a screen.
     *
     * Stops all animations currently going on.
     */
    MapChart.prototype.handleMapDown = function () {
        if (this._mapAnimation) {
            this._mapAnimation.stop();
        }
    };
    /**
     * Handles the event when user doubleclicks or dooubletaps the map: zooms
     * in on the reference point.
     *
     * @param event  Original event
     */
    MapChart.prototype.handleDoubleHit = function (event) {
        var svgPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["documentPointToSvg"](event.point, this.htmlContainer, this.svgContainer.cssScale);
        var geoPoint = this.svgPointToGeo(svgPoint);
        this.zoomIn(geoPoint);
    };
    /**
     * Handles mouse wheel event, e.g. user rotates mouse wheel while over the
     * map: zooms in or out depending on the direction of the wheel turn.
     *
     * @param event  Original event
     */
    MapChart.prototype.handleWheel = function (event) {
        // Cancel any move inertia if there is one
        var inertia = this.seriesContainer.interactions.inertias.getKey("move");
        if (inertia) {
            inertia.done();
        }
        var svgPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["documentPointToSvg"](event.point, this.htmlContainer, this.svgContainer.cssScale);
        var geoPoint = this.svgPointToGeo(svgPoint);
        if (event.shift.y < 0) {
            this.zoomIn(geoPoint, undefined, this.interactions.mouseOptions.sensitivity);
        }
        else {
            this.zoomOut(geoPoint, undefined, this.interactions.mouseOptions.sensitivity);
        }
    };
    Object.defineProperty(MapChart.prototype, "mouseWheelBehavior", {
        /**
         * @return mouse wheel behavior
         */
        get: function () {
            return this.getPropertyValue("mouseWheelBehavior");
        },
        /**
         * Specifies what should chart do if when mouse wheel is rotated.
         *
         * @see {@link https://www.amcharts.com/docs/v4/reference/sprite/#mouseOptions_property} More information about `mouseOptions`
         * @param mouse wheel behavior
         * @default zoomX
         */
        set: function (value) {
            if (this.setPropertyValue("mouseWheelBehavior", value)) {
                if (value != "none") {
                    this._mouseWheelDisposer = this.chartContainer.events.on("wheel", this.handleWheel, this, false);
                    this._disposers.push(this._mouseWheelDisposer);
                }
                else {
                    if (this._mouseWheelDisposer) {
                        this._mouseWheelDisposer.dispose();
                    }
                    this.chartContainer.wheelable = false;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "panBehavior", {
        /**
         * @returns Behavior
         */
        get: function () {
            return this.getPropertyValue("panBehavior");
        },
        /**
         * What "dragging" map does.
         *
         * Available values:
         * * `"move"` (default): changes position of the map.
         * * `"rotateLat"`: changes `deltaLatitude` (rotates the globe vertically).
         * * `"rotateLong"`: changes `deltaLongitude` (rotates the globe horizontally).
         * * `"rotateLongLat"`: changes both `deltaLongitude` and `deltaLatitude` (rotates the globe in any direction).
         *
         * @default "move"
         * @since 4.3.0
         * @param  value  Behavior
         */
        set: function (value) {
            if (this.setPropertyValue("panBehavior", value)) {
                var seriesContainer = this.seriesContainer;
                this.panSprite.draggable = false;
                seriesContainer.draggable = false;
                switch (value) {
                    case "move":
                        seriesContainer.draggable = true;
                        break;
                    default:
                        this.panSprite.draggable = true;
                        break;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "centerMapOnZoomOut", {
        /**
         * @returns If the map should be centered when zooming out.
         */
        get: function () {
            return this.getPropertyValue("centerMapOnZoomOut");
        },
        /**
         * Specifies if the map should be centered when zooming out
         * @default true
         * @since 4.7.12
         */
        set: function (value) {
            this.setPropertyValue("centerMapOnZoomOut", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "projection", {
        /**
         * @return Projection
         */
        get: function () {
            return this.getPropertyValue("projection");
        },
        /**
         * Projection to use for the map.
         *
         * Available projections:
         * * Albers
         * * AlbersUSA
         * * AzimuthalEqualArea
         * * Eckert6
         * * EqualEarth
         * * Mercator
         * * Miller
         * * NaturalEarth
         * * Orthographic
         * * Stereographic
         *
         * ```TypeScript
         * map.projection = new am4maps.projections.Mercator();
         * ```
         * ```JavaScript
         * map.projection = new am4maps.projections.Mercator();
         * ```
         * ```JSON
         * {
         *   // ...
         *   "projection": "Mercator"
         *   // ...
         * }
         * ```
         *
         * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Setting_projection} More about projections
         * @param projection  Projection
         */
        set: function (projection) {
            var _this = this;
            if (this.setPropertyValue("projection", projection)) {
                this.invalidateProjection();
                projection.chart = this;
                if (this._backgroundSeries) {
                    this._backgroundSeries.invalidate();
                }
                if (this.inited) {
                    this.updateExtremes();
                }
                this.series.each(function (series) {
                    series.events.once("validated", function () {
                        _this.updateCenterGeoPoint();
                        _this.updateScaleRatio();
                        _this.goHome(0);
                    });
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Validates (processes) data items.
     *
     * @ignore Exclude from docs
     */
    MapChart.prototype.validateDataItems = function () {
        _super.prototype.validateDataItems.call(this);
        this.updateExtremes();
    };
    /**
     * Calculates the longitudes and latitudes of the most distant points from
     * the center in all four directions: West, East, North, and South.
     *
     * @ignore Exclude from docs
     */
    MapChart.prototype.updateExtremes = function () {
        var east;
        var north;
        var west;
        var south;
        this.series.each(function (series) {
            if (series.ignoreBounds || (series instanceof _map_GraticuleSeries__WEBPACK_IMPORTED_MODULE_21__["GraticuleSeries"] && series.fitExtent)) {
            }
            else {
                if (series.north > north || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](north)) {
                    north = series.north;
                }
                if (series.south < south || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](south)) {
                    south = series.south;
                }
                if (series.west < west || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](west)) {
                    west = series.west;
                }
                if (series.east > east || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](east)) {
                    east = series.east;
                }
            }
        });
        var features = [];
        var foundGraticule = false;
        // if we gave graticule, get features of these series only for faster fitSize
        this.series.each(function (series) {
            if (series instanceof _map_GraticuleSeries__WEBPACK_IMPORTED_MODULE_21__["GraticuleSeries"] && !series.fitExtent) {
                features = series.getFeatures();
                foundGraticule = true;
            }
        });
        if (!foundGraticule) {
            this.series.each(function (series) {
                if (series.ignoreBounds || (series instanceof _map_GraticuleSeries__WEBPACK_IMPORTED_MODULE_21__["GraticuleSeries"] && series.fitExtent)) {
                }
                else {
                    features = features.concat(series.getFeatures());
                }
            });
        }
        var w = _core_utils_Math__WEBPACK_IMPORTED_MODULE_15__["max"](50, this.innerWidth);
        var h = _core_utils_Math__WEBPACK_IMPORTED_MODULE_15__["max"](50, this.innerHeight);
        var d3Projection = this.projection.d3Projection;
        if (features.length > 0 && d3Projection && (this.east != east || this.west != west || this.north != north || this.south != south)) {
            this.east = east;
            this.west = west;
            this.north = north;
            this.south = south;
            if (d3Projection.rotate) {
                var rotation = d3Projection.rotate();
                var deltaLong = rotation[0];
                var deltaLat = rotation[1];
                var deltaGamma = rotation[2];
                this.deltaLongitude = deltaLong;
                this.deltaLatitude = deltaLat;
                this.deltaGamma = deltaGamma;
            }
            var geoJSON = { "type": "FeatureCollection", features: features };
            var initialScale = d3Projection.scale();
            d3Projection.fitSize([w, h], geoJSON);
            if (d3Projection.scale() != initialScale) {
                this.invalidateDataUsers();
            }
            this.series.each(function (series) {
                if (series instanceof _map_GraticuleSeries__WEBPACK_IMPORTED_MODULE_21__["GraticuleSeries"]) {
                    series.invalidateData();
                }
            });
            if (this._backgroundSeries) {
                var polygon = this._backgroundSeries.mapPolygons.getIndex(0);
                if (polygon) {
                    polygon.multiPolygon = _map_MapUtils__WEBPACK_IMPORTED_MODULE_11__["getBackground"](this.north, this.east, this.south, this.west);
                }
            }
            this._fitWidth = w;
            this._fitHeight = h;
        }
        if (!this._zoomGeoPointReal || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](this._zoomGeoPointReal.latitude)) {
            this.goHome(0);
        }
    };
    /**
     * (Re)calculates a ratio which should be used to scale the actual map so
     * that it fits perfectly into available space. Helps to avoid redrawing of all the map if container size changes
     * @ignore
     */
    MapChart.prototype.updateScaleRatio = function () {
        var scaleRatio;
        this.updateCenterGeoPoint();
        var hScale = this.innerWidth / this.seriesWidth;
        var vScale = this.innerHeight / this.seriesHeight;
        scaleRatio = _core_utils_Math__WEBPACK_IMPORTED_MODULE_15__["min"](hScale, vScale);
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNaN"](scaleRatio) || scaleRatio == Infinity) {
            scaleRatio = 1;
        }
        if (scaleRatio != this.scaleRatio) {
            this.scaleRatio = scaleRatio;
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_18__["each"](this.series.iterator(), function (series) {
                series.scale = scaleRatio;
                series.updateTooltipBounds();
            });
            this.backgroundSeries.scale = scaleRatio;
            this.dispatch("scaleratiochanged");
        }
    };
    /**
     * Converts a point within map container to geographical (lat/long)
     * coordinates.
     *
     * @param point  Source point
     * @return Geo-point
     */
    MapChart.prototype.svgPointToGeo = function (point) {
        var series = this.series.getIndex(0);
        if (series) {
            var seriesPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["svgPointToSprite"](point, series);
            return this.seriesPointToGeo(seriesPoint);
        }
    };
    /**
     * Converts geographical (lat/long) coordinates to an X/Y point within map's
     * container.
     *
     * @param point  Source geo-point
     * @return Point
     */
    MapChart.prototype.geoPointToSVG = function (point) {
        var series = this.series.getIndex(0);
        if (series) {
            var seriesPoint = this.geoPointToSeries(point);
            return _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["spritePointToSvg"](seriesPoint, series);
        }
    };
    /**
     * Converts a point (X/Y) within actual objects of the map to geographical
     * (lat/long) coordinates.
     *
     * @param point  Source point
     * @return Geo-point
     */
    MapChart.prototype.seriesPointToGeo = function (point) {
        return this.projection.invert(point);
    };
    /**
     * Converts geographical (lat/long) coordinates to an X/Y point within
     * actual elements/objects of the maps.
     *
     * @param point  Source geo-point
     * @return Point
     */
    MapChart.prototype.geoPointToSeries = function (point) {
        return this.projection.convert(point);
    };
    Object.defineProperty(MapChart.prototype, "geodata", {
        /**
         * @return GeoJSON data
         */
        get: function () {
            return this._geodata;
        },
        /**
         * Map data in GeoJSON format.
         *
         * The Map supports the following GeoJSON objects: `Point`, `LineString`,
         * `Polygon`, `MultiPoint`, `MultiLineString`, and `MultiPolygon`.
         *
         * @see {@link http://geojson.org/} Official GeoJSON format specification
         * @param geoJSON GeoJSON data
         */
        set: function (geodata) {
            if (geodata != this._geodata) {
                this._geodata = geodata;
                if (this.reverseGeodata) {
                    this.processReverseGeodata(this._geodata);
                }
                this.invalidateData();
                this.dataUsers.each(function (dataUser) {
                    for (var i = dataUser.data.length - 1; i >= 0; i--) {
                        if (dataUser.data[i].madeFromGeoData == true) {
                            dataUser.data.splice(i, 1);
                        }
                    }
                    dataUser.disposeData();
                    dataUser.invalidateData();
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "reverseGeodata", {
        /**
         * @returns Reverse the order of geodata coordinates?
         */
        get: function () {
            return this.getPropertyValue("reverseGeodata");
        },
        /**
         * Indicates whether GeoJSON geodata supplied to the chart uses
         * ESRI (clockwise) or non-ESRI (counter-clockwise) order of the polygon
         * coordinates.
         *
         * `MapChart` supports only ESRI standard, so if your custom maps appears
         * garbled, try setting `reverseGeodata = true`.
         *
         * @default false
         * @since 4.10.11
         * @param  value  Reverse the order of geodata coordinates?
         */
        set: function (value) {
            if (this.setPropertyValue("reverseGeodata", value) && this._geodata) {
                this.processReverseGeodata(this._geodata);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Reverses the order of polygons on a GeoJSON data.
     *
     * @since 4.10.11
     * @param  geodata  Source geodata
     */
    MapChart.prototype.processReverseGeodata = function (geodata) {
        for (var i = 0; i < geodata.features.length; i++) {
            var feature = geodata.features[i];
            for (var x = 0; x < feature.geometry.coordinates.length; x++) {
                if (feature.geometry.type == "MultiPolygon") {
                    for (var y = 0; y < feature.geometry.coordinates[x].length; y++) {
                        feature.geometry.coordinates[x][y].reverse();
                    }
                }
                else {
                    feature.geometry.coordinates[x].reverse();
                }
            }
        }
    };
    /**
     * Zooms the map to particular zoom level and centers on a latitude/longitude
     * coordinate.
     *
     * @param point      Center coordinate
     * @param zoomLevel  Zoom level
     * @param center     Center on the given coordinate?
     * @param duration   Duration for zoom animation (ms)
     * @return Zoom animation
     */
    MapChart.prototype.zoomToGeoPoint = function (point, zoomLevel, center, duration, mapObject) {
        var _this = this;
        if (!point) {
            var hasData_1 = false;
            this.series.each(function (series) {
                if (series.dataItems.length > 0) {
                    hasData_1 = true;
                }
            });
            if (hasData_1) {
                point = this.zoomGeoPoint;
            }
            else {
                return;
            }
        }
        if (!point || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](point.longitude) || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](point.latitude)) {
            return;
        }
        this._zoomGeoPointReal = point;
        zoomLevel = _core_utils_Math__WEBPACK_IMPORTED_MODULE_15__["fitToRange"](zoomLevel, this.minZoomLevel, this.maxZoomLevel);
        var seriesPoint = this.projection.convert(point);
        if (seriesPoint) {
            var svgPoint = this.geoPointToSVG(point);
            var mapPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["svgPointToSprite"](svgPoint, this);
            if (center) {
                mapPoint = {
                    x: this.innerWidth / 2,
                    y: this.innerHeight / 2
                };
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](duration)) {
                duration = this.zoomDuration;
            }
            var x = mapPoint.x - seriesPoint.x * zoomLevel * this.scaleRatio;
            var y = mapPoint.y - seriesPoint.y * zoomLevel * this.scaleRatio;
            if (!mapObject && zoomLevel < this.zoomLevel && this.centerMapOnZoomOut && zoomLevel < 1.5) {
                x = this.innerWidth / 2 - (this.seriesMaxLeft + (this.seriesMaxRight - this.seriesMaxLeft) / 2) * zoomLevel * this.scaleRatio;
                y = this.innerHeight / 2 - (this.seriesMaxTop + (this.seriesMaxBottom - this.seriesMaxTop) / 2) * zoomLevel * this.scaleRatio;
            }
            this._mapAnimation = this.seriesContainer.animate([{
                    property: "scale",
                    to: zoomLevel
                }, {
                    property: "x", from: this.seriesContainer.pixelX,
                    to: x
                }, {
                    property: "y", from: this.seriesContainer.pixelY,
                    to: y
                }], duration, this.zoomEasing);
            this._disposers.push(this._mapAnimation.events.on("animationended", function () {
                _this._zoomGeoPointReal = _this.zoomGeoPoint;
            }));
            this.seriesContainer.validatePosition();
            return this._mapAnimation;
        }
    };
    /**
     * Zooms the map to a particular map object.
     *
     * @param mapObject  Target map object
     * @param zoomLevel  Zoom level
     * @param center     Center on the given coordinate?
     * @param duration   Duration for zoom animation (ms)
     * @return Zoom animation
     */
    MapChart.prototype.zoomToMapObject = function (mapObject, zoomLevel, center, duration) {
        if (center == undefined) {
            center = true;
        }
        var inertia = this.seriesContainer.interactions.inertias.getKey("move");
        if (inertia) {
            inertia.done();
        }
        if (mapObject instanceof _map_MapImage__WEBPACK_IMPORTED_MODULE_5__["MapImage"]) {
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNaN"](zoomLevel)) {
                zoomLevel = 5;
            }
            return this.zoomToGeoPoint({ latitude: mapObject.latitude, longitude: mapObject.longitude }, zoomLevel, center, duration, true);
        }
        var dataItem = mapObject.dataItem;
        if (dataItem && _core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](dataItem.zoomLevel)) {
            zoomLevel = dataItem.zoomLevel;
        }
        if (mapObject instanceof _map_MapPolygon__WEBPACK_IMPORTED_MODULE_6__["MapPolygon"]) {
            var dataItem_1 = mapObject.dataItem;
            var bbox = mapObject.polygon.bbox;
            if (bbox.width == 0 || bbox.height == 0) {
                bbox = mapObject.polygon.group.getBBox();
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNumber"](zoomLevel)) {
                zoomLevel = Math.min(this.seriesWidth / bbox.width, this.seriesHeight / bbox.height);
            }
            var geoPoint = void 0;
            if (dataItem_1 && _core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["hasValue"](dataItem_1.zoomGeoPoint)) {
                geoPoint = dataItem_1.zoomGeoPoint;
            }
            else {
                // this is more accurate
                var polygonPoint = { x: bbox.x + bbox.width / 2, y: bbox.y + bbox.height / 2 };
                var seriesPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["spritePointToSprite"](polygonPoint, mapObject.polygon, mapObject.series);
                geoPoint = this.seriesPointToGeo(seriesPoint);
            }
            return this.zoomToGeoPoint(geoPoint, zoomLevel, true, duration, true);
        }
    };
    /**
     * Zooms the map to a particular viewport.
     *
     * The `north`, `east`, `south`, and `west` define boundaries of the
     * imaginary viewort we want to zoom the map to.
     *
     * `level` is not actual zoom level. The map will determine the zoom level
     * required to accommodated such zoom, and will adjust it by `level` if set.
     *
     * @param north     Latitude of the North-most boundary
     * @param east      Longitude of the East-most boundary
     * @param south     Latitude of the South-most boundary
     * @param west      Longitude of the West-most boundary
     * @param level     Adjust zoom level
     * @param center    Center on the given coordinate?
     * @param duration  Duration for zoom animation (ms)
     * @return Zoom animation
     */
    MapChart.prototype.zoomToRectangle = function (north, east, south, west, level, center, duration) {
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isNaN"](level)) {
            level = 1;
        }
        var w = _core_utils_Math__WEBPACK_IMPORTED_MODULE_15__["min"](west, east);
        var e = _core_utils_Math__WEBPACK_IMPORTED_MODULE_15__["max"](west, east);
        west = w;
        east = e;
        var splitLongitude = _core_utils_Math__WEBPACK_IMPORTED_MODULE_15__["normalizeAngle"](180 - this.deltaLongitude);
        if (splitLongitude > 180) {
            splitLongitude -= 360;
        }
        var newLong = west + (east - west) / 2;
        var d = (west - east);
        if (west < splitLongitude && east > splitLongitude) {
            newLong += 180;
            d = _core_utils_Math__WEBPACK_IMPORTED_MODULE_15__["normalizeAngle"](east - west - 360);
        }
        var zoomLevel = level * Math.min((this.south - this.north) / (south - north), Math.abs((this.west - this.east) / d));
        return this.zoomToGeoPoint({ latitude: north + (south - north) / 2, longitude: newLong }, zoomLevel, center, duration, true);
    };
    /**
     * Zooms in the map, optionally centering on particular latitude/longitude
     * point.
     *
     * @param geoPoint  Optional center point
     * @param duration  Duration for zoom animation (ms)
     * @return Zoom animation
     */
    MapChart.prototype.zoomIn = function (geoPoint, duration, sensitivity) {
        if (sensitivity === void 0) { sensitivity = 1; }
        var step = 1 + (this.zoomStep - 1) * sensitivity;
        if (step < 1) {
            step = 1;
        }
        return this.zoomToGeoPoint(geoPoint, this.zoomLevel * step, false, duration);
    };
    /**
     * Zooms out the map, optionally centering on particular latitude/longitude
     * point.
     *
     * @param geoPoint  Optional center point
     * @param duration  Duration for zoom animation (ms)
     * @return Zoom animation
     */
    MapChart.prototype.zoomOut = function (geoPoint, duration, sensitivity) {
        if (sensitivity === void 0) { sensitivity = 1; }
        var step = 1 + (this.zoomStep - 1) * sensitivity;
        if (step < 1) {
            step = 1;
        }
        return this.zoomToGeoPoint(geoPoint, this.zoomLevel / step, false, duration);
    };
    /**
     * Pans the maps using relative coordinates. E.g.:
     *
     * ```JSON
     * {
     *   x: 0.1,
     *   y: -0.1
     * }
     * ```
     *
     * The above will move the map by 10% to the right, and by 10% upwards.
     *
     * @param shift     Vertical and horizontal shift
     * @param duration  Pan animation duration (ms)
     */
    MapChart.prototype.pan = function (shift, duration) {
        var point = this.geoPointToSVG(this.zoomGeoPoint);
        point.x += this.pixelWidth * shift.x;
        point.y += this.pixelHeight * shift.y;
        this.zoomToGeoPoint(this.svgPointToGeo(point), this.zoomLevel, true, duration, true);
    };
    Object.defineProperty(MapChart.prototype, "zoomGeoPoint", {
        /**
         * Current lat/long coordinates for the center of the viewport. (default
         * zoom reference point)
         *
         * @readonly
         * @return Coordinates
         */
        get: function () {
            var point = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_16__["spritePointToSvg"]({ x: this.pixelWidth / 2, y: this.pixelHeight / 2 }, this);
            return this.svgPointToGeo(point);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "zoomLevel", {
        /**
         * @return Zoom level
         */
        get: function () {
            return this.seriesContainer.scale;
        },
        /**
         * Current zoom level.
         *
         * @readonly
         * @return Zoom level
         */
        set: function (value) {
            this.seriesContainer.scale = value;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Dispatches events after some map transformation, like pan or zoom.
     *
     * @ignore
     */
    MapChart.prototype.handleMapTransform = function () {
        if (this.zoomLevel != this._prevZoomLevel) {
            this.dispatch("zoomlevelchanged");
            this._prevZoomLevel = this.zoomLevel;
            this.svgContainer.readerAlert(this.language.translate("Zoom level changed to %1", this.language.locale, _core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["castString"](this.zoomLevel)));
        }
        if (this.zoomGeoPoint && (this._prevZoomGeoPoint.latitude != this.zoomGeoPoint.latitude || this._prevZoomGeoPoint.longitude != this.zoomGeoPoint.longitude)) {
            this.dispatch("mappositionchanged");
        }
    };
    Object.defineProperty(MapChart.prototype, "smallMap", {
        /**
         * @return Small map
         */
        get: function () {
            if (!this._smallMap) {
                var smallMap = new _map_SmallMap__WEBPACK_IMPORTED_MODULE_10__["SmallMap"]();
                this.smallMap = smallMap;
            }
            return this._smallMap;
        },
        /**
         * A [[SmallMap]] to be used on the map.
         *
         * Please note, that accessing this property will NOT create a small map
         * if it has not yet been created. (except in JSON)
         *
         * ```TypeScript
         * // Create a small map
         * map.smallMap = new am4maps.SmallMap();
         * ```
         * ```JavaScript
         * // Create a small map
         * map.smallMap = new am4maps.SmallMap();
         * ```
         * ```JSON
         * {
         *   // ...
         *   "smallMap": {}
         *   // ...
         * }
         * ```
         *
         * @param smallMap  Small map
         */
        set: function (smallMap) {
            if (this._smallMap) {
                this.removeDispose(this._smallMap);
            }
            this._smallMap = smallMap;
            this._smallMap.chart = this;
            smallMap.parent = this.chartContainer;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "zoomControl", {
        /**
         * @return Zoom control
         */
        get: function () {
            return this._zoomControl;
        },
        /**
         * A [[ZoomControl]] to be used on the map.
         *
         * Please note, that accessing this property will NOT create a zoom control
         * if it has not yet been created. (except in JSON)
         *
         * ```TypeScript
         * // Create a zoom control
         * map.zoomControl = new am4maps.ZoomControl();
         * ```
         * ```JavaScript
         * // Create a zoom control
         * map.zoomControl = new am4maps.ZoomControl();
         * ```
         * ```JSON
         * {
         *   // ...
         *   "zoomControl": {}
         *   // ...
         * }
         * ```
         *
         * @param zoomControl  Zoom control
         */
        set: function (zoomControl) {
            if (this._zoomControl) {
                this.removeDispose(this._zoomControl);
            }
            this._zoomControl = zoomControl;
            zoomControl.chart = this;
            zoomControl.parent = this.chartContainer;
            zoomControl.plusButton.exportable = false;
            zoomControl.minusButton.exportable = false;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates and returns a map series of appropriate type.
     *
     * @return Map series
     */
    MapChart.prototype.createSeries = function () {
        return new _map_MapSeries__WEBPACK_IMPORTED_MODULE_4__["MapSeries"]();
    };
    Object.defineProperty(MapChart.prototype, "deltaLongitude", {
        /**
         * @return Rotation
         */
        get: function () {
            return this.getPropertyValue("deltaLongitude");
        },
        /**
         * Degrees to rotate the map around vertical axis (Y).
         *
         * E.g. if set to -160, the longitude 20 will become a new center, creating
         * a Pacific-centered map.
         *
         * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.
         * @param  value  Rotation
         */
        set: function (value) {
            value = _core_utils_Math__WEBPACK_IMPORTED_MODULE_15__["round"](value, 3);
            if (this.setPropertyValue("deltaLongitude", _map_Geo__WEBPACK_IMPORTED_MODULE_20__["wrapAngleTo180"](value))) {
                this.rotateMap();
                this.updateZoomGeoPoint();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "deltaLatitude", {
        /**
         * @return Rotation
         */
        get: function () {
            return this.getPropertyValue("deltaLatitude");
        },
        /**
         * Degrees to rotate the map around horizontal axis (X).
         *
         * E.g. setting this to 90 will put Antarctica directly in the center of
         * the map.
         *
         * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.
         * @since 4.3.0
         * @param  value  Rotation
         */
        set: function (value) {
            value = _core_utils_Math__WEBPACK_IMPORTED_MODULE_15__["round"](value, 3);
            if (this.setPropertyValue("deltaLatitude", value)) {
                this.rotateMap();
                this.updateZoomGeoPoint();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "deltaGamma", {
        /**
         * @return Rotation
         */
        get: function () {
            return this.getPropertyValue("deltaGamma");
        },
        /**
         * Degrees to rotate the map around "Z" axis. This is the axis that pierces
         * the globe directly from the viewer's point of view.
         *
         * @see {@link https://www.amcharts.com/docs/v4/chart-types/map/#Map_rotation} For more info on map rotation.
         * @since 4.3.0
         * @param  value  Rotation
         */
        set: function (value) {
            value = _core_utils_Math__WEBPACK_IMPORTED_MODULE_15__["round"](value, 3);
            if (this.setPropertyValue("deltaGamma", value)) {
                this.rotateMap();
                this.updateZoomGeoPoint();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    MapChart.prototype.rotateMap = function () {
        if (this.projection.d3Projection) {
            if (this.projection.d3Projection.rotate) {
                this.projection.d3Projection.rotate([this.deltaLongitude, this.deltaLatitude, this.deltaGamma]);
                this.invalidateProjection();
                //this.updateExtremes(); // removal fixes #3292
            }
        }
    };
    Object.defineProperty(MapChart.prototype, "maxPanOut", {
        /**
         * @return Max pan out
         */
        get: function () {
            return this.getPropertyValue("maxPanOut");
        },
        /**
         * Maximum portion of the map's width/height to allow panning "off screen".
         *
         * A value of 0 (zero) will prevent any portion of the the map to be panned
         * outside the viewport.
         *
         * 0.5 will allow half of the map to be outside viewable area.
         *
         * @default 0.7
         * @param value  Max pan out
         */
        set: function (value) {
            this.setPropertyValue("maxPanOut", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "homeGeoPoint", {
        /**
         * @return Home geo point
         */
        get: function () {
            return this.getPropertyValue("homeGeoPoint");
        },
        /**
         * The geographical point to center map on when it is first loaded.
         *
         * The map will also be centered to this point when you call `goHome()`
         * method.
         *
         * @param value  Home geo point
         */
        set: function (value) {
            this.setPropertyValue("homeGeoPoint", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "homeZoomLevel", {
        /**
         * @return Home zoom level
         */
        get: function () {
            return this.getPropertyValue("homeZoomLevel");
        },
        /**
         * The zoom level to put the map in when it is first loaded.
         *
         * The map will also be set to this zoom level when you call `goHome()`
         * method.
         *
         * @param value  Home zoom level
         */
        set: function (value) {
            this.setPropertyValue("homeZoomLevel", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MapChart.prototype, "zoomStep", {
        /**
         * @return Zoom factor
         */
        get: function () {
            return this.getPropertyValue("zoomStep");
        },
        /**
         * When user zooms in or out current zoom level is multiplied or divided
         * by value of this setting.
         *
         * @default 2
         * @param value  Zoom factor
         */
        set: function (value) {
            this.setPropertyValue("zoomStep", value);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Invalidates projection, causing all series to be redrawn.
     *
     * Call this after changing projection or its settings.
     */
    MapChart.prototype.invalidateProjection = function () {
        this.east = undefined;
        this.invalidateDataUsers();
        this.updateCenterGeoPoint();
    };
    Object.defineProperty(MapChart.prototype, "geodataSource", {
        /**
         * Returns a [[DataSource]] specifically for loading Component's data.
         *
         * @return Data source
         */
        get: function () {
            if (!this._dataSources["geodata"]) {
                this.getDataSource("geodata");
            }
            return this._dataSources["geodata"];
        },
        /**
         * Sets a [[DataSource]] to be used for loading Component's data.
         *
         * @param value Data source
         */
        set: function (value) {
            var _this = this;
            if (this._dataSources["geodata"]) {
                this.removeDispose(this._dataSources["geodata"]);
            }
            this._dataSources["geodata"] = value;
            this._dataSources["geodata"].component = this;
            this.events.on("inited", function () {
                _this.loadData("geodata");
            }, this, false);
            this.setDataSourceEvents(value, "geodata");
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    MapChart.prototype.processConfig = function (config) {
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["hasValue"](config["geodata"]) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isString"](config["geodata"])) {
            var name_1 = config["geodata"];
            // Check if there's a map loaded by such name
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["hasValue"](window["am4geodata_" + config["geodata"]])) {
                config["geodata"] = window["am4geodata_" + config["geodata"]];
            }
            // Nope. Let's try maybe we got JSON as string?
            else {
                try {
                    config["geodata"] = JSON.parse(config["geodata"]);
                }
                catch (e) {
                    // No go again. Error out.
                    this.raiseCriticalError(Error("MapChart error: Geodata `" + name_1 + "` is not loaded or is incorrect."), true);
                }
            }
        }
        // Instantiate projection
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["hasValue"](config["projection"]) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["isString"](config["projection"])) {
            config["projection"] = this.createClassInstance(config["projection"]);
        }
        // Set up small map
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["hasValue"](config.smallMap) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["hasValue"](config.smallMap.type)) {
            config.smallMap.type = "SmallMap";
        }
        // Set up zoom control
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["hasValue"](config.zoomControl) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_19__["hasValue"](config.zoomControl.type)) {
            config.zoomControl.type = "ZoomControl";
        }
        _super.prototype.processConfig.call(this, config);
    };
    /**
     * Decorates a new [[Series]] object with required parameters when it is
     * added to the chart.
     *
     * @ignore Exclude from docs
     * @param event  Event
     */
    MapChart.prototype.handleSeriesAdded = function (event) {
        _super.prototype.handleSeriesAdded.call(this, event);
        var series = event.newValue;
        series.scale = this.scaleRatio;
        series.events.on("validated", this.updateCenterGeoPoint, this, false);
    };
    /**
     * This function is used to sort element's JSON config properties, so that
     * some properties that absolutely need to be processed last, can be put at
     * the end.
     *
     * @ignore Exclude from docs
     * @param a  Element 1
     * @param b  Element 2
     * @return Sorting number
     */
    MapChart.prototype.configOrder = function (a, b) {
        if (a == b) {
            return 0;
        }
        // Must come last
        else if (a == "smallMap") {
            return 1;
        }
        else if (b == "smallMap") {
            return -1;
        }
        else if (a == "series") {
            return 1;
        }
        else if (b == "series") {
            return -1;
        }
        else {
            return _super.prototype.configOrder.call(this, a, b);
        }
    };
    /**
     * Adds `projection` to "as is" fields.
     *
     * @param field  Field name
     * @return Assign as is?
     */
    MapChart.prototype.asIs = function (field) {
        return field == "projection" || field == "geodata" || _super.prototype.asIs.call(this, field);
    };
    Object.defineProperty(MapChart.prototype, "centerGeoPoint", {
        /**
         * Geo point of map center
         *
         * @readonly
         */
        get: function () {
            return this._centerGeoPoint;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Resets the map to its original position and zoom level.
     *
     * Use the only parameter to set number of milliseconds for the zoom
     * animation to play.
     *
     * @param  duration  Duration (ms)
     */
    MapChart.prototype.goHome = function (duration) {
        var homeGeoPoint = this.homeGeoPoint;
        if (!homeGeoPoint) {
            homeGeoPoint = this.centerGeoPoint;
        }
        if (homeGeoPoint) {
            this.zoomToGeoPoint(homeGeoPoint, this.homeZoomLevel, true, duration, true);
        }
    };
    /**
     * Sets [[Paper]] instance to use to draw elements.
     *
     * @ignore
     * @param   paper  Paper
     * @return         true if paper was changed, false, if it's the same
     */
    MapChart.prototype.setPaper = function (paper) {
        if (this.svgContainer) {
            this.svgContainer.hideOverflow = true;
        }
        return _super.prototype.setPaper.call(this, paper);
    };
    Object.defineProperty(MapChart.prototype, "backgroundSeries", {
        /**
         * Background series will create polygons that will fill all the map area
         * with some color (or other fill).
         *
         * This might be useful with non-rectangular projections, like Orthographic,
         * Albers, etc.
         *
         * To change background color/opacity access polygon template.
         *
         * ```TypeScript
         * chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color("#fff");
         * chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.1;
         * ```
         * ```JavaScript
         * chart.backgroundSeries.mapPolygons.template.polygon.fill = am4core.color("#fff");
         * chart.backgroundSeries.mapPolygons.template.polygon.fillOpacity = 0.1;
         * ```
         * ```JSON
         * {
         *   "backgroundSeries": {
         *     "mapPolygons": {
         *       "polygon": {
         *         "fill": "#fff",
         *         "fillOpacity": 0.1
         *       }
         *     }
         *   }
         * }
         * ```
         *
         * @since 4.3.0
         */
        get: function () {
            var _this = this;
            if (!this._backgroundSeries) {
                var backgroundSeries = new _map_MapPolygonSeries__WEBPACK_IMPORTED_MODULE_7__["MapPolygonSeries"]();
                backgroundSeries.parent = this.seriesContainer;
                backgroundSeries.chart = this;
                backgroundSeries.hiddenInLegend = true;
                backgroundSeries.mapPolygons.template.focusable = false;
                backgroundSeries.addDisposer(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_2__["Disposer"](function () {
                    _this._backgroundSeries = undefined;
                }));
                this._disposers.push(backgroundSeries);
                var interfaceColors = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__["InterfaceColorSet"]();
                var color = interfaceColors.getFor("background");
                var polygonTemplate = backgroundSeries.mapPolygons.template.polygon;
                polygonTemplate.stroke = color;
                polygonTemplate.fill = color;
                polygonTemplate.fillOpacity = 0;
                polygonTemplate.strokeOpacity = 0;
                //polygonTemplate.focusable = false;
                backgroundSeries.mapPolygons.create();
                this._backgroundSeries = backgroundSeries;
            }
            return this._backgroundSeries;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Prepares the legend instance for use in this chart.
     *
     * @param legend  Legend
     */
    MapChart.prototype.setLegend = function (legend) {
        _super.prototype.setLegend.call(this, legend);
        if (legend) {
            legend.parent = this;
        }
    };
    /**
     * @param  value  Tap to activate?
     */
    MapChart.prototype.setTapToActivate = function (value) {
        _super.prototype.setTapToActivate.call(this, value);
        // setup other containers
        this.seriesContainer.interactions.isTouchProtected = true;
        this.panSprite.interactions.isTouchProtected = true;
    };
    MapChart.prototype.handleTapToActivate = function () {
        _super.prototype.handleTapToActivate.call(this);
        this.seriesContainer.interactions.isTouchProtected = false;
        this.panSprite.interactions.isTouchProtected = false;
    };
    MapChart.prototype.handleTapToActivateDeactivation = function () {
        _super.prototype.handleTapToActivateDeactivation.call(this);
        this.seriesContainer.interactions.isTouchProtected = true;
        this.panSprite.interactions.isTouchProtected = true;
    };
    /**
     * Adds easing functions to "function" fields.
     *
     * @param field  Field name
     * @return Assign as function?
     */
    MapChart.prototype.asFunction = function (field) {
        return field == "zoomEasing" || _super.prototype.asIs.call(this, field);
    };
    /**
     * @ignore
     * @return Has license?
     */
    MapChart.prototype.hasLicense = function () {
        if (_core_Options__WEBPACK_IMPORTED_MODULE_14__["options"].commercialLicense) {
            return true;
        }
        if (!_super.prototype.hasLicense.call(this)) {
            return false;
        }
        for (var i = 0; i < _core_Options__WEBPACK_IMPORTED_MODULE_14__["options"].licenses.length; i++) {
            if (_core_Options__WEBPACK_IMPORTED_MODULE_14__["options"].licenses[i].match(/^MP.{5,}/i)) {
                return true;
            }
        }
        return false;
    };
    return MapChart;
}(_SerialChart__WEBPACK_IMPORTED_MODULE_1__["SerialChart"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_13__["registry"].registeredClasses["MapChart"] = MapChart;
//# sourceMappingURL=MapChart.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/PercentChart.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/PercentChart.js ***!
  \*********************************************************************************/
/*! exports provided: PercentChartDataItem, PercentChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PercentChartDataItem", function() { return PercentChartDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PercentChart", function() { return PercentChart; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _SerialChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SerialChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js");
/* harmony import */ var _series_PercentSeries__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../series/PercentSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PercentSeries.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/**
 * Percent chart module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[PercentChart]].
 *
 * @see {@link DataItem}
 */
var PercentChartDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PercentChartDataItem, _super);
    /**
     * Constructor
     */
    function PercentChartDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "PercentChartDataItem";
        _this.applyTheme();
        return _this;
    }
    return PercentChartDataItem;
}(_SerialChart__WEBPACK_IMPORTED_MODULE_1__["SerialChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * This is a base class for "percent-based" chart types like Pie and Funnel.
 *
 * @see {@link IPercentChartEvents} for a list of available Events
 * @see {@link IPercentChartAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for Pie chart documentation
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for Sliced chart documentation
 */
var PercentChart = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PercentChart, _super);
    /**
     * Constructor
     */
    function PercentChart() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "PercentChart";
        _this.align = "none";
        _this.valign = "none";
        // so that the chart is always drawn, even the legend wants all the space
        _this.chartContainer.minHeight = 50;
        _this.chartContainer.minWidth = 50;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * (Re)validates chart data.
     *
     * @ignore Exclude from docs
     */
    PercentChart.prototype.validateData = function () {
        _super.prototype.validateData.call(this);
        this.feedLegend();
    };
    /**
     * Setups the legend to use the chart's data.
     * @ignore
     */
    PercentChart.prototype.feedLegend = function () {
        var legend = this.legend;
        if (legend) {
            var legendData_1 = [];
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_4__["each"](this.series.iterator(), function (series) {
                if (!series.hiddenInLegend) {
                    _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_4__["each"](series.dataItems.iterator(), function (dataItem) {
                        if (!dataItem.hiddenInLegend) {
                            legendData_1.push(dataItem);
                            if (!dataItem.legendSettings) {
                                dataItem.legendSettings = series.legendSettings;
                            }
                        }
                    });
                }
            });
            legend.data = legendData_1;
            legend.dataFields.name = "category";
        }
    };
    /**
     * Creates a new [[PercentSeries]].
     *
     * @return New series
     */
    PercentChart.prototype.createSeries = function () {
        return new _series_PercentSeries__WEBPACK_IMPORTED_MODULE_2__["PercentSeries"]();
    };
    /**
     * @ignore
     */
    PercentChart.prototype.setLegend = function (legend) {
        _super.prototype.setLegend.call(this, legend);
        if (legend) {
            legend.labels.template.text = "{category}";
            legend.valueLabels.template.text = "{value.percent.formatNumber('#.0')}%";
            legend.itemContainers.template.events.on("over", function (event) {
                var percentSeriesDataItem = event.target.dataItem.dataContext;
                if (percentSeriesDataItem.visible && !percentSeriesDataItem.isHiding) {
                    var slice = percentSeriesDataItem.slice;
                    slice.dispatchImmediately("over");
                    slice.isHover = true;
                    slice.interactions.isRealHover = true;
                }
            });
            legend.itemContainers.template.events.on("out", function (event) {
                var percentSeriesDataItem = event.target.dataItem.dataContext;
                var slice = percentSeriesDataItem.slice;
                slice.dispatchImmediately("out");
                slice.isHover = false;
            });
        }
    };
    return PercentChart;
}(_SerialChart__WEBPACK_IMPORTED_MODULE_1__["SerialChart"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @hidden
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["PercentChart"] = PercentChart;
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["PercentChartDataItem"] = PercentChartDataItem;
//# sourceMappingURL=PercentChart.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart.js":
/*!*****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart.js ***!
  \*****************************************************************************/
/*! exports provided: PieChartDataItem, PieChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PieChartDataItem", function() { return PieChartDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PieChart", function() { return PieChart; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _PercentChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PercentChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/PercentChart.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _series_PieSeries__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../series/PieSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Pie chart module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */








/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[PieChart]].
 *
 * @see {@link DataItem}
 */
var PieChartDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PieChartDataItem, _super);
    /**
     * Constructor
     */
    function PieChartDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "PieChartDataItem";
        _this.applyTheme();
        return _this;
    }
    return PieChartDataItem;
}(_PercentChart__WEBPACK_IMPORTED_MODULE_1__["PercentChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a Pie chart.
 *
 * ```TypeScript
 * // Includes
 * import * as am4core from "@amcharts/amcharts4/core";
 * import * as am4charts from "@amcharts/amcharts4/charts";
 *
 * // Create chart
 * let chart = am4core.create("chartdiv", am4charts.PieChart);
 *
 * // Set data
 * chart.data = [{
 * 	"country": "Lithuania",
 * 	"litres": 501.9
 * }, {
 * 	"country": "Czechia",
 * 	"litres": 301.9
 * }, {
 * 	"country": "Ireland",
 * 	"litres": 201.1
 * }];
 *
 * // Create series
 * let series = chart.series.push(new am4charts.PieSeries());
 * series.dataFields.value = "litres";
 * series.dataFields.category = "country";
 * ```
 * ```JavaScript
 * // Create chart
 * var chart = am4core.create("chartdiv", am4charts.PieChart);
 *
 * // The following would work as well:
 * // var chart = am4core.create("chartdiv", "PieChart");
 *
 * // Set data
 * chart.data = [{
 * 	"country": "Lithuania",
 * 	"litres": 501.9
 * }, {
 * 	"country": "Czechia",
 * 	"litres": 301.9
 * }, {
 * 	"country": "Ireland",
 * 	"litres": 201.1
 * }];
 *
 * // Create series
 * var series = chart.series.push(new am4charts.PieSeries());
 * series.dataFields.value = "litres";
 * series.dataFields.category = "country";
 * ```
 * ```JSON
 * var chart = am4core.createFromConfig({
 *
 * 	// Series
 * 	"series": [{
 * 		"type": "PieSeries",
 * 		"dataFields": {
 * 			"value": "litres",
 * 			"category": "country"
 * 		}
 * 	}],
 *
 * 	// Data
 * 	"data": [{
 * 		"country": "Lithuania",
 * 		"litres": 501.9
 * 	}, {
 * 		"country": "Czechia",
 * 		"litres": 301.9
 * 	}, {
 * 		"country": "Ireland",
 * 		"litres": 201.1
 * 	}]
 *
 * }, "chartdiv", "PieChart");
 * ```
 *
 * @see {@link IPieChartEvents} for a list of available Events
 * @see {@link IPieChartAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation
 * @important
 */
var PieChart = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PieChart, _super);
    /**
     * Constructor
     */
    function PieChart() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "PieChart";
        // Set defaults
        _this.innerRadius = 0;
        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(80);
        _this.align = "none";
        _this.valign = "none";
        _this.startAngle = -90;
        _this.endAngle = 270;
        var seriesContainer = _this.seriesContainer;
        seriesContainer.isMeasured = true;
        seriesContainer.valign = "middle";
        seriesContainer.align = "center";
        seriesContainer.layout = "absolute";
        seriesContainer.width = undefined;
        seriesContainer.height = undefined;
        // so that the pie is always drawn, even the legend wants all the space
        _this.chartContainer.minHeight = 50;
        _this.chartContainer.minWidth = 50;
        _this.chartContainer.events.on("maxsizechanged", _this.updateRadius, _this, false); // need this for the chart to change radius if legend is removed/disabled
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    PieChart.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Add a default screen reader title for accessibility
        // This will be overridden in screen reader if there are any `titles` set
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Pie chart");
        }
    };
    /**
     * (Re)validates the chart, causing it to redraw.
     *
     * @ignore Exclude from docs
     */
    PieChart.prototype.validateLayout = function () {
        _super.prototype.validateLayout.call(this);
        this.updateRadius();
    };
    /**
     * Decorates a new [[Series]] object with required parameters when it is
     * added to the chart.
     *
     * @ignore Exclude from docs
     * @param event  Event
     */
    PieChart.prototype.handleSeriesAdded = function (event) {
        _super.prototype.handleSeriesAdded.call(this, event);
        this._chartPixelRadius = undefined;
        this.updateSeriesAngles();
    };
    PieChart.prototype.updateSeriesAngles = function () {
        var _this = this;
        this.series.each(function (series) {
            series._startAngleInternal = _this.startAngle;
            series._endAngleInternal = _this.endAngle;
            //series.defaultState.properties.startAngle = this.startAngle;
            //series.defaultState.properties.endAngle = this.endAngle;
        });
    };
    /**
     * Recalculates pie's radius, based on a number of criteria.
     *
     * @ignore Exclude from docs
     */
    PieChart.prototype.updateRadius = function () {
        var chartCont = this.chartContainer;
        var rect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getArcRect"](this.startAngle, this.endAngle, 1);
        var innerRect = { x: 0, y: 0, width: 0, height: 0 };
        var innerRadius = this.innerRadius;
        if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["Percent"]) {
            innerRect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getArcRect"](this.startAngle, this.endAngle, innerRadius.value);
        }
        // @todo handle this when innerRadius set in pixels (do it for radar also)
        rect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_7__["getCommonRectangle"]([rect, innerRect]);
        var maxRadius = Math.min(chartCont.innerWidth / rect.width, chartCont.innerHeight / rect.height);
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](maxRadius)) {
            maxRadius = 0;
        }
        var chartRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["relativeRadiusToValue"](this.radius, maxRadius);
        var chartPixelInnerRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["relativeRadiusToValue"](this.innerRadius, maxRadius);
        var seriesRadius = (chartRadius - chartPixelInnerRadius) / this.series.length;
        if (chartRadius != this._chartPixelRadius || chartPixelInnerRadius != this._chartPixelInnerRadius) {
            this._chartPixelRadius = chartRadius;
            this._chartPixelInnerRadius = chartPixelInnerRadius;
            //@todo: make it possible to set series radius in percent
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__["each"](_core_utils_Iterator__WEBPACK_IMPORTED_MODULE_5__["indexed"](this.series.iterator()), function (a) {
                var i = a[0];
                var series = a[1];
                var radius = chartPixelInnerRadius + _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["relativeRadiusToValue"](series.radius, chartRadius - chartPixelInnerRadius);
                var innerRadius = chartPixelInnerRadius + _core_utils_Utils__WEBPACK_IMPORTED_MODULE_6__["relativeRadiusToValue"](series.innerRadius, chartRadius - chartPixelInnerRadius);
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](radius)) {
                    radius = chartPixelInnerRadius + seriesRadius * (i + 1);
                }
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_8__["isNumber"](innerRadius)) {
                    innerRadius = chartPixelInnerRadius + seriesRadius * i;
                }
                series.pixelRadius = radius;
                series.pixelInnerRadius = innerRadius;
            });
            this.seriesContainer.definedBBox = { x: chartRadius * rect.x, y: chartRadius * rect.y, width: chartRadius * rect.width, height: chartRadius * rect.height };
            this.seriesContainer.invalidateLayout();
            this.bulletsContainer.x = this.seriesContainer.x;
            this.bulletsContainer.y = this.seriesContainer.y;
        }
    };
    Object.defineProperty(PieChart.prototype, "radius", {
        /**
         * @return Radius (px or relative)
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * Sets radius of the pie chart.
         *
         * Setting to a number will mean a fixed pixel radius.
         *
         * Setting to an instance of [[Percent]] will mean a relative radius to
         * available space.
         *
         * E.g.:
         *
         * ```TypeScript
         * // Set pie chart to be at 50% of the available space
         * pieChart.radius = am4core.percent.percent(50);
         * ```
         * ```JavaScript
         * // Set pie chart to be at 50% of the available space
         * pieChart.radius = am4core.percent.percent(50);
         * ```
         * ```JSON
         * {
         *   // Set pie chart to be at 50% of the available space
         *   "radius": "50%"
         * }
         * ```
         *
         * @default 80%
         * @param value  Radius (px or relative)
         */
        set: function (value) {
            if (this.setPercentProperty("radius", value, true, false, 10, false)) {
                this.invalidateLayout();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChart.prototype, "innerRadius", {
        /**
         * @return Relative inner radius (0-1)
         */
        get: function () {
            return this.getPropertyValue("innerRadius");
        },
        /**
         * Sets relative inner radius (to create a donut chart).
         *
         * Setting to a number will mean a fixed pixel radius.
         *
         * Setting to an instance of [[Percent]] will mean a relative radius to
         * available space.
         *
         * NOTE: it's not related to `radius`.
         *
         * E.g.:
         *
         * ```TypeScript
         * // Set pie chart to be at 50% of the available space
         * pieChart.innerRadius = am4core.percent.percent(50);
         * ```
         * ```JavaScript
         * // Set pie chart to be at 50% of the available space
         * pieChart.innerRadius = am4core.percent.percent(50);
         * ```
         * ```JSON
         * {
         *   // Set pie chart to be at 50% of the available space
         *   "innerRadius": "50%"
         * }
         * ```
         *
         * @default 0
         * @param value  Relative inner radius (0-1)
         * @todo Setting things like `innerRadius` modifies `slice.radius` and it then looks like it is not the same value as in default state
         */
        set: function (value) {
            this.setPercentProperty("innerRadius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates a new [[PieSeries]].
     *
     * @return New series
     */
    PieChart.prototype.createSeries = function () {
        return new _series_PieSeries__WEBPACK_IMPORTED_MODULE_3__["PieSeries"]();
    };
    Object.defineProperty(PieChart.prototype, "startAngle", {
        /**
         * @return Start angle (degrees)
         */
        get: function () {
            return this.getPropertyValue("startAngle");
        },
        /**
         * Starting angle of the Pie circle. (degrees)
         *
         * Normally, a pie chart begins (the left side of the first slice is drawn)
         * at the top center. (at -90 degrees)
         *
         * You can use `startAngle` to change this setting.
         *
         * E.g. setting this to 0 will make the first slice be drawn to the right.
         *
         * For a perfect circle the absolute sum of `startAngle` and `endAngle`
         * needs to be 360.
         *
         * However, it's **not** necessary to do so. You can set to those lesser
         * numbers, to create semi-circles.
         *
         * E.g. `startAngle = -90` with `endAngle = 0` will create a Pie chart that
         * looks like a quarter of a circle.
         *
         * NOTE: This setting is not supported in a 3D pie chart.
         *
         * @default -90
         * @param value  Start angle (degrees)
         */
        set: function (value) {
            if (this.setPropertyValue("startAngle", value)) {
                this.updateRadius();
                this.updateSeriesAngles();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChart.prototype, "endAngle", {
        /**
         * @return End angle (degrees)
         */
        get: function () {
            return this.getPropertyValue("endAngle");
        },
        /**
         * End angle of the Pie circle. (degrees)
         *
         * Normally, a pie chart ends (the right side of the last slice is drawn)
         * at the top center. (at 270 degrees)
         *
         * You can use `endAngle` to change this setting.
         *
         * For a perfect circle the absolute sum of `startAngle` and `endAngle`
         * needs to be 360.
         *
         * However, it's **not** necessary to do so. You can set to those lesser
         * numbers, to create semi-circles.
         *
         * E.g. `startAngle = -90` with `endAngle = 0` will create a Pie chart that
         * looks like a quarter of a circle.
         *
         * NOTE: This setting is not supported in a 3D pie chart.
         *
         * @default 270
         * @param value  End angle (degrees)
         */
        set: function (value) {
            if (this.setPropertyValue("endAngle", value)) {
                this.updateRadius();
                this.updateSeriesAngles();
            }
        },
        enumerable: true,
        configurable: true
    });
    return PieChart;
}(_PercentChart__WEBPACK_IMPORTED_MODULE_1__["PercentChart"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["PieChart"] = PieChart;
_core_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["PieChartDataItem"] = PieChartDataItem;
//# sourceMappingURL=PieChart.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart3D.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart3D.js ***!
  \*******************************************************************************/
/*! exports provided: PieChart3DDataItem, PieChart3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PieChart3DDataItem", function() { return PieChart3DDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "PieChart3D", function() { return PieChart3D; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _PieChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PieChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart.js");
/* harmony import */ var _series_PieSeries3D__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../series/PieSeries3D */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries3D.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/**
 * 3D Pie chart module.
 */

/**
 * ============================================================================
 * Imports
 * ============================================================================
 * @hidden
 */




/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[PieChart3D]].
 *
 * @see {@link DataItem}
 */
var PieChart3DDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PieChart3DDataItem, _super);
    /**
     * Constructor
     */
    function PieChart3DDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "PieChart3DDataItem";
        _this.applyTheme();
        return _this;
    }
    return PieChart3DDataItem;
}(_PieChart__WEBPACK_IMPORTED_MODULE_1__["PieChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a 3D Pie chart.
 *
 *  * ```TypeScript
 * // Includes
 * import * as am4core from "@amcharts/amcharts4/core";
 * import * as am4charts from "@amcharts/amcharts4/charts";
 *
 * // Create chart
 * let chart = am4core.create("chartdiv", am4charts.Pie3DChart);
 *
 * // Set data
 * chart.data = [{
 * 	"country": "Lithuania",
 * 	"litres": 501.9
 * }, {
 * 	"country": "Czechia",
 * 	"litres": 301.9
 * }, {
 * 	"country": "Ireland",
 * 	"litres": 201.1
 * }];
 *
 * // Create series
 * let series = chart.series.push(new am4charts.Pie3DSeries());
 * series.dataFields.value = "litres";
 * series.dataFields.category = "country";
 * ```
 * ```JavaScript
 * // Create chart
 * var chart = am4core.create("chartdiv", am4charts.Pie3DChart);
 *
 * // The following would work as well:
 * // var chart = am4core.create("chartdiv", "Pie3DChart");
 *
 * // Set data
 * chart.data = [{
 * 	"country": "Lithuania",
 * 	"litres": 501.9
 * }, {
 * 	"country": "Czechia",
 * 	"litres": 301.9
 * }, {
 * 	"country": "Ireland",
 * 	"litres": 201.1
 * }];
 *
 * // Create series
 * var series = chart.series.push(new am4charts.Pie3DSeries());
 * series.dataFields.value = "litres";
 * series.dataFields.category = "country";
 * ```
 * ```JSON
 * var chart = am4core.createFromConfig({
 *
 * 	// Series
 * 	"series": [{
 * 		"type": "Pie3DSeries",
 * 		"dataFields": {
 * 			"value": "litres",
 * 			"category": "country"
 * 		}
 * 	}],
 *
 * 	// Data
 * 	"data": [{
 * 		"country": "Lithuania",
 * 		"litres": 501.9
 * 	}, {
 * 		"country": "Czechia",
 * 		"litres": 301.9
 * 	}, {
 * 		"country": "Ireland",
 * 		"litres": 201.1
 * 	}]
 *
 * }, "chartdiv", "Pie3DChart");
 * ```
 *
 * @see {@link IPieChart3DEvents} for a list of available Events
 * @see {@link IPieChart3DAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/pie-chart/} for documentation
 * @important
 */
var PieChart3D = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(PieChart3D, _super);
    /**
     * Constructor
     */
    function PieChart3D() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "PieChart3D";
        _this.depth = 20;
        _this.angle = 10;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(PieChart3D.prototype, "depth", {
        /**
         * @return Depth (px)
         */
        get: function () {
            return this.getPropertyValue("depth");
        },
        /**
         * Depth of the 3D pie in pixels.
         *
         * This will determine "height" of the pie.
         *
         * @default 20
         * @param value  Depth (px)
         */
        set: function (value) {
            if (this.setPropertyValue("depth", value)) {
                this.invalidateDataUsers();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(PieChart3D.prototype, "angle", {
        /**
         * @return Angle (degrees)
         */
        get: function () {
            return this.getPropertyValue("angle");
        },
        /**
         * An angle of a "point of view" in degrees. Possible range 0 - 90.
         *
         * @default 10
         * @param value  Angle (degrees)
         */
        set: function (value) {
            value = _core_utils_Math__WEBPACK_IMPORTED_MODULE_4__["fitToRange"](value, 0, 90);
            if (this.setPropertyValue("angle", value)) {
                this.invalidateDataUsers();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates and returns a new Series.
     *
     * @return New series
     */
    PieChart3D.prototype.createSeries = function () {
        return new _series_PieSeries3D__WEBPACK_IMPORTED_MODULE_2__["PieSeries3D"]();
    };
    return PieChart3D;
}(_PieChart__WEBPACK_IMPORTED_MODULE_1__["PieChart"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["PieChart3D"] = PieChart3D;
//# sourceMappingURL=PieChart3D.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/RadarChart.js":
/*!*******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/RadarChart.js ***!
  \*******************************************************************************/
/*! exports provided: RadarChartDataItem, RadarChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadarChartDataItem", function() { return RadarChartDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RadarChart", function() { return RadarChart; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _XYChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XYChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _series_RadarSeries__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../series/RadarSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarSeries.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_elements_Circle__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/elements/Circle */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Circle.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _axes_AxisRendererCircular__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axes/AxisRendererCircular */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererCircular.js");
/* harmony import */ var _axes_AxisRendererRadial__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../axes/AxisRendererRadial */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererRadial.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Radar chart module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */













/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[RadarChart]].
 *
 * @see {@link DataItem}
 */
var RadarChartDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(RadarChartDataItem, _super);
    /**
     * Constructor
     */
    function RadarChartDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "RadarChartDataItem";
        _this.applyTheme();
        return _this;
    }
    return RadarChartDataItem;
}(_XYChart__WEBPACK_IMPORTED_MODULE_1__["XYChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a Radar chart.
 *
 * @see {@link IRadarChartEvents} for a list of available Events
 * @see {@link IRadarChartAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/radar-chart/} for documentation
 * @important
 */
var RadarChart = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(RadarChart, _super);
    /**
     * Constructor
     */
    function RadarChart() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Defines X axis renderer type.
         */
        _this._axisRendererX = _axes_AxisRendererCircular__WEBPACK_IMPORTED_MODULE_7__["AxisRendererCircular"];
        /**
         * Defines Y axis renderer type.
         */
        _this._axisRendererY = _axes_AxisRendererRadial__WEBPACK_IMPORTED_MODULE_8__["AxisRendererRadial"];
        /**
         * used by cursor. We adjust innerradius if start and end angle are close to each other
         * @ignore Exclude from docs
         */
        _this.innerRadiusModifyer = 1;
        /**
         * @ignore
         */
        _this.mr = 1;
        _this.className = "RadarChart";
        _this.startAngle = -90;
        _this.endAngle = 270;
        _this.radius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(80);
        _this.innerRadius = 0;
        var radarContainer = _this.plotContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_4__["Container"]);
        radarContainer.shouldClone = false;
        radarContainer.layout = "absolute";
        radarContainer.align = "center";
        radarContainer.valign = "middle";
        _this.seriesContainer.parent = radarContainer;
        _this.radarContainer = radarContainer;
        _this.bulletsContainer.parent = radarContainer;
        _this.axisBulletsContainer = radarContainer;
        _this._cursorContainer = radarContainer;
        _this.chartContainer.events.on("maxsizechanged", _this.invalidate, _this, false); // need this for the chart to change radius if legend is removed/disabled
        _this._bulletMask = radarContainer.createChild(_core_elements_Circle__WEBPACK_IMPORTED_MODULE_5__["Circle"]);
        _this._bulletMask.shouldClone = false;
        _this._bulletMask.element = _this.paper.add("path");
        _this._bulletMask.opacity = 0;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    RadarChart.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Add a default screen reader title for accessibility
        // This will be overridden in screen reader if there are any `titles` set
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Radar chart");
        }
    };
    /**
     * Decorates Axis with required properties for this chart.
     *
     * @param axis  Axis
     */
    RadarChart.prototype.processAxis = function (axis) {
        _super.prototype.processAxis.call(this, axis);
        var renderer = axis.renderer;
        renderer.gridContainer.parent = renderer;
        renderer.breakContainer.parent = renderer;
        axis.parent = this.radarContainer;
        renderer.toBack();
    };
    /**
     * Updates all X axes after range change event.
     */
    RadarChart.prototype.handleXAxisRangeChange = function () {
        _super.prototype.handleXAxisRangeChange.call(this);
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](this.yAxes.iterator(), function (axis) {
            axis.invalidate();
        });
    };
    /**
     * Updates all Y axes after range change event.
     */
    RadarChart.prototype.handleYAxisRangeChange = function () {
        _super.prototype.handleYAxisRangeChange.call(this);
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](this.xAxes.iterator(), function (axis) {
            axis.invalidate();
        });
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    RadarChart.prototype.processConfig = function (config) {
        if (config) {
            // Set up cursor
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](config.cursor) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](config.cursor.type)) {
                config.cursor.type = "RadarCursor";
            }
            // Set up series
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["hasValue"](config.series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_11__["isArray"](config.series)) {
                for (var i = 0, len = config.series.length; i < len; i++) {
                    config.series[i].type = config.series[i].type || "RadarSeries";
                }
            }
            // Set up axes
            /*if ($type.hasValue(config.xAxes) && $type.isArray(config.xAxes)) {
                for (let i = 0, len = config.xAxes.length; i < len; i++) {
                    config.xAxes[i].type = config.xAxes[i].type || "AxisRendererCircular";
                }
            }
            if ($type.hasValue(config.yAxes) && $type.isArray(config.yAxes)) {
                for (let i = 0, len = config.yAxes.length; i < len; i++) {
                    config.yAxes[i].type = config.yAxes[i].type || "AxisRendererRadial";
                }
            }*/
        }
        _super.prototype.processConfig.call(this, config);
    };
    /**
     * Does calculations before drawing the chart.
     */
    RadarChart.prototype.beforeDraw = function () {
        _super.prototype.beforeDraw.call(this);
        var plotContainer = this.plotContainer;
        var rect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["getArcRect"](this.startAngle, this.endAngle, 1);
        var innerRect = { x: 0, y: 0, width: 0, height: 0 };
        var wr = plotContainer.innerWidth / rect.width;
        var hr = plotContainer.innerHeight / rect.height;
        var innerRadius = this.innerRadius;
        if (innerRadius instanceof _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["Percent"]) {
            var value = innerRadius.value;
            var mr = Math.min(wr, hr);
            this.mr = mr;
            value = Math.max(mr * value, mr - Math.min(plotContainer.innerHeight, plotContainer.innerWidth)) / mr;
            innerRect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["getArcRect"](this.startAngle, this.endAngle, value);
            this.innerRadiusModifyer = value / innerRadius.value;
            innerRadius = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(value * 100);
        }
        // @todo handle this when innerRadius set in pixels (do it for pie also)
        rect = _core_utils_Math__WEBPACK_IMPORTED_MODULE_12__["getCommonRectangle"]([rect, innerRect]);
        var maxRadius = Math.min(plotContainer.innerWidth / rect.width, plotContainer.innerHeight / rect.height);
        var diameter = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["relativeRadiusToValue"](this.radius, maxRadius) * 2 || 0;
        var radius = diameter / 2;
        var startAngle = this.startAngle;
        var endAngle = this.endAngle;
        this._pixelInnerRadius = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_9__["relativeRadiusToValue"](innerRadius, radius);
        this._bulletMask.path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_13__["arc"](startAngle, endAngle - startAngle, radius, this._pixelInnerRadius);
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](this.xAxes.iterator(), function (axis) {
            if (axis.renderer.useChartAngles) {
                axis.renderer.startAngle = startAngle;
                axis.renderer.endAngle = endAngle;
            }
            axis.width = diameter;
            axis.height = diameter;
            //axis.renderer.width = diameter;
            //axis.renderer.height = diameter;
            axis.renderer.pixelRadiusReal = radius;
            //axis.renderer.innerRadius = innerRadius;
        });
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_10__["each"](this.yAxes.iterator(), function (axis) {
            axis.renderer.startAngle = startAngle;
            axis.renderer.endAngle = endAngle;
            axis.width = diameter;
            axis.height = diameter;
            //axis.renderer.width = diameter;
            //axis.renderer.height = diameter;
            axis.renderer.pixelRadiusReal = radius;
            //axis.renderer.innerRadius = innerRadius;
        });
        var cursor = this.cursor;
        if (cursor) {
            cursor.width = diameter;
            cursor.height = diameter;
            cursor.startAngle = startAngle;
            cursor.endAngle = endAngle;
        }
        this.radarContainer.definedBBox = { x: radius * rect.x, y: radius * rect.y, width: radius * rect.width, height: radius * rect.height };
        this.radarContainer.validatePosition();
    };
    /**
     * Creates and returns a new Series, suitable for RadarChart.
     *
     * @return New Series
     */
    RadarChart.prototype.createSeries = function () {
        return new _series_RadarSeries__WEBPACK_IMPORTED_MODULE_3__["RadarSeries"]();
    };
    Object.defineProperty(RadarChart.prototype, "startAngle", {
        /**
         * @return Start angle (degrees)
         */
        get: function () {
            return this.getPropertyValue("startAngle");
        },
        /**
         * Starting angle of the Radar face. (degrees)
         *
         * Normally, a circular radar face begins (the radial axis is drawn) at the
         * top center. (at -90 degrees)
         *
         * You can use `startAngle` to change this setting.
         *
         * E.g. setting this to 0 will make the radial axis start horizontally to
         * the right, as opposed to vertical.
         *
         * For a perfect circle the absolute sum of `startAngle` and `endAngle`
         * needs to be 360.
         *
         * However, it's **not** necessary to do so. You can set those to lesser
         * numbers, to create semi-circles.
         *
         * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that
         * looks like a quarter of a circle.
         *
         * @default -90
         * @param value  Start angle (degrees)
         */
        set: function (value) {
            this.setPropertyValue("startAngle", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadarChart.prototype, "endAngle", {
        /**
         * @return End angle (degrees)
         */
        get: function () {
            return this.getPropertyValue("endAngle");
        },
        /**
         * Starting angle of the Radar face. (degrees)
         *
         * Normally, a circular radar face ends (the radial axis is drawn) exactly
         * where it has started, forming a full 360 circle. (at 270 degrees)
         *
         * You can use `endAngle` to end the circle somewhere else.
         *
         * E.g. setting this to 180 will make the radar face end at horizontal line
         * to the left off the center.
         *
         * For a perfect circle the absolute sum of `startAngle` and `endAngle`
         * needs to be 360.
         *
         * However, it's **not** necessary to do so. You can set those to lesser
         * numbers, to create semi-circles.
         *
         * E.g. `startAngle = -90` with `endAngle = 0` will create a radar face that
         * looks like a quarter of a circle.
         *
         * @default -90
         * @param value  End angle (degrees)
         */
        set: function (value) {
            this.setPropertyValue("endAngle", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadarChart.prototype, "radius", {
        /**
         * @return Outer radius
         */
        get: function () {
            return this.getPropertyValue("radius");
        },
        /**
         * Outer radius of the Radar face.
         *
         * This can either be in absolute pixel value, or relative [[Percent]].
         *
         * @param value  Outer radius
         */
        set: function (value) {
            this.setPercentProperty("radius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadarChart.prototype, "pixelInnerRadius", {
        /**
         * @return Inner radius in pixels
         */
        get: function () {
            return this._pixelInnerRadius;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(RadarChart.prototype, "innerRadius", {
        /**
         * @return Inner radius
         */
        get: function () {
            return this.getPropertyValue("innerRadius");
        },
        /**
         * Inner radius of the radar face.
         *
         * This can either be in absolute pixel value, or relative [[Percent]].
         *
         * If set in Percent, it will be relative to `radius`. (outer radius)
         *
         * @param value Inner radius
         */
        set: function (value) {
            this.setPercentProperty("innerRadius", value, true, false, 10, false);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Triggers (re)rendering of the horizontal (X) axis.
     *
     * @ignore Exclude from docs
     * @param axis Axis
     */
    RadarChart.prototype.updateXAxis = function (renderer) {
        //do not call super!
        if (renderer) {
            renderer.processRenderer();
        }
    };
    /**
     * Triggers (re)rendering of the vertical (Y) axis.
     *
     * @ignore Exclude from docs
     * @param axis Axis
     */
    RadarChart.prototype.updateYAxis = function (renderer) {
        // do not call super!
        if (renderer) {
            renderer.processRenderer();
        }
    };
    return RadarChart;
}(_XYChart__WEBPACK_IMPORTED_MODULE_1__["XYChart"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_6__["registry"].registeredClasses["RadarChart"] = RadarChart;
//# sourceMappingURL=RadarChart.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/SankeyDiagram.js":
/*!**********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/SankeyDiagram.js ***!
  \**********************************************************************************/
/*! exports provided: SankeyDiagramDataItem, SankeyDiagram */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SankeyDiagramDataItem", function() { return SankeyDiagramDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SankeyDiagram", function() { return SankeyDiagram; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _FlowDiagram__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./FlowDiagram */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/FlowDiagram.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _elements_SankeyNode__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../elements/SankeyNode */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyNode.js");
/* harmony import */ var _elements_SankeyLink__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../elements/SankeyLink */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyLink.js");
/* harmony import */ var _core_utils_Animation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/Animation */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Animation.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Object__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Object */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Object.js");
/**
 * Sankey diagram module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */










/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
//@todo rearange notes after dragged
/**
 * Defines a [[DataItem]] for [[SankeyDiagram]].
 *
 * @see {@link DataItem}
 */
var SankeyDiagramDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SankeyDiagramDataItem, _super);
    /**
     * Constructor
     */
    function SankeyDiagramDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "SankeyDiagramDataItem";
        _this.applyTheme();
        return _this;
    }
    return SankeyDiagramDataItem;
}(_FlowDiagram__WEBPACK_IMPORTED_MODULE_1__["FlowDiagramDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a Sankey Diagram chart.
 *
 * @see {@link ISankeyDiagramEvents} for a list of available Events
 * @see {@link ISankeyDiagramAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/sankey-diagram/} for documentation
 * @important
 */
var SankeyDiagram = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SankeyDiagram, _super);
    /**
     * Constructor
     */
    function SankeyDiagram() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "SankeyDiagram";
        _this.orientation = "horizontal";
        _this.nodeAlign = "middle";
        _this.nodesContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(100);
        _this.nodesContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(100);
        _this.linksContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(100);
        _this.linksContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_2__["percent"])(100);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * (Re)validates chart's data, effectively causing the chart to redraw.
     *
     * @ignore Exclude from docs
     */
    SankeyDiagram.prototype.validateData = function () {
        var _this = this;
        this._valueHeight = undefined;
        _super.prototype.validateData.call(this);
        this._levelCount = 0;
        this.nodes.each(function (key, node) {
            node.level = undefined;
        });
        this.nodes.each(function (key, node) {
            node.level = _this.getNodeLevel(node, 0);
            _this._levelCount = _core_utils_Math__WEBPACK_IMPORTED_MODULE_8__["max"](_this._levelCount, node.level);
        });
    };
    /**
     * Returns node's highest level.
     *
     * @param node   Node
     * @param level  Current level
     * @return New level
     */
    SankeyDiagram.prototype.getNodeLevel = function (node, level) {
        var _this = this;
        var levels = [level];
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](node.incomingDataItems.iterator(), function (link) {
            if (link.fromNode) {
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](link.fromNode.level)) {
                    levels.push(link.fromNode.level + 1);
                }
                else {
                    _this._counter = 0;
                    _this.checkLoop(link.fromNode);
                    if (_this._counter < _this.dataItems.length) {
                        levels.push(_this.getNodeLevel(link.fromNode, level + 1));
                    }
                }
            }
        });
        return Math.max.apply(Math, Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__spread"])(levels));
    };
    /**
     * Checks if there's no loop in the ancestor chain.
     *
     * @param  node  Node
     */
    SankeyDiagram.prototype.checkLoop = function (node) {
        var _this = this;
        this._counter++;
        if (this._counter > this.dataItems.length) {
            return;
        }
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](node.incomingDataItems.iterator(), function (link) {
            _this.checkLoop(link.fromNode);
        });
    };
    /**
     * Calculates relation between pixel height and total value.
     *
     * In Sankey the actual thickness of links and height of nodes will depend
     * on their values.
     */
    SankeyDiagram.prototype.calculateValueHeight = function () {
        var _this = this;
        // calculate sums of each level
        this._levelSum = {};
        this._levelNodesCount = {};
        this.maxSum = 0;
        var total = this.dataItem.values.value.sum;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this._sorted, function (strNode) {
            var node = strNode[1];
            _this.getNodeValue(node);
        });
        this.nodes.each(function (key, node) {
            var level = node.level;
            var value = Math.max(node.totalIncoming, node.totalOutgoing);
            if (value / total < _this.minNodeSize) {
                value = total * _this.minNodeSize;
            }
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](_this._levelSum[level])) {
                _this._levelSum[level] += value;
            }
            else {
                _this._levelSum[level] = value;
            }
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](_this._levelNodesCount[level])) {
                _this._levelNodesCount[level]++;
            }
            else {
                _this._levelNodesCount[level] = 1;
            }
        });
        var availableHeight;
        if (this.orientation == "horizontal") {
            availableHeight = this.chartContainer.maxHeight - 1;
        }
        else {
            availableHeight = this.chartContainer.maxWidth - 1;
        }
        var maxSumLevel;
        var minHeight;
        _core_utils_Object__WEBPACK_IMPORTED_MODULE_10__["each"](this._levelSum, function (key, value) {
            var realValue = value;
            var levelNodeCount = _this._levelNodesCount[key];
            var valueHeight = (availableHeight - (levelNodeCount - 1) * _this.nodePadding) / realValue;
            if (valueHeight == Infinity) {
                valueHeight = 0;
            }
            if (minHeight > valueHeight || !_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](minHeight)) {
                minHeight = valueHeight;
                _this.maxSum = realValue;
                maxSumLevel = _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["toNumber"](key);
            }
        });
        this._maxSumLevel = maxSumLevel;
        var maxSumLevelNodeCount = this._levelNodesCount[this._maxSumLevel];
        var valueHeight = (availableHeight - (maxSumLevelNodeCount - 1) * this.nodePadding) / this.maxSum;
        if (valueHeight == Infinity) {
            valueHeight = 0;
        }
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](this.valueHeight)) {
            this.valueHeight = valueHeight;
        }
        else {
            var finalHeight = void 0;
            try {
                finalHeight = this._heightAnimation.animationOptions[0].to;
            }
            catch (err) {
            }
            // without animations it will be non-smooth as maxValue jumps from one column to another
            if (finalHeight != valueHeight) {
                var duration = this.interpolationDuration;
                try {
                    duration = this.nodes.template.states.getKey("active").transitionDuration;
                }
                catch (err) {
                }
                this._heightAnimation = new _core_utils_Animation__WEBPACK_IMPORTED_MODULE_6__["Animation"](this, { property: "valueHeight", from: this.valueHeight, to: valueHeight }, duration, this.interpolationEasing).start();
                this._disposers.push(this._heightAnimation);
            }
        }
    };
    /**
     * Redraws the chart.
     *
     * @ignore Exclude from docs
     */
    SankeyDiagram.prototype.validate = function () {
        var _this = this;
        _super.prototype.validate.call(this);
        this.calculateValueHeight();
        var container = this.nodesContainer;
        var nextCoordinate = {};
        var maxSumLevelNodeCount = this._levelNodesCount[this._maxSumLevel];
        var total = this.dataItem.values.value.sum;
        var availableHeight;
        if (this.orientation == "horizontal") {
            availableHeight = this.chartContainer.maxHeight - 1;
        }
        else {
            availableHeight = this.chartContainer.maxWidth - 1;
        }
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this._sorted, function (strNode) {
            var node = strNode[1];
            var level = node.level;
            var levelCoordinate = 0;
            var nodeCount = _this._levelNodesCount[level];
            switch (_this.nodeAlign) {
                case "bottom":
                    levelCoordinate = (_this.maxSum - _this._levelSum[level]) * _this.valueHeight - (nodeCount - maxSumLevelNodeCount) * _this.nodePadding;
                    break;
                case "middle":
                    levelCoordinate = (_this.maxSum - _this._levelSum[level]) * _this.valueHeight / 2 - (nodeCount - maxSumLevelNodeCount) * _this.nodePadding / 2;
                    break;
            }
            if (_this.maxSum == 0) {
                switch (_this.nodeAlign) {
                    case "bottom":
                        levelCoordinate = availableHeight - nodeCount * (_this.minNodeSize * availableHeight + _this.nodePadding);
                        break;
                    case "middle":
                        levelCoordinate = availableHeight / 2 - nodeCount / 2 * (_this.minNodeSize * availableHeight + _this.nodePadding);
                        break;
                }
            }
            node.parent = container;
            var delta;
            var x;
            var y;
            var value = Math.max(node.totalIncoming, node.totalOutgoing);
            if (value / total < _this.minNodeSize) {
                value = total * _this.minNodeSize;
            }
            if (_this.orientation == "horizontal") {
                delta = (_this.innerWidth - node.pixelWidth) / _this._levelCount;
                x = delta * node.level;
                y = nextCoordinate[level] || levelCoordinate;
                var h = value * _this.valueHeight;
                if (total == 0 && h == 0) {
                    h = _this.minNodeSize * availableHeight;
                }
                node.height = h;
                node.minX = x;
                node.maxX = x;
                nextCoordinate[level] = y + h + _this.nodePadding;
            }
            else {
                delta = (_this.innerHeight - node.pixelHeight) / _this._levelCount;
                x = nextCoordinate[level] || levelCoordinate;
                y = delta * node.level;
                var w = value * _this.valueHeight;
                if (total == 0 && w == 0) {
                    w = _this.minNodeSize * availableHeight;
                }
                node.width = w;
                node.minY = y;
                node.maxY = y;
                nextCoordinate[level] = x + w + _this.nodePadding;
            }
            node.x = x;
            node.y = y;
        });
    };
    /**
     * Performs actual operations to reveal this element.
     *
     * @ignore Exclude from docs
     * @param duration Fade in duration (ms)
     * @return Fade in duration (ms)
     */
    SankeyDiagram.prototype.showReal = function (duration) {
        var _this = this;
        if (this.preventShow) {
            return;
        }
        if (this.interpolationDuration > 0) {
            var container_1 = this.nodesContainer;
            var i_1 = 0;
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this.links.iterator(), function (link) {
                link.hide(0);
            });
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this._sorted, function (strNode) {
                var node = strNode[1];
                var property;
                if (_this.orientation == "horizontal") {
                    node.dx = -(container_1.pixelWidth - node.pixelWidth) / Math.max(_this._levelCount, 1);
                    property = "dx";
                }
                else {
                    node.dy = -(container_1.pixelHeight - node.pixelHeight) / Math.max(_this._levelCount, 1);
                    property = "dy";
                }
                var delay = 0;
                var duration = _this.interpolationDuration;
                if (_this.sequencedInterpolation) {
                    delay = _this.sequencedInterpolationDelay * i_1 + duration * i_1 / _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["length"](_this.nodes.iterator());
                }
                node.opacity = 0;
                node.invalidateLinks();
                node.animate([{ property: "opacity", from: 0, to: 1 }, { property: property, to: 0 }], _this.interpolationDuration, _this.interpolationEasing).delay(delay);
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](node.outgoingDataItems.iterator(), function (dataItem) {
                    var animation = dataItem.link.show(_this.interpolationDuration);
                    if (animation && !animation.isFinished()) {
                        animation.delay(delay);
                    }
                });
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](node.incomingDataItems.iterator(), function (dataItem) {
                    if (!dataItem.fromNode) {
                        var animation = dataItem.link.show(_this.interpolationDuration);
                        if (animation && !animation.isFinished()) {
                            animation.delay(delay);
                        }
                    }
                });
                i_1++;
            });
        }
        return _super.prototype.showReal.call(this);
    };
    /**
     * Changes the sort type of the nodes.
     *
     * This will actually reshuffle nodes using nice animation.
     */
    SankeyDiagram.prototype.changeSorting = function () {
        var _this = this;
        this.sortNodes();
        var nextCoordinate = {};
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_7__["each"](this._sorted, function (strNode) {
            var node = strNode[1];
            var level = node.level;
            var levelCoordinate = (_this.maxSum - _this._levelSum[level]) * _this.valueHeight / 2;
            var property;
            var nodeHeight;
            if (_this.orientation == "horizontal") {
                property = "y";
                nodeHeight = node.pixelHeight;
            }
            else {
                property = "x";
                nodeHeight = node.pixelWidth;
            }
            node.animate({ property: property, to: nextCoordinate[level] || levelCoordinate }, _this.interpolationDuration, _this.interpolationEasing);
            nextCoordinate[level] = (nextCoordinate[level] || levelCoordinate) + nodeHeight + _this.nodePadding;
            node.invalidateLinks();
        });
    };
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    SankeyDiagram.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Add a default screen reader title for accessibility
        // This will be overridden in screen reader if there are any `titles` set
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Sankey diagram");
        }
    };
    /**
     * Creates and returns a new data item.
     *
     * @return Data item
     */
    SankeyDiagram.prototype.createDataItem = function () {
        return new SankeyDiagramDataItem();
    };
    Object.defineProperty(SankeyDiagram.prototype, "nodeAlign", {
        /**
         * @returns Returns nodeAlign value
         */
        get: function () {
            return this.getPropertyValue("nodeAlign");
        },
        /**
         * How to align nodes. In case layout is vertical, top means left and bottom means right
         *
         * @param value  Node sorting
         */
        set: function (value) {
            this.setPropertyValue("nodeAlign", value);
            this.changeSorting();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SankeyDiagram.prototype, "orientation", {
        /**
         * @return Orientation
         */
        get: function () {
            return this.getPropertyValue("orientation");
        },
        /**
         * Orientation of the chart: "horizontal" or "vertical";
         *
         * @param value Orientation
         */
        set: function (value) {
            this.setPropertyValue("orientation", value, true);
            var nameLabel = this.nodes.template.nameLabel;
            if (value == "vertical") {
                this.nodes.template.width = undefined;
                nameLabel.label.horizontalCenter = "middle";
                nameLabel.locationX = 0.5;
            }
            else {
                this.nodes.template.height = undefined;
                nameLabel.label.horizontalCenter = "left";
                nameLabel.locationX = 1;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    SankeyDiagram.prototype.createNode = function () {
        var node = new _elements_SankeyNode__WEBPACK_IMPORTED_MODULE_4__["SankeyNode"]();
        this._disposers.push(node);
        return node;
    };
    /**
     * @ignore
     */
    SankeyDiagram.prototype.createLink = function () {
        var link = new _elements_SankeyLink__WEBPACK_IMPORTED_MODULE_5__["SankeyLink"]();
        this._disposers.push(link);
        return link;
    };
    Object.defineProperty(SankeyDiagram.prototype, "valueHeight", {
        /**
         * @ignore
         */
        get: function () {
            return this._valueHeight;
        },
        /**
         * @ignore
         */
        set: function (value) {
            if (value != this._valueHeight) {
                this._valueHeight = value;
                this.invalidate();
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    SankeyDiagram.prototype.disposeData = function () {
        _super.prototype.disposeData.call(this);
        this._sorted = this.nodes.iterator();
    };
    return SankeyDiagram;
}(_FlowDiagram__WEBPACK_IMPORTED_MODULE_1__["FlowDiagram"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_3__["registry"].registeredClasses["SankeyDiagram"] = SankeyDiagram;
//# sourceMappingURL=SankeyDiagram.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js ***!
  \********************************************************************************/
/*! exports provided: SerialChartDataItem, SerialChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SerialChartDataItem", function() { return SerialChartDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SerialChart", function() { return SerialChart; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Chart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../Chart */ "./node_modules/@amcharts/amcharts4/.internal/charts/Chart.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _series_Series__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../series/Series */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/ColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/ColorSet.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/**
 * Serial chart module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */











/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[SerialChart]].
 *
 * @see {@link DataItem}
 */
var SerialChartDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SerialChartDataItem, _super);
    /**
     * Constructor
     */
    function SerialChartDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "SerialChartDataItem";
        _this.applyTheme();
        return _this;
    }
    return SerialChartDataItem;
}(_Chart__WEBPACK_IMPORTED_MODULE_1__["ChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * A base class for all series-based charts, like XY, Pie, etc.
 *
 * Is not useful on its own.
 *
 * @see {@link ISerialChartEvents} for a list of available Events
 * @see {@link ISerialChartAdapters} for a list of available Adapters
 */
var SerialChart = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SerialChart, _super);
    /**
     * Constructor
     */
    function SerialChart() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "SerialChart";
        _this.colors = new _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_6__["ColorSet"]();
        _this._usesData = false;
        // Create a container for series
        var seriesContainer = _this.chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_3__["Container"]);
        seriesContainer.shouldClone = false;
        seriesContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        seriesContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        seriesContainer.isMeasured = false;
        seriesContainer.layout = "none";
        seriesContainer.zIndex = 2;
        _this.seriesContainer = seriesContainer;
        // Create a container for bullets
        var bulletsContainer = _this.chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_3__["Container"]);
        bulletsContainer.shouldClone = false;
        bulletsContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        bulletsContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(100);
        bulletsContainer.isMeasured = false;
        bulletsContainer.zIndex = 3;
        bulletsContainer.layout = "none";
        _this.bulletsContainer = bulletsContainer;
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    SerialChart.prototype.dispose = function () {
        _super.prototype.dispose.call(this);
        if (this.colors) {
            this.colors.dispose();
        }
        if (this.patterns) {
            this.patterns.dispose();
        }
    };
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor
     */
    SerialChart.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Add a default screen reader title for accessibility
        // This will be overridden in screen reader if there are any `titles` set
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Serial chart");
        }
    };
    Object.defineProperty(SerialChart.prototype, "series", {
        /**
         * A list of chart's series.
         *
         * @return Chart's series
         */
        get: function () {
            if (!this._series) {
                this._series = new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__["ListTemplate"](this.createSeries());
                this._series.events.on("inserted", this.handleSeriesAdded, this, false);
                this._series.events.on("removed", this.handleSeriesRemoved, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_2__["ListDisposer"](this._series, false));
                this._disposers.push(this._series.template);
            }
            return this._series;
        },
        enumerable: true,
        configurable: true
    });
    SerialChart.prototype.handleSeriesRemoved = function (event) {
        var series = event.oldValue;
        this.dataUsers.removeValue(series);
        this.dataUsers.each(function (dataUser) {
            dataUser.invalidateDataItems();
        });
        if (series.autoDispose) {
            series.dispose();
        }
        else {
            series.parent = undefined;
            series.bulletsContainer.parent = undefined;
        }
        //this.feedLegend();
        var legend = this.legend;
        if (legend) {
            var dataItems = this.legend.dataItems;
            for (var i = dataItems.length - 1; i >= 0; i--) {
                var dataItem = dataItems.getIndex(i);
                if (dataItem && dataItem.dataContext == series) {
                    legend.dataItems.remove(dataItem);
                }
            }
            for (var i = legend.data.length - 1; i >= 0; i--) {
                var di = legend.data[i];
                if (di && di == series) {
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__["remove"](legend.data, di);
                }
            }
        }
    };
    /**
     * Decorates a new [[Series]] object with required parameters when it is
     * added to the chart.
     *
     * @ignore Exclude from docs
     * @param event  Event
     */
    SerialChart.prototype.handleSeriesAdded = function (event) {
        var _this = this;
        var series = event.newValue;
        if (series.isDisposed()) {
            return;
        }
        series.chart = this;
        series.parent = this.seriesContainer;
        series.bulletsContainer.parent = this.bulletsContainer;
        this._dataUsers.moveValue(series);
        series.addDisposer(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_11__["Disposer"](function () {
            _this.dataUsers.removeValue(series);
        }));
        this.handleSeriesAdded2(series);
        this.handleLegendSeriesAdded(series);
    };
    SerialChart.prototype.handleLegendSeriesAdded = function (series) {
        if (!series.hiddenInLegend) {
            if (this.legend) {
                this.legend.addData(series);
            }
        }
    };
    SerialChart.prototype.handleSeriesAdded2 = function (series) {
        var _this = this;
        if (!this.dataInvalid) {
            this._disposers.push(
            // on exit only as data is usually passed after push
            _core_Registry__WEBPACK_IMPORTED_MODULE_7__["registry"].events.once("exitframe", function () {
                if (!series.data || series.data.length == 0) {
                    series.data = _this.data;
                    if (series.showOnInit) {
                        series.reinit();
                        series.setPropertyValue("showOnInit", false);
                        series.showOnInit = true;
                    }
                    series.events.once("datavalidated", function () {
                        if (series.data == _this.data) {
                            series._data = [];
                        }
                    });
                }
            }));
        }
    };
    /**
     * Setups the legend to use the chart's data.
     * @ignore
     */
    SerialChart.prototype.feedLegend = function () {
        var legend = this.legend;
        if (legend) {
            var legendData_1 = [];
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.series.iterator(), function (series) {
                if (!series.hiddenInLegend) {
                    legendData_1.push(series);
                }
            });
            legend.dataFields.name = "name";
            legend.data = legendData_1;
        }
    };
    /**
     * Creates and returns a new Series, suitable for this chart type.
     *
     * @return New series
     */
    SerialChart.prototype.createSeries = function () {
        return new _series_Series__WEBPACK_IMPORTED_MODULE_4__["Series"]();
    };
    Object.defineProperty(SerialChart.prototype, "colors", {
        /**
         * @return Color list
         */
        get: function () {
            return this.getPropertyValue("colors");
        },
        /**
         * Chart's color list.
         *
         * This list can be used by a number of serial items, like applying a new
         * color for each Series added. Or, applying a new color for each slice
         * of a Pie chart.
         *
         * Please see [[ColorSet]] for information on how you can set up to generate
         * unique colors.
         *
         * A theme you are using may override default pre-defined colors.
         *
         * @param value Color list
         */
        set: function (value) {
            this.setPropertyValue("colors", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SerialChart.prototype, "patterns", {
        /**
         * @return Pattern set
         */
        get: function () {
            return this.getPropertyValue("patterns");
        },
        /**
         * A [[PatternSet]] to use when creating patterned fills for slices.
         *
         * @since 4.7.5
         * @param value  Pattern set
         */
        set: function (value) {
            this.setPropertyValue("patterns", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all parameters from another [[SerialChart]].
     *
     * @param source Source SerialChart
     */
    SerialChart.prototype.copyFrom = function (source) {
        _super.prototype.copyFrom.call(this, source);
        this.series.copyFrom(source.series);
    };
    /**
     * Hides the chart instantly and then shows it. If defaultState.transitionDuration > 0, this will result an animation in which properties of hidden state will animate to properties of visible state.
     */
    SerialChart.prototype.appear = function () {
        _super.prototype.appear.call(this);
        this.series.each(function (series) {
            if (series.showOnInit && series.inited) {
                series.appear();
            }
        });
    };
    return SerialChart;
}(_Chart__WEBPACK_IMPORTED_MODULE_1__["Chart"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_7__["registry"].registeredClasses["SerialChart"] = SerialChart;
//# sourceMappingURL=SerialChart.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/SlicedChart.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/SlicedChart.js ***!
  \********************************************************************************/
/*! exports provided: SlicedChartDataItem, SlicedChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SlicedChartDataItem", function() { return SlicedChartDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "SlicedChart", function() { return SlicedChart; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _PercentChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./PercentChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/PercentChart.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Sliced chart module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */



/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[SlicedChart]].
 *
 * @see {@link DataItem}
 */
var SlicedChartDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SlicedChartDataItem, _super);
    /**
     * Constructor
     */
    function SlicedChartDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "SlicedChartDataItem";
        _this.applyTheme();
        return _this;
    }
    return SlicedChartDataItem;
}(_PercentChart__WEBPACK_IMPORTED_MODULE_1__["PercentChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a Sliced chart.
 *
 * @see {@link ISlicedChartEvents} for a list of available Events
 * @see {@link ISlicedChartAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/sliced-chart/} for documentation
 * @important
 */
var SlicedChart = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(SlicedChart, _super);
    /**
     * Constructor
     */
    function SlicedChart() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "SlicedChart";
        _this.seriesContainer.layout = "horizontal";
        _this.padding(15, 15, 15, 15);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    SlicedChart.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Add a default screen reader title for accessibility
        // This will be overridden in screen reader if there are any `titles` set
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_3__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("Sliced chart");
        }
    };
    /**
     * (Re)validates the chart, causing it to redraw.
     *
     * @ignore Exclude from docs
     */
    SlicedChart.prototype.validate = function () {
        _super.prototype.validate.call(this);
    };
    return SlicedChart;
}(_PercentChart__WEBPACK_IMPORTED_MODULE_1__["PercentChart"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["SlicedChart"] = SlicedChart;
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["SlicedChartDataItem"] = SlicedChartDataItem;
//# sourceMappingURL=SlicedChart.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/TreeMap.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/TreeMap.js ***!
  \****************************************************************************/
/*! exports provided: TreeMapDataItem, TreeMap */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TreeMapDataItem", function() { return TreeMapDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "TreeMap", function() { return TreeMap; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _XYChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XYChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/Dictionary */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Dictionary.js");
/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../axes/ValueAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js");
/* harmony import */ var _series_TreeMapSeries__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../series/TreeMapSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/TreeMapSeries.js");
/* harmony import */ var _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../../core/utils/ColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/ColorSet.js");
/* harmony import */ var _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/interaction/Mouse */ "./node_modules/@amcharts/amcharts4/.internal/core/interaction/Mouse.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/**
 * TreeMap chart module.
 *
 * Parts of the functionality used in this module are taken from D3.js library
 * (https://d3js.org/)
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */










/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[TreeMap]].
 *
 * @see {@link DataItem}
 */
var TreeMapDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(TreeMapDataItem, _super);
    /**
     * Constructor
     */
    function TreeMapDataItem() {
        var _this = _super.call(this) || this;
        /**
         * Required for squarify functionality.
         *
         * @ignore Exclude from docs
         */
        _this.rows = [];
        _this.className = "TreeMapDataItem";
        _this.values.value = { workingValue: 0 };
        _this.values.x0 = {};
        _this.values.y0 = {};
        _this.values.x1 = {};
        _this.values.y1 = {};
        _this.hasChildren.children = true;
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(TreeMapDataItem.prototype, "legendDataItem", {
        /**
         * @return Legend data item
         */
        get: function () {
            return this._legendDataItem;
        },
        /**
         * A legend's data item, that corresponds to this data item.
         *
         * @param value  Legend data item
         */
        set: function (value) {
            this._legendDataItem = value;
            if (value.label) {
                value.label.dataItem = this;
            }
            if (value.valueLabel) {
                value.valueLabel.dataItem = this;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Returns a duration (ms) the Data Item should take to animate from one
     * value to another.
     *
     * If the duration is not specified via parameter, this method will try to
     * request a default duration from the related `Component`.
     *
     * @param duration  Default duration (ms)
     * @return Duration (ms)
     */
    TreeMapDataItem.prototype.getDuration = function () {
        return 0;
    };
    Object.defineProperty(TreeMapDataItem.prototype, "value", {
        /**
         * @return Value
         */
        get: function () {
            var value = 0;
            if (!this.children || this.children.length == 0) {
                value = this.values["value"].workingValue;
            }
            else {
                _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.children.iterator(), function (child) {
                    var childValue = child.value;
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isNumber"](childValue)) {
                        value += childValue;
                    }
                });
            }
            return value;
            /*
            let value = this.values["value"].workingValue;
    
            if (!$type.isNumber(value)) {
                value = 0;
                if (this.children) {
                    $iter.each(this.children.iterator(), (child) => {
                        if ($type.isNumber(child.value)) {
                            value += child.value;
                        }
                    });
                }
            }
            return value;*/
        },
        /**
         * Numeric value of the item.
         *
         * @param value  Value
         */
        set: function (value) {
            this.setValue("value", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMapDataItem.prototype, "percent", {
        /**
         * Percent value of a node
         */
        get: function () {
            if (this.parent) {
                return this.value / this.parent.value * 100;
            }
            return 100;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMapDataItem.prototype, "x0", {
        /**
         * @return X
         */
        get: function () {
            return this.values.x0.value;
        },
        /**
         * Item's X position.
         *
         * @ignore Exclude from docs
         * @todo Description (review)
         * @param value  X
         */
        set: function (value) {
            this.setValue("x0", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMapDataItem.prototype, "x1", {
        /**
         * @return X
         */
        get: function () {
            return this.values.x1.value;
        },
        /**
         * Item's X position.
         *
         * @ignore Exclude from docs
         * @todo Description (review)
         * @param value  X
         */
        set: function (value) {
            this.setValue("x1", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMapDataItem.prototype, "y0", {
        /**
         * @return Y
         */
        get: function () {
            return this.values.y0.value;
        },
        /**
         * Item's Y position.
         *
         * @ignore Exclude from docs
         * @todo Description (review)
         * @param value  Y
         */
        set: function (value) {
            this.setValue("y0", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMapDataItem.prototype, "y1", {
        /**
         * @return Y
         */
        get: function () {
            return this.values.y1.value;
        },
        /**
         * Item's Y position.
         *
         * @ignore Exclude from docs
         * @todo Description (review)
         * @param value  Y
         */
        set: function (value) {
            this.setValue("y1", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMapDataItem.prototype, "name", {
        /**
         * @return Name
         */
        get: function () {
            return this.properties.name;
        },
        /**
         * Item's name.
         *
         * @param name  Name
         */
        set: function (name) {
            this.setProperty("name", name);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMapDataItem.prototype, "children", {
        /**
         * @return Item's children
         */
        get: function () {
            return this.properties.children;
        },
        /**
         * A list of item's sub-children.
         *
         * Having children means that the TreeMap chat will automatically be
         * "drillable". Clicking on an item with children will zoom to the item, then
         * display its children.
         *
         * Treemap can have any level of nesting.
         *
         * @param children  Item's children
         */
        set: function (children) {
            this.setProperty("children", children);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMapDataItem.prototype, "level", {
        /**
         * Depth level in the treemap hierarchy.
         *
         * The top-level item will have level set at 0. Its children will have
         * level 1, and so on.
         *
         * @readonly
         * @return Level
         */
        get: function () {
            if (!this.parent) {
                return 0;
            }
            else {
                return this.parent.level + 1;
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMapDataItem.prototype, "color", {
        /**
         * @return Color
         */
        get: function () {
            var color = this.properties.color;
            if (color == undefined) {
                if (this.parent) {
                    color = this.parent.color;
                }
            }
            if (color == undefined) {
                if (this.component) {
                    color = this.component.colors.getIndex(this.component.colors.step * this.index);
                }
            }
            return color;
        },
        /**
         * Item's color.
         *
         * If not set, will use parent's color, or, if that is not set either,
         * automatically assigned color from chart's color set. (`chart.colors`)
         *
         * @param value  Color
         */
        set: function (value) {
            this.setProperty("color", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMapDataItem.prototype, "fill", {
        /**
         * @ignore
         * For the legend to work properly
         */
        get: function () {
            return this.color;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMapDataItem.prototype, "series", {
        get: function () {
            return this._series;
        },
        /**
         * Series of children data items
         * @todo: proper descrition
         */
        set: function (series) {
            if (series != this._series) {
                if (this._series) {
                    this.component.series.removeValue(this._series);
                    this._series.dispose();
                }
                this._series = series;
                this._disposers.push(series);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Hides the Data Item and related visual elements.
     *
     * @param duration  Animation duration (ms)
     * @param delay     Delay animation (ms)
     * @param toValue   A value to set to `fields` when hiding
     * @param fields    A list of data fields to set value to `toValue`
     */
    TreeMapDataItem.prototype.hide = function (duration, delay, toValue, fields) {
        this.setWorkingValue("value", 0);
        if (this.children) {
            this.children.each(function (child) {
                child.hide(duration, delay, toValue, fields);
            });
        }
        var seriesDataItem = this.seriesDataItem;
        if (seriesDataItem) {
            seriesDataItem.bullets.each(function (key, value) {
                value.hide();
                value.preventShow = true;
            });
        }
        return _super.prototype.hide.call(this, duration, delay, toValue, fields);
    };
    /**
     * Shows the Data Item and related visual elements.
     *
     * @param duration  Animation duration (ms)
     * @param delay     Delay animation (ms)
     * @param fields    A list of fields to set values of
     */
    TreeMapDataItem.prototype.show = function (duration, delay, fields) {
        this.setWorkingValue("value", this.values.value.value);
        if (this.children) {
            this.children.each(function (child) {
                child.show(duration, delay, fields);
            });
        }
        var seriesDataItem = this.seriesDataItem;
        if (seriesDataItem) {
            seriesDataItem.bullets.each(function (key, value) {
                value.preventShow = false;
            });
        }
        return _super.prototype.show.call(this, duration, delay, fields);
    };
    return TreeMapDataItem;
}(_XYChart__WEBPACK_IMPORTED_MODULE_1__["XYChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a TreeMap chart.
 *
 * @see {@link ITreeMapEvents} for a list of available Events
 * @see {@link ITreeMapAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/treemap/} for documentation
 */
var TreeMap = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(TreeMap, _super);
    /**
     * Constructor
     */
    function TreeMap() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * An algorithm used to divide area into squares based on their value.
         *
         * Available options: squarify (default), binaryTree, slice, dice, sliceDice.
         *
         * ```TypeScript
         * chart.layoutAlgorithm = chart.sliceDice;
         * ```
         * ```JavaScript
         * chart.layoutAlgorithm = chart.sliceDice;
         * ```
         * ```JSON
         * {
         *   // ...
         *   "layoutAlgorithm": "sliceDice",
         *   // ...
         * }
         * ```
         *
         * @see {@link https://www.amcharts.com/docs/v4/chart-types/treemap/#Area_division_methods} For more info and examples.
         * @default squarify
         */
        _this.layoutAlgorithm = _this.squarify;
        /**
         * Is the chart zoomable?
         *
         * If the chart is `zoomable`, and items have sub-items, the chart will
         * drill-down to sub-items when click on their parent item.
         *
         * @default true
         */
        _this.zoomable = true;
        _this.className = "TreeMap";
        _this._usesData = true;
        _this.maxLevels = 2;
        _this.currentLevel = 0;
        _this.hideParentColumns = false;
        _this.colors = new _core_utils_ColorSet__WEBPACK_IMPORTED_MODULE_6__["ColorSet"]();
        _this.sorting = "descending";
        // create two value axes for the chart
        var xAxis = _this.xAxes.push(new _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_4__["ValueAxis"]());
        xAxis.title.disabled = true;
        xAxis.strictMinMax = true;
        var xRenderer = xAxis.renderer;
        xRenderer.inside = true;
        xRenderer.labels.template.disabled = true;
        xRenderer.ticks.template.disabled = true;
        xRenderer.grid.template.disabled = true;
        xRenderer.axisFills.template.disabled = true;
        xRenderer.minGridDistance = 100;
        xRenderer.line.disabled = true;
        xRenderer.baseGrid.disabled = true;
        //xRenderer.inversed = true;
        var yAxis = _this.yAxes.push(new _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_4__["ValueAxis"]());
        yAxis.title.disabled = true;
        yAxis.strictMinMax = true;
        var yRenderer = yAxis.renderer;
        yRenderer.inside = true;
        yRenderer.labels.template.disabled = true;
        yRenderer.ticks.template.disabled = true;
        yRenderer.grid.template.disabled = true;
        yRenderer.axisFills.template.disabled = true;
        yRenderer.minGridDistance = 100;
        yRenderer.line.disabled = true;
        yRenderer.baseGrid.disabled = true;
        yRenderer.inversed = true;
        // shortcuts
        _this.xAxis = xAxis;
        _this.yAxis = yAxis;
        var template = new _series_TreeMapSeries__WEBPACK_IMPORTED_MODULE_5__["TreeMapSeries"]();
        _this.seriesTemplates = new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__["DictionaryTemplate"](template);
        template.virtualParent = _this;
        _this._disposers.push(new _core_utils_Dictionary__WEBPACK_IMPORTED_MODULE_3__["DictionaryDisposer"](_this.seriesTemplates));
        _this._disposers.push(template);
        _this.zoomOutButton.events.on("hit", function () {
            _this.zoomToChartDataItem(_this._homeDataItem);
        }, undefined, false);
        _this.seriesTemplates.events.on("insertKey", function (event) {
            event.newValue.isTemplate = true;
        }, undefined, false);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(TreeMap.prototype, "navigationBar", {
        /**
         * Returns navigationBar if it is added to a chart
         */
        get: function () {
            return this._navigationBar;
        },
        /**
         * A navigation bar used to show "breadcrumb" control, indicating current
         * drill-down path.
         */
        set: function (navigationBar) {
            var _this = this;
            if (this._navigationBar != navigationBar) {
                this._navigationBar = navigationBar;
                navigationBar.parent = this;
                navigationBar.toBack();
                navigationBar.links.template.events.on("hit", function (event) {
                    var dataItem = event.target.dataItem.dataContext;
                    if (!dataItem.isDisposed()) {
                        _this.zoomToChartDataItem(dataItem);
                        _this.createTreeSeries(dataItem);
                    }
                }, undefined, true);
                this._disposers.push(navigationBar);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * (Re)validates chart's data.
     *
     * @ignore Exclude from docs
     */
    TreeMap.prototype.validateData = function () {
        this.series.clear();
        this._tempSeries = [];
        _super.prototype.validateData.call(this);
        if (this._homeDataItem) {
            this._homeDataItem.dispose();
        }
        var homeDataItem = this.dataItems.template.clone(); // cant' use createDataItem here!
        this._homeDataItem = homeDataItem;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.dataItems.iterator(), function (dataItem) {
            dataItem.parent = homeDataItem;
        });
        homeDataItem.children = this.dataItems;
        homeDataItem.x0 = 0;
        homeDataItem.y0 = 0;
        homeDataItem.name = this._homeText;
        var maxX = 1000;
        var maxY = Math.round((maxX * this.pixelHeight / this.pixelWidth) / 10) * 10 || 1000;
        homeDataItem.x1 = maxX;
        homeDataItem.y1 = maxY;
        this.xAxis.min = 0;
        this.xAxis.max = maxX;
        this.xAxis.getMinMax();
        this.yAxis.min = 0;
        this.yAxis.max = maxY;
        this.yAxis.getMinMax();
        this.layoutItems(homeDataItem);
        this.createTreeSeries(homeDataItem);
        this.feedLegend();
    };
    /**
     * Layouts and sizes all items according to their value and
     * `layoutAlgorithm`.
     *
     * @ignore Exclude from docs
     * @param parent  Parent data item
     */
    TreeMap.prototype.layoutItems = function (parent, sorting) {
        if (parent) {
            var children = parent.children;
            if (!sorting) {
                sorting = this.sorting;
            }
            if (sorting == "ascending") {
                children.values.sort(function (a, b) {
                    return a.value - b.value;
                });
            }
            if (sorting == "descending") {
                children.values.sort(function (a, b) {
                    return b.value - a.value;
                });
            }
            this._updateDataItemIndexes(0);
            this.layoutAlgorithm(parent);
            for (var i = 0, len = children.length; i < len; i++) {
                var node = children.getIndex(i);
                if (node.children) {
                    this.layoutItems(node);
                }
            }
        }
    };
    /**
     * Creates and returns a new treemap series.
     *
     * @todo Description
     * @param dataItem  Data item to create series out of
     */
    TreeMap.prototype.createTreeSeries = function (dataItem) {
        var _this = this;
        this._tempSeries = [];
        var navigationData = [dataItem];
        // create parent series and navigation data
        var parentDataItem = dataItem.parent;
        while (parentDataItem != undefined) {
            this.initSeries(parentDataItem);
            navigationData.push(parentDataItem);
            parentDataItem = parentDataItem.parent;
        }
        navigationData.reverse();
        if (this.navigationBar) {
            this.navigationBar.data = navigationData;
        }
        // create series and children series
        this.createTreeSeriesReal(dataItem);
        // add those which are not in the list
        _core_utils_Array__WEBPACK_IMPORTED_MODULE_10__["each"](this._tempSeries, function (series) {
            if (_this.series.indexOf(series) == -1) {
                _this.series.push(series);
            }
            series.zIndex = series.level;
        });
    };
    /**
     * [createTreeSeriesReal description]
     *
     * @todo Description
     * @param dataItem [description]
     */
    TreeMap.prototype.createTreeSeriesReal = function (dataItem) {
        if (dataItem.children) {
            var level = dataItem.level;
            if (level < this.currentLevel + this.maxLevels) {
                this.initSeries(dataItem);
                for (var i = 0; i < dataItem.children.length; i++) {
                    var child = dataItem.children.getIndex(i);
                    if (child.children) {
                        this.createTreeSeriesReal(child);
                    }
                }
            }
        }
    };
    TreeMap.prototype.setData = function (value) {
        this.currentLevel = 0;
        this.currentlyZoomed = undefined;
        this.xAxis.start = 0;
        this.xAxis.end = 1;
        this.yAxis.start = 0;
        this.yAxis.end = 1;
        _super.prototype.setData.call(this, value);
    };
    /**
     * @ignore
     * Overriding, as tree map series are created on the fly all the time
     */
    TreeMap.prototype.seriesAppeared = function () {
        return true;
    };
    /**
     * Initializes the treemap series.
     *
     * @todo Description
     * @param dataItem  Chart data item
     */
    TreeMap.prototype.initSeries = function (dataItem) {
        var _this = this;
        if (!dataItem.series) {
            var series = void 0;
            var template = this.seriesTemplates.getKey(dataItem.level.toString());
            if (template) {
                series = template.clone();
            }
            else {
                series = this.series.create();
            }
            // for the legend to get {value}
            series.dataItem.dataContext = dataItem;
            series.name = dataItem.name;
            series.parentDataItem = dataItem;
            dataItem.series = series;
            var level = dataItem.level;
            series.level = level;
            var dataContext = dataItem.dataContext;
            if (dataContext) {
                series.config = dataContext.config;
            }
            this.dataUsers.removeValue(series); // series do not use data directly, that's why we remove it
            series.data = dataItem.children.values;
            series.fill = dataItem.color;
            series.columnsContainer.hide(0);
            series.bulletsContainer.hide(0);
            series.columns.template.adapter.add("fill", function (fill, target) {
                var dataItem = target.dataItem;
                if (dataItem) {
                    var treeMapDataItem = dataItem.treeMapDataItem;
                    if (treeMapDataItem) {
                        target.fill = treeMapDataItem.color;
                        target.adapter.remove("fill"); //@todo: make it possible adapters applied once?
                        return treeMapDataItem.color;
                    }
                }
            });
            if (this.zoomable && (dataItem.level > this.currentLevel || (dataItem.children && dataItem.children.length > 0))) {
                series.columns.template.cursorOverStyle = _core_interaction_Mouse__WEBPACK_IMPORTED_MODULE_7__["MouseCursorStyle"].pointer;
                if (this.zoomable) {
                    series.columns.template.events.on("hit", function (event) {
                        var seriesDataItem = event.target.dataItem;
                        if (dataItem.level > _this.currentLevel) {
                            _this.zoomToChartDataItem(seriesDataItem.treeMapDataItem.parent);
                        }
                        else {
                            _this.zoomToSeriesDataItem(seriesDataItem);
                        }
                    }, this, undefined);
                }
            }
        }
        this._tempSeries.push(dataItem.series);
    };
    /**
     * Toggles bullets so that labels that belong to current drill level are
     * shown.
     *
     * @param duration  Animation duration (ms)
     */
    TreeMap.prototype.toggleBullets = function (duration) {
        var _this = this;
        // hide all series which are not in tempSeries
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.series.iterator(), function (series) {
            if (_this._tempSeries.indexOf(series) == -1) {
                //series.hideReal(duration);
                series.columnsContainer.hide();
                series.bulletsContainer.hide(duration);
            }
            else {
                //series.showReal(duration);
                series.columnsContainer.show();
                series.bulletsContainer.show(duration);
                series.dataItems.each(function (dataItem) {
                    dataItem.bullets.each(function (key, bullet) {
                        bullet.show();
                    });
                });
                if (series.level < _this.currentLevel) {
                    if (_this.hideParentColumns) {
                        series.columnsContainer.hide();
                    }
                    series.bulletsContainer.hide(duration);
                }
                else if (series.level == _this.currentLevel) {
                    if (_this.maxLevels > 1) {
                        series.dataItems.each(function (dataItem) {
                            if (dataItem.treeMapDataItem.children) {
                                dataItem.bullets.each(function (key, bullet) {
                                    bullet.hide();
                                });
                            }
                        });
                    }
                }
            }
        });
    };
    /**
     * Zooms to particular item in series.
     *
     * @param dataItem  Data item
     */
    TreeMap.prototype.zoomToSeriesDataItem = function (dataItem) {
        this.zoomToChartDataItem(dataItem.treeMapDataItem);
    };
    /**
     * Zooms to particular item. If dataItem is not specified, the chart will zoom-out.
     *
     * @ignore Exclude from docs
     * @param dataItem  Data item
     */
    TreeMap.prototype.zoomToChartDataItem = function (dataItem) {
        var _this = this;
        if (!dataItem) {
            dataItem = this._homeDataItem;
        }
        var zoomOutButton = this.zoomOutButton;
        // this is needed because if there is only one fist level, it won't be shown
        if (zoomOutButton) {
            if (dataItem != this._homeDataItem) {
                zoomOutButton.show();
            }
            else {
                zoomOutButton.hide();
            }
        }
        if (dataItem && dataItem.children) {
            this.xAxis.zoomToValues(dataItem.x0, dataItem.x1);
            this.yAxis.zoomToValues(dataItem.y0, dataItem.y1);
            this.currentLevel = dataItem.level;
            this.currentlyZoomed = dataItem;
            this.createTreeSeries(dataItem);
            var rangeChangeAnimation = this.xAxis.rangeChangeAnimation || this.yAxis.rangeChangeAnimation;
            if (rangeChangeAnimation && !rangeChangeAnimation.isDisposed() && !rangeChangeAnimation.isFinished()) {
                this._dataDisposers.push(rangeChangeAnimation);
                rangeChangeAnimation.events.once("animationended", function () {
                    _this.toggleBullets();
                });
            }
            else {
                this.toggleBullets();
            }
        }
    };
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    TreeMap.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        // Add a default screen reader title for accessibility
        // This will be overridden in screen reader if there are any `titles` set
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("TreeMap chart");
        }
        //this.homeText = this.language.translate("Home");
    };
    /**
     * Returns a new/empty DataItem of the type appropriate for this object.
     *
     * @see {@link DataItem}
     * @return Data Item
     */
    TreeMap.prototype.createDataItem = function () {
        return new TreeMapDataItem();
    };
    Object.defineProperty(TreeMap.prototype, "maxLevels", {
        /**
         * @return Maximum drill-down level
         */
        get: function () {
            return this.getPropertyValue("maxLevels");
        },
        /**
         * Maximum number of levels the chart will display initially.
         *
         * @default 2
         * @param value  Maximum drill-down level
         */
        set: function (value) {
            this.setPropertyValue("maxLevels", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMap.prototype, "currentLevel", {
        /**
         * @return Current level
         */
        get: function () {
            return this.getPropertyValue("currentLevel");
        },
        /**
         * Current drill-down level the chart is at.
         *
         * @param value  Current level
         */
        set: function (value) {
            this.setPropertyValue("currentLevel", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMap.prototype, "hideParentColumns", {
        /**
         * @return Hide?
         */
        get: function () {
            return this.getPropertyValue("hideParentColumns");
        },
        /**
         * If set to `true`, columns of parent nodes will be hidden when user
         * drills-down into deeper levels.
         *
         * @sice 4.7.4
         * @default false
         * @param  value  Hide?
         */
        set: function (value) {
            this.setPropertyValue("hideParentColumns", value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TreeMap.prototype, "sorting", {
        get: function () {
            return this.getPropertyValue("sorting");
        },
        /**
         * Sorting direction of treemap items.
         *
         * Available options: "none", "ascending", and "descending" (default).
         *
         * @default "descending"
         * @param value [description]
         */
        set: function (value) {
            this.setPropertyValue("sorting", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Creates and returns a new series of the suitable type.
     *
     * @return new series
     */
    TreeMap.prototype.createSeries = function () {
        return new _series_TreeMapSeries__WEBPACK_IMPORTED_MODULE_5__["TreeMapSeries"]();
    };
    Object.defineProperty(TreeMap.prototype, "homeText", {
        /**
         * @return Home text
         */
        get: function () {
            return this._homeText;
        },
        /**
         * A text displayed on the "home" button which is used to go back to level 0
         * after drill into sub-items.
         *
         * @param value  Home text
         */
        set: function (value) {
            this._homeText = value;
            if (this._homeDataItem) {
                this._homeDataItem.name = this._homeText;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    TreeMap.prototype.processConfig = function (config) {
        if (config) {
            // Instantiate layout algorithm
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](config["layoutAlgorithm"]) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["isString"](config["layoutAlgorithm"])) {
                switch (config["layoutAlgorithm"]) {
                    case "squarify":
                        config["layoutAlgorithm"] = this.squarify;
                        break;
                    case "binaryTree":
                        config["layoutAlgorithm"] = this.binaryTree;
                        break;
                    case "slice":
                        config["layoutAlgorithm"] = this.slice;
                        break;
                    case "dice":
                        config["layoutAlgorithm"] = this.dice;
                        break;
                    case "sliceDice":
                        config["layoutAlgorithm"] = this.sliceDice;
                        break;
                    default:
                        delete config["layoutAlgorithm"];
                        break;
                }
            }
            // Set type for navigation bar
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](config.navigationBar) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](config.navigationBar.type)) {
                config.navigationBar.type = "NavigationBar";
            }
            _super.prototype.processConfig.call(this, config);
        }
    };
    /**
     * Measures the size of container and informs its children of how much size
     * they can occupy, by setting their relative `maxWidth` and `maxHeight`
     * properties.
     *
     * @ignore Exclude from docs
     */
    TreeMap.prototype.validateLayout = function () {
        _super.prototype.validateLayout.call(this);
        this.layoutItems(this.currentlyZoomed);
    };
    /**
     * Validates (processes) data items.
     *
     * @ignore Exclude from docs
     */
    TreeMap.prototype.validateDataItems = function () {
        _super.prototype.validateDataItems.call(this);
        this.layoutItems(this._homeDataItem);
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.series.iterator(), function (series) {
            series.validateRawData();
        });
        this.zoomToChartDataItem(this._homeDataItem);
    };
    /**
     * ==========================================================================
     * TREEMAP LAYOUT FUNCTIONS
     * ==========================================================================
     * @hidden
     */
    /**
     * The functions below are from D3.js library (https://d3js.org/)
     *
     * --------------------------------------------------------------------------
     * Copyright 2017 Mike Bostock
     *
     * Redistribution and use in source and binary forms, with or without
     * modification, are permitted provided that the following conditions are met:
     *
     * 1. Redistributions of source code must retain the above copyright notice,
     *    this list of conditions and the following disclaimer.
     *
     * 2. Redistributions in binary form must reproduce the above copyright
     *    notice,this list of conditions and the following disclaimer in the
     *    documentation and/or other materials provided with the distribution.
     *
     * 3. Neither the name of the copyright holder nor the names of its
     *    contributors may be used to endorse or promote products derived from
     *    this software without specific prior written permission.
     *
     * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
     * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
     * ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE
     * LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
     * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
     * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
     * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
     * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
     * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
     * POSSIBILITY OF SUCH DAMAGE.
     * --------------------------------------------------------------------------
     * @hidden
     */
    /**
     * Treemap layout algorithm: binaryTree.
     *
     * @ignore Exclude from docs
     * @param parent  Data item
     */
    TreeMap.prototype.binaryTree = function (parent) {
        var nodes = parent.children, i, n = nodes.length, sum, sums = new Array(n + 1);
        for (sums[0] = sum = i = 0; i < n; ++i) {
            sums[i + 1] = sum += nodes.getIndex(i).value;
        }
        if (n > 0) {
            partition(0, n, parent.value, parent.x0, parent.y0, parent.x1, parent.y1);
        }
        function partition(i, j, value, x0, y0, x1, y1) {
            if (i >= j - 1) {
                var node = nodes.getIndex(i);
                node.x0 = x0;
                node.y0 = y0;
                node.x1 = x1;
                node.y1 = y1;
                return;
            }
            var valueOffset = sums[i], valueTarget = (value / 2) + valueOffset, k = i + 1, hi = j - 1;
            while (k < hi) {
                var mid = k + hi >>> 1;
                if (sums[mid] < valueTarget) {
                    k = mid + 1;
                }
                else {
                    hi = mid;
                }
            }
            if ((valueTarget - sums[k - 1]) < (sums[k] - valueTarget) && i + 1 < k) {
                --k;
            }
            var valueLeft = sums[k] - valueOffset, valueRight = value - valueLeft;
            if ((x1 - x0) > (y1 - y0)) {
                var xk = (x0 * valueRight + x1 * valueLeft) / value;
                partition(i, k, valueLeft, x0, y0, xk, y1);
                partition(k, j, valueRight, xk, y0, x1, y1);
            }
            else {
                var yk = (y0 * valueRight + y1 * valueLeft) / value;
                partition(i, k, valueLeft, x0, y0, x1, yk);
                partition(k, j, valueRight, x0, yk, x1, y1);
            }
        }
    };
    /**
     * Treemap layout algorithm: slice.
     *
     * @ignore Exclude from docs
     * @param parent  Data item
     */
    TreeMap.prototype.slice = function (parent) {
        var x0 = parent.x0;
        var x1 = parent.x1;
        var y0 = parent.y0;
        var y1 = parent.y1;
        var nodes = parent.children;
        var node;
        var i = -1;
        var n = nodes.length;
        var k = parent.value && (y1 - y0) / parent.value;
        while (++i < n) {
            node = nodes.getIndex(i);
            node.x0 = x0;
            node.x1 = x1;
            node.y0 = y0;
            y0 += node.value * k;
            node.y1 = y0;
        }
    };
    /**
     * Treemap layout algorithm: dice.
     *
     * @ignore Exclude from docs
     * @param parent  Data item
     */
    TreeMap.prototype.dice = function (parent) {
        var x0 = parent.x0;
        var x1 = parent.x1;
        var y0 = parent.y0;
        var y1 = parent.y1;
        var nodes = parent.children, node, i = -1, n = nodes.length, k = parent.value && (x1 - x0) / parent.value;
        while (++i < n) {
            node = nodes.getIndex(i);
            node.y0 = y0;
            node.y1 = y1;
            node.x0 = x0;
            x0 += node.value * k;
            node.x1 = x0;
        }
    };
    /**
     * Treemap layout algorithm: slideDice.
     *
     * @ignore Exclude from docs
     * @param parent  Data item
     */
    TreeMap.prototype.sliceDice = function (parent) {
        if (parent.level & 1) {
            this.slice(parent);
        }
        else {
            this.dice(parent);
        }
    };
    /**
     * Treemap layout algorithm: squarify.
     *
     * @ignore Exclude from docs
     * @param parent  Data item
     */
    TreeMap.prototype.squarify = function (parent) {
        var ratio = (1 + Math.sqrt(5)) / 2;
        var x0 = parent.x0;
        var x1 = parent.x1;
        var y0 = parent.y0;
        var y1 = parent.y1;
        var nodes = parent.children;
        var nodeValue;
        var i0 = 0;
        var i1 = 0;
        var n = nodes.length;
        var dx;
        var dy;
        var value = parent.value;
        var sumValue;
        var minValue;
        var maxValue;
        var newRatio;
        var minRatio;
        var alpha;
        var beta;
        while (i0 < n) {
            dx = x1 - x0;
            dy = y1 - y0;
            // Find the next non-empty node.
            do {
                sumValue = nodes.getIndex(i1++).value;
            } while (!sumValue && i1 < n);
            minValue = maxValue = sumValue;
            alpha = Math.max(dy / dx, dx / dy) / (value * ratio);
            beta = sumValue * sumValue * alpha;
            minRatio = Math.max(maxValue / beta, beta / minValue);
            // Keep adding nodes while the aspect ratio maintains or improves.
            for (; i1 < n; ++i1) {
                sumValue += nodeValue = nodes.getIndex(i1).value;
                if (nodeValue < minValue) {
                    minValue = nodeValue;
                }
                if (nodeValue > maxValue) {
                    maxValue = nodeValue;
                }
                beta = sumValue * sumValue * alpha;
                newRatio = Math.max(maxValue / beta, beta / minValue);
                if (newRatio > minRatio) {
                    sumValue -= nodeValue;
                    break;
                }
                minRatio = newRatio;
            }
            // Position and record the row orientation.
            var row = this.dataItems.template.clone();
            row.value = sumValue;
            row.dice = dx < dy;
            row.children = nodes.slice(i0, i1);
            row.x0 = x0;
            row.y0 = y0;
            row.x1 = x1;
            row.y1 = y1;
            if (row.dice) {
                row.y1 = value ? (y0 += (dy * sumValue) / value) : y1;
                this.dice(row);
            }
            else {
                row.x1 = value ? (x0 += (dx * sumValue) / value) : x1;
                this.slice(row);
            }
            value -= sumValue;
            i0 = i1;
        }
    };
    TreeMap.prototype.handleSeriesAdded2 = function () {
        // void
    };
    /**
     * [handleDataItemValueChange description]
     *
     * @ignore Exclude from docs
     * @todo Description
     */
    TreeMap.prototype.handleDataItemValueChange = function (dataItem, name) {
        if (name == "value") {
            this.invalidateDataItems();
        }
    };
    TreeMap.prototype.handleDataItemWorkingValueChange = function (dataItem, name) {
        if (name == "value") {
            this.invalidateDataItems();
        }
    };
    TreeMap.prototype.getLegendLevel = function (dataItem) {
        if (!dataItem) {
            return;
        }
        if (!dataItem.children) {
            return;
        }
        if (dataItem.children.length > 1) {
            return dataItem;
        }
        else if (dataItem.children.length == 1) {
            var child = dataItem.children.getIndex(0);
            if (child.children) {
                return this.getLegendLevel(child);
            }
            else {
                return dataItem;
            }
        }
        else {
            return dataItem;
        }
    };
    TreeMap.prototype.handleLegendSeriesAdded = function (series) {
        // void
    };
    Object.defineProperty(TreeMap.prototype, "homeDataItem", {
        /**
         * A data item associated with top node.
         *
         * @since 4.8.2
         */
        get: function () {
            return this._homeDataItem;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Setups the legend to use the chart's data.
     * @ignore
     */
    TreeMap.prototype.feedLegend = function () {
        var legend = this.legend;
        if (legend) {
            legend.dataFields.name = "name";
            var legendParent = this.getLegendLevel(this._homeDataItem);
            if (legendParent) {
                var legendData_1 = [];
                legendParent.children.each(function (dataItem) {
                    //if (!dataItem.hiddenInLegend) {
                    legendData_1.push(dataItem);
                    //}
                });
                legend.data = legendData_1;
            }
        }
    };
    /**
     * @ignore
     */
    TreeMap.prototype.disposeData = function () {
        _super.prototype.disposeData.call(this);
        this._homeDataItem = undefined;
        this.series.clear();
        if (this.navigationBar) {
            this.navigationBar.disposeData();
        }
        this.xAxis.disposeData();
        this.yAxis.disposeData();
    };
    /**
     * Since this chart uses hierarchical data, we need to remove childrent
     * dataField from export of non-hierarchical formats such as CSV and XSLX.
     *
     * @return Export
     */
    TreeMap.prototype.getExporting = function () {
        var _this = this;
        var exporting = _super.prototype.getExporting.call(this);
        exporting.adapter.add("formatDataFields", function (info) {
            if (info.format == "csv" || info.format == "xlsx") {
                if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_9__["hasValue"](_this.dataFields.children)) {
                    delete info.dataFields[_this.dataFields.children];
                }
            }
            return info;
        });
        return exporting;
    };
    return TreeMap;
}(_XYChart__WEBPACK_IMPORTED_MODULE_1__["XYChart"]));

/**
 * Register class, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_2__["registry"].registeredClasses["TreeMap"] = TreeMap;
//# sourceMappingURL=TreeMap.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js":
/*!****************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js ***!
  \****************************************************************************/
/*! exports provided: XYChartDataItem, XYChart */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XYChartDataItem", function() { return XYChartDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XYChart", function() { return XYChart; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _SerialChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./SerialChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_utils_List__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/List */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/List.js");
/* harmony import */ var _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../../core/utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../axes/ValueAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js");
/* harmony import */ var _axes_DateAxis__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../axes/DateAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js");
/* harmony import */ var _axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../axes/AxisRendererX */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js");
/* harmony import */ var _axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../axes/AxisRendererY */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js");
/* harmony import */ var _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../axes/CategoryAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js");
/* harmony import */ var _series_XYSeries__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../series/XYSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js");
/* harmony import */ var _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/utils/Disposer */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Disposer.js");
/* harmony import */ var _core_elements_ZoomOutButton__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/elements/ZoomOutButton */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/ZoomOutButton.js");
/* harmony import */ var _core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ../../core/utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../elements/XYChartScrollbar */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/XYChartScrollbar.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/* harmony import */ var _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ../../core/utils/Array */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Array.js");
/* harmony import */ var _core_utils_Number__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ../../core/utils/Number */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Number.js");
/* harmony import */ var _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ../../core/utils/Responsive */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Responsive.js");
/**
 * XY Chart module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






















/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[XYChart]].
 *
 * @see {@link DataItem}
 */
var XYChartDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(XYChartDataItem, _super);
    /**
     * Constructor
     */
    function XYChartDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "XYChartDataItem";
        _this.applyTheme();
        return _this;
    }
    return XYChartDataItem;
}(_SerialChart__WEBPACK_IMPORTED_MODULE_1__["SerialChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates an XY chart, and any derivative chart, like Serial, Date-based, etc.
 *
 * Basically this is a chart type, that is used to display any chart
 * information in a square plot area.
 *
 * The horizontal and vertical scale is determined by the type of Axis.
 *
 * The plot types are determined by type of Series.
 *
 * ```TypeScript
 * // Includes
 * import * as am4core from "@amcharts/amcharts4/core";
 * import * as am4charts from "@amcharts/amcharts4/charts";
 *
 * // Create chart
 * let chart = am4core.create("chartdiv", am4charts.XYChart);
 *
 * // Add Data
 * chart.data = [{
 * "country": "USA",
 * "visits": 3025
 * }, {
 * 	"country": "China",
 * 	"visits": 1882
 * }, {
 * 	"country": "Japan",
 * 	"visits": 1809
 * }];
 *
 * // Add category axis
 * let categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
 * categoryAxis.dataFields.category = "country";
 *
 * // Add value axis
 * let valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
 *
 * // Add series
 * let series = chart.series.push(new am4charts.ColumnSeries());
 * series.name = "Web Traffic";
 * series.dataFields.categoryX = "country";
 * series.dataFields.valueY = "visits";
 * ```
 * ```JavaScript
 * // Create chart
 * var chart = am4core.create("chartdiv", am4charts.XYChart);
 *
 * // The following would work as well:
 * // var chart = am4core.create("chartdiv", "XYChart");
 *
 * // Add Data
 * chart.data = [{
 * "country": "USA",
 * "visits": 3025
 * }, {
 * 	"country": "China",
 * 	"visits": 1882
 * }, {
 * 	"country": "Japan",
 * 	"visits": 1809
 * }];
 *
 * // Add category axis
 * var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());
 * categoryAxis.dataFields.category = "country";
 *
 * // Add value axis
 * var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());
 *
 * // Add series
 * var series = chart.series.push(new am4charts.ColumnSeries());
 * series.name = "Web Traffic";
 * series.dataFields.categoryX = "country";
 * series.dataFields.valueY = "visits";
 * ```
 * ```JSON
 * var chart = am4core.createFromConfig({
 *
 * 	// Category axis
 * 	"xAxes": [{
 * 		"type": "CategoryAxis",
 * 		"dataFields": {
 * 			"category": "country"
 * 		}
 * 	}],
 *
 * 	// Value axis
 * 	"yAxes": [{
 * 		"type": "ValueAxis"
 * 	}],
 *
 * 	// Series
 * 	"series": [{
 * 		"type": "ColumnSeries",
 * 		"dataFields": {
 * 			"categoryX": "country",
 * 			"valueY": "visits"
 * 		},
 * 		"name": "Web Traffic"
 * 	}],
 *
 * 	// Cursor
 * 	"cursor": {},
 *
 * 	// Data
 * 	"data": [{
 * 		"country": "USA",
 * 		"visits": 3025
 * 	}, {
 * 		"country": "China",
 * 		"visits": 1882
 * 	}, {
 * 		"country": "Japan",
 * 		"visits": 1809
 * 	}]
 *
 * }, "chartdiv", "XYChart");
 * ```
 *
 *
 * @see {@link IXYChartEvents} for a list of available Events
 * @see {@link IXYChartAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/} for documentation
 * @important
 */
var XYChart = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(XYChart, _super);
    /**
     * Constructor
     */
    function XYChart() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Defines the type of horizontal axis rederer.
         */
        _this._axisRendererX = _axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_7__["AxisRendererX"];
        /**
         * Defines the type of vertical axis rederer.
         */
        _this._axisRendererY = _axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_8__["AxisRendererY"];
        /**
         * @ignore
         */
        _this._seriesPoints = [];
        _this.className = "XYChart";
        // Set defaults
        //this.margin(10, 10, 10, 10);
        _this.maskBullets = true;
        _this.arrangeTooltips = true;
        // Create main chart container
        var chartContainer = _this.chartContainer;
        chartContainer.layout = "vertical";
        _this.padding(15, 15, 15, 15);
        // Create top axes container
        var topAxesCont = chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__["Container"]);
        topAxesCont.shouldClone = false;
        topAxesCont.layout = "vertical";
        topAxesCont.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__["percent"])(100);
        topAxesCont.zIndex = 1;
        _this.topAxesContainer = topAxesCont;
        // Create vertical axes and plot area container
        // Plot area and vertical axes share the whole width of the chart,
        // so we need to put then into a separate container so that layouting
        // engine takes care of the positioning
        var yAxesAndPlotCont = chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__["Container"]);
        yAxesAndPlotCont.shouldClone = false;
        yAxesAndPlotCont.layout = "horizontal";
        yAxesAndPlotCont.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__["percent"])(100);
        yAxesAndPlotCont.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__["percent"])(100);
        yAxesAndPlotCont.zIndex = 0;
        _this.yAxesAndPlotContainer = yAxesAndPlotCont;
        // Create a container for bottom axes
        var bottomAxesCont = chartContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__["Container"]);
        bottomAxesCont.shouldClone = false;
        bottomAxesCont.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__["percent"])(100);
        bottomAxesCont.layout = "vertical";
        bottomAxesCont.zIndex = 1;
        _this.bottomAxesContainer = bottomAxesCont;
        // Create a container for left-side axes
        var leftAxesCont = yAxesAndPlotCont.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__["Container"]);
        leftAxesCont.shouldClone = false;
        leftAxesCont.layout = "horizontal";
        leftAxesCont.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__["percent"])(100);
        leftAxesCont.contentAlign = "right";
        leftAxesCont.events.on("transformed", _this.updateXAxesMargins, _this, false);
        leftAxesCont.zIndex = 1;
        _this.leftAxesContainer = leftAxesCont;
        // Create a container for plot area
        var plotCont = yAxesAndPlotCont.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__["Container"]);
        plotCont.shouldClone = false;
        plotCont.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__["percent"])(100);
        plotCont.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__["percent"])(100);
        // Create transparend background for plot container so that hover works
        // on all of it
        plotCont.background.fillOpacity = 0;
        _this.plotContainer = plotCont;
        // must go below plot container
        _this.mouseWheelBehavior = "none";
        _this._cursorContainer = plotCont;
        // Create a container for right-side axes
        var rightAxesCont = yAxesAndPlotCont.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__["Container"]);
        rightAxesCont.shouldClone = false;
        rightAxesCont.layout = "horizontal";
        rightAxesCont.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__["percent"])(100);
        rightAxesCont.zIndex = 1;
        rightAxesCont.events.on("transformed", _this.updateXAxesMargins, _this, false);
        _this.rightAxesContainer = rightAxesCont;
        _this.seriesContainer.parent = plotCont;
        _this.bulletsContainer.parent = plotCont;
        var zoomOutButton = plotCont.createChild(_core_elements_ZoomOutButton__WEBPACK_IMPORTED_MODULE_12__["ZoomOutButton"]);
        zoomOutButton.shouldClone = false;
        zoomOutButton.align = "right";
        zoomOutButton.valign = "top";
        zoomOutButton.zIndex = Number.MAX_SAFE_INTEGER;
        zoomOutButton.marginTop = 5;
        zoomOutButton.marginRight = 5;
        zoomOutButton.hide(0);
        _this.zoomOutButton = zoomOutButton;
        // Create a container for bullets
        var axisBulletsContainer = _this.plotContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__["Container"]);
        axisBulletsContainer.shouldClone = false;
        axisBulletsContainer.width = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__["percent"])(100);
        axisBulletsContainer.height = Object(_core_utils_Percent__WEBPACK_IMPORTED_MODULE_13__["percent"])(100);
        axisBulletsContainer.isMeasured = false;
        axisBulletsContainer.zIndex = 4;
        axisBulletsContainer.layout = "none";
        _this.axisBulletsContainer = axisBulletsContainer;
        _this._bulletMask = _this.plotContainer;
        _this.events.on("beforedatavalidated", function () {
            _this.series.each(function (series) {
                series.dataGrouped = false;
                series._baseInterval = {};
            });
        }, _this, false);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * Sets defaults that instantiate some objects that rely on parent, so they
     * cannot be set in constructor.
     */
    XYChart.prototype.applyInternalDefaults = function () {
        _super.prototype.applyInternalDefaults.call(this);
        this.zoomOutButton.exportable = false;
        // Add a default screen reader title for accessibility
        // This will be overridden in screen reader if there are any `titles` set
        if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](this.readerTitle)) {
            this.readerTitle = this.language.translate("X/Y chart");
        }
    };
    /**
     * Draws the chart.
     *
     * @ignore Exclude from docs
     */
    XYChart.prototype.draw = function () {
        _super.prototype.draw.call(this);
        this.seriesContainer.toFront();
        this.bulletsContainer.toFront();
        if (this.maskBullets) {
            this.bulletsContainer.mask = this._bulletMask;
        }
        this.updateSeriesLegend();
    };
    /**
     * Triggers a redrawing of all chart's series.
     *
     * @ignore Exclude from docs
     */
    XYChart.prototype.updatePlotElements = function () {
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__["each"](this.series.iterator(), function (series) {
            series.invalidate();
        });
    };
    /**
     * Triggers data (re)validation which in turn can cause a redraw of the
     * whole chart or just aprticular series / elements.
     *
     * @ignore Exclude from docs
     */
    XYChart.prototype.validateData = function () {
        // tell axes that data changed
        if (this._parseDataFrom == 0) {
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__["each"](this.xAxes.iterator(), function (axis) {
                axis.dataChangeUpdate();
            });
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__["each"](this.yAxes.iterator(), function (axis) {
                axis.dataChangeUpdate();
            });
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__["each"](this.series.iterator(), function (series) {
                series.dataChangeUpdate();
            });
        }
        _super.prototype.validateData.call(this);
    };
    /**
     * Updates margins for horizontal axes based on settings and available space.
     *
     * @ignore Exclude from docs
     */
    XYChart.prototype.updateXAxesMargins = function () {
        var leftAxesWidth = this.leftAxesContainer.measuredWidth;
        var rightAxesWidth = this.rightAxesContainer.measuredWidth;
        var bottomAxesCont = this.bottomAxesContainer;
        if (bottomAxesCont.paddingLeft != leftAxesWidth || bottomAxesCont.paddingRight != rightAxesWidth) {
            bottomAxesCont.paddingLeft = leftAxesWidth;
            bottomAxesCont.paddingRight = rightAxesWidth;
        }
        var topAxesCont = this.topAxesContainer;
        if (topAxesCont.paddingLeft != leftAxesWidth || topAxesCont.paddingRight != rightAxesWidth) {
            topAxesCont.paddingLeft = leftAxesWidth;
            topAxesCont.paddingRight = rightAxesWidth;
        }
    };
    /**
     * Triggers a re-initialization of this element.
     *
     * Will result in complete redrawing of the element.
     *
     * @ignore Exclude from docs
     */
    XYChart.prototype.reinit = function () {
        _super.prototype.reinit.call(this);
        this.series.each(function (series) {
            series.appeared = false;
        });
    };
    /**
     * Triggers an update on the horizontal axis when one of its properties
     * change.
     *
     * @ignore Exclude from docs
     * @param event An event object
     */
    XYChart.prototype.handleXAxisChange = function (event) {
        this.updateXAxis(event.target);
    };
    /**
     * Triggers an update on the vertical axis when one of its properties
     * change.
     *
     * @ignore Exclude from docs
     * @param event An event object
     */
    XYChart.prototype.handleYAxisChange = function (event) {
        this.updateYAxis(event.target);
    };
    /**
     * Sets up a new horizontal (X) axis when it is added to the chart.
     *
     * @ignore Exclude from docs
     * @param event  Axis insert event
     */
    XYChart.prototype.processXAxis = function (event) {
        var axis = event.newValue;
        axis.chart = this;
        if (!axis.renderer) {
            axis.renderer = new this._axisRendererX();
            axis.renderer.observe(["opposite", "inside", "inversed", "minGridDistance"], this.handleXAxisChange, this, false);
        }
        axis.axisLetter = "X";
        axis.events.on("startendchanged", this.handleXAxisRangeChange, this, false);
        //axis.events.on("endchanged", this.handleXAxisRangeChange, this, false);
        // Although axis does not use data directly, we set dataProvider here
        // (but not add to chart data users) to hold up rendering before data
        // is parsed (system handles this)
        axis.dataProvider = this;
        this.updateXAxis(axis.renderer);
        this.processAxis(axis);
    };
    /**
     * Sets up a new vertical (Y) axis when it is added to the chart.
     *
     * @ignore Exclude from docs
     * @param event Axis insert event
     */
    XYChart.prototype.processYAxis = function (event) {
        var axis = event.newValue;
        axis.chart = this;
        if (!axis.renderer) {
            axis.renderer = new this._axisRendererY();
            axis.renderer.observe(["opposite", "inside", "inversed", "minGridDistance"], this.handleYAxisChange, this, false);
        }
        axis.axisLetter = "Y";
        axis.events.on("startendchanged", this.handleYAxisRangeChange, this, false);
        //axis.events.on("endchanged", this.handleYAxisRangeChange, this, false);
        // Although axis does not use data directly, we set dataProvider here
        // (but not add to chart data users) to hold up rendering before data
        // is parsed (system handles this)
        axis.dataProvider = this;
        this.updateYAxis(axis.renderer);
        this.processAxis(axis);
    };
    /**
     * Updates horizontal (X) scrollbar and other horizontal axis whenever axis'
     * value range changes.
     */
    XYChart.prototype.handleXAxisRangeChange = function () {
        var range = this.getCommonAxisRange(this.xAxes);
        if (this.scrollbarX) {
            this.zoomAxes(this.xAxes, range, true);
        }
        this.toggleZoomOutButton();
        this.updateScrollbar(this.scrollbarX, range);
    };
    /**
     * Shows or hides the Zoom Out button depending on whether the chart is fully
     * zoomed out or not.
     */
    XYChart.prototype.toggleZoomOutButton = function () {
        if (this.zoomOutButton) {
            var show_1 = false;
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__["eachContinue"](this.xAxes.iterator(), function (axis) {
                if (axis.toggleZoomOutButton) {
                    if (axis.maxZoomCount > 0) {
                        var minZoomFactor = axis.maxZoomFactor / axis.maxZoomCount;
                        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["round"](axis.end - axis.start, 3) < 1 / minZoomFactor) {
                            show_1 = true;
                            return false;
                        }
                    }
                    else {
                        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["round"](axis.start, 3) > 0 || _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["round"](axis.end, 3) < 1) {
                            show_1 = true;
                            return false;
                        }
                    }
                }
                return true;
            });
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__["eachContinue"](this.yAxes.iterator(), function (axis) {
                if (axis.toggleZoomOutButton) {
                    if (axis.maxZoomCount > 0) {
                        var minZoomFactor = axis.maxZoomFactor / axis.maxZoomCount;
                        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["round"](axis.end - axis.start, 3) < 1 / minZoomFactor) {
                            show_1 = true;
                            return false;
                        }
                    }
                    else {
                        if (_core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["round"](axis.start, 3) > 0 || _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["round"](axis.end, 3) < 1) {
                            show_1 = true;
                            return false;
                        }
                    }
                    return true;
                }
            });
            if (!this.seriesAppeared) {
                show_1 = false;
            }
            if (show_1) {
                this.zoomOutButton.show();
            }
            else {
                this.zoomOutButton.hide();
            }
        }
    };
    /**
     * @ignore
     * moved this check to a separate method so that we could override it in TreeMapSeries
     */
    XYChart.prototype.seriesAppeared = function () {
        var appeared = false;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__["each"](this.series.iterator(), function (series) {
            if (!series.appeared) {
                appeared = false;
                return false;
            }
        });
        return appeared;
    };
    /**
     * Updates vertical (Y) scrollbar and other horizontal axis whenever axis'
     * value range changes.
     */
    XYChart.prototype.handleYAxisRangeChange = function () {
        var range = this.getCommonAxisRange(this.yAxes);
        if (this.scrollbarY) {
            this.zoomAxes(this.yAxes, range, true);
        }
        this.toggleZoomOutButton();
        this.updateScrollbar(this.scrollbarY, range);
    };
    /**
     * Updates a relative scrollbar whenever data range of the axis changes.
     *
     * @param scrollbar  Scrollbar instance
     * @param range      New data (values) range of the axis
     */
    XYChart.prototype.updateScrollbar = function (scrollbar, range) {
        if (scrollbar) {
            scrollbar.skipRangeEvents();
            scrollbar.start = range.start;
            scrollbar.end = range.end;
        }
    };
    /**
     * Returns a common range of values between a list of axes.
     *
     * This is used to synchronize the zoom between multiple axes.
     *
     * @ignore Exclude from docs
     * @param axes  A list of axes
     * @return Common value range
     */
    XYChart.prototype.getCommonAxisRange = function (axes) {
        var start;
        var end;
        axes.each(function (axis) {
            if (!axis.zoomable || (axis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_5__["ValueAxis"] && axis.syncWithAxis)) {
            }
            else {
                var axisStart = axis.start;
                var axisEnd = axis.end;
                if (axis.renderer.inversed) {
                    axisStart = 1 - axis.end;
                    axisEnd = 1 - axis.start;
                }
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](start) || (axisStart < start)) {
                    start = axisStart;
                }
                if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](end) || (axisEnd > end)) {
                    end = axisEnd;
                }
            }
        });
        return { start: start, end: end };
    };
    /**
     * Triggers (re)rendering of the horizontal (X) axis.
     *
     * @ignore Exclude from docs
     * @param axis  Axis
     */
    XYChart.prototype.updateXAxis = function (renderer) {
        var axis = renderer.axis;
        if (renderer.opposite) {
            axis.parent = this.topAxesContainer;
            axis.toFront();
        }
        else {
            axis.parent = this.bottomAxesContainer;
            axis.toBack();
        }
        if (axis.renderer) {
            axis.renderer.processRenderer();
        }
    };
    /**
     * Triggers (re)rendering of the vertical (Y) axis.
     *
     * @ignore Exclude from docs
     * @param axis  Axis
     */
    XYChart.prototype.updateYAxis = function (renderer) {
        var axis = renderer.axis;
        if (renderer.opposite) {
            axis.parent = this.rightAxesContainer;
            axis.toBack();
        }
        else {
            axis.parent = this.leftAxesContainer;
            axis.toFront();
        }
        if (axis.renderer) {
            axis.renderer.processRenderer();
        }
    };
    /**
     * Decorates an Axis for use with this chart, e.g. sets proper renderer
     * and containers for placement.
     *
     * @param axis  Axis
     */
    XYChart.prototype.processAxis = function (axis) {
        var _this = this;
        // Value axis does not use data directly, only category axis does
        if (axis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__["CategoryAxis"]) {
            this._dataUsers.moveValue(axis);
        }
        var renderer = axis.renderer;
        renderer.gridContainer.parent = this.plotContainer;
        renderer.gridContainer.toBack();
        renderer.breakContainer.parent = this.plotContainer;
        renderer.breakContainer.toFront();
        renderer.breakContainer.zIndex = 10;
        axis.addDisposer(new _core_utils_Disposer__WEBPACK_IMPORTED_MODULE_11__["Disposer"](function () {
            _this.dataUsers.removeValue(axis);
        }));
        renderer.bulletsContainer.parent = this.axisBulletsContainer;
        this._disposers.push(axis.events.on("positionchanged", function () {
            var point = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["spritePointToSprite"]({ x: 0, y: 0 }, axis, _this.axisBulletsContainer);
            if (axis.renderer instanceof _axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_8__["AxisRendererY"]) {
                renderer.bulletsContainer.y = point.y;
            }
            if (axis.renderer instanceof _axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_7__["AxisRendererX"]) {
                renderer.bulletsContainer.x = point.x;
            }
        }, undefined, false));
        this.plotContainer.events.on("maxsizechanged", function () {
            if (_this.inited) {
                axis.invalidateDataItems();
                _this.updateSeriesMasks();
            }
        }, axis, false);
    };
    /**
     * This is done because for some reason IE doesn't change mask if path of a
     * mask changes.
     */
    XYChart.prototype.updateSeriesMasks = function () {
        if (_core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["isIE"]()) {
            this.series.each(function (series) {
                var mask = series.mainContainer.mask;
                series.mainContainer.mask = undefined;
                series.mainContainer.mask = mask;
            });
        }
    };
    XYChart.prototype.handleSeriesRemoved = function (event) {
        var series = event.oldValue;
        if (series) {
            if (series.xAxis) {
                series.xAxis.series.removeValue(series);
                series.xAxis.invalidateProcessedData();
            }
            if (series.yAxis) {
                series.yAxis.series.removeValue(series);
                series.yAxis.invalidateProcessedData();
            }
            // otherwise extremes won't change
            this.series.each(function (series) {
                series.resetExtremes();
            });
        }
        _super.prototype.handleSeriesRemoved.call(this, event);
    };
    Object.defineProperty(XYChart.prototype, "xAxes", {
        /**
         * A list of horizontal (X) axes.
         *
         * @return List of axes
         */
        get: function () {
            if (!this._xAxes) {
                this._xAxes = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
                this._xAxes.events.on("inserted", this.processXAxis, this, false);
                this._xAxes.events.on("removed", this.handleAxisRemoval, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](this._xAxes, false));
            }
            return this._xAxes;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @ignore
     */
    XYChart.prototype.handleAxisRemoval = function (event) {
        var axis = event.oldValue;
        this.dataUsers.removeValue(axis); // need to remove, as it might not be disposed
        if (axis.autoDispose) {
            axis.dispose();
        }
    };
    Object.defineProperty(XYChart.prototype, "yAxes", {
        /**
         * A list of vertical (Y) axes.
         *
         * @return List of axes
         */
        get: function () {
            if (!this._yAxes) {
                this._yAxes = new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["List"]();
                this._yAxes.events.on("inserted", this.processYAxis, this, false);
                this._yAxes.events.on("removed", this.handleAxisRemoval, this, false);
                this._disposers.push(new _core_utils_List__WEBPACK_IMPORTED_MODULE_3__["ListDisposer"](this._yAxes, false));
            }
            return this._yAxes;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Decorates a new [[XYSeries]] object with required parameters when it is
     * added to the chart.
     *
     * @ignore Exclude from docs
     * @param event  Event
     */
    XYChart.prototype.handleSeriesAdded = function (event) {
        try {
            _super.prototype.handleSeriesAdded.call(this, event);
            var series = event.newValue;
            if (this.xAxes.length == 0 || this.yAxes.length == 0) {
                _core_Registry__WEBPACK_IMPORTED_MODULE_14__["registry"].removeFromInvalidComponents(series);
                series.dataInvalid = false;
            }
            _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["used"](series.xAxis); // this is enough to get axis, handled in getter
            _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["used"](series.yAxis); // this is enough to get axis, handled in getter
            series.maskBullets = series.maskBullets;
            if (series.fill == undefined) {
                if (this.patterns) {
                    if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](series.stroke)) {
                        series.stroke = this.colors.next();
                    }
                    series.fill = this.patterns.next();
                    if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](series.fillOpacity)) {
                        series.fill.backgroundOpacity = series.fillOpacity;
                    }
                    if (series.stroke instanceof _core_utils_Color__WEBPACK_IMPORTED_MODULE_4__["Color"]) {
                        series.fill.stroke = series.stroke;
                        series.fill.fill = series.stroke;
                    }
                }
                else {
                    series.fill = this.colors.next();
                }
            }
            if (!_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](series.stroke)) {
                series.stroke = series.fill;
            }
        }
        catch (e) {
            this.raiseCriticalError(e);
        }
    };
    Object.defineProperty(XYChart.prototype, "cursor", {
        /**
         * @return Cursor
         */
        get: function () {
            return this._cursor;
        },
        /**
         * Chart's [[Cursor]].
         *
         * @param cursor  Cursor
         */
        set: function (cursor) {
            if (this._cursor != cursor) {
                if (this._cursor) {
                    this.removeDispose(this._cursor);
                }
                this._cursor = cursor;
                if (cursor) {
                    // TODO this is wrong, fix it
                    this._disposers.push(cursor);
                    cursor.chart = this;
                    cursor.shouldClone = false;
                    cursor.parent = this._cursorContainer;
                    cursor.events.on("cursorpositionchanged", this.handleCursorPositionChange, this, false);
                    cursor.events.on("zoomstarted", this.handleCursorZoomStart, this, false);
                    cursor.events.on("zoomended", this.handleCursorZoomEnd, this, false);
                    cursor.events.on("panstarted", this.handleCursorPanStart, this, false);
                    cursor.events.on("panning", this.handleCursorPanning, this, false);
                    cursor.events.on("panended", this.handleCursorPanEnd, this, false);
                    cursor.events.on("behaviorcanceled", this.handleCursorCanceled, this, false);
                    cursor.events.on("hidden", this.handleHideCursor, this, false);
                    cursor.zIndex = Number.MAX_SAFE_INTEGER - 1;
                    if (this.tapToActivate) {
                        // We need this in order to setup cursor properly
                        this.setTapToActivate(this.tapToActivate);
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Performs tasks when the cursor's position changes, e.g. shows proper
     * tooltips on axes and series.
     *
     * @ignore Exclude from docs
     */
    XYChart.prototype.handleCursorPositionChange = function () {
        var cursor = this.cursor;
        if (cursor.visible && !cursor.isHiding) {
            var xPosition_1 = this.cursor.xPosition;
            var yPosition_1 = this.cursor.yPosition;
            this.showSeriesTooltip({
                x: xPosition_1,
                y: yPosition_1
            });
            var exceptAxes_1 = [];
            var snapToSeries = cursor.snapToSeries;
            if (snapToSeries && !cursor.downPoint) {
                if (snapToSeries instanceof _series_XYSeries__WEBPACK_IMPORTED_MODULE_10__["XYSeries"]) {
                    snapToSeries = [snapToSeries];
                }
                var dataItems_1 = [];
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__["each"](snapToSeries, function (snpSeries) {
                    if (!snpSeries.isHidden && !snpSeries.isHiding) {
                        var xAxis = snpSeries.xAxis;
                        var yAxis = snpSeries.yAxis;
                        if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_5__["ValueAxis"] && !(xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_6__["DateAxis"]) && yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_5__["ValueAxis"] && !(yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_6__["DateAxis"])) {
                            snpSeries.dataItems.each(function (dataItem) {
                                dataItems_1.push(dataItem);
                            });
                            _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__["move"](exceptAxes_1, snpSeries.yAxis);
                            _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__["move"](exceptAxes_1, snpSeries.xAxis);
                        }
                        else {
                            if (snpSeries.baseAxis == snpSeries.xAxis) {
                                _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__["move"](exceptAxes_1, snpSeries.yAxis);
                                dataItems_1.push(xAxis.getSeriesDataItem(snpSeries, xAxis.toAxisPosition(xPosition_1), true));
                            }
                            if (snpSeries.baseAxis == snpSeries.yAxis) {
                                _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__["move"](exceptAxes_1, snpSeries.xAxis);
                                dataItems_1.push(yAxis.getSeriesDataItem(snpSeries, yAxis.toAxisPosition(yPosition_1), true));
                            }
                        }
                    }
                });
                var closestDataItem_1 = this.getClosest(dataItems_1, xPosition_1, yPosition_1);
                if (closestDataItem_1) {
                    this.series.each(function (series) {
                        var closestSeries = closestDataItem_1.component;
                        if (series != closestSeries) {
                            series.hideTooltip();
                            if (series.xAxis != closestSeries.xAxis) {
                                series.xAxis.hideTooltip();
                            }
                            if (series.yAxis != closestSeries.yAxis) {
                                series.yAxis.hideTooltip();
                            }
                        }
                    });
                    closestDataItem_1.component.showTooltipAtDataItem(closestDataItem_1);
                    cursor.handleSnap(closestDataItem_1.component);
                }
            }
            //}
            this._seriesPoints = [];
            if (this._cursorXPosition != xPosition_1) {
                this.showAxisTooltip(this.xAxes, xPosition_1, exceptAxes_1);
            }
            if (this._cursorYPosition != yPosition_1) {
                this.showAxisTooltip(this.yAxes, yPosition_1, exceptAxes_1);
            }
            if (this.arrangeTooltips) {
                this.sortSeriesTooltips(this._seriesPoints);
            }
            if (this.legend) {
                this.legend.afterDraw();
            }
        }
    };
    /**
     * Finds closest data item to position out of the array of items.
     *
     * @since 4.9.29
     * @param   dataItems  Array of items
     * @param              xPosition X position
     * @param              yPosition Y position
     * @return             Data item
     */
    XYChart.prototype.getClosest = function (dataItems, xPosition, yPosition) {
        var minDistance = Infinity;
        var closestDataItem;
        _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__["eachContinue"](dataItems, function (dataItem) {
            if (dataItem) {
                var xAxis = dataItem.component.xAxis;
                var yAxis = dataItem.component.yAxis;
                var xPos = xAxis.positionToCoordinate(xAxis.toGlobalPosition(xAxis.toAxisPosition(xPosition)));
                var yPos = yAxis.positionToCoordinate(yAxis.toGlobalPosition(yAxis.toAxisPosition(yPosition)));
                var xField = dataItem.component.xField;
                var yField = dataItem.component.yField;
                if (xAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_5__["ValueAxis"] && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](dataItem.getValue(xField))) {
                    return true;
                }
                if (yAxis instanceof _axes_ValueAxis__WEBPACK_IMPORTED_MODULE_5__["ValueAxis"] && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](dataItem.getValue(yField))) {
                    return true;
                }
                var dxPosition = xAxis.positionToCoordinate(xAxis.toGlobalPosition(xAxis.getPositionX(dataItem, xField, dataItem.locations[xField], "valueX")));
                var dyPosition = yAxis.positionToCoordinate(yAxis.toGlobalPosition(yAxis.getPositionY(dataItem, yField, dataItem.locations[yField], "valueY")));
                var distance = Math.sqrt(Math.pow(xPos - dxPosition, 2) + Math.pow(yPos - dyPosition, 2));
                if (distance < minDistance) {
                    minDistance = distance;
                    closestDataItem = dataItem;
                }
                return true;
            }
        });
        return closestDataItem;
    };
    /**
     * Hides all cursor-related tooltips when the cursor itself is hidden.
     *
     * @ignore Exclude from docs
     */
    XYChart.prototype.handleHideCursor = function () {
        this.hideObjectTooltip(this.xAxes);
        this.hideObjectTooltip(this.yAxes);
        this.hideObjectTooltip(this.series);
        this._cursorXPosition = undefined;
        this._cursorYPosition = undefined;
        this.updateSeriesLegend();
    };
    /**
     * Updates values for each series' legend item.
     *
     * @ignore Exclude from docs
     */
    XYChart.prototype.updateSeriesLegend = function () {
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__["each"](this.series.iterator(), function (series) {
            series.updateLegendValue();
        });
    };
    /**
     * Hides a tooltip for a list of objects.
     *
     * @ignore Exclude from docs
     * @param sprites  A list of sprites to hide tooltip for
     */
    XYChart.prototype.hideObjectTooltip = function (sprites) {
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__["each"](sprites.iterator(), function (sprite) {
            if (sprite.cursorTooltipEnabled) {
                sprite.hideTooltip(0);
            }
        });
    };
    /**
     * Shows a tooltip for all chart's series, using specific coordinates as a
     * reference point.
     *
     * The tooltip might be shown at different coordinates depending on the
     * actual data point's position, overlapping with other tooltips, etc.
     *
     * @ignore Exclude from docs
     * @param position  Reference point
     */
    XYChart.prototype.showSeriesTooltip = function (position) {
        var _this = this;
        if (!position) {
            this.series.each(function (series) {
                series.hideTooltip();
            });
            return;
        }
        var seriesPoints = [];
        this.series.each(function (series) {
            //if (series.tooltipText || series.tooltipHTML) { // not good, bullets are not hovered then
            if ((series.xAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_6__["DateAxis"] && series.xAxis.snapTooltip) || (series.yAxis instanceof _axes_DateAxis__WEBPACK_IMPORTED_MODULE_6__["DateAxis"] && series.yAxis.snapTooltip)) {
                // void
            }
            else {
                var point = series.showTooltipAtPosition(position.x, position.y);
                if (point) {
                    series.tooltip.setBounds(_core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["spriteRectToSvg"]({ x: 0, y: 0, width: _this.pixelWidth, height: _this.pixelHeight }, _this));
                    seriesPoints.push({ series: series, point: point });
                }
            }
            //}
        });
        if (this.arrangeTooltips) {
            this.sortSeriesTooltips(seriesPoints);
        }
    };
    /**
     * @ignore
     */
    XYChart.prototype.sortSeriesTooltips = function (seriesPoints) {
        if (seriesPoints.length > 0) {
            var cursor_1 = this.cursor;
            if (cursor_1 && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](cursor_1.maxTooltipDistance)) {
                var cursorPoint_1 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["spritePointToSvg"]({ x: cursor_1.point.x, y: cursor_1.point.y }, cursor_1);
                var nearestSeries_1;
                var nearestPoint_1;
                var smallestDistance_1 = Infinity;
                _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__["each"](seriesPoints, function (seriesPoint) {
                    var series = seriesPoint.series;
                    var fixedPoint = seriesPoint.point;
                    if (fixedPoint) {
                        var point = { x: fixedPoint.x, y: fixedPoint.y };
                        var distance = Math.abs(_core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["getDistance"](point, cursorPoint_1));
                        if (distance < smallestDistance_1) {
                            nearestPoint_1 = point;
                            smallestDistance_1 = distance;
                            nearestSeries_1 = series;
                        }
                    }
                });
                var newSeriesPoints_1 = [];
                if (nearestSeries_1) {
                    _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__["each"](seriesPoints, function (seriesPoint) {
                        if (Math.abs(_core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["getDistance"](seriesPoint.point, nearestPoint_1)) <= Math.abs(cursor_1.maxTooltipDistance)) {
                            newSeriesPoints_1.push({ series: seriesPoint.series, point: seriesPoint.point });
                        }
                        else {
                            var tooltipDataItem = seriesPoint.series.tooltipDataItem;
                            if (tooltipDataItem) {
                                _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__["each"](tooltipDataItem.sprites, function (sprite) {
                                    sprite.isHover = false;
                                    sprite.handleOutReal(); // to avoid flicker
                                });
                            }
                            seriesPoint.series.hideTooltip(0);
                        }
                    });
                    if (cursor_1.maxTooltipDistance < 0) {
                        if (newSeriesPoints_1.length > 0) {
                            _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__["each"](newSeriesPoints_1, function (np) {
                                if (nearestSeries_1 != np.series) {
                                    np.series.hideTooltip(0);
                                }
                            });
                        }
                        newSeriesPoints_1 = [{ series: nearestSeries_1, point: nearestPoint_1 }];
                    }
                }
                seriesPoints = newSeriesPoints_1;
            }
            var topLeft_1 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["spritePointToSvg"]({ x: -0.5, y: -0.5 }, this.plotContainer);
            var bottomRight_1 = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["spritePointToSvg"]({ x: this.plotContainer.pixelWidth + 0.5, y: this.plotContainer.pixelHeight + 0.5 }, this.plotContainer);
            var sum_1 = 0;
            var filteredSeriesPoints_1 = [];
            _core_utils_Array__WEBPACK_IMPORTED_MODULE_20__["each"](seriesPoints, function (seriesPoint) {
                var point = seriesPoint.point;
                if (point && _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["isInRectangle"](point, { x: topLeft_1.x, y: topLeft_1.y, width: bottomRight_1.x - topLeft_1.x, height: bottomRight_1.y - topLeft_1.y })) {
                    filteredSeriesPoints_1.push({ point: point, series: seriesPoint.series });
                    sum_1 += point.y;
                }
            });
            seriesPoints = filteredSeriesPoints_1;
            var firstSeries = this.series.getIndex(0);
            var inversed = false;
            if (firstSeries && firstSeries.yAxis && firstSeries.yAxis.renderer.inversed) {
                inversed = true;
            }
            if (inversed) {
                seriesPoints.sort(function (a, b) { return _core_utils_Number__WEBPACK_IMPORTED_MODULE_21__["order"](a.point.y, b.point.y); });
            }
            else {
                seriesPoints.sort(function (a, b) { return _core_utils_Number__WEBPACK_IMPORTED_MODULE_21__["order"](b.point.y, a.point.y); });
                seriesPoints.reverse();
            }
            var averageY = sum_1 / seriesPoints.length;
            var maxY = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["svgPointToDocument"]({ x: 0, y: 0 }, this.svgContainer.SVGContainer).y;
            if (seriesPoints.length > 0) {
                var top_1 = topLeft_1.y;
                var bottom = bottomRight_1.y;
                // TODO is this needed ?
                _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["spritePointToDocument"]({ x: 0, y: top_1 }, this);
                var dropped = false;
                if (averageY > top_1 + (bottom - top_1) / 2) {
                    var nextHeight = bottom;
                    for (var i = seriesPoints.length - 1; i >= 0; i--) {
                        var series = seriesPoints[i].series;
                        var tooltip = series.tooltip;
                        var pointY = seriesPoints[i].point.y;
                        tooltip.setBounds({ x: 0, y: -maxY, width: this.pixelWidth, height: nextHeight + maxY });
                        if (tooltip.invalid) {
                            tooltip.validate();
                        }
                        tooltip.toBack();
                        nextHeight = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["spritePointToSvg"]({ x: 0, y: tooltip.label.pixelY - tooltip.pixelY + pointY - tooltip.pixelMarginTop }, tooltip).y;
                        if (nextHeight < -maxY) {
                            dropped = true;
                            break;
                        }
                    }
                }
                if (averageY <= top_1 + (bottom - top_1) / 2 || dropped) {
                    var nextY = top_1;
                    for (var i = 0, len = seriesPoints.length; i < len; i++) {
                        var series = seriesPoints[i].series;
                        var pointY = seriesPoints[i].point.y;
                        var tooltip = series.tooltip;
                        tooltip.setBounds({ x: 0, y: nextY, width: this.pixelWidth, height: bottom });
                        if (tooltip.invalid) {
                            tooltip.validate();
                        }
                        tooltip.toBack();
                        nextY = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["spritePointToSvg"]({ x: 0, y: tooltip.label.pixelY + tooltip.label.measuredHeight - tooltip.pixelY + pointY + tooltip.pixelMarginBottom }, tooltip).y;
                    }
                }
            }
        }
    };
    /**
     * Shows tooltips for a list of axes at specific position.
     *
     * Position might be X coordinate for horizontal axes, and Y coordinate for
     * vertical axes.
     *
     * @ignore Exclude from docs
     * @param axes      List of axes to show tooltip on
     * @param position  Position (px)
     */
    XYChart.prototype.showAxisTooltip = function (axes, position, except) {
        var _this = this;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__["each"](axes.iterator(), function (axis) {
            if (!except || except.indexOf(axis) == -1) {
                if (_this.dataItems.length > 0 || axis.dataItems.length > 0) {
                    axis.showTooltipAtPosition(position);
                }
            }
        });
    };
    /**
     * Recalculates the value range for the axis taking into account zoom level & inversed.
     *
     * @param axis   Axis
     * @param range  Range
     * @return Modified range
     */
    XYChart.prototype.getUpdatedRange = function (axis, range) {
        if (!axis) {
            return;
        }
        var start;
        var end;
        var inversed = axis.renderer.inversed;
        if (inversed) {
            _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["invertRange"](range);
            start = 1 - axis.end;
            end = 1 - axis.start;
        }
        else {
            start = axis.start;
            end = axis.end;
        }
        var difference = end - start;
        return {
            start: start + range.start * difference,
            end: start + range.end * difference
        };
    };
    /**
     * Performs zoom and other operations when user finishes zooming using chart
     * cursor, e.g. zooms axes.
     *
     * @param event Cursor's event
     */
    XYChart.prototype.handleCursorZoomEnd = function (event) {
        var cursor = this.cursor;
        var behavior = cursor.behavior;
        if (behavior == "zoomX" || behavior == "zoomXY") {
            var xRange = cursor.xRange;
            if (xRange && this.xAxes.length > 0) {
                xRange = this.getUpdatedRange(this.xAxes.getIndex(0), xRange);
                xRange.priority = "start";
                this.zoomAxes(this.xAxes, xRange);
            }
        }
        if (behavior == "zoomY" || behavior == "zoomXY") {
            var yRange = cursor.yRange;
            if (yRange && this.yAxes.length > 0) {
                yRange = this.getUpdatedRange(this.yAxes.getIndex(0), yRange);
                yRange.priority = "start";
                this.zoomAxes(this.yAxes, yRange);
            }
        }
        this.handleHideCursor();
    };
    /**
     * Performs zoom and other operations when user is panning chart plot using chart cursor.
     *
     * @param event Cursor's event
     */
    XYChart.prototype.handleCursorPanStart = function (event) {
        var xAxis = this.xAxes.getIndex(0);
        if (xAxis) {
            this._panStartXRange = { start: xAxis.start, end: xAxis.end };
            if (xAxis.renderer.inversed) {
                this._panStartXRange = _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["invertRange"](this._panStartXRange);
            }
        }
        var yAxis = this.yAxes.getIndex(0);
        if (yAxis) {
            this._panStartYRange = { start: yAxis.start, end: yAxis.end };
            if (yAxis.renderer.inversed) {
                this._panStartYRange = _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["invertRange"](this._panStartYRange);
            }
        }
    };
    /**
     * Performs zoom and other operations when user ends panning
     *
     * @param event Cursor's event
     */
    XYChart.prototype.handleCursorPanEnd = function (event) {
        var cursor = this.cursor;
        var behavior = cursor.behavior;
        if (this._panEndXRange && (behavior == "panX" || behavior == "panXY")) {
            var panEndRange = this._panEndXRange;
            var panStartRange = this._panStartXRange;
            var delta = 0;
            if (panEndRange.start < 0) {
                delta = panEndRange.start;
            }
            if (panStartRange.end > 1) {
                if (panEndRange.end > panStartRange.end) {
                    delta = panEndRange.end - panStartRange.end;
                }
            }
            else if (panEndRange.end > 1) {
                delta = panEndRange.end - 1;
            }
            this.zoomAxes(this.xAxes, { start: panEndRange.start - delta, end: panEndRange.end - delta }, false, true);
            this._panEndXRange = undefined;
            this._panStartXRange = undefined;
        }
        if (this._panEndYRange && (behavior == "panY" || behavior == "panXY")) {
            var panEndRange = this._panEndYRange;
            var delta = 0;
            if (panEndRange.start < 0) {
                delta = panEndRange.start;
            }
            if (panEndRange.end > 1) {
                delta = panEndRange.end - 1;
            }
            this.zoomAxes(this.yAxes, { start: panEndRange.start - delta, end: panEndRange.end - delta }, false, true);
            this._panEndYRange = undefined;
            this._panStartYRange = undefined;
        }
    };
    XYChart.prototype.handleCursorCanceled = function () {
        this._panEndXRange = undefined;
        this._panStartXRange = undefined;
    };
    /**
     * Performs zoom and other operations when user is panning chart plot using chart cursor.
     *
     * @param event Cursor's event
     */
    XYChart.prototype.handleCursorPanning = function (event) {
        var cursor = this.cursor;
        var behavior = cursor.behavior;
        var maxPanOut = cursor.maxPanOut;
        if (this._panStartXRange && (behavior == "panX" || behavior == "panXY")) {
            var panStartRange = this._panStartXRange;
            var range = cursor.xRange;
            var axisRange = this.getCommonAxisRange(this.xAxes);
            var difference = (panStartRange.end - panStartRange.start);
            var delta = range.start * (axisRange.end - axisRange.start);
            var newStart = Math.max(-maxPanOut, delta + panStartRange.start);
            var newEnd = Math.min(delta + panStartRange.end, 1 + maxPanOut);
            if (newStart <= 0) {
                newEnd = newStart + difference;
            }
            if (newEnd >= 1) {
                newStart = newEnd - difference;
            }
            var newRange = {
                start: newStart,
                end: newEnd
            };
            this._panEndXRange = newRange;
            this.zoomAxes(this.xAxes, newRange, false, false, cursor.maxPanOut);
        }
        if (this._panStartYRange && (behavior == "panY" || behavior == "panXY")) {
            var panStartRange = this._panStartYRange;
            var range = cursor.yRange;
            var axisRange = this.getCommonAxisRange(this.yAxes);
            var difference = panStartRange.end - panStartRange.start;
            var delta = range.start * (axisRange.end - axisRange.start);
            var newStart = Math.max(-maxPanOut, delta + panStartRange.start);
            var newEnd = Math.min(delta + panStartRange.end, 1 + maxPanOut);
            if (newStart <= 0) {
                newEnd = newStart + difference;
            }
            if (newEnd >= 1) {
                newStart = newEnd - difference;
            }
            var newRange = {
                start: newStart,
                end: newEnd
            };
            this._panEndYRange = newRange;
            this.zoomAxes(this.yAxes, newRange, false, false, cursor.maxPanOut);
        }
        this.handleHideCursor();
    };
    /**
     * @ignore
     */
    XYChart.prototype.handleYAxisSet = function (series) {
    };
    /**
     * Performs zoom and other operations when user starts zooming using chart
     * cursor, e.g. zooms axes.
     *
     * @param event Cursor's event
     */
    XYChart.prototype.handleCursorZoomStart = function (event) {
        // Nothing here
        // This method is here only as a "placeholder" for extending classes to
        // override if necessary
    };
    Object.defineProperty(XYChart.prototype, "scrollbarX", {
        /**
         * @return Scrollbar
         */
        get: function () {
            return this._scrollbarX;
        },
        /**
         * Horizontal (X) scrollbar.
         *
         * @param scrollbar Scrollbar
         */
        set: function (scrollbar) {
            var _this = this;
            if (this._scrollbarX) {
                this.removeDispose(this._scrollbarX);
            }
            this._scrollbarX = scrollbar;
            if (scrollbar) {
                this._disposers.push(scrollbar);
                scrollbar.parent = this.topAxesContainer;
                scrollbar.shouldClone = false;
                scrollbar.startGrip.exportable = false;
                scrollbar.endGrip.exportable = false;
                scrollbar.toBack();
                scrollbar.orientation = "horizontal";
                scrollbar.events.on("rangechanged", this.handleXScrollbarChange, this, false);
                // accessibility related
                scrollbar.adapter.add("positionValue", function (arg) {
                    var xAxis = _this.xAxes.getIndex(0);
                    if (xAxis) {
                        arg.value = xAxis.getPositionLabel(xAxis.renderer.inversed
                            ? 1 - arg.position
                            : arg.position);
                    }
                    return arg;
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYChart.prototype, "scrollbarY", {
        /**
         * @return Scrollbar
         */
        get: function () {
            return this._scrollbarY;
        },
        /**
         * Vertical (Y) scrollbar.
         *
         * @param scrollbar Scrollbar
         */
        set: function (scrollbar) {
            var _this = this;
            if (this._scrollbarY) {
                this.removeDispose(this._scrollbarY);
            }
            this._scrollbarY = scrollbar;
            if (scrollbar) {
                this._disposers.push(scrollbar);
                scrollbar.parent = this.rightAxesContainer;
                scrollbar.startGrip.exportable = false;
                scrollbar.shouldClone = false;
                scrollbar.endGrip.exportable = false;
                scrollbar.toFront();
                scrollbar.orientation = "vertical";
                scrollbar.events.on("rangechanged", this.handleYScrollbarChange, this, false);
                // accessibility related
                scrollbar.adapter.add("positionValue", function (arg) {
                    var yAxis = _this.yAxes.getIndex(0);
                    if (yAxis) {
                        arg.value = yAxis.getPositionLabel(arg.position);
                    }
                    return arg;
                });
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Zooms axes affected by the horizontal (X) scrollbar when the selection
     * on it changes.
     *
     * @param event Scrollbar range change event
     */
    XYChart.prototype.handleXScrollbarChange = function (event) {
        if (this.inited) {
            var scrollbar = event.target;
            var range = scrollbar.range;
            if (range.start == 0) {
                range.priority = "start";
            }
            if (range.end == 1) {
                range.priority = "end";
            }
            range = this.zoomAxes(this.xAxes, range);
            scrollbar.fixRange(range);
        }
    };
    /**
     * Zooms axes affected by the vertical (Y) scrollbar when the selection
     * on it changes.
     *
     * @param event Scrollbar range change event
     */
    XYChart.prototype.handleYScrollbarChange = function (event) {
        if (this.inited) {
            var scrollbar = event.target;
            var range = scrollbar.range;
            if (range.end == 1) {
                range.priority = "end";
            }
            if (range.start == 0) {
                range.priority = "start";
            }
            range = this.zoomAxes(this.yAxes, range);
            scrollbar.fixRange(range);
        }
    };
    /**
     * Zooms axes that are affected by to specific relative range.
     *
     * @param axes       List of axes to zoom
     * @param range      Range of values to zoom to (0-1)
     * @param instantly  If set to `true` will skip zooming animation
     * @return Recalculated range that is common to all involved axes
     */
    XYChart.prototype.zoomAxes = function (axes, range, instantly, round, declination, stop) {
        var realRange = { start: 0, end: 1 };
        this.showSeriesTooltip(); // hides
        if (!this.dataInvalid) {
            _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__["each"](axes.iterator(), function (axis) {
                if (stop && 1 / (range.end - range.start) >= axis.maxZoomFactor) {
                    // void
                }
                else {
                    if (axis.zoomable) {
                        if (axis.renderer.inversed) {
                            range = _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["invertRange"](range);
                        }
                        axis.hideTooltip(0);
                        if (round) {
                            //let diff = range.end - range.start;
                            if (axis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__["CategoryAxis"]) {
                                var cellWidth = axis.getCellEndPosition(0) - axis.getCellStartPosition(0);
                                range.start = axis.roundPosition(range.start + cellWidth / 2 - (axis.startLocation) * cellWidth, axis.startLocation);
                                range.end = axis.roundPosition(range.end - cellWidth / 2 + (1 - axis.endLocation) * cellWidth, axis.endLocation);
                            }
                            else {
                                range.start = axis.roundPosition(range.start + 0.0001, 0, axis.startLocation);
                                range.end = axis.roundPosition(range.end + 0.0001, 0, axis.endLocation);
                            }
                        }
                        var axisRange = axis.zoom(range, instantly, instantly, declination);
                        if (axis.renderer.inversed) {
                            axisRange = _core_utils_Math__WEBPACK_IMPORTED_MODULE_16__["invertRange"](axisRange);
                        }
                        realRange = axisRange;
                    }
                }
            });
        }
        return realRange;
    };
    Object.defineProperty(XYChart.prototype, "maskBullets", {
        /**
         * @return Mask bullet container?
         */
        get: function () {
            return this.getPropertyValue("maskBullets");
        },
        /**
         * Indicates if bullet container is masked.
         *
         * If it is set to `true`, any bullets that do not fit into bullet container
         * will be clipped off. Settting to `false` will allow bullets to "spill out"
         * of the plot area so they are not cut off.
         *
         * @param value Mask bullet container?
         */
        set: function (value) {
            if (this.setPropertyValue("maskBullets", value, true) && this.bulletsContainer) {
                if (value) {
                    this.bulletsContainer.mask = this._bulletMask;
                }
                else {
                    this.bulletsContainer.mask = undefined;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYChart.prototype, "arrangeTooltips", {
        /**
         * @return Arrange tooltips?
         */
        get: function () {
            return this.getPropertyValue("arrangeTooltips");
        },
        /**
         * Indicates if chart should arrange series tooltips so that they would not
         * overlap.
         *
         * If set to `true` (default), the chart will adjust vertical positions of
         * all simultaneously shown tooltips to avoid overlapping.
         *
         * However, if you have a vertically-arranged chart, it might not make sense,
         * because tooltips would most probably not be aligned horizontally. In this
         * case it would probably be a good idea to set this setting to `false`.
         *
         * @default true
         * @param value Arrange tooltips?
         */
        set: function (value) {
            this.setPropertyValue("arrangeTooltips", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Handles mouse wheel event.
     *
     * @param event  Original event
     */
    XYChart.prototype.handleWheel = function (event) {
        var plotContainer = this.plotContainer;
        var svgPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["documentPointToSvg"](event.point, this.htmlContainer, this.svgContainer.cssScale);
        var plotPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["svgPointToSprite"](svgPoint, plotContainer);
        var shift = event.shift.y;
        this.handleWheelReal(shift, this.mouseWheelBehavior, plotPoint);
    };
    /**
     * Handles mouse wheel event.
     *
     * @param event  Original event
     */
    XYChart.prototype.handleHorizontalWheel = function (event) {
        var plotContainer = this.plotContainer;
        var svgPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["documentPointToSvg"](event.point, this.htmlContainer, this.svgContainer.cssScale);
        var plotPoint = _core_utils_Utils__WEBPACK_IMPORTED_MODULE_19__["svgPointToSprite"](svgPoint, plotContainer);
        this.handleWheelReal(event.shift.x, this.horizontalMouseWheelBehavior, plotPoint);
    };
    /**
     * @ignore
     */
    XYChart.prototype.handleWheelReal = function (shift, mouseWheelBehavior, plotPoint) {
        if (shift != 0) {
            var plotContainer = this.plotContainer;
            var rangeX = this.getCommonAxisRange(this.xAxes);
            var rangeY = this.getCommonAxisRange(this.yAxes);
            var shiftStep = 0.1;
            var maxPanOut = 0;
            if (mouseWheelBehavior == "panX" || mouseWheelBehavior == "panXY") {
                var differenceX = rangeX.end - rangeX.start;
                var newStartX = Math.max(-maxPanOut, rangeX.start + shiftStep * shift / 100 * (rangeX.end - rangeX.start));
                var newEndX = Math.min(rangeX.end + shiftStep * shift / 100 * (rangeX.end - rangeX.start), 1 + maxPanOut);
                if (newStartX <= 0) {
                    newEndX = newStartX + differenceX;
                }
                if (newEndX >= 1) {
                    newStartX = newEndX - differenceX;
                }
                this.zoomAxes(this.xAxes, { start: newStartX, end: newEndX });
            }
            if (mouseWheelBehavior == "panY" || mouseWheelBehavior == "panXY") {
                shift *= -1;
                var differenceY = rangeY.end - rangeY.start;
                var newStartY = Math.max(-maxPanOut, rangeY.start + shiftStep * shift / 100 * (rangeY.end - rangeY.start));
                var newEndY = Math.min(rangeY.end + shiftStep * shift / 100 * (rangeY.end - rangeY.start), 1 + maxPanOut);
                if (newStartY <= 0) {
                    newEndY = newStartY + differenceY;
                }
                if (newEndY >= 1) {
                    newStartY = newEndY - differenceY;
                }
                this.zoomAxes(this.yAxes, { start: newStartY, end: newEndY });
            }
            if (mouseWheelBehavior == "zoomX" || mouseWheelBehavior == "zoomXY") {
                var locationX = plotPoint.x / plotContainer.maxWidth;
                var location2X = this.xAxes.getIndex(0).toAxisPosition(locationX);
                var newStartX = Math.max(-maxPanOut, rangeX.start - shiftStep * (rangeX.end - rangeX.start) * shift / 100 * locationX);
                newStartX = Math.min(newStartX, location2X);
                var newEndX = Math.min(rangeX.end + shiftStep * (rangeX.end - rangeX.start) * shift / 100 * (1 - locationX), 1 + maxPanOut);
                newEndX = Math.max(newEndX, location2X);
                this.zoomAxes(this.xAxes, { start: newStartX, end: newEndX }, undefined, undefined, undefined, true);
            }
            if (mouseWheelBehavior == "zoomY" || mouseWheelBehavior == "zoomXY") {
                var locationY = plotPoint.y / plotContainer.maxHeight;
                var location2Y = this.yAxes.getIndex(0).toAxisPosition(locationY);
                var newStartY = Math.max(-maxPanOut, rangeY.start - shiftStep * (rangeY.end - rangeY.start) * shift / 100 * (1 - locationY));
                newStartY = Math.min(newStartY, location2Y);
                var newEndY = Math.min(rangeY.end + shiftStep * shift / 100 * locationY * (rangeY.end - rangeY.start), 1 + maxPanOut);
                newEndY = Math.max(newEndY, location2Y);
                this.zoomAxes(this.yAxes, { start: newStartY, end: newEndY }, undefined, undefined, undefined, true);
            }
        }
    };
    Object.defineProperty(XYChart.prototype, "mouseWheelBehavior", {
        /**
         * @return Mouse wheel behavior
         */
        get: function () {
            return this.getPropertyValue("mouseWheelBehavior");
        },
        /**
         * Specifies action for when mouse wheel is used when over the chart.
         *
         * Options: Options: `"zoomX"`, `"zoomY"`, `"zoomXY"`, `"panX"`, `"panY"`,`"panXY"`, `"none"` (default).
         *
         * You can control sensitivity of wheel zooming via `mouseOptions`.
         *
         * @default "none"
         * @see {@link https://www.amcharts.com/docs/v4/reference/sprite/#mouseOptions_property} More information about `mouseOptions`
         * @param mouse wheel behavior
         */
        set: function (value) {
            if (this.setPropertyValue("mouseWheelBehavior", value)) {
                if (value != "none") {
                    this._mouseWheelDisposer = this.plotContainer.events.on("wheel", this.handleWheel, this, false);
                    this._disposers.push(this._mouseWheelDisposer);
                }
                else {
                    if (this._mouseWheelDisposer) {
                        this.plotContainer.wheelable = false;
                        this.plotContainer.hoverable = false;
                        this._mouseWheelDisposer.dispose();
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYChart.prototype, "horizontalMouseWheelBehavior", {
        /**
         * @return Horizontal mouse wheel behavior
         */
        get: function () {
            return this.getPropertyValue("horizontalMouseWheelBehavior");
        },
        /**
         * Specifies action for when horizontal mouse wheel is used when over the chart.
         *
         * Options: Options: `"zoomX"`, `"zoomY"`, `"zoomXY"`, `"panX"`, `"panY"`, `"panXY"`, `"none"` (default).
         *
         * @default "none"
         * @see {@link https://www.amcharts.com/docs/v4/reference/sprite/#mouseOptions_property} More information about `mouseOptions`
         * @param mouse wheel behavior
         */
        set: function (value) {
            if (this.setPropertyValue("horizontalMouseWheelBehavior", value)) {
                if (value != "none") {
                    this._mouseWheelDisposer2 = this.plotContainer.events.on("wheel", this.handleHorizontalWheel, this, false);
                    this._disposers.push(this._mouseWheelDisposer2);
                }
                else {
                    if (this._mouseWheelDisposer2) {
                        this.plotContainer.wheelable = false;
                        this.plotContainer.hoverable = false;
                        this._mouseWheelDisposer2.dispose();
                    }
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * This function is called by the [[DataSource]]'s `dateFields` adapater
     * so that particular chart types can popuplate this setting with their
     * own type-specific data fields so they are parsed properly.
     *
     * @param fields  Array of date fields
     * @return Array of date fields populated with chart's date fields
     */
    XYChart.prototype.dataSourceDateFields = function (fields) {
        var _this = this;
        // Process parent
        fields = _super.prototype.dataSourceDateFields.call(this, fields);
        // Check if we have any series with date-fields
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__["each"](this.series.iterator(), function (series) {
            fields = _this.populateDataSourceFields(fields, series.dataFields, ["dateX", "dateY", "openDateX", "openDateY"]);
        });
        return fields;
    };
    /**
     * This function is called by the [[DataSource]]'s `numberFields` adapater
     * so that particular chart types can popuplate this setting with their
     * own type-specific data fields so they are parsed properly.
     *
     * @param value  Array of number fields
     * @return Array of number fields populated with chart's number fields
     */
    XYChart.prototype.dataSourceNumberFields = function (fields) {
        var _this = this;
        fields = _super.prototype.dataSourceDateFields.call(this, fields);
        // Check if we have any series with date-fields
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_17__["each"](this.series.iterator(), function (series) {
            fields = _this.populateDataSourceFields(fields, series.dataFields, ["valueX", "valueY", "openValueX", "openValueY"]);
        });
        return fields;
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    XYChart.prototype.processConfig = function (config) {
        if (config) {
            // Save axis ranges for later processing
            var xAxes = [];
            var yAxes = [];
            // Set up axes
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.xAxes) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isArray"](config.xAxes)) {
                for (var i = 0, len = config.xAxes.length; i < len; i++) {
                    if (!config.xAxes[i].type) {
                        throw Error("[XYChart error] No type set for xAxes[" + i + "].");
                    }
                    else if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.xAxes[i]["axisRanges"])) {
                        // Maybe convert string dates?
                        for (var x = 0, len_1 = config.xAxes[i]["axisRanges"].length; x < len_1; x++) {
                            var range = config.xAxes[i]["axisRanges"][x];
                            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](range.date) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isString"](range.date)) {
                                range.date = this.dateFormatter.parse(range.date);
                            }
                            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](range.endDate) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isString"](range.endDate)) {
                                range.endDate = this.dateFormatter.parse(range.endDate);
                            }
                        }
                        xAxes.push({
                            axisRanges: config.xAxes[i]["axisRanges"],
                            index: i
                        });
                        delete (config.xAxes[i]["axisRanges"]);
                    }
                }
            }
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.yAxes) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isArray"](config.yAxes)) {
                for (var i = 0, len = config.yAxes.length; i < len; i++) {
                    if (!config.yAxes[i].type) {
                        throw Error("[XYChart error] No type set for yAxes[" + i + "].");
                    }
                    else if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.yAxes[i]["axisRanges"])) {
                        // Maybe convert string dates?
                        for (var x = 0, len_2 = config.yAxes[i]["axisRanges"].length; x < len_2; x++) {
                            var range = config.yAxes[i]["axisRanges"][x];
                            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](range.date) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isString"](range.date)) {
                                range.date = this.dateFormatter.parse(range.date);
                            }
                            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](range.endDate) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isString"](range.endDate)) {
                                range.endDate = this.dateFormatter.parse(range.endDate);
                            }
                        }
                        yAxes.push({
                            axisRanges: config.yAxes[i]["axisRanges"],
                            index: i
                        });
                        delete (config.yAxes[i]["axisRanges"]);
                    }
                }
            }
            // Set up series
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isArray"](config.series)) {
                for (var i = 0, len = config.series.length; i < len; i++) {
                    config.series[i].type = config.series[i].type || "LineSeries";
                }
            }
            // Set up cursor
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.cursor) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.cursor.type)) {
                config.cursor.type = "XYCursor";
            }
            // Set up scrollbars
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.scrollbarX) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.scrollbarX.type)) {
                config.scrollbarX.type = "Scrollbar";
            }
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.scrollbarY) && !_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["hasValue"](config.scrollbarY.type)) {
                config.scrollbarY.type = "Scrollbar";
            }
            _super.prototype.processConfig.call(this, config);
            // Finish up with ranges.
            // We need to do this here because series are processed last in JSON
            // config. Therefore their respective objects are not yet are available
            // when axis (and respectively their ranges) are being processed.
            if (yAxes.length) {
                for (var i = 0, len = yAxes.length; i < len; i++) {
                    this.yAxes.getIndex(yAxes[i].index).config = {
                        axisRanges: yAxes[i].axisRanges
                    };
                }
            }
            if (xAxes.length) {
                for (var i = 0, len = xAxes.length; i < len; i++) {
                    this.xAxes.getIndex(xAxes[i].index).config = {
                        axisRanges: xAxes[i].axisRanges
                    };
                }
            }
        }
    };
    /**
     * This function is used to sort element's JSON config properties, so that
     * some properties that absolutely need to be processed last, can be put at
     * the end.
     *
     * @ignore Exclude from docs
     * @param a  Element 1
     * @param b  Element 2
     * @return Sorting number
     */
    XYChart.prototype.configOrder = function (a, b) {
        if (a == b) {
            return 0;
        }
        // Must come last
        else if (a == "scrollbarX") {
            return 1;
        }
        else if (b == "scrollbarX") {
            return -1;
        }
        else if (a == "scrollbarY") {
            return 1;
        }
        else if (b == "scrollbarY") {
            return -1;
        }
        else if (a == "cursor") {
            return 1;
        }
        else if (b == "cursor") {
            return -1;
        }
        else if (a == "series") {
            return 1;
        }
        else if (b == "series") {
            return -1;
        }
        else {
            return _super.prototype.configOrder.call(this, a, b);
        }
    };
    /**
     * Creates a new Series of type suitable for this chart.
     *
     * @return New series
     */
    XYChart.prototype.createSeries = function () {
        return new _series_XYSeries__WEBPACK_IMPORTED_MODULE_10__["XYSeries"]();
    };
    Object.defineProperty(XYChart.prototype, "zoomOutButton", {
        /**
         * @return Zoom out button
         */
        get: function () {
            return this._zoomOutButton;
        },
        /**
         * A [[Button]] element that is used for zooming out the chart.
         *
         * This button appears only when chart is zoomed in, and disappears
         * autoamatically when it is zoome dout.
         *
         * @param button  Zoom out button
         */
        set: function (button) {
            var _this = this;
            this._zoomOutButton = button;
            if (button) {
                button.events.on("hit", function () {
                    _this.zoomAxes(_this.xAxes, { start: 0, end: 1 });
                    _this.zoomAxes(_this.yAxes, { start: 0, end: 1 });
                }, undefined, false);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Copies all parameters from another [[XYChart]].
     *
     * @param source Source XYChart
     */
    XYChart.prototype.copyFrom = function (source) {
        var _this = this;
        source.xAxes.each(function (axis) {
            var a = _this.xAxes.push(axis.clone());
            a.chart = _this;
            a.renderer.chart = _this;
        });
        source.yAxes.each(function (axis) {
            var a = _this.yAxes.push(axis.clone());
            a.renderer.chart = _this;
            a.chart = _this;
        });
        //this.xAxes.copyFrom(source.xAxes);
        //this.yAxes.copyFrom(source.yAxes);
        _super.prototype.copyFrom.call(this, source);
        //this.zoomOutButton.copyFrom(source.zoomOutButton);
        if (source.cursor) {
            this.cursor = source.cursor.clone();
        }
        if (source.scrollbarX) {
            this.scrollbarX = source.scrollbarX.clone();
        }
        if (source.scrollbarY) {
            this.scrollbarY = source.scrollbarY.clone();
        }
        //@todo copy all container properties
    };
    /**
     * @ignore
     */
    XYChart.prototype.disposeData = function () {
        _super.prototype.disposeData.call(this);
        var scrollbarX = this.scrollbarX;
        if (scrollbarX && scrollbarX instanceof _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__["XYChartScrollbar"]) {
            scrollbarX.scrollbarChart.disposeData();
        }
        var scrollbarY = this.scrollbarY;
        if (scrollbarY && scrollbarY instanceof _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__["XYChartScrollbar"]) {
            scrollbarY.scrollbarChart.disposeData();
        }
        this.xAxes.each(function (axis) {
            if (axis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__["CategoryAxis"]) {
                axis.disposeData();
            }
        });
        this.yAxes.each(function (axis) {
            if (axis instanceof _axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_9__["CategoryAxis"]) {
                axis.disposeData();
            }
        });
    };
    /**
     * Adds one or several (array) of data items to the existing data.
     *
     * @param rawDataItem One or many raw data item objects
     */
    XYChart.prototype.addData = function (rawDataItem, removeCount) {
        if (this.scrollbarX instanceof _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__["XYChartScrollbar"]) {
            this.addScrollbarData(this.scrollbarX, removeCount);
        }
        if (this.scrollbarY instanceof _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__["XYChartScrollbar"]) {
            this.addScrollbarData(this.scrollbarY, removeCount);
        }
        _super.prototype.addData.call(this, rawDataItem, removeCount);
    };
    /**
     * @ignore
     */
    XYChart.prototype.addScrollbarData = function (scrollbar, removeCount) {
        var chart = scrollbar.scrollbarChart;
        chart._parseDataFrom = chart.data.length;
        chart.invalidateData();
    };
    /**
     * @ignore
     */
    XYChart.prototype.removeScrollbarData = function (scrollbar, removeCount) {
        var chart = scrollbar.scrollbarChart;
        if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_18__["isNumber"](removeCount)) {
            while (removeCount > 0) {
                var dataItem = this.dataItems.getIndex(0);
                if (dataItem) {
                    chart.dataItems.remove(dataItem);
                }
                chart.dataUsers.each(function (dataUser) {
                    var dataItem = dataUser.dataItems.getIndex(0);
                    if (dataItem) {
                        dataUser.dataItems.remove(dataItem);
                    }
                });
                chart._parseDataFrom--;
                removeCount--;
            }
            chart.invalidateData();
        }
    };
    /**
     * Removes elements from the beginning of data
     *
     * @param count number of elements to remove
     */
    XYChart.prototype.removeData = function (count) {
        if (this.scrollbarX instanceof _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__["XYChartScrollbar"]) {
            this.removeScrollbarData(this.scrollbarX, count);
        }
        if (this.scrollbarY instanceof _elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_15__["XYChartScrollbar"]) {
            this.removeScrollbarData(this.scrollbarY, count);
        }
        _super.prototype.removeData.call(this, count);
    };
    /**
     * @param  value  Tap to activate?
     */
    XYChart.prototype.setTapToActivate = function (value) {
        _super.prototype.setTapToActivate.call(this, value);
        if (this.cursor) {
            this.cursor.interactions.isTouchProtected = value;
            this.plotContainer.interactions.isTouchProtected = value;
        }
    };
    XYChart.prototype.handleTapToActivate = function () {
        _super.prototype.handleTapToActivate.call(this);
        if (this.cursor) {
            this.cursor.interactions.isTouchProtected = false;
            this.plotContainer.interactions.isTouchProtected = false;
        }
    };
    XYChart.prototype.handleTapToActivateDeactivation = function () {
        _super.prototype.handleTapToActivateDeactivation.call(this);
        if (this.cursor) {
            this.cursor.interactions.isTouchProtected = true;
            this.plotContainer.interactions.isTouchProtected = true;
        }
    };
    return XYChart;
}(_SerialChart__WEBPACK_IMPORTED_MODULE_1__["SerialChart"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_14__["registry"].registeredClasses["XYChart"] = XYChart;
/**
 * Add default responsive rules
 */
/**
 * Remove horizontal scrollbar on narrow charts.
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_22__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_22__["ResponsiveBreakpoints"].maybeXS,
    state: function (target, stateId) {
        if (target instanceof XYChart && target.scrollbarX) {
            var state = target.states.create(stateId);
            var sbstate = target.scrollbarX.states.create(stateId);
            sbstate.properties.disabled = true;
            return state;
        }
        return null;
    }
});
/**
 * Remove vertical scrollbar on short charts.
 */
_core_utils_Responsive__WEBPACK_IMPORTED_MODULE_22__["defaultRules"].push({
    relevant: _core_utils_Responsive__WEBPACK_IMPORTED_MODULE_22__["ResponsiveBreakpoints"].maybeXS,
    state: function (target, stateId) {
        if (target instanceof XYChart && target.scrollbarY) {
            var state = target.states.create(stateId);
            var sbstate = target.scrollbarY.states.create(stateId);
            sbstate.properties.disabled = true;
            return state;
        }
        return null;
    }
});
//# sourceMappingURL=XYChart.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart3D.js":
/*!******************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart3D.js ***!
  \******************************************************************************/
/*! exports provided: XYChart3DDataItem, XYChart3D */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XYChart3DDataItem", function() { return XYChart3DDataItem; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "XYChart3D", function() { return XYChart3D; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _XYChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./XYChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js");
/* harmony import */ var _core_Container__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../core/Container */ "./node_modules/@amcharts/amcharts4/.internal/core/Container.js");
/* harmony import */ var _core_Sprite__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _axes_AxisRendererX3D__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../axes/AxisRendererX3D */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX3D.js");
/* harmony import */ var _axes_AxisRendererY3D__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../axes/AxisRendererY3D */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY3D.js");
/* harmony import */ var _series_ColumnSeries3D__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../series/ColumnSeries3D */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries3D.js");
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../../core/utils/Iterator */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Iterator.js");
/* harmony import */ var _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../../core/utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../../core/utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/* harmony import */ var _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../../core/rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../../core/utils/Utils */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Utils.js");
/**
 * Module for building 3D serial charts.
 */

/**
 * ============================================================================
 * Imports
 * ============================================================================
 * @hidden
 */












/**
 * ============================================================================
 * DATA ITEM
 * ============================================================================
 * @hidden
 */
/**
 * Defines a [[DataItem]] for [[XYChart3D]].
 *
 * @see {@link DataItem}
 */
var XYChart3DDataItem = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(XYChart3DDataItem, _super);
    function XYChart3DDataItem() {
        var _this = _super.call(this) || this;
        _this.className = "XYChart3DDataItem";
        _this.applyTheme();
        return _this;
    }
    return XYChart3DDataItem;
}(_XYChart__WEBPACK_IMPORTED_MODULE_1__["XYChartDataItem"]));

/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a 3D XY chart.
 *
 * @see {@link IXYChart3DEvents} for a list of available Events
 * @see {@link IXYChart3DAdapters} for a list of available Adapters
 * @see {@link https://www.amcharts.com/docs/v4/chart-types/xy-chart/} for documentation
 * @important
 */
var XYChart3D = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(XYChart3D, _super);
    /**
     * Constructor
     */
    function XYChart3D() {
        var _this = 
        // Init
        _super.call(this) || this;
        /**
         * Type of the axis renderer to use for X axes.
         */
        _this._axisRendererX = _axes_AxisRendererX3D__WEBPACK_IMPORTED_MODULE_4__["AxisRendererX3D"];
        /**
         * Type of the axis renderer to use for Y axes.
         */
        _this._axisRendererY = _axes_AxisRendererY3D__WEBPACK_IMPORTED_MODULE_5__["AxisRendererY3D"];
        _this.className = "XYChart3D";
        // Set defaults
        _this.depth = 30;
        _this.angle = 30;
        // Creeate container for columns
        var columnsContainer = _this.seriesContainer.createChild(_core_Container__WEBPACK_IMPORTED_MODULE_2__["Container"]);
        columnsContainer.shouldClone = false;
        columnsContainer.isMeasured = false;
        columnsContainer.layout = "none";
        _this.columnsContainer = columnsContainer;
        _this.columnsContainer.mask = _this.createChild(_core_Sprite__WEBPACK_IMPORTED_MODULE_3__["Sprite"]);
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    /**
     * This is done because for some reason IE doesn't change mask if path of a
     * mask changes.
     */
    XYChart3D.prototype.updateSeriesMasks = function () {
        _super.prototype.updateSeriesMasks.call(this);
        if (_core_utils_Utils__WEBPACK_IMPORTED_MODULE_12__["isIE"]()) {
            var columnsContainer = this.columnsContainer;
            var mask = columnsContainer.mask;
            columnsContainer.mask = undefined;
            columnsContainer.mask = mask;
        }
    };
    Object.defineProperty(XYChart3D.prototype, "depth", {
        /**
         * @return Depth (px)
         */
        get: function () {
            return this.getPropertyValue("depth");
        },
        /**
         * Depth of the 3D chart / columns in pixels.
         *
         * @param value  Depth (px)
         */
        set: function (value) {
            this.setPropertyValue("depth", value);
            this.fixLayout();
            this.invalidateDataUsers();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYChart3D.prototype, "angle", {
        /**
         * @return Angle
         */
        get: function () {
            return this.getPropertyValue("angle");
        },
        /**
         * Angle the chart is viewed at.
         *
         * @todo Description (review)
         * @param value  Angle
         */
        set: function (value) {
            this.setPropertyValue("angle", value);
            this.fixLayout();
            this.invalidateDataUsers();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYChart3D.prototype, "dx3D", {
        /**
         * A calculated horizontal 3D offset (px).
         *
         * @readonly
         * @return Offset (px)
         */
        get: function () {
            return _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__["cos"](this.angle) * this.depth;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(XYChart3D.prototype, "dy3D", {
        /**
         * A calculated vertical 3D offset (px).
         *
         * @readonly
         * @return Offset (px)
         */
        get: function () {
            return -_core_utils_Math__WEBPACK_IMPORTED_MODULE_9__["sin"](this.angle) * this.depth;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * (Re)validates layout
     *
     * @ignore Exclude from docs
     */
    XYChart3D.prototype.validateLayout = function () {
        _super.prototype.validateLayout.call(this);
        this.fixColumns();
    };
    /**
     * Updates the layout (padding and scrollbar positions) to accommodate for
     * 3D depth and angle.
     */
    XYChart3D.prototype.fixLayout = function () {
        this.chartContainer.marginTop = -this.dy3D;
        this.chartContainer.paddingRight = this.dx3D;
        if (this.scrollbarX) {
            this.scrollbarX.dy = this.dy3D;
            this.scrollbarX.dx = this.dx3D;
        }
        if (this.scrollbarY) {
            this.scrollbarY.dy = this.dy3D;
            this.scrollbarY.dx = this.dx3D;
        }
        this.fixColumns();
        _super.prototype.fixLayout.call(this);
    };
    /**
     * Updates column positions, offset and dimensions based on chart's angle
     * and depth.
     */
    XYChart3D.prototype.fixColumns = function () {
        var _this = this;
        var count = 1;
        var i = 0;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.series.iterator(), function (series) {
            if (series instanceof _series_ColumnSeries3D__WEBPACK_IMPORTED_MODULE_6__["ColumnSeries3D"]) {
                if (!series.clustered && i > 0) {
                    count++;
                }
                series.depthIndex = count - 1;
                i++;
            }
        });
        var s = 0;
        _core_utils_Iterator__WEBPACK_IMPORTED_MODULE_8__["each"](this.series.iterator(), function (series) {
            if (series instanceof _series_ColumnSeries3D__WEBPACK_IMPORTED_MODULE_6__["ColumnSeries3D"]) {
                series.depth = _this.depth / (count);
                series.angle = _this.angle;
                if (series.columnsContainer == _this.columnsContainer) {
                    series.dx = _this.depth / (count) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__["cos"](_this.angle) * (series.depthIndex);
                    series.dy = -_this.depth / (count) * _core_utils_Math__WEBPACK_IMPORTED_MODULE_9__["sin"](_this.angle) * (series.depthIndex);
                }
                var inversed_1 = false;
                if ((series.baseAxis == series.xAxis && series.xAxis.renderer.inversed) || (series.baseAxis == series.yAxis && series.yAxis.renderer.inversed)) {
                    inversed_1 = true;
                }
                var i_1 = 1;
                series.dataItems.each(function (dataItem) {
                    var column = dataItem.column;
                    if (column) {
                        if (inversed_1) {
                            column.zIndex = 1000 * (1000 - i_1) + s - series.depthIndex * 100;
                        }
                        else {
                            column.zIndex = 1000 * i_1 + s - series.depthIndex * 100;
                        }
                    }
                    i_1++;
                });
                if (inversed_1) {
                    s--;
                }
                else {
                    s++;
                }
            }
        });
        this.maskColumns();
    };
    /**
     * Processes JSON-based config before it is applied to the object.
     *
     * @ignore Exclude from docs
     * @param config  Config
     */
    XYChart3D.prototype.processConfig = function (config) {
        if (config) {
            // Set up series
            if (_core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["hasValue"](config.series) && _core_utils_Type__WEBPACK_IMPORTED_MODULE_10__["isArray"](config.series)) {
                for (var i = 0, len = config.series.length; i < len; i++) {
                    config.series[i].type = config.series[i].type || "ColumnSeries3D";
                }
            }
        }
        _super.prototype.processConfig.call(this, config);
    };
    XYChart3D.prototype.maskColumns = function () {
        var w = this.plotContainer.pixelWidth;
        var h = this.plotContainer.pixelHeight;
        var dx = this.dx3D;
        var dy = this.dy3D;
        var path = _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__["moveTo"]({ x: 0, y: 0 }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__["lineTo"]({ x: dx, y: dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__["lineTo"]({ x: w + dx, y: dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__["lineTo"]({ x: w + dx, y: h + dy }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__["lineTo"]({ x: w, y: h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__["lineTo"]({ x: w, y: h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__["lineTo"]({ x: 0, y: h }) + _core_rendering_Path__WEBPACK_IMPORTED_MODULE_11__["closePath"]();
        var columnsContainer = this.columnsContainer;
        if (columnsContainer && columnsContainer.mask) {
            columnsContainer.mask.path = path;
        }
    };
    return XYChart3D;
}(_XYChart__WEBPACK_IMPORTED_MODULE_1__["XYChart"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_core_Registry__WEBPACK_IMPORTED_MODULE_7__["registry"].registeredClasses["XYChart3D"] = XYChart3D;
//# sourceMappingURL=XYChart3D.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Grip.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/Grip.js ***!
  \**************************************************************************/
/*! exports provided: Grip */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Grip", function() { return Grip; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Button__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Button */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Button.js");
/* harmony import */ var _Sprite__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../Sprite */ "./node_modules/@amcharts/amcharts4/.internal/core/Sprite.js");
/* harmony import */ var _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../core/utils/InterfaceColorSet */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/InterfaceColorSet.js");
/* harmony import */ var _Registry__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");
/* harmony import */ var _utils_Percent__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Percent */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Percent.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/**
 * Grip module.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */






/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Creates a grip element that can be used for scrolling or other things.
 *
 * @see {@link IGripEvents} for a list of available events
 * @see {@link IGripAdapters} for a list of available Adapters
 * @since 4.4.0
 */
var Grip = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(Grip, _super);
    /**
     * Constructor
     */
    function Grip() {
        var _this = 
        // Init
        _super.call(this) || this;
        _this.className = "Grip";
        var cs = new _core_utils_InterfaceColorSet__WEBPACK_IMPORTED_MODULE_3__["InterfaceColorSet"]();
        // Set defaults
        _this.layout = "absolute";
        _this.padding(10, 10, 10, 10);
        _this.margin(3, 3, 3, 3);
        _this.background.fillOpacity = 0.3;
        _this.background.cornerRadius(10, 10, 10, 10);
        // Create an icon
        var icon = new _Sprite__WEBPACK_IMPORTED_MODULE_2__["Sprite"]();
        icon.element = _this.paper.add("path");
        var path = _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["moveTo"]({ x: -6, y: 0 });
        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"]({ x: 6, y: 0 });
        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["moveTo"]({ x: -8, y: -6 });
        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"]({ x: 0, y: -12 });
        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"]({ x: 8, y: -6 });
        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["moveTo"]({ x: -8, y: 6 });
        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"]({ x: 0, y: 12 });
        path += _rendering_Path__WEBPACK_IMPORTED_MODULE_6__["lineTo"]({ x: 8, y: 6 });
        icon.path = path;
        icon.strokeWidth = 2;
        icon.fillOpacity = 0;
        icon.pixelPerfect = true;
        icon.padding(0, 4, 0, 4);
        icon.stroke = cs.getFor("text");
        icon.strokeOpacity = 0.7;
        icon.align = "center";
        icon.valign = "middle";
        _this.icon = icon;
        _this.label.dispose();
        _this.label = undefined;
        // Set default position
        _this.position = "right";
        // Set up autohide
        _this.autoHideDelay = 3000;
        _this.events.on("shown", function (ev) {
            if (_this._autoHideTimeout) {
                _this._autoHideTimeout.dispose();
            }
            if (_this.autoHideDelay) {
                _this._autoHideTimeout = _this.setTimeout(function () {
                    _this.hide();
                }, _this.autoHideDelay);
            }
        });
        _this.events.on("down", function (ev) {
            if (_this._autoHideTimeout) {
                _this._autoHideTimeout.dispose();
            }
        });
        _this.events.on("out", function (ev) {
            if (_this.autoHideDelay) {
                _this._autoHideTimeout = _this.setTimeout(function () {
                    _this.hide();
                }, _this.autoHideDelay);
            }
        });
        // Apply theme
        _this.applyTheme();
        return _this;
    }
    Object.defineProperty(Grip.prototype, "position", {
        /**
         * @return Position
         */
        get: function () {
            return this.getPropertyValue("position");
        },
        /**
         * Sets position of the grip.
         *
         * Available options: "left", "right" (default), "top", "bottom".
         *
         * @param  value  Position
         */
        set: function (value) {
            if (this.setPropertyValue("position", value)) {
                switch (value) {
                    case "left":
                        this.align = "left";
                        this.valign = "middle";
                        this.horizontalCenter = "left";
                        this.verticalCenter = "middle";
                        this.icon.rotation = 0;
                        this.width = undefined;
                        this.height = Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(30);
                        break;
                    case "right":
                        this.align = "right";
                        this.valign = "middle";
                        this.horizontalCenter = "right";
                        this.verticalCenter = "middle";
                        this.icon.rotation = 0;
                        this.width = undefined;
                        this.height = Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(30);
                        break;
                    case "top":
                        this.align = "center";
                        this.valign = "top";
                        this.horizontalCenter = "middle";
                        this.verticalCenter = "top";
                        this.icon.rotation = 90;
                        this.width = Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(30);
                        this.height = undefined;
                        break;
                    case "bottom":
                        this.align = "center";
                        this.valign = "bottom";
                        this.horizontalCenter = "middle";
                        this.verticalCenter = "bottom";
                        this.icon.rotation = 90;
                        this.width = Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(30);
                        this.height = undefined;
                        break;
                    default:
                        this.align = "center";
                        this.valign = "middle";
                        this.horizontalCenter = "middle";
                        this.verticalCenter = "middle";
                        this.icon.rotation = 90;
                        this.width = Object(_utils_Percent__WEBPACK_IMPORTED_MODULE_5__["percent"])(30);
                        this.height = undefined;
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Grip.prototype, "autoHideDelay", {
        /**
         * @return Delay
         */
        get: function () {
            return this.getPropertyValue("autoHideDelay");
        },
        /**
         * Number of milliseconds to show grip until it is hidden automatically.
         *
         * @default 3000
         * @param  value  Delay
         */
        set: function (value) {
            this.setPropertyValue("autoHideDelay", value);
        },
        enumerable: true,
        configurable: true
    });
    return Grip;
}(_Button__WEBPACK_IMPORTED_MODULE_1__["Button"]));

/**
 * Register class in system, so that it can be instantiated using its name from
 * anywhere.
 *
 * @ignore
 */
_Registry__WEBPACK_IMPORTED_MODULE_4__["registry"].registeredClasses["Grip"] = Grip;
//# sourceMappingURL=Grip.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/core/elements/QuadraticCurve.js":
/*!************************************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/core/elements/QuadraticCurve.js ***!
  \************************************************************************************/
/*! exports provided: QuadraticCurve */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "QuadraticCurve", function() { return QuadraticCurve; });
/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! tslib */ "./node_modules/tslib/tslib.es6.js");
/* harmony import */ var _Line__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./Line */ "./node_modules/@amcharts/amcharts4/.internal/core/elements/Line.js");
/* harmony import */ var _utils_Color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils/Color */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Color.js");
/* harmony import */ var _rendering_Path__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../rendering/Path */ "./node_modules/@amcharts/amcharts4/.internal/core/rendering/Path.js");
/* harmony import */ var _utils_Math__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils/Math */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Math.js");
/* harmony import */ var _utils_Type__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../utils/Type */ "./node_modules/@amcharts/amcharts4/.internal/core/utils/Type.js");
/**
 * Functionality for drawing quadratic curves.
 */

/**
 * ============================================================================
 * IMPORTS
 * ============================================================================
 * @hidden
 */





/**
 * ============================================================================
 * MAIN CLASS
 * ============================================================================
 * @hidden
 */
/**
 * Draws a waved line.
 *
 * @see {@link IQuadraticCurveEvents} for a list of available events
 * @see {@link IQuadraticCurveAdapters} for a list of available Adapters
 */
var QuadraticCurve = /** @class */ (function (_super) {
    Object(tslib__WEBPACK_IMPORTED_MODULE_0__["__extends"])(QuadraticCurve, _super);
    /**
     * Constructor
     */
    function QuadraticCurve() {
        var _this = _super.call(this) || this;
        _this.className = "QuadraticCurve";
        _this.element = _this.paper.add("path");
        _this.pixelPerfect = false;
        _this.fill = Object(_utils_Color__WEBPACK_IMPORTED_MODULE_2__["color"])();
        _this.applyTheme();
        return _this;
    }
    /**
     * Draws the waved line.
     *
     * @ignore Exclude from docs
     */
    QuadraticCurve.prototype.draw = function () {
        //super.draw();
        if (_utils_Type__WEBPACK_IMPORTED_MODULE_5__["isNumber"](this.x1 + this.x2 + this.y1 + this.y2 + this.cpx + this.cpy)) {
            var p1 = { x: this.x1, y: this.y1 };
            var p2 = { x: this.x2, y: this.y2 };
            var cp = { x: this.cpx, y: this.cpy };
            var d = _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["moveTo"](p1) + _rendering_Path__WEBPACK_IMPORTED_MODULE_3__["quadraticCurveTo"](p2, cp);
            this.path = d;
        }
    };
    Object.defineProperty(QuadraticCurve.prototype, "cpx", {
        /**
         * @return X
         */
        get: function () {
            return this.getPropertyValue("cpx");
        },
        /**
         * X coordinate of control point.
         *
         * @param value X
         */
        set: function (value) {
            this.setPropertyValue("cpx", value, true);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(QuadraticCurve.prototype, "cpy", {
        /**
         * @return Y
         */
        get: function () {
            return this.getPropertyValue("cpy");
        },
        /**
         * Y coordinate of control point.
         *
         * @param value Y
         */
        set: function (value) {
            this.setPropertyValue("cpy", value, true);
        },
        enumerable: true,
        configurable: true
    });
    /**
     * Converts relative position along the line (0-1) into pixel coordinates.
     *
     * @param position  Position (0-1)
     * @return Coordinates
     */
    QuadraticCurve.prototype.positionToPoint = function (position) {
        var p1 = { x: this.x1, y: this.y1 };
        var cp = { x: this.cpx, y: this.cpy };
        var p2 = { x: this.x2, y: this.y2 };
        var point1 = _utils_Math__WEBPACK_IMPORTED_MODULE_4__["getPointOnQuadraticCurve"](p1, p2, cp, position);
        var point2 = _utils_Math__WEBPACK_IMPORTED_MODULE_4__["getPointOnQuadraticCurve"](p1, p2, cp, position + 0.001);
        return { x: point1.x, y: point1.y, angle: _utils_Math__WEBPACK_IMPORTED_MODULE_4__["getAngle"](point1, point2) };
    };
    return QuadraticCurve;
}(_Line__WEBPACK_IMPORTED_MODULE_1__["Line"]));

//# sourceMappingURL=QuadraticCurve.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/.internal/themes/animated.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/.internal/themes/animated.js ***!
  \***********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _core_Registry__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../core/Registry */ "./node_modules/@amcharts/amcharts4/.internal/core/Registry.js");

var theme = function (object) {
    if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "SpriteState")) {
        object.transitionDuration = 400;
    }
    if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "Component")) {
        object.rangeChangeDuration = 500;
        object.interpolationDuration = 500;
        object.sequencedInterpolation = false;
        if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "SankeyDiagram")) {
            object.sequencedInterpolation = true;
        }
        if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "FunnelSeries")) {
            object.sequencedInterpolation = true;
        }
    }
    if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "Chart")) {
        object.defaultState.transitionDuration = 2000;
        object.hiddenState.transitionDuration = 1000;
    }
    if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "Tooltip")) {
        object.animationDuration = 400;
        object.defaultState.transitionDuration = 400;
        object.hiddenState.transitionDuration = 400;
    }
    if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "Scrollbar")) {
        object.animationDuration = 500;
    }
    if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "Series")) {
        object.defaultState.transitionDuration = 1000;
        object.hiddenState.transitionDuration = 700;
        object.hiddenState.properties.opacity = 1;
        object.showOnInit = true;
    }
    if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "MapSeries")) {
        object.hiddenState.properties.opacity = 0;
    }
    if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "PercentSeries")) {
        object.hiddenState.properties.opacity = 0;
    }
    if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "FunnelSlice")) {
        object.defaultState.transitionDuration = 800;
        object.hiddenState.transitionDuration = 1000;
        object.hiddenState.properties.opacity = 1;
    }
    if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "Slice")) {
        object.defaultState.transitionDuration = 700;
        object.hiddenState.transitionDuration = 1000;
        object.hiddenState.properties.opacity = 1;
    }
    if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "Preloader")) {
        object.hiddenState.transitionDuration = 2000;
    }
    if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "Column")) {
        object.defaultState.transitionDuration = 700;
        object.hiddenState.transitionDuration = 1000;
        object.hiddenState.properties.opacity = 1;
    }
    if (Object(_core_Registry__WEBPACK_IMPORTED_MODULE_0__["is"])(object, "Column3D")) {
        object.hiddenState.properties.opacity = 0;
    }
};
/* harmony default export */ __webpack_exports__["default"] = (theme);
//# sourceMappingURL=animated.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/charts.js":
/*!****************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/charts.js ***!
  \****************************************************/
/*! exports provided: GaugeChartDataItem, GaugeChart, RadarChartDataItem, RadarChart, XYChartDataItem, XYChart, SerialChartDataItem, SerialChart, PieChart3DDataItem, PieChart3D, PieChartDataItem, PieChart, SlicedChart, SlicedChartDataItem, FlowDiagramDataItem, FlowDiagram, SankeyDiagramDataItem, SankeyDiagram, ChordDiagramDataItem, ChordDiagram, TreeMapDataItem, TreeMap, XYChart3DDataItem, XYChart3D, ChartDataItem, Chart, LegendDataItem, Legend, LegendSettings, HeatLegend, SeriesDataItem, Series, XYSeriesDataItem, XYSeries, LineSeriesDataItem, LineSeries, LineSeriesSegment, CandlestickSeriesDataItem, CandlestickSeries, OHLCSeriesDataItem, OHLCSeries, ColumnSeriesDataItem, ColumnSeries, StepLineSeriesDataItem, StepLineSeries, RadarSeriesDataItem, RadarSeries, RadarColumnSeriesDataItem, RadarColumnSeries, PieSeriesDataItem, PieSeries, FunnelSeries, FunnelSeriesDataItem, PyramidSeries, PyramidSeriesDataItem, PictorialStackedSeries, PictorialStackedSeriesDataItem, PieTick, FunnelSlice, PieSeries3DDataItem, PieSeries3D, TreeMapSeriesDataItem, TreeMapSeries, ColumnSeries3DDataItem, ColumnSeries3D, ConeSeriesDataItem, ConeSeries, CurvedColumnSeries, CurvedColumnSeriesDataItem, AxisDataItem, Axis, Grid, AxisTick, AxisLabel, AxisLine, AxisFill, AxisRenderer, AxisBreak, AxisBullet, ValueAxisDataItem, ValueAxis, CategoryAxisDataItem, CategoryAxis, CategoryAxisBreak, DateAxisDataItem, DateAxis, DurationAxisDataItem, DurationAxis, DateAxisBreak, ValueAxisBreak, AxisRendererX, AxisRendererY, AxisRendererRadial, AxisLabelCircular, AxisRendererCircular, AxisFillCircular, GridCircular, AxisRendererX3D, AxisRendererY3D, Tick, Bullet, LabelBullet, CircleBullet, ErrorBullet, XYChartScrollbar, ClockHand, FlowDiagramNode, FlowDiagramLink, SankeyNode, SankeyLink, ChordNode, ChordLink, NavigationBarDataItem, NavigationBar, Column, Candlestick, OHLC, RadarColumn, Column3D, ConeColumn, CurvedColumn, XYCursor, Cursor, RadarCursor */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_charts_types_GaugeChart__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./.internal/charts/types/GaugeChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/GaugeChart.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GaugeChartDataItem", function() { return _internal_charts_types_GaugeChart__WEBPACK_IMPORTED_MODULE_0__["GaugeChartDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GaugeChart", function() { return _internal_charts_types_GaugeChart__WEBPACK_IMPORTED_MODULE_0__["GaugeChart"]; });

/* harmony import */ var _internal_charts_types_RadarChart__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./.internal/charts/types/RadarChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/RadarChart.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadarChartDataItem", function() { return _internal_charts_types_RadarChart__WEBPACK_IMPORTED_MODULE_1__["RadarChartDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadarChart", function() { return _internal_charts_types_RadarChart__WEBPACK_IMPORTED_MODULE_1__["RadarChart"]; });

/* harmony import */ var _internal_charts_types_XYChart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./.internal/charts/types/XYChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XYChartDataItem", function() { return _internal_charts_types_XYChart__WEBPACK_IMPORTED_MODULE_2__["XYChartDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XYChart", function() { return _internal_charts_types_XYChart__WEBPACK_IMPORTED_MODULE_2__["XYChart"]; });

/* harmony import */ var _internal_charts_types_SerialChart__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./.internal/charts/types/SerialChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/SerialChart.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SerialChartDataItem", function() { return _internal_charts_types_SerialChart__WEBPACK_IMPORTED_MODULE_3__["SerialChartDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SerialChart", function() { return _internal_charts_types_SerialChart__WEBPACK_IMPORTED_MODULE_3__["SerialChart"]; });

/* harmony import */ var _internal_charts_types_PieChart3D__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./.internal/charts/types/PieChart3D */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart3D.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PieChart3DDataItem", function() { return _internal_charts_types_PieChart3D__WEBPACK_IMPORTED_MODULE_4__["PieChart3DDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PieChart3D", function() { return _internal_charts_types_PieChart3D__WEBPACK_IMPORTED_MODULE_4__["PieChart3D"]; });

/* harmony import */ var _internal_charts_types_PieChart__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./.internal/charts/types/PieChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/PieChart.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PieChartDataItem", function() { return _internal_charts_types_PieChart__WEBPACK_IMPORTED_MODULE_5__["PieChartDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PieChart", function() { return _internal_charts_types_PieChart__WEBPACK_IMPORTED_MODULE_5__["PieChart"]; });

/* harmony import */ var _internal_charts_types_SlicedChart__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./.internal/charts/types/SlicedChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/SlicedChart.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlicedChart", function() { return _internal_charts_types_SlicedChart__WEBPACK_IMPORTED_MODULE_6__["SlicedChart"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SlicedChartDataItem", function() { return _internal_charts_types_SlicedChart__WEBPACK_IMPORTED_MODULE_6__["SlicedChartDataItem"]; });

/* harmony import */ var _internal_charts_types_FlowDiagram__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./.internal/charts/types/FlowDiagram */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/FlowDiagram.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FlowDiagramDataItem", function() { return _internal_charts_types_FlowDiagram__WEBPACK_IMPORTED_MODULE_7__["FlowDiagramDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FlowDiagram", function() { return _internal_charts_types_FlowDiagram__WEBPACK_IMPORTED_MODULE_7__["FlowDiagram"]; });

/* harmony import */ var _internal_charts_types_SankeyDiagram__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./.internal/charts/types/SankeyDiagram */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/SankeyDiagram.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SankeyDiagramDataItem", function() { return _internal_charts_types_SankeyDiagram__WEBPACK_IMPORTED_MODULE_8__["SankeyDiagramDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SankeyDiagram", function() { return _internal_charts_types_SankeyDiagram__WEBPACK_IMPORTED_MODULE_8__["SankeyDiagram"]; });

/* harmony import */ var _internal_charts_types_ChordDiagram__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./.internal/charts/types/ChordDiagram */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/ChordDiagram.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChordDiagramDataItem", function() { return _internal_charts_types_ChordDiagram__WEBPACK_IMPORTED_MODULE_9__["ChordDiagramDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChordDiagram", function() { return _internal_charts_types_ChordDiagram__WEBPACK_IMPORTED_MODULE_9__["ChordDiagram"]; });

/* harmony import */ var _internal_charts_types_TreeMap__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./.internal/charts/types/TreeMap */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/TreeMap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TreeMapDataItem", function() { return _internal_charts_types_TreeMap__WEBPACK_IMPORTED_MODULE_10__["TreeMapDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TreeMap", function() { return _internal_charts_types_TreeMap__WEBPACK_IMPORTED_MODULE_10__["TreeMap"]; });

/* harmony import */ var _internal_charts_types_XYChart3D__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./.internal/charts/types/XYChart3D */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/XYChart3D.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XYChart3DDataItem", function() { return _internal_charts_types_XYChart3D__WEBPACK_IMPORTED_MODULE_11__["XYChart3DDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XYChart3D", function() { return _internal_charts_types_XYChart3D__WEBPACK_IMPORTED_MODULE_11__["XYChart3D"]; });

/* harmony import */ var _internal_charts_Chart__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./.internal/charts/Chart */ "./node_modules/@amcharts/amcharts4/.internal/charts/Chart.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChartDataItem", function() { return _internal_charts_Chart__WEBPACK_IMPORTED_MODULE_12__["ChartDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Chart", function() { return _internal_charts_Chart__WEBPACK_IMPORTED_MODULE_12__["Chart"]; });

/* harmony import */ var _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./.internal/charts/Legend */ "./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendDataItem", function() { return _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_13__["LegendDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Legend", function() { return _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_13__["Legend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendSettings", function() { return _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_13__["LegendSettings"]; });

/* harmony import */ var _internal_charts_elements_HeatLegend__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./.internal/charts/elements/HeatLegend */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/HeatLegend.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HeatLegend", function() { return _internal_charts_elements_HeatLegend__WEBPACK_IMPORTED_MODULE_14__["HeatLegend"]; });

/* harmony import */ var _internal_charts_series_Series__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./.internal/charts/series/Series */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/Series.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SeriesDataItem", function() { return _internal_charts_series_Series__WEBPACK_IMPORTED_MODULE_15__["SeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Series", function() { return _internal_charts_series_Series__WEBPACK_IMPORTED_MODULE_15__["Series"]; });

/* harmony import */ var _internal_charts_series_XYSeries__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./.internal/charts/series/XYSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/XYSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XYSeriesDataItem", function() { return _internal_charts_series_XYSeries__WEBPACK_IMPORTED_MODULE_16__["XYSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XYSeries", function() { return _internal_charts_series_XYSeries__WEBPACK_IMPORTED_MODULE_16__["XYSeries"]; });

/* harmony import */ var _internal_charts_series_LineSeries__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./.internal/charts/series/LineSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LineSeriesDataItem", function() { return _internal_charts_series_LineSeries__WEBPACK_IMPORTED_MODULE_17__["LineSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LineSeries", function() { return _internal_charts_series_LineSeries__WEBPACK_IMPORTED_MODULE_17__["LineSeries"]; });

/* harmony import */ var _internal_charts_series_LineSeriesSegment__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./.internal/charts/series/LineSeriesSegment */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/LineSeriesSegment.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LineSeriesSegment", function() { return _internal_charts_series_LineSeriesSegment__WEBPACK_IMPORTED_MODULE_18__["LineSeriesSegment"]; });

/* harmony import */ var _internal_charts_series_CandlestickSeries__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./.internal/charts/series/CandlestickSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/CandlestickSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CandlestickSeriesDataItem", function() { return _internal_charts_series_CandlestickSeries__WEBPACK_IMPORTED_MODULE_19__["CandlestickSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CandlestickSeries", function() { return _internal_charts_series_CandlestickSeries__WEBPACK_IMPORTED_MODULE_19__["CandlestickSeries"]; });

/* harmony import */ var _internal_charts_series_OHLCSeries__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./.internal/charts/series/OHLCSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/OHLCSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OHLCSeriesDataItem", function() { return _internal_charts_series_OHLCSeries__WEBPACK_IMPORTED_MODULE_20__["OHLCSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OHLCSeries", function() { return _internal_charts_series_OHLCSeries__WEBPACK_IMPORTED_MODULE_20__["OHLCSeries"]; });

/* harmony import */ var _internal_charts_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./.internal/charts/series/ColumnSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ColumnSeriesDataItem", function() { return _internal_charts_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_21__["ColumnSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ColumnSeries", function() { return _internal_charts_series_ColumnSeries__WEBPACK_IMPORTED_MODULE_21__["ColumnSeries"]; });

/* harmony import */ var _internal_charts_series_StepLineSeries__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./.internal/charts/series/StepLineSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/StepLineSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StepLineSeriesDataItem", function() { return _internal_charts_series_StepLineSeries__WEBPACK_IMPORTED_MODULE_22__["StepLineSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "StepLineSeries", function() { return _internal_charts_series_StepLineSeries__WEBPACK_IMPORTED_MODULE_22__["StepLineSeries"]; });

/* harmony import */ var _internal_charts_series_RadarSeries__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./.internal/charts/series/RadarSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadarSeriesDataItem", function() { return _internal_charts_series_RadarSeries__WEBPACK_IMPORTED_MODULE_23__["RadarSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadarSeries", function() { return _internal_charts_series_RadarSeries__WEBPACK_IMPORTED_MODULE_23__["RadarSeries"]; });

/* harmony import */ var _internal_charts_series_RadarColumnSeries__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./.internal/charts/series/RadarColumnSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/RadarColumnSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadarColumnSeriesDataItem", function() { return _internal_charts_series_RadarColumnSeries__WEBPACK_IMPORTED_MODULE_24__["RadarColumnSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadarColumnSeries", function() { return _internal_charts_series_RadarColumnSeries__WEBPACK_IMPORTED_MODULE_24__["RadarColumnSeries"]; });

/* harmony import */ var _internal_charts_series_PieSeries__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./.internal/charts/series/PieSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PieSeriesDataItem", function() { return _internal_charts_series_PieSeries__WEBPACK_IMPORTED_MODULE_25__["PieSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PieSeries", function() { return _internal_charts_series_PieSeries__WEBPACK_IMPORTED_MODULE_25__["PieSeries"]; });

/* harmony import */ var _internal_charts_series_FunnelSeries__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./.internal/charts/series/FunnelSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/FunnelSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FunnelSeries", function() { return _internal_charts_series_FunnelSeries__WEBPACK_IMPORTED_MODULE_26__["FunnelSeries"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FunnelSeriesDataItem", function() { return _internal_charts_series_FunnelSeries__WEBPACK_IMPORTED_MODULE_26__["FunnelSeriesDataItem"]; });

/* harmony import */ var _internal_charts_series_PyramidSeries__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./.internal/charts/series/PyramidSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PyramidSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PyramidSeries", function() { return _internal_charts_series_PyramidSeries__WEBPACK_IMPORTED_MODULE_27__["PyramidSeries"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PyramidSeriesDataItem", function() { return _internal_charts_series_PyramidSeries__WEBPACK_IMPORTED_MODULE_27__["PyramidSeriesDataItem"]; });

/* harmony import */ var _internal_charts_series_PictorialStackedSeries__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./.internal/charts/series/PictorialStackedSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PictorialStackedSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PictorialStackedSeries", function() { return _internal_charts_series_PictorialStackedSeries__WEBPACK_IMPORTED_MODULE_28__["PictorialStackedSeries"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PictorialStackedSeriesDataItem", function() { return _internal_charts_series_PictorialStackedSeries__WEBPACK_IMPORTED_MODULE_28__["PictorialStackedSeriesDataItem"]; });

/* harmony import */ var _internal_charts_elements_PieTick__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./.internal/charts/elements/PieTick */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/PieTick.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PieTick", function() { return _internal_charts_elements_PieTick__WEBPACK_IMPORTED_MODULE_29__["PieTick"]; });

/* harmony import */ var _internal_charts_elements_FunnelSlice__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./.internal/charts/elements/FunnelSlice */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FunnelSlice.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FunnelSlice", function() { return _internal_charts_elements_FunnelSlice__WEBPACK_IMPORTED_MODULE_30__["FunnelSlice"]; });

/* harmony import */ var _internal_charts_series_PieSeries3D__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./.internal/charts/series/PieSeries3D */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/PieSeries3D.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PieSeries3DDataItem", function() { return _internal_charts_series_PieSeries3D__WEBPACK_IMPORTED_MODULE_31__["PieSeries3DDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "PieSeries3D", function() { return _internal_charts_series_PieSeries3D__WEBPACK_IMPORTED_MODULE_31__["PieSeries3D"]; });

/* harmony import */ var _internal_charts_series_TreeMapSeries__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./.internal/charts/series/TreeMapSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/TreeMapSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TreeMapSeriesDataItem", function() { return _internal_charts_series_TreeMapSeries__WEBPACK_IMPORTED_MODULE_32__["TreeMapSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "TreeMapSeries", function() { return _internal_charts_series_TreeMapSeries__WEBPACK_IMPORTED_MODULE_32__["TreeMapSeries"]; });

/* harmony import */ var _internal_charts_series_ColumnSeries3D__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./.internal/charts/series/ColumnSeries3D */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ColumnSeries3D.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ColumnSeries3DDataItem", function() { return _internal_charts_series_ColumnSeries3D__WEBPACK_IMPORTED_MODULE_33__["ColumnSeries3DDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ColumnSeries3D", function() { return _internal_charts_series_ColumnSeries3D__WEBPACK_IMPORTED_MODULE_33__["ColumnSeries3D"]; });

/* harmony import */ var _internal_charts_series_ConeSeries__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./.internal/charts/series/ConeSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/ConeSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConeSeriesDataItem", function() { return _internal_charts_series_ConeSeries__WEBPACK_IMPORTED_MODULE_34__["ConeSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConeSeries", function() { return _internal_charts_series_ConeSeries__WEBPACK_IMPORTED_MODULE_34__["ConeSeries"]; });

/* harmony import */ var _internal_charts_series_CurvedColumnSeries__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./.internal/charts/series/CurvedColumnSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/series/CurvedColumnSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CurvedColumnSeries", function() { return _internal_charts_series_CurvedColumnSeries__WEBPACK_IMPORTED_MODULE_35__["CurvedColumnSeries"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CurvedColumnSeriesDataItem", function() { return _internal_charts_series_CurvedColumnSeries__WEBPACK_IMPORTED_MODULE_35__["CurvedColumnSeriesDataItem"]; });

/* harmony import */ var _internal_charts_axes_Axis__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./.internal/charts/axes/Axis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/Axis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisDataItem", function() { return _internal_charts_axes_Axis__WEBPACK_IMPORTED_MODULE_36__["AxisDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Axis", function() { return _internal_charts_axes_Axis__WEBPACK_IMPORTED_MODULE_36__["Axis"]; });

/* harmony import */ var _internal_charts_axes_Grid__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./.internal/charts/axes/Grid */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/Grid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Grid", function() { return _internal_charts_axes_Grid__WEBPACK_IMPORTED_MODULE_37__["Grid"]; });

/* harmony import */ var _internal_charts_axes_AxisTick__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./.internal/charts/axes/AxisTick */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisTick.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisTick", function() { return _internal_charts_axes_AxisTick__WEBPACK_IMPORTED_MODULE_38__["AxisTick"]; });

/* harmony import */ var _internal_charts_axes_AxisLabel__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./.internal/charts/axes/AxisLabel */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabel.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisLabel", function() { return _internal_charts_axes_AxisLabel__WEBPACK_IMPORTED_MODULE_39__["AxisLabel"]; });

/* harmony import */ var _internal_charts_axes_AxisLine__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./.internal/charts/axes/AxisLine */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLine.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisLine", function() { return _internal_charts_axes_AxisLine__WEBPACK_IMPORTED_MODULE_40__["AxisLine"]; });

/* harmony import */ var _internal_charts_axes_AxisFill__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./.internal/charts/axes/AxisFill */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFill.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisFill", function() { return _internal_charts_axes_AxisFill__WEBPACK_IMPORTED_MODULE_41__["AxisFill"]; });

/* harmony import */ var _internal_charts_axes_AxisRenderer__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRenderer */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRenderer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisRenderer", function() { return _internal_charts_axes_AxisRenderer__WEBPACK_IMPORTED_MODULE_42__["AxisRenderer"]; });

/* harmony import */ var _internal_charts_axes_AxisBreak__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./.internal/charts/axes/AxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBreak.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisBreak", function() { return _internal_charts_axes_AxisBreak__WEBPACK_IMPORTED_MODULE_43__["AxisBreak"]; });

/* harmony import */ var _internal_charts_axes_AxisBullet__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./.internal/charts/axes/AxisBullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisBullet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisBullet", function() { return _internal_charts_axes_AxisBullet__WEBPACK_IMPORTED_MODULE_44__["AxisBullet"]; });

/* harmony import */ var _internal_charts_axes_ValueAxis__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./.internal/charts/axes/ValueAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValueAxisDataItem", function() { return _internal_charts_axes_ValueAxis__WEBPACK_IMPORTED_MODULE_45__["ValueAxisDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValueAxis", function() { return _internal_charts_axes_ValueAxis__WEBPACK_IMPORTED_MODULE_45__["ValueAxis"]; });

/* harmony import */ var _internal_charts_axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./.internal/charts/axes/CategoryAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CategoryAxisDataItem", function() { return _internal_charts_axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_46__["CategoryAxisDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CategoryAxis", function() { return _internal_charts_axes_CategoryAxis__WEBPACK_IMPORTED_MODULE_46__["CategoryAxis"]; });

/* harmony import */ var _internal_charts_axes_CategoryAxisBreak__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./.internal/charts/axes/CategoryAxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/CategoryAxisBreak.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CategoryAxisBreak", function() { return _internal_charts_axes_CategoryAxisBreak__WEBPACK_IMPORTED_MODULE_47__["CategoryAxisBreak"]; });

/* harmony import */ var _internal_charts_axes_DateAxis__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./.internal/charts/axes/DateAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DateAxisDataItem", function() { return _internal_charts_axes_DateAxis__WEBPACK_IMPORTED_MODULE_48__["DateAxisDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DateAxis", function() { return _internal_charts_axes_DateAxis__WEBPACK_IMPORTED_MODULE_48__["DateAxis"]; });

/* harmony import */ var _internal_charts_axes_DurationAxis__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./.internal/charts/axes/DurationAxis */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DurationAxis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DurationAxisDataItem", function() { return _internal_charts_axes_DurationAxis__WEBPACK_IMPORTED_MODULE_49__["DurationAxisDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DurationAxis", function() { return _internal_charts_axes_DurationAxis__WEBPACK_IMPORTED_MODULE_49__["DurationAxis"]; });

/* harmony import */ var _internal_charts_axes_DateAxisBreak__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./.internal/charts/axes/DateAxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/DateAxisBreak.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "DateAxisBreak", function() { return _internal_charts_axes_DateAxisBreak__WEBPACK_IMPORTED_MODULE_50__["DateAxisBreak"]; });

/* harmony import */ var _internal_charts_axes_ValueAxisBreak__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./.internal/charts/axes/ValueAxisBreak */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/ValueAxisBreak.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ValueAxisBreak", function() { return _internal_charts_axes_ValueAxisBreak__WEBPACK_IMPORTED_MODULE_51__["ValueAxisBreak"]; });

/* harmony import */ var _internal_charts_axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRendererX */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisRendererX", function() { return _internal_charts_axes_AxisRendererX__WEBPACK_IMPORTED_MODULE_52__["AxisRendererX"]; });

/* harmony import */ var _internal_charts_axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRendererY */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisRendererY", function() { return _internal_charts_axes_AxisRendererY__WEBPACK_IMPORTED_MODULE_53__["AxisRendererY"]; });

/* harmony import */ var _internal_charts_axes_AxisRendererRadial__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRendererRadial */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererRadial.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisRendererRadial", function() { return _internal_charts_axes_AxisRendererRadial__WEBPACK_IMPORTED_MODULE_54__["AxisRendererRadial"]; });

/* harmony import */ var _internal_charts_axes_AxisLabelCircular__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./.internal/charts/axes/AxisLabelCircular */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisLabelCircular.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisLabelCircular", function() { return _internal_charts_axes_AxisLabelCircular__WEBPACK_IMPORTED_MODULE_55__["AxisLabelCircular"]; });

/* harmony import */ var _internal_charts_axes_AxisRendererCircular__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRendererCircular */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererCircular.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisRendererCircular", function() { return _internal_charts_axes_AxisRendererCircular__WEBPACK_IMPORTED_MODULE_56__["AxisRendererCircular"]; });

/* harmony import */ var _internal_charts_axes_AxisFillCircular__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./.internal/charts/axes/AxisFillCircular */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisFillCircular.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisFillCircular", function() { return _internal_charts_axes_AxisFillCircular__WEBPACK_IMPORTED_MODULE_57__["AxisFillCircular"]; });

/* harmony import */ var _internal_charts_axes_GridCircular__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./.internal/charts/axes/GridCircular */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/GridCircular.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GridCircular", function() { return _internal_charts_axes_GridCircular__WEBPACK_IMPORTED_MODULE_58__["GridCircular"]; });

/* harmony import */ var _internal_charts_axes_AxisRendererX3D__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRendererX3D */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererX3D.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisRendererX3D", function() { return _internal_charts_axes_AxisRendererX3D__WEBPACK_IMPORTED_MODULE_59__["AxisRendererX3D"]; });

/* harmony import */ var _internal_charts_axes_AxisRendererY3D__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./.internal/charts/axes/AxisRendererY3D */ "./node_modules/@amcharts/amcharts4/.internal/charts/axes/AxisRendererY3D.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "AxisRendererY3D", function() { return _internal_charts_axes_AxisRendererY3D__WEBPACK_IMPORTED_MODULE_60__["AxisRendererY3D"]; });

/* harmony import */ var _internal_charts_elements_Tick__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./.internal/charts/elements/Tick */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Tick.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Tick", function() { return _internal_charts_elements_Tick__WEBPACK_IMPORTED_MODULE_61__["Tick"]; });

/* harmony import */ var _internal_charts_elements_Bullet__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./.internal/charts/elements/Bullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Bullet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Bullet", function() { return _internal_charts_elements_Bullet__WEBPACK_IMPORTED_MODULE_62__["Bullet"]; });

/* harmony import */ var _internal_charts_elements_LabelBullet__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./.internal/charts/elements/LabelBullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/LabelBullet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LabelBullet", function() { return _internal_charts_elements_LabelBullet__WEBPACK_IMPORTED_MODULE_63__["LabelBullet"]; });

/* harmony import */ var _internal_charts_elements_CircleBullet__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./.internal/charts/elements/CircleBullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/CircleBullet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CircleBullet", function() { return _internal_charts_elements_CircleBullet__WEBPACK_IMPORTED_MODULE_64__["CircleBullet"]; });

/* harmony import */ var _internal_charts_elements_ErrorBullet__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./.internal/charts/elements/ErrorBullet */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ErrorBullet.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ErrorBullet", function() { return _internal_charts_elements_ErrorBullet__WEBPACK_IMPORTED_MODULE_65__["ErrorBullet"]; });

/* harmony import */ var _internal_charts_elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./.internal/charts/elements/XYChartScrollbar */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/XYChartScrollbar.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XYChartScrollbar", function() { return _internal_charts_elements_XYChartScrollbar__WEBPACK_IMPORTED_MODULE_66__["XYChartScrollbar"]; });

/* harmony import */ var _internal_charts_elements_ClockHand__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./.internal/charts/elements/ClockHand */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ClockHand.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ClockHand", function() { return _internal_charts_elements_ClockHand__WEBPACK_IMPORTED_MODULE_67__["ClockHand"]; });

/* harmony import */ var _internal_charts_elements_FlowDiagramNode__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./.internal/charts/elements/FlowDiagramNode */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FlowDiagramNode", function() { return _internal_charts_elements_FlowDiagramNode__WEBPACK_IMPORTED_MODULE_68__["FlowDiagramNode"]; });

/* harmony import */ var _internal_charts_elements_FlowDiagramLink__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./.internal/charts/elements/FlowDiagramLink */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/FlowDiagramLink.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "FlowDiagramLink", function() { return _internal_charts_elements_FlowDiagramLink__WEBPACK_IMPORTED_MODULE_69__["FlowDiagramLink"]; });

/* harmony import */ var _internal_charts_elements_SankeyNode__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./.internal/charts/elements/SankeyNode */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SankeyNode", function() { return _internal_charts_elements_SankeyNode__WEBPACK_IMPORTED_MODULE_70__["SankeyNode"]; });

/* harmony import */ var _internal_charts_elements_SankeyLink__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./.internal/charts/elements/SankeyLink */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/SankeyLink.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SankeyLink", function() { return _internal_charts_elements_SankeyLink__WEBPACK_IMPORTED_MODULE_71__["SankeyLink"]; });

/* harmony import */ var _internal_charts_elements_ChordNode__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./.internal/charts/elements/ChordNode */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordNode.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChordNode", function() { return _internal_charts_elements_ChordNode__WEBPACK_IMPORTED_MODULE_72__["ChordNode"]; });

/* harmony import */ var _internal_charts_elements_ChordLink__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./.internal/charts/elements/ChordLink */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ChordLink.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ChordLink", function() { return _internal_charts_elements_ChordLink__WEBPACK_IMPORTED_MODULE_73__["ChordLink"]; });

/* harmony import */ var _internal_charts_elements_NavigationBar__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./.internal/charts/elements/NavigationBar */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/NavigationBar.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NavigationBarDataItem", function() { return _internal_charts_elements_NavigationBar__WEBPACK_IMPORTED_MODULE_74__["NavigationBarDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "NavigationBar", function() { return _internal_charts_elements_NavigationBar__WEBPACK_IMPORTED_MODULE_74__["NavigationBar"]; });

/* harmony import */ var _internal_charts_elements_Column__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./.internal/charts/elements/Column */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Column", function() { return _internal_charts_elements_Column__WEBPACK_IMPORTED_MODULE_75__["Column"]; });

/* harmony import */ var _internal_charts_elements_Candlestick__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./.internal/charts/elements/Candlestick */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Candlestick.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Candlestick", function() { return _internal_charts_elements_Candlestick__WEBPACK_IMPORTED_MODULE_76__["Candlestick"]; });

/* harmony import */ var _internal_charts_elements_OHLC__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./.internal/charts/elements/OHLC */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/OHLC.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "OHLC", function() { return _internal_charts_elements_OHLC__WEBPACK_IMPORTED_MODULE_77__["OHLC"]; });

/* harmony import */ var _internal_charts_elements_RadarColumn__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./.internal/charts/elements/RadarColumn */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/RadarColumn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadarColumn", function() { return _internal_charts_elements_RadarColumn__WEBPACK_IMPORTED_MODULE_78__["RadarColumn"]; });

/* harmony import */ var _internal_charts_elements_Column3D__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./.internal/charts/elements/Column3D */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/Column3D.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Column3D", function() { return _internal_charts_elements_Column3D__WEBPACK_IMPORTED_MODULE_79__["Column3D"]; });

/* harmony import */ var _internal_charts_elements_ConeColumn__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./.internal/charts/elements/ConeColumn */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/ConeColumn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ConeColumn", function() { return _internal_charts_elements_ConeColumn__WEBPACK_IMPORTED_MODULE_80__["ConeColumn"]; });

/* harmony import */ var _internal_charts_elements_CurvedColumn__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./.internal/charts/elements/CurvedColumn */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/CurvedColumn.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "CurvedColumn", function() { return _internal_charts_elements_CurvedColumn__WEBPACK_IMPORTED_MODULE_81__["CurvedColumn"]; });

/* harmony import */ var _internal_charts_cursors_XYCursor__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./.internal/charts/cursors/XYCursor */ "./node_modules/@amcharts/amcharts4/.internal/charts/cursors/XYCursor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "XYCursor", function() { return _internal_charts_cursors_XYCursor__WEBPACK_IMPORTED_MODULE_82__["XYCursor"]; });

/* harmony import */ var _internal_charts_cursors_Cursor__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./.internal/charts/cursors/Cursor */ "./node_modules/@amcharts/amcharts4/.internal/charts/cursors/Cursor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Cursor", function() { return _internal_charts_cursors_Cursor__WEBPACK_IMPORTED_MODULE_83__["Cursor"]; });

/* harmony import */ var _internal_charts_cursors_RadarCursor__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./.internal/charts/cursors/RadarCursor */ "./node_modules/@amcharts/amcharts4/.internal/charts/cursors/RadarCursor.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "RadarCursor", function() { return _internal_charts_cursors_RadarCursor__WEBPACK_IMPORTED_MODULE_84__["RadarCursor"]; });

/**
 * Module: gauge
 */
/**
 * Elements: types
 */












/**
 * Elements: charts
 */



/**
 * Elements: series
 */





















/**
 * Elements: axes
 */

























/**
 * Elements: elements
 */





















/**
 * Elements: cursors
 */



//# sourceMappingURL=charts.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/maps.js":
/*!**************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/maps.js ***!
  \**************************************************/
/*! exports provided: LegendDataItem, Legend, LegendSettings, HeatLegend, MapChartDataItem, MapChart, MapSeriesDataItem, MapSeries, MapObject, MapPolygon, MapImage, MapLine, MapLineObject, MapSpline, MapArc, Graticule, MapPolygonSeriesDataItem, MapPolygonSeries, MapLineSeriesDataItem, MapLineSeries, MapSplineSeriesDataItem, MapSplineSeries, MapImageSeriesDataItem, MapImageSeries, MapArcSeriesDataItem, MapArcSeries, GraticuleSeriesDataItem, GraticuleSeries, multiPolygonToGeo, multiLineToGeo, multiPointToGeo, pointToGeo, multiGeoPolygonToMultipolygon, getBackground, multiGeoLineToMultiLine, multiGeoToPoint, getCircle, ZoomControl, SmallMap, Projection, projections, geo, d3geo */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./.internal/charts/Legend */ "./node_modules/@amcharts/amcharts4/.internal/charts/Legend.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendDataItem", function() { return _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_0__["LegendDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Legend", function() { return _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_0__["Legend"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "LegendSettings", function() { return _internal_charts_Legend__WEBPACK_IMPORTED_MODULE_0__["LegendSettings"]; });

/* harmony import */ var _internal_charts_elements_HeatLegend__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./.internal/charts/elements/HeatLegend */ "./node_modules/@amcharts/amcharts4/.internal/charts/elements/HeatLegend.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "HeatLegend", function() { return _internal_charts_elements_HeatLegend__WEBPACK_IMPORTED_MODULE_1__["HeatLegend"]; });

/* harmony import */ var _internal_charts_types_MapChart__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./.internal/charts/types/MapChart */ "./node_modules/@amcharts/amcharts4/.internal/charts/types/MapChart.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapChartDataItem", function() { return _internal_charts_types_MapChart__WEBPACK_IMPORTED_MODULE_2__["MapChartDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapChart", function() { return _internal_charts_types_MapChart__WEBPACK_IMPORTED_MODULE_2__["MapChart"]; });

/* harmony import */ var _internal_charts_map_MapSeries__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./.internal/charts/map/MapSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSeriesDataItem", function() { return _internal_charts_map_MapSeries__WEBPACK_IMPORTED_MODULE_3__["MapSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSeries", function() { return _internal_charts_map_MapSeries__WEBPACK_IMPORTED_MODULE_3__["MapSeries"]; });

/* harmony import */ var _internal_charts_map_MapObject__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./.internal/charts/map/MapObject */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapObject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapObject", function() { return _internal_charts_map_MapObject__WEBPACK_IMPORTED_MODULE_4__["MapObject"]; });

/* harmony import */ var _internal_charts_map_MapPolygon__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./.internal/charts/map/MapPolygon */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygon.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapPolygon", function() { return _internal_charts_map_MapPolygon__WEBPACK_IMPORTED_MODULE_5__["MapPolygon"]; });

/* harmony import */ var _internal_charts_map_MapImage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./.internal/charts/map/MapImage */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImage.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapImage", function() { return _internal_charts_map_MapImage__WEBPACK_IMPORTED_MODULE_6__["MapImage"]; });

/* harmony import */ var _internal_charts_map_MapLine__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./.internal/charts/map/MapLine */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLine.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLine", function() { return _internal_charts_map_MapLine__WEBPACK_IMPORTED_MODULE_7__["MapLine"]; });

/* harmony import */ var _internal_charts_map_MapLineObject__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./.internal/charts/map/MapLineObject */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineObject.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLineObject", function() { return _internal_charts_map_MapLineObject__WEBPACK_IMPORTED_MODULE_8__["MapLineObject"]; });

/* harmony import */ var _internal_charts_map_MapSpline__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./.internal/charts/map/MapSpline */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSpline.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSpline", function() { return _internal_charts_map_MapSpline__WEBPACK_IMPORTED_MODULE_9__["MapSpline"]; });

/* harmony import */ var _internal_charts_map_MapArc__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./.internal/charts/map/MapArc */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArc.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapArc", function() { return _internal_charts_map_MapArc__WEBPACK_IMPORTED_MODULE_10__["MapArc"]; });

/* harmony import */ var _internal_charts_map_Graticule__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./.internal/charts/map/Graticule */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/Graticule.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Graticule", function() { return _internal_charts_map_Graticule__WEBPACK_IMPORTED_MODULE_11__["Graticule"]; });

/* harmony import */ var _internal_charts_map_MapPolygonSeries__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./.internal/charts/map/MapPolygonSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapPolygonSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapPolygonSeriesDataItem", function() { return _internal_charts_map_MapPolygonSeries__WEBPACK_IMPORTED_MODULE_12__["MapPolygonSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapPolygonSeries", function() { return _internal_charts_map_MapPolygonSeries__WEBPACK_IMPORTED_MODULE_12__["MapPolygonSeries"]; });

/* harmony import */ var _internal_charts_map_MapLineSeries__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./.internal/charts/map/MapLineSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapLineSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLineSeriesDataItem", function() { return _internal_charts_map_MapLineSeries__WEBPACK_IMPORTED_MODULE_13__["MapLineSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapLineSeries", function() { return _internal_charts_map_MapLineSeries__WEBPACK_IMPORTED_MODULE_13__["MapLineSeries"]; });

/* harmony import */ var _internal_charts_map_MapSplineSeries__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./.internal/charts/map/MapSplineSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapSplineSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSplineSeriesDataItem", function() { return _internal_charts_map_MapSplineSeries__WEBPACK_IMPORTED_MODULE_14__["MapSplineSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapSplineSeries", function() { return _internal_charts_map_MapSplineSeries__WEBPACK_IMPORTED_MODULE_14__["MapSplineSeries"]; });

/* harmony import */ var _internal_charts_map_MapImageSeries__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./.internal/charts/map/MapImageSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapImageSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapImageSeriesDataItem", function() { return _internal_charts_map_MapImageSeries__WEBPACK_IMPORTED_MODULE_15__["MapImageSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapImageSeries", function() { return _internal_charts_map_MapImageSeries__WEBPACK_IMPORTED_MODULE_15__["MapImageSeries"]; });

/* harmony import */ var _internal_charts_map_MapArcSeries__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./.internal/charts/map/MapArcSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapArcSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapArcSeriesDataItem", function() { return _internal_charts_map_MapArcSeries__WEBPACK_IMPORTED_MODULE_16__["MapArcSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "MapArcSeries", function() { return _internal_charts_map_MapArcSeries__WEBPACK_IMPORTED_MODULE_16__["MapArcSeries"]; });

/* harmony import */ var _internal_charts_map_GraticuleSeries__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./.internal/charts/map/GraticuleSeries */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/GraticuleSeries.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GraticuleSeriesDataItem", function() { return _internal_charts_map_GraticuleSeries__WEBPACK_IMPORTED_MODULE_17__["GraticuleSeriesDataItem"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "GraticuleSeries", function() { return _internal_charts_map_GraticuleSeries__WEBPACK_IMPORTED_MODULE_17__["GraticuleSeries"]; });

/* harmony import */ var _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./.internal/charts/map/MapUtils */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/MapUtils.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiPolygonToGeo", function() { return _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_18__["multiPolygonToGeo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiLineToGeo", function() { return _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_18__["multiLineToGeo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiPointToGeo", function() { return _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_18__["multiPointToGeo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pointToGeo", function() { return _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_18__["pointToGeo"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiGeoPolygonToMultipolygon", function() { return _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_18__["multiGeoPolygonToMultipolygon"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getBackground", function() { return _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_18__["getBackground"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiGeoLineToMultiLine", function() { return _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_18__["multiGeoLineToMultiLine"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "multiGeoToPoint", function() { return _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_18__["multiGeoToPoint"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "getCircle", function() { return _internal_charts_map_MapUtils__WEBPACK_IMPORTED_MODULE_18__["getCircle"]; });

/* harmony import */ var _internal_charts_map_ZoomControl__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./.internal/charts/map/ZoomControl */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/ZoomControl.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ZoomControl", function() { return _internal_charts_map_ZoomControl__WEBPACK_IMPORTED_MODULE_19__["ZoomControl"]; });

/* harmony import */ var _internal_charts_map_SmallMap__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./.internal/charts/map/SmallMap */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/SmallMap.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "SmallMap", function() { return _internal_charts_map_SmallMap__WEBPACK_IMPORTED_MODULE_20__["SmallMap"]; });

/* harmony import */ var _internal_charts_map_projections_Projection__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./.internal/charts/map/projections/Projection */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections/Projection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Projection", function() { return _internal_charts_map_projections_Projection__WEBPACK_IMPORTED_MODULE_21__["Projection"]; });

/* harmony import */ var _internal_charts_map_projections__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./.internal/charts/map/projections */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/projections.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "projections", function() { return _internal_charts_map_projections__WEBPACK_IMPORTED_MODULE_22__; });
/* harmony import */ var _internal_charts_map_Geo__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./.internal/charts/map/Geo */ "./node_modules/@amcharts/amcharts4/.internal/charts/map/Geo.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "geo", function() { return _internal_charts_map_Geo__WEBPACK_IMPORTED_MODULE_23__; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony reexport (module object) */ __webpack_require__.d(__webpack_exports__, "d3geo", function() { return d3_geo__WEBPACK_IMPORTED_MODULE_24__; });
/**
 * Duplicated
 */


/**
 * Maps
 */



















/**
 * Elements: projections
 */







//# sourceMappingURL=maps.js.map

/***/ }),

/***/ "./node_modules/@amcharts/amcharts4/themes/animated.js":
/*!*************************************************************!*\
  !*** ./node_modules/@amcharts/amcharts4/themes/animated.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _internal_themes_animated__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../.internal/themes/animated */ "./node_modules/@amcharts/amcharts4/.internal/themes/animated.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "default", function() { return _internal_themes_animated__WEBPACK_IMPORTED_MODULE_0__["default"]; });


//# sourceMappingURL=animated.js.map

/***/ }),

/***/ "./node_modules/d3-array/src/array.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/array.js ***!
  \********************************************/
/*! exports provided: slice, map */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "slice", function() { return slice; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "map", function() { return map; });
var array = Array.prototype;

var slice = array.slice;
var map = array.map;


/***/ }),

/***/ "./node_modules/d3-array/src/ascending.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/ascending.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
});


/***/ }),

/***/ "./node_modules/d3-array/src/bin.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/bin.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./array.js */ "./node_modules/d3-array/src/array.js");
/* harmony import */ var _bisect_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisect.js */ "./node_modules/d3-array/src/bisect.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-array/src/constant.js");
/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extent.js */ "./node_modules/d3-array/src/extent.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./identity.js */ "./node_modules/d3-array/src/identity.js");
/* harmony import */ var _nice_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./nice.js */ "./node_modules/d3-array/src/nice.js");
/* harmony import */ var _ticks_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./ticks.js */ "./node_modules/d3-array/src/ticks.js");
/* harmony import */ var _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./threshold/sturges.js */ "./node_modules/d3-array/src/threshold/sturges.js");









/* harmony default export */ __webpack_exports__["default"] = (function() {
  var value = _identity_js__WEBPACK_IMPORTED_MODULE_4__["default"],
      domain = _extent_js__WEBPACK_IMPORTED_MODULE_3__["default"],
      threshold = _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_7__["default"];

  function histogram(data) {
    if (!Array.isArray(data)) data = Array.from(data);

    var i,
        n = data.length,
        x,
        values = new Array(n);

    for (i = 0; i < n; ++i) {
      values[i] = value(data[i], i, data);
    }

    var xz = domain(values),
        x0 = xz[0],
        x1 = xz[1],
        tz = threshold(values, x0, x1);

    // Convert number of thresholds into uniform thresholds, and nice the
    // default domain accordingly.
    if (!Array.isArray(tz)) {
      const max = x1, tn = +tz;
      if (domain === _extent_js__WEBPACK_IMPORTED_MODULE_3__["default"]) [x0, x1] = Object(_nice_js__WEBPACK_IMPORTED_MODULE_5__["default"])(x0, x1, tn);
      tz = Object(_ticks_js__WEBPACK_IMPORTED_MODULE_6__["default"])(x0, x1, tn);

      // If the last threshold is coincident with the domain’s upper bound, the
      // last bin will be zero-width. If the default domain is used, and this
      // last threshold is coincident with the maximum input value, we can
      // extend the niced upper bound by one tick to ensure uniform bin widths;
      // otherwise, we simply remove the last threshold. Note that we don’t
      // coerce values or the domain to numbers, and thus must be careful to
      // compare order (>=) rather than strict equality (===)!
      if (tz[tz.length - 1] >= x1) {
        if (max >= x1 && domain === _extent_js__WEBPACK_IMPORTED_MODULE_3__["default"]) {
          const step = Object(_ticks_js__WEBPACK_IMPORTED_MODULE_6__["tickIncrement"])(x0, x1, tn);
          if (isFinite(step)) {
            if (step > 0) {
              x1 = (Math.floor(x1 / step) + 1) * step;
            } else if (step < 0) {
              x1 = (Math.ceil(x1 * -step) + 1) / -step;
            }
          }
        } else {
          tz.pop();
        }
      }
    }

    // Remove any thresholds outside the domain.
    var m = tz.length;
    while (tz[0] <= x0) tz.shift(), --m;
    while (tz[m - 1] > x1) tz.pop(), --m;

    var bins = new Array(m + 1),
        bin;

    // Initialize bins.
    for (i = 0; i <= m; ++i) {
      bin = bins[i] = [];
      bin.x0 = i > 0 ? tz[i - 1] : x0;
      bin.x1 = i < m ? tz[i] : x1;
    }

    // Assign data to bins by value, ignoring any outside the domain.
    for (i = 0; i < n; ++i) {
      x = values[i];
      if (x0 <= x && x <= x1) {
        bins[Object(_bisect_js__WEBPACK_IMPORTED_MODULE_1__["default"])(tz, x, 0, m)].push(data[i]);
      }
    }

    return bins;
  }

  histogram.value = function(_) {
    return arguments.length ? (value = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : value;
  };

  histogram.domain = function(_) {
    return arguments.length ? (domain = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_2__["default"])([_[0], _[1]]), histogram) : domain;
  };

  histogram.thresholds = function(_) {
    return arguments.length ? (threshold = typeof _ === "function" ? _ : Array.isArray(_) ? Object(_constant_js__WEBPACK_IMPORTED_MODULE_2__["default"])(_array_js__WEBPACK_IMPORTED_MODULE_0__["slice"].call(_)) : Object(_constant_js__WEBPACK_IMPORTED_MODULE_2__["default"])(_), histogram) : threshold;
  };

  return histogram;
});


/***/ }),

/***/ "./node_modules/d3-array/src/bisect.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/bisect.js ***!
  \*********************************************/
/*! exports provided: bisectRight, bisectLeft, bisectCenter, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return bisectRight; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return bisectLeft; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bisectCenter", function() { return bisectCenter; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _bisector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bisector.js */ "./node_modules/d3-array/src/bisector.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-array/src/number.js");




const ascendingBisect = Object(_bisector_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
const bisectRight = ascendingBisect.right;
const bisectLeft = ascendingBisect.left;
const bisectCenter = Object(_bisector_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_number_js__WEBPACK_IMPORTED_MODULE_2__["default"]).center;
/* harmony default export */ __webpack_exports__["default"] = (bisectRight);


/***/ }),

/***/ "./node_modules/d3-array/src/bisector.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/bisector.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");


/* harmony default export */ __webpack_exports__["default"] = (function(f) {
  let delta = f;
  let compare = f;

  if (f.length === 1) {
    delta = (d, x) => f(d) - x;
    compare = ascendingComparator(f);
  }

  function left(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;
    while (lo < hi) {
      const mid = (lo + hi) >>> 1;
      if (compare(a[mid], x) < 0) lo = mid + 1;
      else hi = mid;
    }
    return lo;
  }

  function right(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;
    while (lo < hi) {
      const mid = (lo + hi) >>> 1;
      if (compare(a[mid], x) > 0) hi = mid;
      else lo = mid + 1;
    }
    return lo;
  }

  function center(a, x, lo, hi) {
    if (lo == null) lo = 0;
    if (hi == null) hi = a.length;
    const i = left(a, x, lo, hi - 1);
    return i > lo && delta(a[i - 1], x) > -delta(a[i], x) ? i - 1 : i;
  }

  return {left, center, right};
});

function ascendingComparator(f) {
  return (d, x) => Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(f(d), x);
}


/***/ }),

/***/ "./node_modules/d3-array/src/constant.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/constant.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-array/src/count.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/count.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return count; });
function count(values, valueof) {
  let count = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        ++count;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        ++count;
      }
    }
  }
  return count;
}


/***/ }),

/***/ "./node_modules/d3-array/src/cross.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/cross.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return cross; });
function length(array) {
  return array.length | 0;
}

function empty(length) {
  return !(length > 0);
}

function arrayify(values) {
  return typeof values !== "object" || "length" in values ? values : Array.from(values);
}

function reducer(reduce) {
  return values => reduce(...values);
}

function cross(...values) {
  const reduce = typeof values[values.length - 1] === "function" && reducer(values.pop());
  values = values.map(arrayify);
  const lengths = values.map(length);
  const j = values.length - 1;
  const index = new Array(j + 1).fill(0);
  const product = [];
  if (j < 0 || lengths.some(empty)) return product;
  while (true) {
    product.push(index.map((j, i) => values[i][j]));
    let i = j;
    while (++index[i] === lengths[i]) {
      if (i === 0) return reduce ? product.map(reduce) : product;
      index[i--] = 0;
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-array/src/cumsum.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/cumsum.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return cumsum; });
function cumsum(values, valueof) {
  var sum = 0, index = 0;
  return Float64Array.from(values, valueof === undefined
    ? v => (sum += +v || 0)
    : v => (sum += +valueof(v, index++, values) || 0));
}

/***/ }),

/***/ "./node_modules/d3-array/src/descending.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-array/src/descending.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return b < a ? -1 : b > a ? 1 : b >= a ? 0 : NaN;
});


/***/ }),

/***/ "./node_modules/d3-array/src/deviation.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/deviation.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return deviation; });
/* harmony import */ var _variance_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./variance.js */ "./node_modules/d3-array/src/variance.js");


function deviation(values, valueof) {
  const v = Object(_variance_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values, valueof);
  return v ? Math.sqrt(v) : v;
}


/***/ }),

/***/ "./node_modules/d3-array/src/difference.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-array/src/difference.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return difference; });
function difference(values, ...others) {
  values = new Set(values);
  for (const other of others) {
    for (const value of other) {
      values.delete(value);
    }
  }
  return values;
}


/***/ }),

/***/ "./node_modules/d3-array/src/disjoint.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/disjoint.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return disjoint; });
function disjoint(values, other) {
  const iterator = other[Symbol.iterator](), set = new Set();
  for (const v of values) {
    if (set.has(v)) return false;
    let value, done;
    while (({value, done} = iterator.next())) {
      if (done) break;
      if (Object.is(v, value)) return false;
      set.add(value);
    }
  }
  return true;
}


/***/ }),

/***/ "./node_modules/d3-array/src/every.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/every.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return every; });
function every(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  let index = -1;
  for (const value of values) {
    if (!test(value, ++index, values)) {
      return false;
    }
  }
  return true;
}


/***/ }),

/***/ "./node_modules/d3-array/src/extent.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/extent.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  let min;
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null) {
        if (min === undefined) {
          if (value >= value) min = max = value;
        } else {
          if (min > value) min = value;
          if (max < value) max = value;
        }
      }
    }
  }
  return [min, max];
});


/***/ }),

/***/ "./node_modules/d3-array/src/filter.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/filter.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return filter; });
function filter(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  const array = [];
  let index = -1;
  for (const value of values) {
    if (test(value, ++index, values)) {
      array.push(value);
    }
  }
  return array;
}


/***/ }),

/***/ "./node_modules/d3-array/src/fsum.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/fsum.js ***!
  \*******************************************/
/*! exports provided: Adder, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "Adder", function() { return Adder; });
// https://github.com/python/cpython/blob/a74eea238f5baba15797e2e8b570d153bc8690a7/Modules/mathmodule.c#L1423
class Adder {
  constructor() {
    this._partials = new Float64Array(32);
    this._n = 0;
  }
  add(x) {
    const p = this._partials;
    let i = 0;
    for (let j = 0; j < this._n && j < 32; j++) {
      const y = p[j],
        hi = x + y,
        lo = Math.abs(x) < Math.abs(y) ? x - (hi - y) : y - (hi - x);
      if (lo) p[i++] = lo;
      x = hi;
    }
    p[i] = x;
    this._n = i + 1;
    return this;
  }
  valueOf() {
    const p = this._partials;
    let n = this._n, x, y, lo, hi = 0;
    if (n > 0) {
      hi = p[--n];
      while (n > 0) {
        x = hi;
        y = p[--n];
        hi = x + y;
        lo = y - (hi - x);
        if (lo) break;
      }
      if (n > 0 && ((lo < 0 && p[n - 1] < 0) || (lo > 0 && p[n - 1] > 0))) {
        y = lo * 2;
        x = hi + y;
        if (y == x - hi) hi = x;
      }
    }
    return hi;
  }
}

/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  const adder = new Adder();
  if (valueof === undefined) {
    for (let value of values) {
      if (value = +value) {
        adder.add(value);
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if (value = +valueof(value, ++index, values)) {
        adder.add(value);
      }
    }
  }
  return +adder;
});


/***/ }),

/***/ "./node_modules/d3-array/src/greatest.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/greatest.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return greatest; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");


function greatest(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  let max;
  let defined = false;
  if (compare.length === 1) {
    let maxValue;
    for (const element of values) {
      const value = compare(element);
      if (defined
          ? Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, maxValue) > 0
          : Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, value) === 0) {
        max = element;
        maxValue = value;
        defined = true;
      }
    }
  } else {
    for (const value of values) {
      if (defined
          ? compare(value, max) > 0
          : compare(value, value) === 0) {
        max = value;
        defined = true;
      }
    }
  }
  return max;
}


/***/ }),

/***/ "./node_modules/d3-array/src/greatestIndex.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-array/src/greatestIndex.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return greatestIndex; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _maxIndex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./maxIndex.js */ "./node_modules/d3-array/src/maxIndex.js");



function greatestIndex(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  if (compare.length === 1) return Object(_maxIndex_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, compare);
  let maxValue;
  let max = -1;
  let index = -1;
  for (const value of values) {
    ++index;
    if (max < 0
        ? compare(value, value) === 0
        : compare(value, maxValue) > 0) {
      maxValue = value;
      max = index;
    }
  }
  return max;
}


/***/ }),

/***/ "./node_modules/d3-array/src/group.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/group.js ***!
  \********************************************/
/*! exports provided: default, groups, rollup, rollups, index, indexes */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return group; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "groups", function() { return groups; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rollup", function() { return rollup; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rollups", function() { return rollups; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "index", function() { return index; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "indexes", function() { return indexes; });
/* harmony import */ var internmap__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! internmap */ "./node_modules/internmap/src/index.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./identity.js */ "./node_modules/d3-array/src/identity.js");



function group(values, ...keys) {
  return nest(values, _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"], _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"], keys);
}

function groups(values, ...keys) {
  return nest(values, Array.from, _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"], keys);
}

function rollup(values, reduce, ...keys) {
  return nest(values, _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"], reduce, keys);
}

function rollups(values, reduce, ...keys) {
  return nest(values, Array.from, reduce, keys);
}

function index(values, ...keys) {
  return nest(values, _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"], unique, keys);
}

function indexes(values, ...keys) {
  return nest(values, Array.from, unique, keys);
}

function unique(values) {
  if (values.length !== 1) throw new Error("duplicate key");
  return values[0];
}

function nest(values, map, reduce, keys) {
  return (function regroup(values, i) {
    if (i >= keys.length) return reduce(values);
    const groups = new internmap__WEBPACK_IMPORTED_MODULE_0__["InternMap"]();
    const keyof = keys[i++];
    let index = -1;
    for (const value of values) {
      const key = keyof(value, ++index, values);
      const group = groups.get(key);
      if (group) group.push(value);
      else groups.set(key, [value]);
    }
    for (const [key, values] of groups) {
      groups.set(key, regroup(values, i));
    }
    return map(groups);
  })(values, 0);
}


/***/ }),

/***/ "./node_modules/d3-array/src/groupSort.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/groupSort.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return groupSort; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _group_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./group.js */ "./node_modules/d3-array/src/group.js");
/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sort.js */ "./node_modules/d3-array/src/sort.js");




function groupSort(values, reduce, key) {
  return (reduce.length === 1
    ? Object(_sort_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_group_js__WEBPACK_IMPORTED_MODULE_1__["rollup"])(values, reduce, key), (([ak, av], [bk, bv]) => Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(av, bv) || Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(ak, bk)))
    : Object(_sort_js__WEBPACK_IMPORTED_MODULE_2__["default"])(Object(_group_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, key), (([ak, av], [bk, bv]) => reduce(av, bv) || Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(ak, bk))))
    .map(([key]) => key);
}


/***/ }),

/***/ "./node_modules/d3-array/src/identity.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/identity.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x;
});


/***/ }),

/***/ "./node_modules/d3-array/src/index.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/index.js ***!
  \********************************************/
/*! exports provided: bisect, bisectRight, bisectLeft, bisectCenter, ascending, bisector, count, cross, cumsum, descending, deviation, extent, fsum, Adder, group, groups, index, indexes, rollup, rollups, groupSort, bin, histogram, thresholdFreedmanDiaconis, thresholdScott, thresholdSturges, max, maxIndex, mean, median, merge, min, minIndex, nice, pairs, permute, quantile, quantileSorted, quickselect, range, least, leastIndex, greatest, greatestIndex, scan, shuffle, shuffler, sum, ticks, tickIncrement, tickStep, transpose, variance, zip, every, some, filter, map, reduce, reverse, sort, difference, disjoint, intersection, subset, superset, union, InternMap, InternSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _bisect_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./bisect.js */ "./node_modules/d3-array/src/bisect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisect", function() { return _bisect_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectRight", function() { return _bisect_js__WEBPACK_IMPORTED_MODULE_0__["bisectRight"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectLeft", function() { return _bisect_js__WEBPACK_IMPORTED_MODULE_0__["bisectLeft"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisectCenter", function() { return _bisect_js__WEBPACK_IMPORTED_MODULE_0__["bisectCenter"]; });

/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ascending", function() { return _ascending_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _bisector_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./bisector.js */ "./node_modules/d3-array/src/bisector.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bisector", function() { return _bisector_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./count.js */ "./node_modules/d3-array/src/count.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "count", function() { return _count_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _cross_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./cross.js */ "./node_modules/d3-array/src/cross.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cross", function() { return _cross_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _cumsum_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./cumsum.js */ "./node_modules/d3-array/src/cumsum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "cumsum", function() { return _cumsum_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _descending_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./descending.js */ "./node_modules/d3-array/src/descending.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "descending", function() { return _descending_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _deviation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./deviation.js */ "./node_modules/d3-array/src/deviation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "deviation", function() { return _deviation_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _extent_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./extent.js */ "./node_modules/d3-array/src/extent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "extent", function() { return _extent_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _fsum_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./fsum.js */ "./node_modules/d3-array/src/fsum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "fsum", function() { return _fsum_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "Adder", function() { return _fsum_js__WEBPACK_IMPORTED_MODULE_9__["Adder"]; });

/* harmony import */ var _group_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./group.js */ "./node_modules/d3-array/src/group.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "group", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "groups", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["groups"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "index", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["index"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "indexes", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["indexes"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rollup", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["rollup"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "rollups", function() { return _group_js__WEBPACK_IMPORTED_MODULE_10__["rollups"]; });

/* harmony import */ var _groupSort_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./groupSort.js */ "./node_modules/d3-array/src/groupSort.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "groupSort", function() { return _groupSort_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _bin_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./bin.js */ "./node_modules/d3-array/src/bin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "bin", function() { return _bin_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "histogram", function() { return _bin_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _threshold_freedmanDiaconis_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./threshold/freedmanDiaconis.js */ "./node_modules/d3-array/src/threshold/freedmanDiaconis.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdFreedmanDiaconis", function() { return _threshold_freedmanDiaconis_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _threshold_scott_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./threshold/scott.js */ "./node_modules/d3-array/src/threshold/scott.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdScott", function() { return _threshold_scott_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./threshold/sturges.js */ "./node_modules/d3-array/src/threshold/sturges.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "thresholdSturges", function() { return _threshold_sturges_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _max_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./max.js */ "./node_modules/d3-array/src/max.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "max", function() { return _max_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony import */ var _maxIndex_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./maxIndex.js */ "./node_modules/d3-array/src/maxIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "maxIndex", function() { return _maxIndex_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony import */ var _mean_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./mean.js */ "./node_modules/d3-array/src/mean.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "mean", function() { return _mean_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony import */ var _median_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./median.js */ "./node_modules/d3-array/src/median.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "median", function() { return _median_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./merge.js */ "./node_modules/d3-array/src/merge.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "merge", function() { return _merge_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./min.js */ "./node_modules/d3-array/src/min.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "min", function() { return _min_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony import */ var _minIndex_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./minIndex.js */ "./node_modules/d3-array/src/minIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "minIndex", function() { return _minIndex_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony import */ var _nice_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./nice.js */ "./node_modules/d3-array/src/nice.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "nice", function() { return _nice_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony import */ var _pairs_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./pairs.js */ "./node_modules/d3-array/src/pairs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "pairs", function() { return _pairs_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _permute_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./permute.js */ "./node_modules/d3-array/src/permute.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "permute", function() { return _permute_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./quantile.js */ "./node_modules/d3-array/src/quantile.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantile", function() { return _quantile_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quantileSorted", function() { return _quantile_js__WEBPACK_IMPORTED_MODULE_26__["quantileSorted"]; });

/* harmony import */ var _quickselect_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./quickselect.js */ "./node_modules/d3-array/src/quickselect.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "quickselect", function() { return _quickselect_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _range_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./range.js */ "./node_modules/d3-array/src/range.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "range", function() { return _range_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony import */ var _least_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./least.js */ "./node_modules/d3-array/src/least.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "least", function() { return _least_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony import */ var _leastIndex_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./leastIndex.js */ "./node_modules/d3-array/src/leastIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "leastIndex", function() { return _leastIndex_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony import */ var _greatest_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./greatest.js */ "./node_modules/d3-array/src/greatest.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "greatest", function() { return _greatest_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _greatestIndex_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./greatestIndex.js */ "./node_modules/d3-array/src/greatestIndex.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "greatestIndex", function() { return _greatestIndex_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _scan_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./scan.js */ "./node_modules/d3-array/src/scan.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "scan", function() { return _scan_js__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony import */ var _shuffle_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./shuffle.js */ "./node_modules/d3-array/src/shuffle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffle", function() { return _shuffle_js__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "shuffler", function() { return _shuffle_js__WEBPACK_IMPORTED_MODULE_34__["shuffler"]; });

/* harmony import */ var _sum_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./sum.js */ "./node_modules/d3-array/src/sum.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sum", function() { return _sum_js__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony import */ var _ticks_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./ticks.js */ "./node_modules/d3-array/src/ticks.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "ticks", function() { return _ticks_js__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return _ticks_js__WEBPACK_IMPORTED_MODULE_36__["tickIncrement"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return _ticks_js__WEBPACK_IMPORTED_MODULE_36__["tickStep"]; });

/* harmony import */ var _transpose_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./transpose.js */ "./node_modules/d3-array/src/transpose.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "transpose", function() { return _transpose_js__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony import */ var _variance_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./variance.js */ "./node_modules/d3-array/src/variance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "variance", function() { return _variance_js__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony import */ var _zip_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./zip.js */ "./node_modules/d3-array/src/zip.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "zip", function() { return _zip_js__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony import */ var _every_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./every.js */ "./node_modules/d3-array/src/every.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "every", function() { return _every_js__WEBPACK_IMPORTED_MODULE_40__["default"]; });

/* harmony import */ var _some_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./some.js */ "./node_modules/d3-array/src/some.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "some", function() { return _some_js__WEBPACK_IMPORTED_MODULE_41__["default"]; });

/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./filter.js */ "./node_modules/d3-array/src/filter.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "filter", function() { return _filter_js__WEBPACK_IMPORTED_MODULE_42__["default"]; });

/* harmony import */ var _map_js__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./map.js */ "./node_modules/d3-array/src/map.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "map", function() { return _map_js__WEBPACK_IMPORTED_MODULE_43__["default"]; });

/* harmony import */ var _reduce_js__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./reduce.js */ "./node_modules/d3-array/src/reduce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reduce", function() { return _reduce_js__WEBPACK_IMPORTED_MODULE_44__["default"]; });

/* harmony import */ var _reverse_js__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./reverse.js */ "./node_modules/d3-array/src/reverse.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "reverse", function() { return _reverse_js__WEBPACK_IMPORTED_MODULE_45__["default"]; });

/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./sort.js */ "./node_modules/d3-array/src/sort.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "sort", function() { return _sort_js__WEBPACK_IMPORTED_MODULE_46__["default"]; });

/* harmony import */ var _difference_js__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./difference.js */ "./node_modules/d3-array/src/difference.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "difference", function() { return _difference_js__WEBPACK_IMPORTED_MODULE_47__["default"]; });

/* harmony import */ var _disjoint_js__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./disjoint.js */ "./node_modules/d3-array/src/disjoint.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "disjoint", function() { return _disjoint_js__WEBPACK_IMPORTED_MODULE_48__["default"]; });

/* harmony import */ var _intersection_js__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./intersection.js */ "./node_modules/d3-array/src/intersection.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "intersection", function() { return _intersection_js__WEBPACK_IMPORTED_MODULE_49__["default"]; });

/* harmony import */ var _subset_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./subset.js */ "./node_modules/d3-array/src/subset.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "subset", function() { return _subset_js__WEBPACK_IMPORTED_MODULE_50__["default"]; });

/* harmony import */ var _superset_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./superset.js */ "./node_modules/d3-array/src/superset.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "superset", function() { return _superset_js__WEBPACK_IMPORTED_MODULE_51__["default"]; });

/* harmony import */ var _union_js__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./union.js */ "./node_modules/d3-array/src/union.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "union", function() { return _union_js__WEBPACK_IMPORTED_MODULE_52__["default"]; });

/* harmony import */ var internmap__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! internmap */ "./node_modules/internmap/src/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InternMap", function() { return internmap__WEBPACK_IMPORTED_MODULE_53__["InternMap"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "InternSet", function() { return internmap__WEBPACK_IMPORTED_MODULE_53__["InternSet"]; });













 // Deprecated; use bin.




















 // Deprecated; use leastIndex.






















/***/ }),

/***/ "./node_modules/d3-array/src/intersection.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-array/src/intersection.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return intersection; });
/* harmony import */ var _set_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./set.js */ "./node_modules/d3-array/src/set.js");


function intersection(values, ...others) {
  values = new Set(values);
  others = others.map(_set_js__WEBPACK_IMPORTED_MODULE_0__["default"]);
  out: for (const value of values) {
    for (const other of others) {
      if (!other.has(value)) {
        values.delete(value);
        continue out;
      }
    }
  }
  return values;
}


/***/ }),

/***/ "./node_modules/d3-array/src/least.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/least.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return least; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");


function least(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  let min;
  let defined = false;
  if (compare.length === 1) {
    let minValue;
    for (const element of values) {
      const value = compare(element);
      if (defined
          ? Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, minValue) < 0
          : Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(value, value) === 0) {
        min = element;
        minValue = value;
        defined = true;
      }
    }
  } else {
    for (const value of values) {
      if (defined
          ? compare(value, min) < 0
          : compare(value, value) === 0) {
        min = value;
        defined = true;
      }
    }
  }
  return min;
}


/***/ }),

/***/ "./node_modules/d3-array/src/leastIndex.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-array/src/leastIndex.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return leastIndex; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _minIndex_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./minIndex.js */ "./node_modules/d3-array/src/minIndex.js");



function leastIndex(values, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  if (compare.length === 1) return Object(_minIndex_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, compare);
  let minValue;
  let min = -1;
  let index = -1;
  for (const value of values) {
    ++index;
    if (min < 0
        ? compare(value, value) === 0
        : compare(value, minValue) < 0) {
      minValue = value;
      min = index;
    }
  }
  return min;
}


/***/ }),

/***/ "./node_modules/d3-array/src/map.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/map.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return map; });
function map(values, mapper) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  if (typeof mapper !== "function") throw new TypeError("mapper is not a function");
  return Array.from(values, (value, index) => mapper(value, index, values));
}


/***/ }),

/***/ "./node_modules/d3-array/src/max.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/max.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return max; });
function max(values, valueof) {
  let max;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (max < value || (max === undefined && value >= value))) {
        max = value;
      }
    }
  }
  return max;
}


/***/ }),

/***/ "./node_modules/d3-array/src/maxIndex.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/maxIndex.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return maxIndex; });
function maxIndex(values, valueof) {
  let max;
  let maxIndex = -1;
  let index = -1;
  if (valueof === undefined) {
    for (const value of values) {
      ++index;
      if (value != null
          && (max < value || (max === undefined && value >= value))) {
        max = value, maxIndex = index;
      }
    }
  } else {
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (max < value || (max === undefined && value >= value))) {
        max = value, maxIndex = index;
      }
    }
  }
  return maxIndex;
}


/***/ }),

/***/ "./node_modules/d3-array/src/mean.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/mean.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return mean; });
function mean(values, valueof) {
  let count = 0;
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        ++count, sum += value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        ++count, sum += value;
      }
    }
  }
  if (count) return sum / count;
}


/***/ }),

/***/ "./node_modules/d3-array/src/median.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/median.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./quantile.js */ "./node_modules/d3-array/src/quantile.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values, valueof) {
  return Object(_quantile_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values, 0.5, valueof);
});


/***/ }),

/***/ "./node_modules/d3-array/src/merge.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/merge.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return merge; });
function* flatten(arrays) {
  for (const array of arrays) {
    yield* array;
  }
}

function merge(arrays) {
  return Array.from(flatten(arrays));
}


/***/ }),

/***/ "./node_modules/d3-array/src/min.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/min.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return min; });
function min(values, valueof) {
  let min;
  if (valueof === undefined) {
    for (const value of values) {
      if (value != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (min > value || (min === undefined && value >= value))) {
        min = value;
      }
    }
  }
  return min;
}


/***/ }),

/***/ "./node_modules/d3-array/src/minIndex.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/minIndex.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return minIndex; });
function minIndex(values, valueof) {
  let min;
  let minIndex = -1;
  let index = -1;
  if (valueof === undefined) {
    for (const value of values) {
      ++index;
      if (value != null
          && (min > value || (min === undefined && value >= value))) {
        min = value, minIndex = index;
      }
    }
  } else {
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null
          && (min > value || (min === undefined && value >= value))) {
        min = value, minIndex = index;
      }
    }
  }
  return minIndex;
}


/***/ }),

/***/ "./node_modules/d3-array/src/nice.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/nice.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return nice; });
/* harmony import */ var _ticks_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ticks.js */ "./node_modules/d3-array/src/ticks.js");


function nice(start, stop, count) {
  let prestep;
  while (true) {
    const step = Object(_ticks_js__WEBPACK_IMPORTED_MODULE_0__["tickIncrement"])(start, stop, count);
    if (step === prestep || step === 0 || !isFinite(step)) {
      return [start, stop];
    } else if (step > 0) {
      start = Math.floor(start / step) * step;
      stop = Math.ceil(stop / step) * step;
    } else if (step < 0) {
      start = Math.ceil(start * step) / step;
      stop = Math.floor(stop * step) / step;
    }
    prestep = step;
  }
}


/***/ }),

/***/ "./node_modules/d3-array/src/number.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/number.js ***!
  \*********************************************/
/*! exports provided: default, numbers */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "numbers", function() { return numbers; });
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return x === null ? NaN : +x;
});

function* numbers(values, valueof) {
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        yield value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        yield value;
      }
    }
  }
}


/***/ }),

/***/ "./node_modules/d3-array/src/pairs.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/pairs.js ***!
  \********************************************/
/*! exports provided: default, pair */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return pairs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pair", function() { return pair; });
function pairs(values, pairof = pair) {
  const pairs = [];
  let previous;
  let first = false;
  for (const value of values) {
    if (first) pairs.push(pairof(previous, value));
    previous = value;
    first = true;
  }
  return pairs;
}

function pair(a, b) {
  return [a, b];
}


/***/ }),

/***/ "./node_modules/d3-array/src/permute.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/permute.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(source, keys) {
  return Array.from(keys, key => source[key]);
});


/***/ }),

/***/ "./node_modules/d3-array/src/quantile.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/quantile.js ***!
  \***********************************************/
/*! exports provided: default, quantileSorted */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quantile; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quantileSorted", function() { return quantileSorted; });
/* harmony import */ var _max_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./max.js */ "./node_modules/d3-array/src/max.js");
/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./min.js */ "./node_modules/d3-array/src/min.js");
/* harmony import */ var _quickselect_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./quickselect.js */ "./node_modules/d3-array/src/quickselect.js");
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./number.js */ "./node_modules/d3-array/src/number.js");





function quantile(values, p, valueof) {
  values = Float64Array.from(Object(_number_js__WEBPACK_IMPORTED_MODULE_3__["numbers"])(values, valueof));
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return Object(_min_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values);
  if (p >= 1) return Object(_max_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = Object(_max_js__WEBPACK_IMPORTED_MODULE_0__["default"])(Object(_quickselect_js__WEBPACK_IMPORTED_MODULE_2__["default"])(values, i0).subarray(0, i0 + 1)),
      value1 = Object(_min_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values.subarray(i0 + 1));
  return value0 + (value1 - value0) * (i - i0);
}

function quantileSorted(values, p, valueof = _number_js__WEBPACK_IMPORTED_MODULE_3__["default"]) {
  if (!(n = values.length)) return;
  if ((p = +p) <= 0 || n < 2) return +valueof(values[0], 0, values);
  if (p >= 1) return +valueof(values[n - 1], n - 1, values);
  var n,
      i = (n - 1) * p,
      i0 = Math.floor(i),
      value0 = +valueof(values[i0], i0, values),
      value1 = +valueof(values[i0 + 1], i0 + 1, values);
  return value0 + (value1 - value0) * (i - i0);
}


/***/ }),

/***/ "./node_modules/d3-array/src/quickselect.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-array/src/quickselect.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return quickselect; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");


// Based on https://github.com/mourner/quickselect
// ISC license, Copyright 2018 Vladimir Agafonkin.
function quickselect(array, k, left = 0, right = array.length - 1, compare = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]) {
  while (right > left) {
    if (right - left > 600) {
      const n = right - left + 1;
      const m = k - left + 1;
      const z = Math.log(n);
      const s = 0.5 * Math.exp(2 * z / 3);
      const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);
      const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));
      const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));
      quickselect(array, k, newLeft, newRight, compare);
    }

    const t = array[k];
    let i = left;
    let j = right;

    swap(array, left, k);
    if (compare(array[right], t) > 0) swap(array, left, right);

    while (i < j) {
      swap(array, i, j), ++i, --j;
      while (compare(array[i], t) < 0) ++i;
      while (compare(array[j], t) > 0) --j;
    }

    if (compare(array[left], t) === 0) swap(array, left, j);
    else ++j, swap(array, j, right);

    if (j <= k) left = j + 1;
    if (k <= j) right = j - 1;
  }
  return array;
}

function swap(array, i, j) {
  const t = array[i];
  array[i] = array[j];
  array[j] = t;
}


/***/ }),

/***/ "./node_modules/d3-array/src/range.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/range.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(start, stop, step) {
  start = +start, stop = +stop, step = (n = arguments.length) < 2 ? (stop = start, start = 0, 1) : n < 3 ? 1 : +step;

  var i = -1,
      n = Math.max(0, Math.ceil((stop - start) / step)) | 0,
      range = new Array(n);

  while (++i < n) {
    range[i] = start + i * step;
  }

  return range;
});


/***/ }),

/***/ "./node_modules/d3-array/src/reduce.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/reduce.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return reduce; });
function reduce(values, reducer, value) {
  if (typeof reducer !== "function") throw new TypeError("reducer is not a function");
  const iterator = values[Symbol.iterator]();
  let done, next, index = -1;
  if (arguments.length < 3) {
    ({done, value} = iterator.next());
    if (done) return;
    ++index;
  }
  while (({done, value: next} = iterator.next()), !done) {
    value = reducer(value, next, ++index, values);
  }
  return value;
}


/***/ }),

/***/ "./node_modules/d3-array/src/reverse.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/reverse.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return reverse; });
function reverse(values) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  return Array.from(values).reverse();
}


/***/ }),

/***/ "./node_modules/d3-array/src/scan.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/scan.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return scan; });
/* harmony import */ var _leastIndex_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./leastIndex.js */ "./node_modules/d3-array/src/leastIndex.js");


function scan(values, compare) {
  const index = Object(_leastIndex_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values, compare);
  return index < 0 ? undefined : index;
}


/***/ }),

/***/ "./node_modules/d3-array/src/set.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/set.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return set; });
function set(values) {
  return values instanceof Set ? values : new Set(values);
}


/***/ }),

/***/ "./node_modules/d3-array/src/shuffle.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-array/src/shuffle.js ***!
  \**********************************************/
/*! exports provided: default, shuffler */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "shuffler", function() { return shuffler; });
/* harmony default export */ __webpack_exports__["default"] = (shuffler(Math.random));

function shuffler(random) {
  return function shuffle(array, i0 = 0, i1 = array.length) {
    let m = i1 - (i0 = +i0);
    while (m) {
      const i = random() * m-- | 0, t = array[m + i0];
      array[m + i0] = array[i + i0];
      array[i + i0] = t;
    }
    return array;
  };
}


/***/ }),

/***/ "./node_modules/d3-array/src/some.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/some.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return some; });
function some(values, test) {
  if (typeof test !== "function") throw new TypeError("test is not a function");
  let index = -1;
  for (const value of values) {
    if (test(value, ++index, values)) {
      return true;
    }
  }
  return false;
}


/***/ }),

/***/ "./node_modules/d3-array/src/sort.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-array/src/sort.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sort; });
/* harmony import */ var _ascending_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ascending.js */ "./node_modules/d3-array/src/ascending.js");
/* harmony import */ var _permute_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./permute.js */ "./node_modules/d3-array/src/permute.js");



function sort(values, ...F) {
  if (typeof values[Symbol.iterator] !== "function") throw new TypeError("values is not iterable");
  values = Array.from(values);
  let [f = _ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"]] = F;
  if (f.length === 1 || F.length > 1) {
    const index = Uint32Array.from(values, (d, i) => i);
    if (F.length > 1) {
      F = F.map(f => values.map(f));
      index.sort((i, j) => {
        for (const f of F) {
          const c = Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(f[i], f[j]);
          if (c) return c;
        }
      });
    } else {
      f = values.map(f);
      index.sort((i, j) => Object(_ascending_js__WEBPACK_IMPORTED_MODULE_0__["default"])(f[i], f[j]));
    }
    return Object(_permute_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, index);
  }
  return values.sort(f);
}


/***/ }),

/***/ "./node_modules/d3-array/src/subset.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-array/src/subset.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return subset; });
/* harmony import */ var _superset_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./superset.js */ "./node_modules/d3-array/src/superset.js");


function subset(values, other) {
  return Object(_superset_js__WEBPACK_IMPORTED_MODULE_0__["default"])(other, values);
}


/***/ }),

/***/ "./node_modules/d3-array/src/sum.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/sum.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return sum; });
function sum(values, valueof) {
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value = +value) {
        sum += value;
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if (value = +valueof(value, ++index, values)) {
        sum += value;
      }
    }
  }
  return sum;
}


/***/ }),

/***/ "./node_modules/d3-array/src/superset.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/superset.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return superset; });
function superset(values, other) {
  const iterator = values[Symbol.iterator](), set = new Set();
  for (const o of other) {
    if (set.has(o)) continue;
    let value, done;
    while (({value, done} = iterator.next())) {
      if (done) return false;
      set.add(value);
      if (Object.is(o, value)) break;
    }
  }
  return true;
}


/***/ }),

/***/ "./node_modules/d3-array/src/threshold/freedmanDiaconis.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/freedmanDiaconis.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../count.js */ "./node_modules/d3-array/src/count.js");
/* harmony import */ var _quantile_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../quantile.js */ "./node_modules/d3-array/src/quantile.js");



/* harmony default export */ __webpack_exports__["default"] = (function(values, min, max) {
  return Math.ceil((max - min) / (2 * (Object(_quantile_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, 0.75) - Object(_quantile_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values, 0.25)) * Math.pow(Object(_count_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values), -1 / 3)));
});


/***/ }),

/***/ "./node_modules/d3-array/src/threshold/scott.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/scott.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../count.js */ "./node_modules/d3-array/src/count.js");
/* harmony import */ var _deviation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../deviation.js */ "./node_modules/d3-array/src/deviation.js");



/* harmony default export */ __webpack_exports__["default"] = (function(values, min, max) {
  return Math.ceil((max - min) / (3.5 * Object(_deviation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(values) * Math.pow(Object(_count_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values), -1 / 3)));
});


/***/ }),

/***/ "./node_modules/d3-array/src/threshold/sturges.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-array/src/threshold/sturges.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _count_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../count.js */ "./node_modules/d3-array/src/count.js");


/* harmony default export */ __webpack_exports__["default"] = (function(values) {
  return Math.ceil(Math.log(Object(_count_js__WEBPACK_IMPORTED_MODULE_0__["default"])(values)) / Math.LN2) + 1;
});


/***/ }),

/***/ "./node_modules/d3-array/src/ticks.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/ticks.js ***!
  \********************************************/
/*! exports provided: default, tickIncrement, tickStep */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickIncrement", function() { return tickIncrement; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tickStep", function() { return tickStep; });
var e10 = Math.sqrt(50),
    e5 = Math.sqrt(10),
    e2 = Math.sqrt(2);

/* harmony default export */ __webpack_exports__["default"] = (function(start, stop, count) {
  var reverse,
      i = -1,
      n,
      ticks,
      step;

  stop = +stop, start = +start, count = +count;
  if (start === stop && count > 0) return [start];
  if (reverse = stop < start) n = start, start = stop, stop = n;
  if ((step = tickIncrement(start, stop, count)) === 0 || !isFinite(step)) return [];

  if (step > 0) {
    start = Math.ceil(start / step);
    stop = Math.floor(stop / step);
    ticks = new Array(n = Math.ceil(stop - start + 1));
    while (++i < n) ticks[i] = (start + i) * step;
  } else {
    step = -step;
    start = Math.ceil(start * step);
    stop = Math.floor(stop * step);
    ticks = new Array(n = Math.ceil(stop - start + 1));
    while (++i < n) ticks[i] = (start + i) / step;
  }

  if (reverse) ticks.reverse();

  return ticks;
});

function tickIncrement(start, stop, count) {
  var step = (stop - start) / Math.max(0, count),
      power = Math.floor(Math.log(step) / Math.LN10),
      error = step / Math.pow(10, power);
  return power >= 0
      ? (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1) * Math.pow(10, power)
      : -Math.pow(10, -power) / (error >= e10 ? 10 : error >= e5 ? 5 : error >= e2 ? 2 : 1);
}

function tickStep(start, stop, count) {
  var step0 = Math.abs(stop - start) / Math.max(0, count),
      step1 = Math.pow(10, Math.floor(Math.log(step0) / Math.LN10)),
      error = step0 / step1;
  if (error >= e10) step1 *= 10;
  else if (error >= e5) step1 *= 5;
  else if (error >= e2) step1 *= 2;
  return stop < start ? -step1 : step1;
}


/***/ }),

/***/ "./node_modules/d3-array/src/transpose.js":
/*!************************************************!*\
  !*** ./node_modules/d3-array/src/transpose.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _min_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./min.js */ "./node_modules/d3-array/src/min.js");


/* harmony default export */ __webpack_exports__["default"] = (function(matrix) {
  if (!(n = matrix.length)) return [];
  for (var i = -1, m = Object(_min_js__WEBPACK_IMPORTED_MODULE_0__["default"])(matrix, length), transpose = new Array(m); ++i < m;) {
    for (var j = -1, n, row = transpose[i] = new Array(n); ++j < n;) {
      row[j] = matrix[j][i];
    }
  }
  return transpose;
});

function length(d) {
  return d.length;
}


/***/ }),

/***/ "./node_modules/d3-array/src/union.js":
/*!********************************************!*\
  !*** ./node_modules/d3-array/src/union.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return union; });
function union(...others) {
  const set = new Set();
  for (const other of others) {
    for (const o of other) {
      set.add(o);
    }
  }
  return set;
}


/***/ }),

/***/ "./node_modules/d3-array/src/variance.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-array/src/variance.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return variance; });
function variance(values, valueof) {
  let count = 0;
  let delta;
  let mean = 0;
  let sum = 0;
  if (valueof === undefined) {
    for (let value of values) {
      if (value != null && (value = +value) >= value) {
        delta = value - mean;
        mean += delta / ++count;
        sum += delta * (value - mean);
      }
    }
  } else {
    let index = -1;
    for (let value of values) {
      if ((value = valueof(value, ++index, values)) != null && (value = +value) >= value) {
        delta = value - mean;
        mean += delta / ++count;
        sum += delta * (value - mean);
      }
    }
  }
  if (count > 1) return sum / (count - 1);
}


/***/ }),

/***/ "./node_modules/d3-array/src/zip.js":
/*!******************************************!*\
  !*** ./node_modules/d3-array/src/zip.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _transpose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./transpose.js */ "./node_modules/d3-array/src/transpose.js");


/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_transpose_js__WEBPACK_IMPORTED_MODULE_0__["default"])(arguments);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/airy.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/airy.js ***!
  \****************************************************/
/*! exports provided: airyRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "airyRaw", function() { return airyRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function airyRaw(beta) {
  var tanBeta_2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(beta / 2),
      b = 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["log"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(beta / 2)) / (tanBeta_2 * tanBeta_2);

  function forward(x, y) {
    var cosx = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(x),
        cosy = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(y),
        siny = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(y),
        cosz = cosy * cosx,
        k = -((1 - cosz ? Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["log"])((1 + cosz) / 2) / (1 - cosz) : -0.5) + b / (1 + cosz));
    return [k * cosy * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(x), k * siny];
  }

  forward.invert = function(x, y) {
    var r = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x * x + y * y),
        z = -beta / 2,
        i = 50, delta;
    if (!r) return [0, 0];
    do {
      var z_2 = z / 2,
          cosz_2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(z_2),
          sinz_2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(z_2),
          tanz_2 = sinz_2 / cosz_2,
          lnsecz_2 = -Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["log"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(cosz_2));
      z -= delta = (2 / tanz_2 * lnsecz_2 - b * tanz_2 - r) / (-lnsecz_2 / (sinz_2 * sinz_2) + 1 - b / (2 * cosz_2 * cosz_2)) * (cosz_2 < 0 ? 0.7 : 1);
    } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);
    var sinz = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(z);
    return [Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(x * sinz, r * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(z)), Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(y * sinz / r)];
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var beta = _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"],
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(airyRaw),
      p = m(beta);

  p.radius = function(_) {
    return arguments.length ? m(beta = _ * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]) : beta * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"];
  };

  return p
      .scale(179.976)
      .clipAngle(147);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/aitoff.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/aitoff.js ***!
  \******************************************************/
/*! exports provided: aitoffRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "aitoffRaw", function() { return aitoffRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function aitoffRaw(x, y) {
  var cosy = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(y), sincia = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sinci"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(cosy * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(x /= 2)));
  return [2 * cosy * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(x) * sincia, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(y) * sincia];
}

// Abort if [x, y] is not within an ellipse centered at [0, 0] with
// semi-major axis pi and semi-minor axis pi/2.
aitoffRaw.invert = function(x, y) {
  if (x * x + 4 * y * y > _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] + _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) return;
  var x1 = x, y1 = y, i = 25;
  do {
    var sinx = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(x1),
        sinx_2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(x1 / 2),
        cosx_2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(x1 / 2),
        siny = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(y1),
        cosy = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(y1),
        sin_2y = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(2 * y1),
        sin2y = siny * siny,
        cos2y = cosy * cosy,
        sin2x_2 = sinx_2 * sinx_2,
        c = 1 - cos2y * cosx_2 * cosx_2,
        e = c ? Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(cosy * cosx_2) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(f = 1 / c) : f = 0,
        f,
        fx = 2 * e * cosy * sinx_2 - x,
        fy = e * siny - y,
        dxdx = f * (cos2y * sin2x_2 + e * cosy * cosx_2 * sin2y),
        dxdy = f * (0.5 * sinx * sin_2y - e * 2 * siny * sinx_2),
        dydx = f * 0.25 * (sin_2y * sinx_2 - e * siny * cos2y * sinx),
        dydy = f * (sin2y * cosx_2 + e * sin2x_2 * cosy),
        z = dxdy * dydx - dydy * dxdx;
    if (!z) break;
    var dx = (fy * dxdy - fx * dydy) / z,
        dy = (fx * dydx - fy * dxdx) / z;
    x1 -= dx, y1 -= dy;
  } while ((Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(dx) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(dy) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) && --i > 0);
  return [x1, y1];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(aitoffRaw)
      .scale(152.63);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/armadillo.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/armadillo.js ***!
  \*********************************************************/
/*! exports provided: armadilloRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "armadilloRaw", function() { return armadilloRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function armadilloRaw(phi0) {
  var sinPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi0),
      cosPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi0),
      sPhi0 = phi0 >= 0 ? 1 : -1,
      tanPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(sPhi0 * phi0),
      k = (1 + sinPhi0 - cosPhi0) / 2;

  function forward(lambda, phi) {
    var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        cosLambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda /= 2);
    return [
      (1 + cosPhi) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda),
      (sPhi0 * phi > -Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(cosLambda, tanPhi0) - 1e-3 ? 0 : -sPhi0 * 10) + k + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi) * cosPhi0 - (1 + cosPhi) * sinPhi0 * cosLambda // TODO D3 core should allow null or [NaN, NaN] to be returned.
    ];
  }

  forward.invert = function(x, y) {
    var lambda = 0,
        phi = 0,
        i = 50;
    do {
      var cosLambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda),
          sinLambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda),
          cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
          sinPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
          A = 1 + cosPhi,
          fx = A * sinLambda - x,
          fy = k + sinPhi * cosPhi0 - A * sinPhi0 * cosLambda - y,
          dxdLambda = A * cosLambda / 2,
          dxdPhi = -sinLambda * sinPhi,
          dydLambda = sinPhi0 * A * sinLambda / 2,
          dydPhi = cosPhi0 * cosPhi + sinPhi0 * cosLambda * sinPhi,
          denominator = dxdPhi * dydLambda - dydPhi * dxdLambda,
          dLambda = (fy * dxdPhi - fx * dydPhi) / denominator / 2,
          dPhi = (fx * dydLambda - fy * dxdLambda) / denominator;
      if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(dPhi) > 2) dPhi /= 2;
      lambda -= dLambda, phi -= dPhi;
    } while ((Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(dLambda) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(dPhi) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) && --i > 0);
    return sPhi0 * phi > -Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda), tanPhi0) - 1e-3 ? [lambda * 2, phi] : null;
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var phi0 = 20 * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"],
      sPhi0 = phi0 >= 0 ? 1 : -1,
      tanPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(sPhi0 * phi0),
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(armadilloRaw),
      p = m(phi0),
      stream_ = p.stream;

  p.parallel = function(_) {
    if (!arguments.length) return phi0 * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"];
    tanPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])((sPhi0 = (phi0 = _ * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]) >= 0 ? 1 : -1) * phi0);
    return m(phi0);
  };

  p.stream = function(stream) {
    var rotate = p.rotate(),
        rotateStream = stream_(stream),
        sphereStream = (p.rotate([0, 0]), stream_(stream)),
        precision = p.precision();
    p.rotate(rotate);
    rotateStream.sphere = function() {
      sphereStream.polygonStart(), sphereStream.lineStart();
      for (var lambda = sPhi0 * -180; sPhi0 * lambda < 180; lambda += sPhi0 * 90)
        sphereStream.point(lambda, sPhi0 * 90);
      if (phi0) while (sPhi0 * (lambda -= 3 * sPhi0 * precision) >= -180) {
        sphereStream.point(lambda, sPhi0 * -Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"] / 2), tanPhi0) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"]);
      }
      sphereStream.lineEnd(), sphereStream.polygonEnd();
    };
    return rotateStream;
  };

  return p
      .scale(218.695)
      .center([0, 28.0974]);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/august.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/august.js ***!
  \******************************************************/
/*! exports provided: augustRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "augustRaw", function() { return augustRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function augustRaw(lambda, phi) {
  var tanPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(phi / 2),
      k = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 - tanPhi * tanPhi),
      c = 1 + k * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda /= 2),
      x = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) * k / c,
      y = tanPhi / c,
      x2 = x * x,
      y2 = y * y;
  return [
    4 / 3 * x * (3 + x2 - 3 * y2),
    4 / 3 * y * (3 + 3 * x2 - y2)
  ];
}

augustRaw.invert = function(x, y) {
  x *= 3 / 8, y *= 3 / 8;
  if (!x && Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y) > 1) return null;
  var x2 = x * x,
      y2 = y * y,
      s = 1 + x2 + y2,
      sin3Eta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])((s - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(s * s - 4 * y * y)) / 2),
      eta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(sin3Eta) / 3,
      xi = sin3Eta ? Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["arcosh"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y / sin3Eta)) / 3 : Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["arsinh"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x)) / 3,
      cosEta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(eta),
      coshXi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cosh"])(xi),
      d = coshXi * coshXi - cosEta * cosEta;
  return [
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(x) * 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sinh"])(xi) * cosEta, 0.25 - d),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(y) * 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(coshXi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(eta), 0.25 + d)
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(augustRaw)
      .scale(66.1603);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/baker.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/baker.js ***!
  \*****************************************************/
/*! exports provided: bakerRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bakerRaw", function() { return bakerRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



var sqrt8 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(8),
    phi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["log"])(1 + _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt2"]);

function bakerRaw(lambda, phi) {
  var phi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi);
  return phi0 < _math_js__WEBPACK_IMPORTED_MODULE_1__["quarterPi"]
      ? [lambda, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["log"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["quarterPi"] + phi / 2))]
      : [lambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi0) * (2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt2"] - 1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi0)), Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(phi) * (2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt2"] * (phi0 - _math_js__WEBPACK_IMPORTED_MODULE_1__["quarterPi"]) - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["log"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(phi0 / 2)))];
}

bakerRaw.invert = function(x, y) {
  if ((y0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y)) < phi0) return [x, 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["exp"])(y)) - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]];
  var phi = _math_js__WEBPACK_IMPORTED_MODULE_1__["quarterPi"], i = 25, delta, y0;
  do {
    var cosPhi_2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi / 2), tanPhi_2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(phi / 2);
    phi -= delta = (sqrt8 * (phi - _math_js__WEBPACK_IMPORTED_MODULE_1__["quarterPi"]) - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["log"])(tanPhi_2) - y0) / (sqrt8 - cosPhi_2 * cosPhi_2 / (2 * tanPhi_2));
  } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon2"] && --i > 0);
  return [x / (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi) * (sqrt8 - 1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi))), Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(y) * phi];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(bakerRaw)
      .scale(112.314);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/berghaus.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/berghaus.js ***!
  \********************************************************/
/*! exports provided: berghausRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "berghausRaw", function() { return berghausRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function berghausRaw(lobes) {
  var k = 2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / lobes;

  function forward(lambda, phi) {
    var p = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAzimuthalEquidistantRaw"])(lambda, phi);
    if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda) > _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) { // back hemisphere
      var theta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(p[1], p[0]),
          r = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(p[0] * p[0] + p[1] * p[1]),
          theta0 = k * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["round"])((theta - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) / k) + _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"],
          alpha = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta -= theta0), 2 - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta)); // angle relative to lobe end
      theta = theta0 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / r * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(alpha)) - alpha;
      p[0] = r * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta);
      p[1] = r * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta);
    }
    return p;
  }

  forward.invert = function(x, y) {
    var r = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x * x + y * y);
    if (r > _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) {
      var theta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y, x),
          theta0 = k * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["round"])((theta - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) / k) + _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"],
          s = theta > theta0 ? -1 : 1,
          A = r * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta0 - theta),
          cotAlpha = 1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(s * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])((A - _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * (_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] - 2 * A) + r * r)));
      theta = theta0 + 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan"])((cotAlpha + s * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(cotAlpha * cotAlpha - 3)) / 3);
      x = r * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta), y = r * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta);
    }
    return d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAzimuthalEquidistantRaw"].invert(x, y);
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var lobes = 5,
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(berghausRaw),
      p = m(lobes),
      projectionStream = p.stream,
      epsilon = 1e-2,
      cr = -Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(epsilon * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]),
      sr = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(epsilon * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]);

  p.lobes = function(_) {
    return arguments.length ? m(lobes = +_) : lobes;
  };

  p.stream = function(stream) {
    var rotate = p.rotate(),
        rotateStream = projectionStream(stream),
        sphereStream = (p.rotate([0, 0]), projectionStream(stream));
    p.rotate(rotate);
    rotateStream.sphere = function() {
      sphereStream.polygonStart(), sphereStream.lineStart();
      for (var i = 0, delta = 360 / lobes, delta0 = 2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / lobes, phi = 90 - 180 / lobes, phi0 = _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]; i < lobes; ++i, phi -= delta, phi0 -= delta0) {
        sphereStream.point(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(sr * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi0), cr) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"], Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(sr * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi0)) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"]);
        if (phi < -90) {
          sphereStream.point(-90, -180 - phi - epsilon);
          sphereStream.point(-90, -180 - phi + epsilon);
        } else {
          sphereStream.point(90, phi + epsilon);
          sphereStream.point(90, phi - epsilon);
        }
      }
      sphereStream.lineEnd(), sphereStream.polygonEnd();
    };
    return rotateStream;
  };

  return p
      .scale(87.8076)
      .center([0, 17.1875])
      .clipAngle(180 - 1e-3);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/bertin.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/bertin.js ***!
  \******************************************************/
/*! exports provided: bertin1953Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bertin1953Raw", function() { return bertin1953Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _hammer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./hammer.js */ "./node_modules/d3-geo-projection/src/hammer.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _newton_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./newton.js */ "./node_modules/d3-geo-projection/src/newton.js");





// Bertin 1953 as a modified Briesemeister
// https://bl.ocks.org/Fil/5b9ee9636dfb6ffa53443c9006beb642
function bertin1953Raw() {
  var hammer = Object(_hammer_js__WEBPACK_IMPORTED_MODULE_1__["hammerRaw"])(1.68, 2),
      fu = 1.4, k = 12;

  function forward(lambda, phi) {

    if (lambda + phi < -fu) {
      var u = (lambda - phi + 1.6) * (lambda + phi + fu) / 8;
      lambda += u;
      phi -= 0.8 * u * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi + _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"] / 2);
    }

    var r = hammer(lambda, phi);

    var d = (1 - Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(lambda * phi)) / k;

    if (r[1] < 0) {
      r[0] *= 1 + d;
    }
    if (r[1] > 0) {
      r[1] *= 1 + d / 1.5 * r[0] * r[0];
    }

    return r;
  }
  
  forward.invert = Object(_newton_js__WEBPACK_IMPORTED_MODULE_3__["solve2d"])(forward);
  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  // this projection should not be rotated
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(bertin1953Raw())
    .rotate([-16.5, -42])
    .scale(176.57)
    .center([7.93, 0.09]);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/boggs.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/boggs.js ***!
  \*****************************************************/
/*! exports provided: boggsRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "boggsRaw", function() { return boggsRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _mollweide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mollweide.js */ "./node_modules/d3-geo-projection/src/mollweide.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");




var k = 2.00276,
    w = 1.11072;

function boggsRaw(lambda, phi) {
  var theta = Object(_mollweide_js__WEBPACK_IMPORTED_MODULE_1__["mollweideBromleyTheta"])(_math_js__WEBPACK_IMPORTED_MODULE_2__["pi"], phi);
  return [k * lambda / (1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi) + w / Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(theta)), (phi + _math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(theta)) / k];
}

boggsRaw.invert = function(x, y) {
  var ky = k * y, theta = y < 0 ? -_math_js__WEBPACK_IMPORTED_MODULE_2__["quarterPi"] : _math_js__WEBPACK_IMPORTED_MODULE_2__["quarterPi"], i = 25, delta, phi;
  do {
    phi = ky - _math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(theta);
    theta -= delta = (Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(2 * theta) + 2 * theta - _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi)) / (2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(2 * theta) + 2 + _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi) * _math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(theta));
  } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"] && --i > 0);
  phi = ky - _math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(theta);
  return [x * (1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi) + w / Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(theta)) / k, phi];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(boggsRaw)
      .scale(160.857);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/bonne.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/bonne.js ***!
  \*****************************************************/
/*! exports provided: bonneRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bonneRaw", function() { return bonneRaw; });
/* harmony import */ var _parallel1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parallel1.js */ "./node_modules/d3-geo-projection/src/parallel1.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _sinusoidal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sinusoidal.js */ "./node_modules/d3-geo-projection/src/sinusoidal.js");




function bonneRaw(phi0) {
  if (!phi0) return _sinusoidal_js__WEBPACK_IMPORTED_MODULE_2__["sinusoidalRaw"];
  var cotPhi0 = 1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(phi0);

  function forward(lambda, phi) {
    var rho = cotPhi0 + phi0 - phi,
        e = rho ? lambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi) / rho : rho;
    return [rho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(e), cotPhi0 - rho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(e)];
  }

  forward.invert = function(x, y) {
    var rho = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x * x + (y = cotPhi0 - y) * y),
        phi = cotPhi0 + phi0 - rho;
    return [rho / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(x, y), phi];
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_parallel1_js__WEBPACK_IMPORTED_MODULE_0__["default"])(bonneRaw)
      .scale(123.082)
      .center([0, 26.1441])
      .parallel(45);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/bottomley.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/bottomley.js ***!
  \*********************************************************/
/*! exports provided: bottomleyRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bottomleyRaw", function() { return bottomleyRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function bottomleyRaw(sinPsi) {

  function forward(lambda, phi) {
    var rho = _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] - phi,
        eta = rho ? lambda * sinPsi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(rho) / rho : rho;
    return [rho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(eta) / sinPsi, _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] - rho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(eta)];
  }

  forward.invert = function(x, y) {
    var x1 = x * sinPsi,
        y1 = _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] - y,
        rho = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x1 * x1 + y1 * y1),
        eta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(x1, y1);
    return [(rho ? rho / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(rho) : 1) * eta / sinPsi, _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] - rho];
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var sinPsi = 0.5,
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(bottomleyRaw),
      p = m(sinPsi);

  p.fraction = function(_) {
    return arguments.length ? m(sinPsi = +_) : sinPsi;
  };

  return p
      .scale(158.837);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/bromley.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/bromley.js ***!
  \*******************************************************/
/*! exports provided: bromleyRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "bromleyRaw", function() { return bromleyRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _mollweide_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mollweide.js */ "./node_modules/d3-geo-projection/src/mollweide.js");




var bromleyRaw = Object(_mollweide_js__WEBPACK_IMPORTED_MODULE_2__["mollweideBromleyRaw"])(1, 4 / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"], _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]);

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(bromleyRaw)
      .scale(152.63);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/chamberlin.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/chamberlin.js ***!
  \**********************************************************/
/*! exports provided: chamberlinRaw, chamberlinAfrica, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "chamberlinRaw", function() { return chamberlinRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "chamberlinAfrica", function() { return chamberlinAfrica; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return chamberlin; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _newton_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./newton.js */ "./node_modules/d3-geo-projection/src/newton.js");




// Azimuthal distance.
function distance(dPhi, c1, s1, c2, s2, dLambda) {
  var cosdLambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(dLambda), r;
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(dPhi) > 1 || Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(dLambda) > 1) {
    r = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(s1 * s2 + c1 * c2 * cosdLambda);
  } else {
    var sindPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(dPhi / 2), sindLambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(dLambda / 2);
    r = 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(sindPhi * sindPhi + c1 * c2 * sindLambda * sindLambda));
  }
  return Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(r) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? [r, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(c2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(dLambda), c1 * s2 - s1 * c2 * cosdLambda)] : [0, 0];
}

// Angle opposite a, and contained between sides of lengths b and c.
function angle(b, c, a) {
  return Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])((b * b + c * c - a * a) / (2 * b * c));
}

// Normalize longitude.
function longitude(lambda) {
  return lambda - 2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["floor"])((lambda + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) / (2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]));
}

function chamberlinRaw(p0, p1, p2) {
  var points = [
    [p0[0], p0[1], Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(p0[1]), Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(p0[1])],
    [p1[0], p1[1], Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(p1[1]), Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(p1[1])],
    [p2[0], p2[1], Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(p2[1]), Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(p2[1])]
  ];

  for (var a = points[2], b, i = 0; i < 3; ++i, a = b) {
    b = points[i];
    a.v = distance(b[1] - a[1], a[3], a[2], b[3], b[2], b[0] - a[0]);
    a.point = [0, 0];
  }

  var beta0 = angle(points[0].v[0], points[2].v[0], points[1].v[0]),
      beta1 = angle(points[0].v[0], points[1].v[0], points[2].v[0]),
      beta2 = _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] - beta0;

  points[2].point[1] = 0;
  points[0].point[0] = -(points[1].point[0] = points[0].v[0] / 2);

  var mean = [
    points[2].point[0] = points[0].point[0] + points[2].v[0] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(beta0),
    2 * (points[0].point[1] = points[1].point[1] = points[2].v[0] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(beta0))
  ];

  function forward(lambda, phi) {
    var sinPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        v = new Array(3), i;

    // Compute distance and azimuth from control points.
    for (i = 0; i < 3; ++i) {
      var p = points[i];
      v[i] = distance(phi - p[1], p[3], p[2], cosPhi, sinPhi, lambda - p[0]);
      if (!v[i][0]) return p.point;
      v[i][1] = longitude(v[i][1] - p.v[1]);
    }

    // Arithmetic mean of interception points.
    var point = mean.slice();
    for (i = 0; i < 3; ++i) {
      var j = i == 2 ? 0 : i + 1;
      var a = angle(points[i].v[0], v[i][0], v[j][0]);
      if (v[i][1] < 0) a = -a;

      if (!i) {
        point[0] += v[i][0] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(a);
        point[1] -= v[i][0] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(a);
      } else if (i == 1) {
        a = beta1 - a;
        point[0] -= v[i][0] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(a);
        point[1] -= v[i][0] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(a);
      } else {
        a = beta2 - a;
        point[0] += v[i][0] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(a);
        point[1] += v[i][0] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(a);
      }
    }

    point[0] /= 3, point[1] /= 3;
    return point;
  }

  return forward;
}

function pointRadians(p) {
  return p[0] *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], p[1] *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], p;
}

function chamberlinAfrica() {
  return chamberlin([0, 22], [45, 22], [22.5, -22])
      .scale(380)
      .center([22.5, 2]);
}

function chamberlin(p0, p1, p2) { // TODO order matters!
  var c = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoCentroid"])({type: "MultiPoint", coordinates: [p0, p1, p2]}),
      R = [-c[0], -c[1]],
      r = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoRotation"])(R),
      f = chamberlinRaw(pointRadians(r(p0)), pointRadians(r(p1)), pointRadians(r(p2)));
  f.invert = Object(_newton_js__WEBPACK_IMPORTED_MODULE_2__["solve2d"])(f);
  var p = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(f).rotate(R),
      center = p.center;

  delete p.rotate;

  p.center = function(_) {
    return arguments.length ? center(r(_)) : r.invert(center());
  };

  return p
      .clipAngle(90);
}


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/collignon.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/collignon.js ***!
  \*********************************************************/
/*! exports provided: collignonRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "collignonRaw", function() { return collignonRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function collignonRaw(lambda, phi) {
  var alpha = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi));
  return [(2 / _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrtPi"]) * lambda * alpha, _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrtPi"] * (1 - alpha)];
}

collignonRaw.invert = function(x, y) {
  var lambda = (lambda = y / _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrtPi"] - 1) * lambda;
  return [lambda > 0 ? x * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / lambda) / 2 : 0, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(1 - lambda)];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(collignonRaw)
      .scale(95.6464)
      .center([0, 30]);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/craig.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/craig.js ***!
  \*****************************************************/
/*! exports provided: craigRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "craigRaw", function() { return craigRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _parallel1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parallel1.js */ "./node_modules/d3-geo-projection/src/parallel1.js");



function craigRaw(phi0) {
  var tanPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])(phi0);

  function forward(lambda, phi) {
    return [lambda, (lambda ? lambda / Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda) : 1) * (Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda) - tanPhi0 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi))];
  }

  forward.invert = tanPhi0 ? function(x, y) {
    if (x) y *= Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(x) / x;
    var cosLambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(x);
    return [x, 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan2"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(cosLambda * cosLambda + tanPhi0 * tanPhi0 - y * y) - cosLambda, tanPhi0 - y)];
  } : function(x, y) {
    return [x, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["asin"])(x ? y * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])(x) / x : y)];
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_parallel1_js__WEBPACK_IMPORTED_MODULE_1__["default"])(craigRaw)
      .scale(249.828)
      .clipAngle(90);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/craster.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/craster.js ***!
  \*******************************************************/
/*! exports provided: crasterRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "crasterRaw", function() { return crasterRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



var sqrt3 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(3);

function crasterRaw(lambda, phi) {
  return [sqrt3 * lambda * (2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(2 * phi / 3) - 1) / _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrtPi"], sqrt3 * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrtPi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi / 3)];
}

crasterRaw.invert = function(x, y) {
  var phi = 3 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(y / (sqrt3 * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrtPi"]));
  return [_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrtPi"] * x / (sqrt3 * (2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(2 * phi / 3) - 1)), phi];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(crasterRaw)
      .scale(156.19);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/cylindricalEqualArea.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/cylindricalEqualArea.js ***!
  \********************************************************************/
/*! exports provided: cylindricalEqualAreaRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cylindricalEqualAreaRaw", function() { return cylindricalEqualAreaRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _parallel1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parallel1.js */ "./node_modules/d3-geo-projection/src/parallel1.js");



function cylindricalEqualAreaRaw(phi0) {
  var cosPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi) / cosPhi0];
  }

  forward.invert = function(x, y) {
    return [x / cosPhi0, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["asin"])(y * cosPhi0)];
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_parallel1_js__WEBPACK_IMPORTED_MODULE_1__["default"])(cylindricalEqualAreaRaw)
      .parallel(38.58) // acos(sqrt(width / height / pi)) * radians
      .scale(195.044); // width / (sqrt(width / height / pi) * 2 * pi)
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/cylindricalStereographic.js":
/*!************************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/cylindricalStereographic.js ***!
  \************************************************************************/
/*! exports provided: cylindricalStereographicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cylindricalStereographicRaw", function() { return cylindricalStereographicRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _parallel1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parallel1.js */ "./node_modules/d3-geo-projection/src/parallel1.js");



function cylindricalStereographicRaw(phi0) {
  var cosPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, (1 + cosPhi0) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])(phi / 2)];
  }

  forward.invert = function(x, y) {
    return [x / cosPhi0, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"])(y / (1 + cosPhi0)) * 2];
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_parallel1_js__WEBPACK_IMPORTED_MODULE_1__["default"])(cylindricalStereographicRaw)
      .scale(124.75);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/eckert1.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/eckert1.js ***!
  \*******************************************************/
/*! exports provided: eckert1Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eckert1Raw", function() { return eckert1Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function eckert1Raw(lambda, phi) {
  var alpha = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(8 / (3 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]));
  return [
    alpha * lambda * (1 - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]),
    alpha * phi
  ];
}

eckert1Raw.invert = function(x, y) {
  var alpha = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(8 / (3 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"])),
      phi = y / alpha;
  return [
    x / (alpha * (1 - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"])),
    phi
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(eckert1Raw)
      .scale(165.664);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/eckert2.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/eckert2.js ***!
  \*******************************************************/
/*! exports provided: eckert2Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eckert2Raw", function() { return eckert2Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function eckert2Raw(lambda, phi) {
  var alpha = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(4 - 3 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi)));
  return [
    2 / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(6 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) * lambda * alpha,
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(phi) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 3) * (2 - alpha)
  ];
}

eckert2Raw.invert = function(x, y) {
  var alpha = 2 - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 3);
  return [
    x * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(6 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) / (2 * alpha),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(y) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])((4 - alpha * alpha) / 3)
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(eckert2Raw)
      .scale(165.664);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/eckert3.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/eckert3.js ***!
  \*******************************************************/
/*! exports provided: eckert3Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eckert3Raw", function() { return eckert3Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function eckert3Raw(lambda, phi) {
  var k = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * (4 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]));
  return [
    2 / k * lambda * (1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 - 4 * phi * phi / (_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]))),
    4 / k * phi
  ];
}

eckert3Raw.invert = function(x, y) {
  var k = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * (4 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"])) / 2;
  return [
    x * k / (1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 - y * y * (4 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) / (4 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]))),
    y * k / 2
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(eckert3Raw)
      .scale(180.739);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/eckert4.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/eckert4.js ***!
  \*******************************************************/
/*! exports provided: eckert4Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eckert4Raw", function() { return eckert4Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function eckert4Raw(lambda, phi) {
  var k = (2 + _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi);
  phi /= 2;
  for (var i = 0, delta = Infinity; i < 10 && Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]; i++) {
    var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi);
    phi -= delta = (phi + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi) * (cosPhi + 2) - k) / (2 * cosPhi * (1 + cosPhi));
  }
  return [
    2 / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * (4 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"])) * lambda * (1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi)),
    2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / (4 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"])) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)
  ];
}

eckert4Raw.invert = function(x, y) {
  var A = y * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])((4 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) / 2,
      k = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(A),
      c = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(k);
  return [
    x / (2 / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * (4 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"])) * (1 + c)),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])((k + A * (c + 2)) / (2 + _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]))
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(eckert4Raw)
      .scale(180.739);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/eckert5.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/eckert5.js ***!
  \*******************************************************/
/*! exports provided: eckert5Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eckert5Raw", function() { return eckert5Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function eckert5Raw(lambda, phi) {
  return [
    lambda * (1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi)) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(2 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]),
    2 * phi / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(2 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"])
  ];
}

eckert5Raw.invert = function(x, y) {
  var k = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(2 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]),
      phi = y * k / 2;
  return [
    k * x / (1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi)),
    phi
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(eckert5Raw)
      .scale(173.044);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/eckert6.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/eckert6.js ***!
  \*******************************************************/
/*! exports provided: eckert6Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eckert6Raw", function() { return eckert6Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function eckert6Raw(lambda, phi) {
  var k = (1 + _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi);
  for (var i = 0, delta = Infinity; i < 10 && Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]; i++) {
    phi -= delta = (phi + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi) - k) / (1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi));
  }
  k = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(2 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]);
  return [
    lambda * (1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi)) / k,
    2 * phi / k
  ];
}

eckert6Raw.invert = function(x, y) {
  var j = 1 + _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"],
      k = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(j / 2);
  return [
    x * 2 * k / (1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(y *= k)),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])((y + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(y)) / j)
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(eckert6Raw)
      .scale(173.044);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/eisenlohr.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/eisenlohr.js ***!
  \*********************************************************/
/*! exports provided: eisenlohrRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "eisenlohrRaw", function() { return eisenlohrRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _august_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./august.js */ "./node_modules/d3-geo-projection/src/august.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");




var eisenlohrK = 3 + 2 * _math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"];

function eisenlohrRaw(lambda, phi) {
  var s0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(lambda /= 2),
      c0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(lambda),
      k = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi)),
      c1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi /= 2),
      t = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi) / (c1 + _math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * c0 * k),
      c = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(2 / (1 + t * t)),
      v = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt"])((_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * c1 + (c0 + s0) * k) / (_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * c1 + (c0 - s0) * k));
  return [
    eisenlohrK * (c * (v - 1 / v) - 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["log"])(v)),
    eisenlohrK * (c * t * (v + 1 / v) - 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["atan"])(t))
  ];
}

eisenlohrRaw.invert = function(x, y) {
  if (!(p = _august_js__WEBPACK_IMPORTED_MODULE_1__["augustRaw"].invert(x / 1.2, y * 1.065))) return null;
  var lambda = p[0], phi = p[1], i = 20, p;
  x /= eisenlohrK, y /= eisenlohrK;
  do {
    var _0 = lambda / 2,
        _1 = phi / 2,
        s0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(_0),
        c0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(_0),
        s1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(_1),
        c1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(_1),
        cos1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi),
        k = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(cos1),
        t = s1 / (c1 + _math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * c0 * k),
        t2 = t * t,
        c = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(2 / (1 + t2)),
        v0 = (_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * c1 + (c0 + s0) * k),
        v1 = (_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * c1 + (c0 - s0) * k),
        v2 = v0 / v1,
        v = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(v2),
        vm1v = v - 1 / v,
        vp1v = v + 1 / v,
        fx = c * vm1v - 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["log"])(v) - x,
        fy = c * t * vp1v - 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["atan"])(t) - y,
        deltatDeltaLambda = s1 && _math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt1_2"] * k * s0 * t2 / s1,
        deltatDeltaPhi = (_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * c0 * c1 + k) / (2 * (c1 + _math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * c0 * k) * (c1 + _math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * c0 * k) * k),
        deltacDeltat = -0.5 * t * c * c * c,
        deltacDeltaLambda = deltacDeltat * deltatDeltaLambda,
        deltacDeltaPhi = deltacDeltat * deltatDeltaPhi,
        A = (A = 2 * c1 + _math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * k * (c0 - s0)) * A * v,
        deltavDeltaLambda = (_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * c0 * c1 * k + cos1) / A,
        deltavDeltaPhi = -(_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] * s0 * s1) / (k * A),
        deltaxDeltaLambda = vm1v * deltacDeltaLambda - 2 * deltavDeltaLambda / v + c * (deltavDeltaLambda + deltavDeltaLambda / v2),
        deltaxDeltaPhi = vm1v * deltacDeltaPhi - 2 * deltavDeltaPhi / v + c * (deltavDeltaPhi + deltavDeltaPhi / v2),
        deltayDeltaLambda = t * vp1v * deltacDeltaLambda - 2 * deltatDeltaLambda / (1 + t2) + c * vp1v * deltatDeltaLambda + c * t * (deltavDeltaLambda - deltavDeltaLambda / v2),
        deltayDeltaPhi = t * vp1v * deltacDeltaPhi - 2 * deltatDeltaPhi / (1 + t2) + c * vp1v * deltatDeltaPhi + c * t * (deltavDeltaPhi - deltavDeltaPhi / v2),
        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;
    if (!denominator) break;
    var deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,
        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;
    lambda -= deltaLambda;
    phi = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["max"])(-_math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"], Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["min"])(_math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"], phi - deltaPhi));
  } while ((Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(deltaLambda) > _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"] || Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(deltaPhi) > _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) && --i > 0);
  return Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(phi) - _math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"]) < _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"] ? [0, phi] : i && [lambda, phi];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(eisenlohrRaw)
      .scale(62.5271);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/elliptic.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/elliptic.js ***!
  \********************************************************/
/*! exports provided: ellipticJi, ellipticJ, ellipticFi, ellipticF */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ellipticJi", function() { return ellipticJi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ellipticJ", function() { return ellipticJ; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ellipticFi", function() { return ellipticFi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ellipticF", function() { return ellipticF; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");


// Returns [sn, cn, dn](u + iv|m).
function ellipticJi(u, v, m) {
  var a, b, c;
  if (!u) {
    b = ellipticJ(v, 1 - m);
    return [
      [0, b[0] / b[1]],
      [1 / b[1], 0],
      [b[2] / b[1], 0]
    ];
  }
  a = ellipticJ(u, m);
  if (!v) return [[a[0], 0], [a[1], 0], [a[2], 0]];
  b = ellipticJ(v, 1 - m);
  c = b[1] * b[1] + m * a[0] * a[0] * b[0] * b[0];
  return [
    [a[0] * b[2] / c, a[1] * a[2] * b[0] * b[1] / c],
    [a[1] * b[1] / c, -a[0] * a[2] * b[0] * b[2] / c],
    [a[2] * b[1] * b[2] / c, -m * a[0] * a[1] * b[0] / c]
  ];
}

// Returns [sn, cn, dn, ph](u|m).
function ellipticJ(u, m) {
  var ai, b, phi, t, twon;
  if (m < _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) {
    t = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(u);
    b = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(u);
    ai = m * (u - t * b) / 4;
    return [
      t - ai * b,
      b + ai * t,
      1 - m * t * t / 2,
      u - ai
    ];
  }
  if (m >= 1 - _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) {
    ai = (1 - m) / 4;
    b = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cosh"])(u);
    t = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tanh"])(u);
    phi = 1 / b;
    twon = b * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sinh"])(u);
    return [
      t + ai * (twon - u) / (b * b),
      phi - ai * t * phi * (twon - u),
      phi + ai * t * phi * (twon + u),
      2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["exp"])(u)) - _math_js__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + ai * (twon - u) / b
    ];
  }

  var a = [1, 0, 0, 0, 0, 0, 0, 0, 0],
      c = [Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(m), 0, 0, 0, 0, 0, 0, 0, 0],
      i = 0;
  b = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(1 - m);
  twon = 1;

  while (Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(c[i] / a[i]) > _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"] && i < 8) {
    ai = a[i++];
    c[i] = (ai - b) / 2;
    a[i] = (ai + b) / 2;
    b = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(ai * b);
    twon *= 2;
  }

  phi = twon * a[i] * u;
  do {
    t = c[i] * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(b = phi) / a[i];
    phi = (Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["asin"])(t) + phi) / 2;
  } while (--i);

  return [Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi), t = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi), t / Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi - b), phi];
}

// Calculate F(phi+iPsi|m).
// See Abramowitz and Stegun, 17.4.11.
function ellipticFi(phi, psi, m) {
  var r = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(phi),
      i = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(psi),
      sinhPsi = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sinh"])(i);
  if (r) {
    var cscPhi = 1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(r),
        cotPhi2 = 1 / (Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])(r) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])(r)),
        b = -(cotPhi2 + m * (sinhPsi * sinhPsi * cscPhi * cscPhi) - 1 + m),
        c = (m - 1) * cotPhi2,
        cotLambda2 = (-b + Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(b * b - 4 * c)) / 2;
    return [
      ellipticF(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"])(1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(cotLambda2)), m) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(phi),
      ellipticF(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])((cotLambda2 / cotPhi2 - 1) / m)), 1 - m) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(psi)
    ];
  }
  return [
    0,
    ellipticF(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"])(sinhPsi), 1 - m) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(psi)
  ];
}

// Calculate F(phi|m) where m = k² = sin²α.
// See Abramowitz and Stegun, 17.6.7.
function ellipticF(phi, m) {
  if (!m) return phi;
  if (m === 1) return Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["log"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])(phi / 2 + _math_js__WEBPACK_IMPORTED_MODULE_0__["quarterPi"]));
  var a = 1,
      b = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(1 - m),
      c = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(m);
  for (var i = 0; Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(c) > _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]; i++) {
    if (phi % _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"]) {
      var dPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"])(b * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])(phi) / a);
      if (dPhi < 0) dPhi += _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"];
      phi += dPhi + ~~(phi / _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"]) * _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"];
    } else phi += phi;
    c = (a + b) / 2;
    b = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(a * b);
    c = ((a = c) - b) / 2;
  }
  return phi / (Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["pow"])(2, i) * a);
}


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/fahey.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/fahey.js ***!
  \*****************************************************/
/*! exports provided: faheyRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "faheyRaw", function() { return faheyRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



var faheyK = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(35 * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]);

function faheyRaw(lambda, phi) {
  var t = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(phi / 2);
  return [lambda * faheyK * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 - t * t), (1 + faheyK) * t];
}

faheyRaw.invert = function(x, y) {
  var t = y / (1 + faheyK);
  return [x && x / (faheyK * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 - t * t)), 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan"])(t)];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(faheyRaw)
      .scale(137.152);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/foucaut.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/foucaut.js ***!
  \*******************************************************/
/*! exports provided: foucautRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "foucautRaw", function() { return foucautRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function foucautRaw(lambda, phi) {
  var k = phi / 2, cosk = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(k);
  return [ 2 * lambda / _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrtPi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi) * cosk * cosk, _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrtPi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(k)];
}

foucautRaw.invert = function(x, y) {
  var k = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan"])(y / _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrtPi"]), cosk = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(k), phi = 2 * k;
  return [x * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrtPi"] / 2 / (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi) * cosk * cosk), phi];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(foucautRaw)
      .scale(135.264);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/foucautSinusoidal.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/foucautSinusoidal.js ***!
  \*****************************************************************/
/*! exports provided: foucautSinusoidalRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "foucautSinusoidalRaw", function() { return foucautSinusoidalRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _newton_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./newton.js */ "./node_modules/d3-geo-projection/src/newton.js");




function foucautSinusoidalRaw(alpha) {
  var beta = 1 - alpha,
      equatorial = raw(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"], 0)[0] - raw(-_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"], 0)[0],
      polar = raw(0, _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"])[1] - raw(0, -_math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"])[1],
      ratio = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(2 * polar / equatorial);

  function raw(lambda, phi) {
    var cosphi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        sinphi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi);
    return [
      cosphi / (beta + alpha * cosphi) * lambda,
      beta * phi + alpha * sinphi
    ];
  }

  function forward(lambda, phi) {
    var p = raw(lambda, phi);
    return [p[0] * ratio, p[1] / ratio];
  }

  function forwardMeridian(phi) {
    return forward(0, phi)[1];
  }

  forward.invert = function(x, y) {
    var phi = Object(_newton_js__WEBPACK_IMPORTED_MODULE_2__["solve"])(forwardMeridian, y),
        lambda = x / ratio * (alpha + beta / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi));
    return [lambda, phi];
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var alpha = 0.5,
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(foucautSinusoidalRaw),
      p = m(alpha);

  p.alpha = function(_) {
    return arguments.length ? m(alpha = +_) : alpha;
  };

  return p
      .scale(168.725);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/gilbert.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/gilbert.js ***!
  \*******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function gilbertForward(point) {
  return [point[0] / 2, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(point[1] / 2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"])) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"]];
}

function gilbertInvert(point) {
  return [point[0] * 2, 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(point[1] * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"])) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"]];
}

/* harmony default export */ __webpack_exports__["default"] = (function(projectionType) {
  if (projectionType == null) projectionType = d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoOrthographic"];
  var projection = projectionType(),
      equirectangular = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoEquirectangular"])().scale(_math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"]).precision(0).clipAngle(null).translate([0, 0]); // antimeridian cutting

  function gilbert(point) {
    return projection(gilbertForward(point));
  }

  if (projection.invert) gilbert.invert = function(point) {
    return gilbertInvert(projection.invert(point));
  };

  gilbert.stream = function(stream) {
    var s1 = projection.stream(stream), s0 = equirectangular.stream({
      point: function(lambda, phi) { s1.point(lambda / 2, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(-phi / 2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"])) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"]); },
      lineStart: function() { s1.lineStart(); },
      lineEnd: function() { s1.lineEnd(); },
      polygonStart: function() { s1.polygonStart(); },
      polygonEnd: function() { s1.polygonEnd(); }
    });
    s0.sphere = s1.sphere;
    return s0;
  };

  function property(name) {
    gilbert[name] = function() {
      return arguments.length ? (projection[name].apply(projection, arguments), gilbert) : projection[name]();
    };
  }

  gilbert.rotate = function(_) {
    return arguments.length ? (equirectangular.rotate(_), gilbert) : equirectangular.rotate();
  };

  gilbert.center = function(_) {
    return arguments.length ? (projection.center(gilbertForward(_)), gilbert) : gilbertInvert(projection.center());
  };

  property("angle");
  property("clipAngle");
  property("clipExtent");
  property("fitExtent");
  property("fitHeight");
  property("fitSize");
  property("fitWidth");
  property("scale");
  property("translate");
  property("precision");

  return gilbert
      .scale(249.5);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/gingery.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/gingery.js ***!
  \*******************************************************/
/*! exports provided: gingeryRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gingeryRaw", function() { return gingeryRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function gingeryRaw(rho, n) {
  var k = 2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / n,
      rho2 = rho * rho;

  function forward(lambda, phi) {
    var p = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAzimuthalEquidistantRaw"])(lambda, phi),
        x = p[0],
        y = p[1],
        r2 = x * x + y * y;

    if (r2 > rho2) {
      var r = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(r2),
          theta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y, x),
          theta0 = k * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["round"])(theta / k),
          alpha = theta - theta0,
          rhoCosAlpha = rho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(alpha),
          k_ = (rho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(alpha) - alpha * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(rhoCosAlpha)) / (_math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] - rhoCosAlpha),
          s_ = gingeryLength(alpha, k_),
          e = (_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] - rho) / gingeryIntegrate(s_, rhoCosAlpha, _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]);

      x = r;
      var i = 50, delta;
      do {
        x -= delta = (rho + gingeryIntegrate(s_, rhoCosAlpha, x) * e - r) / (s_(x) * e);
      } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);

      y = alpha * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(x);
      if (x < _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) y -= k_ * (x - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]);

      var s = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta0),
          c = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta0);
      p[0] = x * c - y * s;
      p[1] = x * s + y * c;
    }
    return p;
  }

  forward.invert = function(x, y) {
    var r2 = x * x + y * y;
    if (r2 > rho2) {
      var r = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(r2),
          theta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y, x),
          theta0 = k * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["round"])(theta / k),
          dTheta = theta - theta0;

      x = r * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(dTheta);
      y = r * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(dTheta);

      var x_halfPi = x - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"],
          sinx = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(x),
          alpha = y / sinx,
          delta = x < _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] ? Infinity : 0,
          i = 10;

      while (true) {
        var rhosinAlpha = rho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(alpha),
            rhoCosAlpha = rho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(alpha),
            sinRhoCosAlpha = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(rhoCosAlpha),
            halfPi_RhoCosAlpha = _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] - rhoCosAlpha,
            k_ = (rhosinAlpha - alpha * sinRhoCosAlpha) / halfPi_RhoCosAlpha,
            s_ = gingeryLength(alpha, k_);

        if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon2"] || !--i) break;

        alpha -= delta = (alpha * sinx - k_ * x_halfPi - y) / (
          sinx - x_halfPi * 2 * (
            halfPi_RhoCosAlpha * (rhoCosAlpha + alpha * rhosinAlpha * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(rhoCosAlpha) - sinRhoCosAlpha) -
            rhosinAlpha * (rhosinAlpha - alpha * sinRhoCosAlpha)
          ) / (halfPi_RhoCosAlpha * halfPi_RhoCosAlpha));
      }
      r = rho + gingeryIntegrate(s_, rhoCosAlpha, x) * (_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] - rho) / gingeryIntegrate(s_, rhoCosAlpha, _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]);
      theta = theta0 + alpha;
      x = r * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta);
      y = r * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta);
    }
    return d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAzimuthalEquidistantRaw"].invert(x, y);
  };

  return forward;
}

function gingeryLength(alpha, k) {
  return function(x) {
    var y_ = alpha * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(x);
    if (x < _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) y_ -= k;
    return Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 + y_ * y_);
  };
}

// Numerical integration: trapezoidal rule.
function gingeryIntegrate(f, a, b) {
  var n = 50,
      h = (b - a) / n,
      s = f(a) + f(b);
  for (var i = 1, x = a; i < n; ++i) s += 2 * f(x += h);
  return s * 0.5 * h;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var n = 6,
      rho = 30 * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"],
      cRho = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(rho),
      sRho = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(rho),
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(gingeryRaw),
      p = m(rho, n),
      stream_ = p.stream,
      epsilon = 1e-2,
      cr = -Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(epsilon * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]),
      sr = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(epsilon * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]);

  p.radius = function(_) {
    if (!arguments.length) return rho * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"];
    cRho = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(rho = _ * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]);
    sRho = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(rho);
    return m(rho, n);
  };

  p.lobes = function(_) {
    if (!arguments.length) return n;
    return m(rho, n = +_);
  };

  p.stream = function(stream) {
    var rotate = p.rotate(),
        rotateStream = stream_(stream),
        sphereStream = (p.rotate([0, 0]), stream_(stream));
    p.rotate(rotate);
    rotateStream.sphere = function() {
      sphereStream.polygonStart(), sphereStream.lineStart();
      for (var i = 0, delta = 2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / n, phi = 0; i < n; ++i, phi -= delta) {
        sphereStream.point(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(sr * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi), cr) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"], Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(sr * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"]);
        sphereStream.point(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(sRho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi - delta / 2), cRho) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"], Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(sRho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi - delta / 2)) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"]);
      }
      sphereStream.lineEnd(), sphereStream.polygonEnd();
    };
    return rotateStream;
  };

  return p
      .rotate([90, -40])
      .scale(91.7095)
      .clipAngle(180 - 1e-3);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/ginzburg4.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/ginzburg4.js ***!
  \*********************************************************/
/*! exports provided: ginzburg4Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ginzburg4Raw", function() { return ginzburg4Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _ginzburgPolyconic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ginzburgPolyconic.js */ "./node_modules/d3-geo-projection/src/ginzburgPolyconic.js");



var ginzburg4Raw = Object(_ginzburgPolyconic_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2.8284, -1.6988, 0.75432, -0.18071, 1.76003, -0.38914, 0.042555);

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(ginzburg4Raw)
      .scale(149.995);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/ginzburg5.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/ginzburg5.js ***!
  \*********************************************************/
/*! exports provided: ginzburg5Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ginzburg5Raw", function() { return ginzburg5Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _ginzburgPolyconic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ginzburgPolyconic.js */ "./node_modules/d3-geo-projection/src/ginzburgPolyconic.js");



var ginzburg5Raw = Object(_ginzburgPolyconic_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2.583819, -0.835827, 0.170354, -0.038094, 1.543313, -0.411435,0.082742);

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(ginzburg5Raw)
      .scale(153.93);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/ginzburg6.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/ginzburg6.js ***!
  \*********************************************************/
/*! exports provided: ginzburg6Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ginzburg6Raw", function() { return ginzburg6Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _ginzburgPolyconic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ginzburgPolyconic.js */ "./node_modules/d3-geo-projection/src/ginzburgPolyconic.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");




var ginzburg6Raw = Object(_ginzburgPolyconic_js__WEBPACK_IMPORTED_MODULE_1__["default"])(5 / 6 * _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"], -0.62636, -0.0344, 0, 1.3493, -0.05524, 0, 0.045);

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(ginzburg6Raw)
      .scale(130.945);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/ginzburg8.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/ginzburg8.js ***!
  \*********************************************************/
/*! exports provided: ginzburg8Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ginzburg8Raw", function() { return ginzburg8Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function ginzburg8Raw(lambda, phi) {
  var lambda2 = lambda * lambda,
      phi2 = phi * phi;
  return [
    lambda * (1 - 0.162388 * phi2) * (0.87 - 0.000952426 * lambda2 * lambda2),
    phi * (1 + phi2 / 12)
  ];
}

ginzburg8Raw.invert = function(x, y) {
  var lambda = x,
      phi = y,
      i = 50, delta;
  do {
    var phi2 = phi * phi;
    phi -= delta = (phi * (1 + phi2 / 12) - y) / (1 + phi2 / 4);
  } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);
  i = 50;
  x /= 1 -0.162388 * phi2;
  do {
    var lambda4 = (lambda4 = lambda * lambda) * lambda4;
    lambda -= delta = (lambda * (0.87 - 0.000952426 * lambda4) - x) / (0.87 - 0.00476213 * lambda4);
  } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);
  return [lambda, phi];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(ginzburg8Raw)
      .scale(131.747);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/ginzburg9.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/ginzburg9.js ***!
  \*********************************************************/
/*! exports provided: ginzburg9Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ginzburg9Raw", function() { return ginzburg9Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _ginzburgPolyconic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./ginzburgPolyconic.js */ "./node_modules/d3-geo-projection/src/ginzburgPolyconic.js");



var ginzburg9Raw = Object(_ginzburgPolyconic_js__WEBPACK_IMPORTED_MODULE_1__["default"])(2.6516, -0.76534, 0.19123, -0.047094, 1.36289, -0.13965,0.031762);

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(ginzburg9Raw)
      .scale(131.087);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/ginzburgPolyconic.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/ginzburgPolyconic.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");


/* harmony default export */ __webpack_exports__["default"] = (function(a, b, c, d, e, f, g, h) {
  if (arguments.length < 8) h = 0;

  function forward(lambda, phi) {
    if (!phi) return [a * lambda / _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"], 0];
    var phi2 = phi * phi,
        xB = a + phi2 * (b + phi2 * (c + phi2 * d)),
        yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),
        m = (xB * xB + yB * yB) / (2 * yB),
        alpha = lambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["asin"])(xB / m) / _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"];
    return [m * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(alpha), phi * (1 + phi2 * h) + m * (1 - Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(alpha))];
  }

  forward.invert = function(x, y) {
    var lambda = _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"] * x / a,
        phi = y,
        deltaLambda, deltaPhi, i = 50;
    do {
      var phi2 = phi * phi,
          xB = a + phi2 * (b + phi2 * (c + phi2 * d)),
          yB = phi * (e - 1 + phi2 * (f - h + phi2 * g)),
          p = xB * xB + yB * yB,
          q = 2 * yB,
          m = p / q,
          m2 = m * m,
          dAlphadLambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["asin"])(xB / m) / _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"],
          alpha = lambda * dAlphadLambda,
          xB2 = xB * xB,
          dxBdPhi = (2 * b + phi2 * (4 * c + phi2 * 6 * d)) * phi,
          dyBdPhi = e + phi2 * (3 * f + phi2 * 5 * g),
          dpdPhi = 2 * (xB * dxBdPhi + yB * (dyBdPhi - 1)),
          dqdPhi = 2 * (dyBdPhi - 1),
          dmdPhi = (dpdPhi * q - p * dqdPhi) / (q * q),
          cosAlpha = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(alpha),
          sinAlpha = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(alpha),
          mcosAlpha = m * cosAlpha,
          msinAlpha = m * sinAlpha,
          dAlphadPhi = ((lambda / _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"]) * (1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(1 - xB2 / m2)) * (dxBdPhi * m - xB * dmdPhi)) / m2,
          fx = msinAlpha - x,
          fy = phi * (1 + phi2 * h) + m - mcosAlpha - y,
          deltaxDeltaPhi = dmdPhi * sinAlpha + mcosAlpha * dAlphadPhi,
          deltaxDeltaLambda = mcosAlpha * dAlphadLambda,
          deltayDeltaPhi = 1 + dmdPhi - (dmdPhi * cosAlpha - msinAlpha * dAlphadPhi),
          deltayDeltaLambda = msinAlpha * dAlphadLambda,
          denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda;
      if (!denominator) break;
      lambda -= deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator;
      phi -= deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;
    } while ((Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(deltaLambda) > _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"] || Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(deltaPhi) > _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) && --i > 0);
    return [lambda, phi];
  };

  return forward;
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/gringorten.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/gringorten.js ***!
  \**********************************************************/
/*! exports provided: gringortenRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gringortenRaw", function() { return gringortenRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _square_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./square.js */ "./node_modules/d3-geo-projection/src/square.js");




function gringortenRaw(lambda, phi) {
  var sLambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(lambda),
      sPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(phi),
      cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      x = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda) * cosPhi,
      y = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) * cosPhi,
      z = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(sPhi * phi);
  lambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y, z));
  phi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(x);
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) lambda %= _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"];
  var point = gringortenHexadecant(lambda > _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 4 ? _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] - lambda : lambda, phi);
  if (lambda > _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 4) z = point[0], point[0] = -point[1], point[1] = -z;
  return (point[0] *= sLambda, point[1] *= -sPhi, point);
}

gringortenRaw.invert = function(x, y) {
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x) > 1) x = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(x) * 2 - x;
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y) > 1) y = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(y) * 2 - y;
  var sx = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(x),
      sy = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(y),
      x0 = -sx * x,
      y0 = -sy * y,
      t = y0 / x0 < 1,
      p = gringortenHexadecantInvert(t ? y0 : x0, t ? x0 : y0),
      lambda = p[0],
      phi = p[1],
      cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi);
  if (t) lambda = -_math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] - lambda;
  return [sx * (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) * cosPhi, -Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)) + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]), sy * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda) * cosPhi)];
};

function gringortenHexadecant(lambda, phi) {
  if (phi === _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) return [0, 0];

  var sinPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
      r = sinPhi * sinPhi,
      r2 = r * r,
      j = 1 + r2,
      k = 1 + 3 * r2,
      q = 1 - r2,
      z = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(j)),
      v = q + r * j * z,
      p2 = (1 - sinPhi) / v,
      p = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(p2),
      a2 = p2 * j,
      a = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(a2),
      h = p * q,
      x,
      i;

  if (lambda === 0) return [0, -(h + r * a)];

  var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      secPhi = 1 / cosPhi,
      drdPhi = 2 * sinPhi * cosPhi,
      dvdPhi = (-3 * r + z * k) * drdPhi,
      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),
      dpdPhi = (0.5 * dp2dPhi) / p,
      dhdPhi = q * dpdPhi - 2 * r * p * drdPhi,
      dra2dPhi = r * j * dp2dPhi + p2 * k * drdPhi,
      mu = -secPhi * drdPhi,
      nu = -secPhi * dra2dPhi,
      zeta = -2 * secPhi * dhdPhi,
      lambda1 = 4 * lambda / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"],
      delta;

  // Slower but accurate bisection method.
  if (lambda > 0.222 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] || phi < _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 4 && lambda > 0.175 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) {
    x = (h + r * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(a2 * (1 + r2) - h * h)) / (1 + r2);
    if (lambda > _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 4) return [x, x];
    var x1 = x, x0 = 0.5 * x;
    x = 0.5 * (x0 + x1), i = 50;
    do {
      var g = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(a2 - x * x),
          f = (x * (zeta + mu * g) + nu * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(x / a)) - lambda1;
      if (!f) break;
      if (f < 0) x0 = x;
      else x1 = x;
      x = 0.5 * (x0 + x1);
    } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x1 - x0) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);
  }

  // Newton-Raphson.
  else {
    x = _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"], i = 25;
    do {
      var x2 = x * x,
          g2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(a2 - x2),
          zetaMug = zeta + mu * g2,
          f2 = x * zetaMug + nu * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(x / a) - lambda1,
          df = zetaMug + (nu - mu * x2) / g2;
      x -= delta = g2 ? f2 / df : 0;
    } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);
  }

  return [x, -h - r * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(a2 - x * x)];
}

function gringortenHexadecantInvert(x, y) {
  var x0 = 0,
      x1 = 1,
      r = 0.5,
      i = 50;

  while (true) {
    var r2 = r * r,
        sinPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(r),
        z = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 + r2)),
        v = (1 - r2) + r * (1 + r2) * z,
        p2 = (1 - sinPhi) / v,
        p = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(p2),
        a2 = p2 * (1 + r2),
        h = p * (1 - r2),
        g2 = a2 - x * x,
        g = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(g2),
        y0 = y + h + r * g;
    if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x1 - x0) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon2"] || --i === 0 || y0 === 0) break;
    if (y0 > 0) x0 = r;
    else x1 = r;
    r = 0.5 * (x0 + x1);
  }

  if (!i) return null;

  var phi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(sinPhi),
      cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      secPhi = 1 / cosPhi,
      drdPhi = 2 * sinPhi * cosPhi,
      dvdPhi = (-3 * r + z * (1 + 3 * r2)) * drdPhi,
      dp2dPhi = (-v * cosPhi - (1 - sinPhi) * dvdPhi) / (v * v),
      dpdPhi = 0.5 * dp2dPhi / p,
      dhdPhi = (1 - r2) * dpdPhi - 2 * r * p * drdPhi,
      zeta = -2 * secPhi * dhdPhi,
      mu = -secPhi * drdPhi,
      nu = -secPhi * (r * (1 + r2) * dp2dPhi + p2 * (1 + 3 * r2) * drdPhi);

  return [_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 4 * (x * (zeta + mu * g) + nu * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(x / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(a2))), phi];
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(Object(_square_js__WEBPACK_IMPORTED_MODULE_2__["default"])(gringortenRaw))
      .scale(239.75);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/guyou.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/guyou.js ***!
  \*****************************************************/
/*! exports provided: guyouRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "guyouRaw", function() { return guyouRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _elliptic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./elliptic.js */ "./node_modules/d3-geo-projection/src/elliptic.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _square_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./square.js */ "./node_modules/d3-geo-projection/src/square.js");





function guyouRaw(lambda, phi) {
  var k_ = (_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] - 1) / (_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] + 1),
      k = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(1 - k_ * k_),
      K = Object(_elliptic_js__WEBPACK_IMPORTED_MODULE_1__["ellipticF"])(_math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"], k * k),
      f = -1,
      psi = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["log"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["tan"])(_math_js__WEBPACK_IMPORTED_MODULE_2__["pi"] / 4 + Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(phi) / 2)),
      r = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["exp"])(f * psi) / Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(k_),
      at = guyouComplexAtan(r * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(f * lambda), r * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(f * lambda)),
      t = Object(_elliptic_js__WEBPACK_IMPORTED_MODULE_1__["ellipticFi"])(at[0], at[1], k * k);
  return [-t[1], (phi >= 0 ? 1 : -1) * (0.5 * K - t[0])];
}

function guyouComplexAtan(x, y) {
  var x2 = x * x,
      y_1 = y + 1,
      t = 1 - x2 - y * y;
  return [
   0.5 * ((x >= 0 ? _math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"] : -_math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"]) - Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["atan2"])(t, 2 * x)),
    -0.25 * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["log"])(t * t + 4 * x2) +0.5 * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["log"])(y_1 * y_1 + x2)
  ];
}

function guyouComplexDivide(a, b) {
  var denominator = b[0] * b[0] + b[1] * b[1];
  return [
    (a[0] * b[0] + a[1] * b[1]) / denominator,
    (a[1] * b[0] - a[0] * b[1]) / denominator
  ];
}

guyouRaw.invert = function(x, y) {
  var k_ = (_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] - 1) / (_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt2"] + 1),
      k = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(1 - k_ * k_),
      K = Object(_elliptic_js__WEBPACK_IMPORTED_MODULE_1__["ellipticF"])(_math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"], k * k),
      f = -1,
      j = Object(_elliptic_js__WEBPACK_IMPORTED_MODULE_1__["ellipticJi"])(0.5 * K - y, -x, k * k),
      tn = guyouComplexDivide(j[0], j[1]),
      lambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["atan2"])(tn[1], tn[0]) / f;
  return [
    lambda,
    2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["atan"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["exp"])(0.5 / f * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["log"])(k_ * tn[0] * tn[0] + k_ * tn[1] * tn[1]))) - _math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"]
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(Object(_square_js__WEBPACK_IMPORTED_MODULE_3__["default"])(guyouRaw))
      .scale(151.496);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/hammer.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/hammer.js ***!
  \******************************************************/
/*! exports provided: hammerRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hammerRaw", function() { return hammerRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function hammerRaw(A, B) {
  if (arguments.length < 2) B = A;
  if (B === 1) return d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAzimuthalEqualAreaRaw"];
  if (B === Infinity) return hammerQuarticAuthalicRaw;

  function forward(lambda, phi) {
    var coordinates = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAzimuthalEqualAreaRaw"])(lambda / B, phi);
    coordinates[0] *= A;
    return coordinates;
  }

  forward.invert = function(x, y) {
    var coordinates = d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAzimuthalEqualAreaRaw"].invert(x / A, y);
    coordinates[0] *= B;
    return coordinates;
  };

  return forward;
}

function hammerQuarticAuthalicRaw(lambda, phi) {
  return [
    lambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi /= 2),
    2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)
  ];
}

hammerQuarticAuthalicRaw.invert = function(x, y) {
  var phi = 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(y / 2);
  return [
    x * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi / 2) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
    phi
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var B = 2,
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(hammerRaw),
      p = m(B);

  p.coefficient = function(_) {
    if (!arguments.length) return B;
    return m(B = +_);
  };

  return p
    .scale(169.529);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/hammerRetroazimuthal.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/hammerRetroazimuthal.js ***!
  \********************************************************************/
/*! exports provided: hammerRetroazimuthalRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hammerRetroazimuthalRaw", function() { return hammerRetroazimuthalRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function hammerRetroazimuthalRaw(phi0) {
  var sinPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi0),
      cosPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi0),
      rotate = hammerRetroazimuthalRotation(phi0);

  rotate.invert = hammerRetroazimuthalRotation(-phi0);

  function forward(lambda, phi) {
    var p = rotate(lambda, phi);
    lambda = p[0], phi = p[1];
    var sinPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        cosLambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda),
        z = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosLambda),
        sinz = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(z),
        K = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(sinz) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? z / sinz : 1;
    return [
      K * cosPhi0 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda),
      (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda) > _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] ? K : -K) // rotate for back hemisphere
        * (sinPhi0 * cosPhi - cosPhi0 * sinPhi * cosLambda)
    ];
  }

  forward.invert = function(x, y) {
    var rho = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x * x + y * y),
        sinz = -Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(rho),
        cosz = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(rho),
        a = rho * cosz,
        b = -y * sinz,
        c = rho * sinPhi0,
        d = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(a * a + b * b - c * c),
        phi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(a * c + b * d, b * c - a * d),
        lambda = (rho > _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] ? -1 : 1) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(x * sinz, rho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi) * cosz + y * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi) * sinz);
    return rotate.invert(lambda, phi);
  };

  return forward;
}

// Latitudinal rotation by phi0.
// Temporary hack until D3 supports arbitrary small-circle clipping origins.
function hammerRetroazimuthalRotation(phi0) {
  var sinPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi0),
      cosPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi0);

  return function(lambda, phi) {
    var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        x = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda) * cosPhi,
        y = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) * cosPhi,
        z = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi);
    return [
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y, x * cosPhi0 - z * sinPhi0),
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(z * cosPhi0 + x * sinPhi0)
    ];
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var phi0 = 0,
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(hammerRetroazimuthalRaw),
      p = m(phi0),
      rotate_ = p.rotate,
      stream_ = p.stream,
      circle = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoCircle"])();

  p.parallel = function(_) {
    if (!arguments.length) return phi0 * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"];
    var r = p.rotate();
    return m(phi0 = _ * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]).rotate(r);
  };

  // Temporary hack; see hammerRetroazimuthalRotation.
  p.rotate = function(_) {
    if (!arguments.length) return (_ = rotate_.call(p), _[1] += phi0 * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"], _);
    rotate_.call(p, [_[0], _[1] - phi0 * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"]]);
    circle.center([-_[0], -_[1]]);
    return p;
  };

  p.stream = function(stream) {
    stream = stream_(stream);
    stream.sphere = function() {
      stream.polygonStart();
      var epsilon = 1e-2,
          ring = circle.radius(90 - epsilon)().coordinates[0],
          n = ring.length - 1,
          i = -1,
          p;
      stream.lineStart();
      while (++i < n) stream.point((p = ring[i])[0], p[1]);
      stream.lineEnd();
      ring = circle.radius(90 + epsilon)().coordinates[0];
      n = ring.length - 1;
      stream.lineStart();
      while (--i >= 0) stream.point((p = ring[i])[0], p[1]);
      stream.lineEnd();
      stream.polygonEnd();
    };
    return stream;
  };

  return p
      .scale(79.4187)
      .parallel(45)
      .clipAngle(180 - 1e-3);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/healpix.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/healpix.js ***!
  \*******************************************************/
/*! exports provided: healpixRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "healpixRaw", function() { return healpixRaw; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _collignon_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./collignon.js */ "./node_modules/d3-geo-projection/src/collignon.js");
/* harmony import */ var _cylindricalEqualArea_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./cylindricalEqualArea.js */ "./node_modules/d3-geo-projection/src/cylindricalEqualArea.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");






var K = 3,
    healpixParallel = Object(_math_js__WEBPACK_IMPORTED_MODULE_4__["asin"])(1 - 1 / K) * _math_js__WEBPACK_IMPORTED_MODULE_4__["degrees"],
    healpixLambert = Object(_cylindricalEqualArea_js__WEBPACK_IMPORTED_MODULE_3__["cylindricalEqualAreaRaw"])(0);

function healpixRaw(H) {
  var phi0 = healpixParallel * _math_js__WEBPACK_IMPORTED_MODULE_4__["radians"],
      dx = Object(_collignon_js__WEBPACK_IMPORTED_MODULE_2__["collignonRaw"])(_math_js__WEBPACK_IMPORTED_MODULE_4__["pi"], phi0)[0] - Object(_collignon_js__WEBPACK_IMPORTED_MODULE_2__["collignonRaw"])(-_math_js__WEBPACK_IMPORTED_MODULE_4__["pi"], phi0)[0],
      y0 = healpixLambert(0, phi0)[1],
      y1 = Object(_collignon_js__WEBPACK_IMPORTED_MODULE_2__["collignonRaw"])(0, phi0)[1],
      dy1 = _math_js__WEBPACK_IMPORTED_MODULE_4__["sqrtPi"] - y1,
      k = _math_js__WEBPACK_IMPORTED_MODULE_4__["tau"] / H,
      w = 4 / _math_js__WEBPACK_IMPORTED_MODULE_4__["tau"],
      h = y0 + (dy1 * dy1 * 4) / _math_js__WEBPACK_IMPORTED_MODULE_4__["tau"];

  function forward(lambda, phi) {
    var point,
        phi2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_4__["abs"])(phi);
    if (phi2 > phi0) {
      var i = Object(_math_js__WEBPACK_IMPORTED_MODULE_4__["min"])(H - 1, Object(_math_js__WEBPACK_IMPORTED_MODULE_4__["max"])(0, Object(_math_js__WEBPACK_IMPORTED_MODULE_4__["floor"])((lambda + _math_js__WEBPACK_IMPORTED_MODULE_4__["pi"]) / k)));
      lambda += _math_js__WEBPACK_IMPORTED_MODULE_4__["pi"] * (H - 1) / H - i * k;
      point = Object(_collignon_js__WEBPACK_IMPORTED_MODULE_2__["collignonRaw"])(lambda, phi2);
      point[0] = point[0] * _math_js__WEBPACK_IMPORTED_MODULE_4__["tau"] / dx - _math_js__WEBPACK_IMPORTED_MODULE_4__["tau"] * (H - 1) / (2 * H) + i * _math_js__WEBPACK_IMPORTED_MODULE_4__["tau"] / H;
      point[1] = y0 + (point[1] - y1) * 4 * dy1 / _math_js__WEBPACK_IMPORTED_MODULE_4__["tau"];
      if (phi < 0) point[1] = -point[1];
    } else {
      point = healpixLambert(lambda, phi);
    }
    point[0] *= w, point[1] /= h;
    return point;
  }

  forward.invert = function(x, y) {
    x /= w, y *= h;
    var y2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_4__["abs"])(y);
    if (y2 > y0) {
      var i = Object(_math_js__WEBPACK_IMPORTED_MODULE_4__["min"])(H - 1, Object(_math_js__WEBPACK_IMPORTED_MODULE_4__["max"])(0, Object(_math_js__WEBPACK_IMPORTED_MODULE_4__["floor"])((x + _math_js__WEBPACK_IMPORTED_MODULE_4__["pi"]) / k)));
      x = (x + _math_js__WEBPACK_IMPORTED_MODULE_4__["pi"] * (H - 1) / H - i * k) * dx / _math_js__WEBPACK_IMPORTED_MODULE_4__["tau"];
      var point = _collignon_js__WEBPACK_IMPORTED_MODULE_2__["collignonRaw"].invert(x, 0.25 * (y2 - y0) * _math_js__WEBPACK_IMPORTED_MODULE_4__["tau"] / dy1 + y1);
      point[0] -= _math_js__WEBPACK_IMPORTED_MODULE_4__["pi"] * (H - 1) / H - i * k;
      if (y < 0) point[1] = -point[1];
      return point;
    }
    return healpixLambert.invert(x, y);
  };

  return forward;
}

function sphereTop(x, i) {
  return [x, i & 1 ? 90 - _math_js__WEBPACK_IMPORTED_MODULE_4__["epsilon"] : healpixParallel];
}

function sphereBottom(x, i) {
  return [x, i & 1 ? -90 + _math_js__WEBPACK_IMPORTED_MODULE_4__["epsilon"] : -healpixParallel];
}

function sphereNudge(d) {
  return [d[0] * (1 - _math_js__WEBPACK_IMPORTED_MODULE_4__["epsilon"]), d[1]];
}

function sphere(step) {
  var c = [].concat(
    Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(-180, 180 + step / 2, step).map(sphereTop),
    Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(180, -180 - step / 2, -step).map(sphereBottom)
  );
  return {
    type: "Polygon",
    coordinates: [step === 180 ? c.map(sphereNudge) : c]
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var H = 4,
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_1__["geoProjectionMutator"])(healpixRaw),
      p = m(H),
      stream_ = p.stream;

  p.lobes = function(_) {
    return arguments.length ? m(H = +_) : H;
  };

  p.stream = function(stream) {
    var rotate = p.rotate(),
        rotateStream = stream_(stream),
        sphereStream = (p.rotate([0, 0]), stream_(stream));
    p.rotate(rotate);
    rotateStream.sphere = function() { Object(d3_geo__WEBPACK_IMPORTED_MODULE_1__["geoStream"])(sphere(180 / H), sphereStream); };
    return rotateStream;
  };

  return p
      .scale(239.75);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/hill.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/hill.js ***!
  \****************************************************/
/*! exports provided: hillRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hillRaw", function() { return hillRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function hillRaw(K) {
  var L = 1 + K,
      sinBt = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(1 / L),
      Bt = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(sinBt),
      A = 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / (B = _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] + 4 * Bt * L)),
      B,
      rho0 = 0.5 * A * (L + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(K * (2 + K))),
      K2 = K * K,
      L2 = L * L;

  function forward(lambda, phi) {
    var t = 1 - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        rho,
        omega;
    if (t && t < 2) {
      var theta = _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] - phi, i = 25, delta;
      do {
        var sinTheta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta),
            cosTheta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta),
            Bt_Bt1 = Bt + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(sinTheta, L - cosTheta),
            C = 1 + L2 - 2 * L * cosTheta;
        theta -= delta = (theta - K2 * Bt - L * sinTheta + C * Bt_Bt1 -0.5 * t * B) / (2 * L * sinTheta * Bt_Bt1);
      } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon2"] && --i > 0);
      rho = A * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(C);
      omega = lambda * Bt_Bt1 / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"];
    } else {
      rho = A * (K + t);
      omega = lambda * Bt / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"];
    }
    return [
      rho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(omega),
      rho0 - rho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(omega)
    ];
  }

  forward.invert = function(x, y) {
    var rho2 = x * x + (y -= rho0) * y,
        cosTheta = (1 + L2 - rho2 / (A * A)) / (2 * L),
        theta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(cosTheta),
        sinTheta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta),
        Bt_Bt1 = Bt + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(sinTheta, L - cosTheta);
    return [
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(x / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(rho2)) * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / Bt_Bt1,
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(1 - 2 * (theta - K2 * Bt - L * sinTheta + (1 + L2 - 2 * L * cosTheta) * Bt_Bt1) / B)
    ];
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var K = 1,
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(hillRaw),
      p = m(K);

  p.ratio = function(_) {
    return arguments.length ? m(K = +_) : K;
  };

  return p
      .scale(167.774)
      .center([0, 18.67]);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/homolosine.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/homolosine.js ***!
  \**********************************************************/
/*! exports provided: homolosineRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "homolosineRaw", function() { return homolosineRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _mollweide_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mollweide.js */ "./node_modules/d3-geo-projection/src/mollweide.js");
/* harmony import */ var _sinusoidal_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./sinusoidal.js */ "./node_modules/d3-geo-projection/src/sinusoidal.js");
/* harmony import */ var _sinuMollweide_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./sinuMollweide.js */ "./node_modules/d3-geo-projection/src/sinuMollweide.js");






function homolosineRaw(lambda, phi) {
  return Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) > _sinuMollweide_js__WEBPACK_IMPORTED_MODULE_4__["sinuMollweidePhi"]
      ? (lambda = Object(_mollweide_js__WEBPACK_IMPORTED_MODULE_2__["mollweideRaw"])(lambda, phi), lambda[1] -= phi > 0 ? _sinuMollweide_js__WEBPACK_IMPORTED_MODULE_4__["sinuMollweideY"] : -_sinuMollweide_js__WEBPACK_IMPORTED_MODULE_4__["sinuMollweideY"], lambda)
      : Object(_sinusoidal_js__WEBPACK_IMPORTED_MODULE_3__["sinusoidalRaw"])(lambda, phi);
}

homolosineRaw.invert = function(x, y) {
  return Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y) > _sinuMollweide_js__WEBPACK_IMPORTED_MODULE_4__["sinuMollweidePhi"]
      ? _mollweide_js__WEBPACK_IMPORTED_MODULE_2__["mollweideRaw"].invert(x, y + (y > 0 ? _sinuMollweide_js__WEBPACK_IMPORTED_MODULE_4__["sinuMollweideY"] : -_sinuMollweide_js__WEBPACK_IMPORTED_MODULE_4__["sinuMollweideY"]))
      : _sinusoidal_js__WEBPACK_IMPORTED_MODULE_3__["sinusoidalRaw"].invert(x, y);
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(homolosineRaw)
      .scale(152.63);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/hufnagel.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/hufnagel.js ***!
  \********************************************************/
/*! exports provided: hufnagelRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hufnagelRaw", function() { return hufnagelRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _newton_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./newton.js */ "./node_modules/d3-geo-projection/src/newton.js");




function hufnagelRaw(a, b, psiMax, ratio) {
  var k = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(
      (4 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) /
        (2 * psiMax +
          (1 + a - b / 2) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(2 * psiMax) +
          ((a + b) / 2) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(4 * psiMax) +
          (b / 2) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(6 * psiMax))
    ),
    c = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(
      ratio *
        Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(psiMax) *
        Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])((1 + a * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(2 * psiMax) + b * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(4 * psiMax)) / (1 + a + b))
    ),
    M = psiMax * mapping(1);

  function radius(psi) {
    return Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 + a * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(2 * psi) + b * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(4 * psi));
  }

  function mapping(t) {
    var psi = t * psiMax;
    return (
      (2 * psi +
        (1 + a - b / 2) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(2 * psi) +
        ((a + b) / 2) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(4 * psi) +
        (b / 2) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(6 * psi)) /
      psiMax
    );
  }

  function inversemapping(psi) {
    return radius(psi) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(psi);
  }

  var forward = function(lambda, phi) {
    var psi = psiMax * Object(_newton_js__WEBPACK_IMPORTED_MODULE_2__["solve"])(mapping, (M * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)) / psiMax, phi / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]);
    if (isNaN(psi)) psi = psiMax * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(phi);
    var kr = k * radius(psi);
    return [((kr * c * lambda) / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(psi), (kr / c) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(psi)];
  };

  forward.invert = function(x, y) {
    var psi = Object(_newton_js__WEBPACK_IMPORTED_MODULE_2__["solve"])(inversemapping, (y * c) / k);
    return [
      (x * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) / (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(psi) * k * c * radius(psi)),
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])((psiMax * mapping(psi / psiMax)) / M)
    ];
  };

  if (psiMax === 0) {
    k = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(ratio / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]);
    forward = function(lambda, phi) {
      return [lambda * k, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi) / k];
    };
    forward.invert = function(x, y) {
      return [x / k, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(y * k)];
    };
  }

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var a = 1,
    b = 0,
    psiMax = 45 * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"],
    ratio = 2,
    mutate = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(hufnagelRaw),
    projection = mutate(a, b, psiMax, ratio);

  projection.a = function(_) {
    return arguments.length ? mutate((a = +_), b, psiMax, ratio) : a;
  };
  projection.b = function(_) {
    return arguments.length ? mutate(a, (b = +_), psiMax, ratio) : b;
  };
  projection.psiMax = function(_) {
    return arguments.length
      ? mutate(a, b, (psiMax = +_ * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]), ratio)
      : psiMax * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"];
  };
  projection.ratio = function(_) {
    return arguments.length ? mutate(a, b, psiMax, (ratio = +_)) : ratio;
  };

  return projection.scale(180.739);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/hyperelliptical.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/hyperelliptical.js ***!
  \***************************************************************/
/*! exports provided: hyperellipticalRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hyperellipticalRaw", function() { return hyperellipticalRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _integrate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./integrate.js */ "./node_modules/d3-geo-projection/src/integrate.js");




function hyperellipticalRaw(alpha, k, gamma) {

  function elliptic (f) {
    return alpha + (1 - alpha) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["pow"])(1 - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["pow"])(f, k), 1 / k);
  }

  function z(f) {
    return Object(_integrate_js__WEBPACK_IMPORTED_MODULE_2__["integrate"])(elliptic, 0, f, 1e-4);
  }

  var G = 1 / z(1),
      n = 1000,
      m = (1 + 1e-8) * G,
      approx = [];
  for (var i = 0; i <= n; i++)
      approx.push(z(i / n) * m);

  function Y(sinphi) {
    var rmin = 0, rmax = n, r = n >> 1;
    do {
      if (approx[r] > sinphi) rmax = r; else rmin = r;
      r = (rmin + rmax) >> 1;
    } while (r > rmin);
    var u = approx[r + 1] - approx[r];
    if (u) u = (sinphi - approx[r + 1]) / u;
    return (r + 1 + u) / n;
  }

  var ratio = 2 * Y(1) / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * G / gamma;

  var forward = function(lambda, phi) {
    var y = Y(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi))),
        x = elliptic(y) * lambda;
    y /= ratio;
    return [ x, (phi >= 0) ? y : -y ];
  };

  forward.invert = function(x, y) {
    var phi;
    y *= ratio;
    if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y) < 1) phi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(y) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(z(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y)) * G);
    return [ x / elliptic(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y)), phi ];
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var alpha = 0,
      k = 2.5,
      gamma = 1.183136, // affine = sqrt(2 * gamma / pi) = 0.8679
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(hyperellipticalRaw),
      p = m(alpha, k, gamma);

  p.alpha = function(_) {
    return arguments.length ? m(alpha = +_, k, gamma) : alpha;
  };

  p.k = function(_) {
    return arguments.length ? m(alpha, k = +_, gamma) : k;
  };

  p.gamma = function(_) {
    return arguments.length ? m(alpha, k, gamma = +_) : gamma;
  };

  return p
      .scale(152.63);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/index.js ***!
  \*****************************************************/
/*! exports provided: geoAiry, geoAiryRaw, geoAitoff, geoAitoffRaw, geoArmadillo, geoArmadilloRaw, geoAugust, geoAugustRaw, geoBaker, geoBakerRaw, geoBerghaus, geoBerghausRaw, geoBertin1953, geoBertin1953Raw, geoBoggs, geoBoggsRaw, geoBonne, geoBonneRaw, geoBottomley, geoBottomleyRaw, geoBromley, geoBromleyRaw, geoChamberlin, geoChamberlinRaw, geoChamberlinAfrica, geoCollignon, geoCollignonRaw, geoCraig, geoCraigRaw, geoCraster, geoCrasterRaw, geoCylindricalEqualArea, geoCylindricalEqualAreaRaw, geoCylindricalStereographic, geoCylindricalStereographicRaw, geoEckert1, geoEckert1Raw, geoEckert2, geoEckert2Raw, geoEckert3, geoEckert3Raw, geoEckert4, geoEckert4Raw, geoEckert5, geoEckert5Raw, geoEckert6, geoEckert6Raw, geoEisenlohr, geoEisenlohrRaw, geoFahey, geoFaheyRaw, geoFoucaut, geoFoucautRaw, geoFoucautSinusoidal, geoFoucautSinusoidalRaw, geoGilbert, geoGingery, geoGingeryRaw, geoGinzburg4, geoGinzburg4Raw, geoGinzburg5, geoGinzburg5Raw, geoGinzburg6, geoGinzburg6Raw, geoGinzburg8, geoGinzburg8Raw, geoGinzburg9, geoGinzburg9Raw, geoGringorten, geoGringortenRaw, geoGuyou, geoGuyouRaw, geoHammer, geoHammerRaw, geoHammerRetroazimuthal, geoHammerRetroazimuthalRaw, geoHealpix, geoHealpixRaw, geoHill, geoHillRaw, geoHomolosine, geoHomolosineRaw, geoHufnagel, geoHufnagelRaw, geoHyperelliptical, geoHyperellipticalRaw, geoInterrupt, geoInterruptedBoggs, geoInterruptedHomolosine, geoInterruptedMollweide, geoInterruptedMollweideHemispheres, geoInterruptedSinuMollweide, geoInterruptedSinusoidal, geoKavrayskiy7, geoKavrayskiy7Raw, geoLagrange, geoLagrangeRaw, geoLarrivee, geoLarriveeRaw, geoLaskowski, geoLaskowskiRaw, geoLittrow, geoLittrowRaw, geoLoximuthal, geoLoximuthalRaw, geoMiller, geoMillerRaw, geoModifiedStereographic, geoModifiedStereographicRaw, geoModifiedStereographicAlaska, geoModifiedStereographicGs48, geoModifiedStereographicGs50, geoModifiedStereographicMiller, geoModifiedStereographicLee, geoMollweide, geoMollweideRaw, geoMtFlatPolarParabolic, geoMtFlatPolarParabolicRaw, geoMtFlatPolarQuartic, geoMtFlatPolarQuarticRaw, geoMtFlatPolarSinusoidal, geoMtFlatPolarSinusoidalRaw, geoNaturalEarth2, geoNaturalEarth2Raw, geoNellHammer, geoNellHammerRaw, geoInterruptedQuarticAuthalic, geoNicolosi, geoNicolosiRaw, geoPatterson, geoPattersonRaw, geoPolyconic, geoPolyconicRaw, geoPolyhedral, geoPolyhedralButterfly, geoPolyhedralCollignon, geoPolyhedralWaterman, geoProject, geoGringortenQuincuncial, geoPeirceQuincuncial, geoQuantize, geoQuincuncial, geoRectangularPolyconic, geoRectangularPolyconicRaw, geoRobinson, geoRobinsonRaw, geoSatellite, geoSatelliteRaw, geoSinuMollweide, geoSinuMollweideRaw, geoSinusoidal, geoSinusoidalRaw, geoStitch, geoTimes, geoTimesRaw, geoTwoPointAzimuthal, geoTwoPointAzimuthalRaw, geoTwoPointAzimuthalUsa, geoTwoPointEquidistant, geoTwoPointEquidistantRaw, geoTwoPointEquidistantUsa, geoVanDerGrinten, geoVanDerGrintenRaw, geoVanDerGrinten2, geoVanDerGrinten2Raw, geoVanDerGrinten3, geoVanDerGrinten3Raw, geoVanDerGrinten4, geoVanDerGrinten4Raw, geoWagner, geoWagner7, geoWagnerRaw, geoWagner4, geoWagner4Raw, geoWagner6, geoWagner6Raw, geoWiechel, geoWiechelRaw, geoWinkel3, geoWinkel3Raw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _airy__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./airy */ "./node_modules/d3-geo-projection/src/airy.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAiry", function() { return _airy__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAiryRaw", function() { return _airy__WEBPACK_IMPORTED_MODULE_0__["airyRaw"]; });

/* harmony import */ var _aitoff__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aitoff */ "./node_modules/d3-geo-projection/src/aitoff.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAitoff", function() { return _aitoff__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAitoffRaw", function() { return _aitoff__WEBPACK_IMPORTED_MODULE_1__["aitoffRaw"]; });

/* harmony import */ var _armadillo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./armadillo */ "./node_modules/d3-geo-projection/src/armadillo.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoArmadillo", function() { return _armadillo__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoArmadilloRaw", function() { return _armadillo__WEBPACK_IMPORTED_MODULE_2__["armadilloRaw"]; });

/* harmony import */ var _august__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./august */ "./node_modules/d3-geo-projection/src/august.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAugust", function() { return _august__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAugustRaw", function() { return _august__WEBPACK_IMPORTED_MODULE_3__["augustRaw"]; });

/* harmony import */ var _baker__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./baker */ "./node_modules/d3-geo-projection/src/baker.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBaker", function() { return _baker__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBakerRaw", function() { return _baker__WEBPACK_IMPORTED_MODULE_4__["bakerRaw"]; });

/* harmony import */ var _berghaus__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./berghaus */ "./node_modules/d3-geo-projection/src/berghaus.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBerghaus", function() { return _berghaus__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBerghausRaw", function() { return _berghaus__WEBPACK_IMPORTED_MODULE_5__["berghausRaw"]; });

/* harmony import */ var _bertin__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./bertin */ "./node_modules/d3-geo-projection/src/bertin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBertin1953", function() { return _bertin__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBertin1953Raw", function() { return _bertin__WEBPACK_IMPORTED_MODULE_6__["bertin1953Raw"]; });

/* harmony import */ var _boggs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./boggs */ "./node_modules/d3-geo-projection/src/boggs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBoggs", function() { return _boggs__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBoggsRaw", function() { return _boggs__WEBPACK_IMPORTED_MODULE_7__["boggsRaw"]; });

/* harmony import */ var _bonne__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./bonne */ "./node_modules/d3-geo-projection/src/bonne.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBonne", function() { return _bonne__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBonneRaw", function() { return _bonne__WEBPACK_IMPORTED_MODULE_8__["bonneRaw"]; });

/* harmony import */ var _bottomley__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./bottomley */ "./node_modules/d3-geo-projection/src/bottomley.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBottomley", function() { return _bottomley__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBottomleyRaw", function() { return _bottomley__WEBPACK_IMPORTED_MODULE_9__["bottomleyRaw"]; });

/* harmony import */ var _bromley__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./bromley */ "./node_modules/d3-geo-projection/src/bromley.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBromley", function() { return _bromley__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBromleyRaw", function() { return _bromley__WEBPACK_IMPORTED_MODULE_10__["bromleyRaw"]; });

/* harmony import */ var _chamberlin__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./chamberlin */ "./node_modules/d3-geo-projection/src/chamberlin.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoChamberlin", function() { return _chamberlin__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoChamberlinRaw", function() { return _chamberlin__WEBPACK_IMPORTED_MODULE_11__["chamberlinRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoChamberlinAfrica", function() { return _chamberlin__WEBPACK_IMPORTED_MODULE_11__["chamberlinAfrica"]; });

/* harmony import */ var _collignon__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./collignon */ "./node_modules/d3-geo-projection/src/collignon.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCollignon", function() { return _collignon__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCollignonRaw", function() { return _collignon__WEBPACK_IMPORTED_MODULE_12__["collignonRaw"]; });

/* harmony import */ var _craig__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./craig */ "./node_modules/d3-geo-projection/src/craig.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCraig", function() { return _craig__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCraigRaw", function() { return _craig__WEBPACK_IMPORTED_MODULE_13__["craigRaw"]; });

/* harmony import */ var _craster__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./craster */ "./node_modules/d3-geo-projection/src/craster.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCraster", function() { return _craster__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCrasterRaw", function() { return _craster__WEBPACK_IMPORTED_MODULE_14__["crasterRaw"]; });

/* harmony import */ var _cylindricalEqualArea__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./cylindricalEqualArea */ "./node_modules/d3-geo-projection/src/cylindricalEqualArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCylindricalEqualArea", function() { return _cylindricalEqualArea__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCylindricalEqualAreaRaw", function() { return _cylindricalEqualArea__WEBPACK_IMPORTED_MODULE_15__["cylindricalEqualAreaRaw"]; });

/* harmony import */ var _cylindricalStereographic__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./cylindricalStereographic */ "./node_modules/d3-geo-projection/src/cylindricalStereographic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCylindricalStereographic", function() { return _cylindricalStereographic__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCylindricalStereographicRaw", function() { return _cylindricalStereographic__WEBPACK_IMPORTED_MODULE_16__["cylindricalStereographicRaw"]; });

/* harmony import */ var _eckert1_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./eckert1.js */ "./node_modules/d3-geo-projection/src/eckert1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEckert1", function() { return _eckert1_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEckert1Raw", function() { return _eckert1_js__WEBPACK_IMPORTED_MODULE_17__["eckert1Raw"]; });

/* harmony import */ var _eckert2_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./eckert2.js */ "./node_modules/d3-geo-projection/src/eckert2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEckert2", function() { return _eckert2_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEckert2Raw", function() { return _eckert2_js__WEBPACK_IMPORTED_MODULE_18__["eckert2Raw"]; });

/* harmony import */ var _eckert3_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./eckert3.js */ "./node_modules/d3-geo-projection/src/eckert3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEckert3", function() { return _eckert3_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEckert3Raw", function() { return _eckert3_js__WEBPACK_IMPORTED_MODULE_19__["eckert3Raw"]; });

/* harmony import */ var _eckert4_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./eckert4.js */ "./node_modules/d3-geo-projection/src/eckert4.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEckert4", function() { return _eckert4_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEckert4Raw", function() { return _eckert4_js__WEBPACK_IMPORTED_MODULE_20__["eckert4Raw"]; });

/* harmony import */ var _eckert5_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./eckert5.js */ "./node_modules/d3-geo-projection/src/eckert5.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEckert5", function() { return _eckert5_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEckert5Raw", function() { return _eckert5_js__WEBPACK_IMPORTED_MODULE_21__["eckert5Raw"]; });

/* harmony import */ var _eckert6_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./eckert6.js */ "./node_modules/d3-geo-projection/src/eckert6.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEckert6", function() { return _eckert6_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEckert6Raw", function() { return _eckert6_js__WEBPACK_IMPORTED_MODULE_22__["eckert6Raw"]; });

/* harmony import */ var _eisenlohr_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./eisenlohr.js */ "./node_modules/d3-geo-projection/src/eisenlohr.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEisenlohr", function() { return _eisenlohr_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEisenlohrRaw", function() { return _eisenlohr_js__WEBPACK_IMPORTED_MODULE_23__["eisenlohrRaw"]; });

/* harmony import */ var _fahey_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./fahey.js */ "./node_modules/d3-geo-projection/src/fahey.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoFahey", function() { return _fahey_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoFaheyRaw", function() { return _fahey_js__WEBPACK_IMPORTED_MODULE_24__["faheyRaw"]; });

/* harmony import */ var _foucaut_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./foucaut.js */ "./node_modules/d3-geo-projection/src/foucaut.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoFoucaut", function() { return _foucaut_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoFoucautRaw", function() { return _foucaut_js__WEBPACK_IMPORTED_MODULE_25__["foucautRaw"]; });

/* harmony import */ var _foucautSinusoidal_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./foucautSinusoidal.js */ "./node_modules/d3-geo-projection/src/foucautSinusoidal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoFoucautSinusoidal", function() { return _foucautSinusoidal_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoFoucautSinusoidalRaw", function() { return _foucautSinusoidal_js__WEBPACK_IMPORTED_MODULE_26__["foucautSinusoidalRaw"]; });

/* harmony import */ var _gilbert_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./gilbert.js */ "./node_modules/d3-geo-projection/src/gilbert.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGilbert", function() { return _gilbert_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony import */ var _gingery_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./gingery.js */ "./node_modules/d3-geo-projection/src/gingery.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGingery", function() { return _gingery_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGingeryRaw", function() { return _gingery_js__WEBPACK_IMPORTED_MODULE_28__["gingeryRaw"]; });

/* harmony import */ var _ginzburg4_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./ginzburg4.js */ "./node_modules/d3-geo-projection/src/ginzburg4.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGinzburg4", function() { return _ginzburg4_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGinzburg4Raw", function() { return _ginzburg4_js__WEBPACK_IMPORTED_MODULE_29__["ginzburg4Raw"]; });

/* harmony import */ var _ginzburg5_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./ginzburg5.js */ "./node_modules/d3-geo-projection/src/ginzburg5.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGinzburg5", function() { return _ginzburg5_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGinzburg5Raw", function() { return _ginzburg5_js__WEBPACK_IMPORTED_MODULE_30__["ginzburg5Raw"]; });

/* harmony import */ var _ginzburg6_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./ginzburg6.js */ "./node_modules/d3-geo-projection/src/ginzburg6.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGinzburg6", function() { return _ginzburg6_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGinzburg6Raw", function() { return _ginzburg6_js__WEBPACK_IMPORTED_MODULE_31__["ginzburg6Raw"]; });

/* harmony import */ var _ginzburg8_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./ginzburg8.js */ "./node_modules/d3-geo-projection/src/ginzburg8.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGinzburg8", function() { return _ginzburg8_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGinzburg8Raw", function() { return _ginzburg8_js__WEBPACK_IMPORTED_MODULE_32__["ginzburg8Raw"]; });

/* harmony import */ var _ginzburg9_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./ginzburg9.js */ "./node_modules/d3-geo-projection/src/ginzburg9.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGinzburg9", function() { return _ginzburg9_js__WEBPACK_IMPORTED_MODULE_33__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGinzburg9Raw", function() { return _ginzburg9_js__WEBPACK_IMPORTED_MODULE_33__["ginzburg9Raw"]; });

/* harmony import */ var _gringorten_js__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(/*! ./gringorten.js */ "./node_modules/d3-geo-projection/src/gringorten.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGringorten", function() { return _gringorten_js__WEBPACK_IMPORTED_MODULE_34__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGringortenRaw", function() { return _gringorten_js__WEBPACK_IMPORTED_MODULE_34__["gringortenRaw"]; });

/* harmony import */ var _guyou_js__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(/*! ./guyou.js */ "./node_modules/d3-geo-projection/src/guyou.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGuyou", function() { return _guyou_js__WEBPACK_IMPORTED_MODULE_35__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGuyouRaw", function() { return _guyou_js__WEBPACK_IMPORTED_MODULE_35__["guyouRaw"]; });

/* harmony import */ var _hammer_js__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(/*! ./hammer.js */ "./node_modules/d3-geo-projection/src/hammer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHammer", function() { return _hammer_js__WEBPACK_IMPORTED_MODULE_36__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHammerRaw", function() { return _hammer_js__WEBPACK_IMPORTED_MODULE_36__["hammerRaw"]; });

/* harmony import */ var _hammerRetroazimuthal_js__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(/*! ./hammerRetroazimuthal.js */ "./node_modules/d3-geo-projection/src/hammerRetroazimuthal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHammerRetroazimuthal", function() { return _hammerRetroazimuthal_js__WEBPACK_IMPORTED_MODULE_37__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHammerRetroazimuthalRaw", function() { return _hammerRetroazimuthal_js__WEBPACK_IMPORTED_MODULE_37__["hammerRetroazimuthalRaw"]; });

/* harmony import */ var _healpix_js__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(/*! ./healpix.js */ "./node_modules/d3-geo-projection/src/healpix.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHealpix", function() { return _healpix_js__WEBPACK_IMPORTED_MODULE_38__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHealpixRaw", function() { return _healpix_js__WEBPACK_IMPORTED_MODULE_38__["healpixRaw"]; });

/* harmony import */ var _hill_js__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(/*! ./hill.js */ "./node_modules/d3-geo-projection/src/hill.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHill", function() { return _hill_js__WEBPACK_IMPORTED_MODULE_39__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHillRaw", function() { return _hill_js__WEBPACK_IMPORTED_MODULE_39__["hillRaw"]; });

/* harmony import */ var _homolosine_js__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(/*! ./homolosine.js */ "./node_modules/d3-geo-projection/src/homolosine.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHomolosine", function() { return _homolosine_js__WEBPACK_IMPORTED_MODULE_40__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHomolosineRaw", function() { return _homolosine_js__WEBPACK_IMPORTED_MODULE_40__["homolosineRaw"]; });

/* harmony import */ var _hufnagel_js__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(/*! ./hufnagel.js */ "./node_modules/d3-geo-projection/src/hufnagel.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHufnagel", function() { return _hufnagel_js__WEBPACK_IMPORTED_MODULE_41__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHufnagelRaw", function() { return _hufnagel_js__WEBPACK_IMPORTED_MODULE_41__["hufnagelRaw"]; });

/* harmony import */ var _hyperelliptical__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(/*! ./hyperelliptical */ "./node_modules/d3-geo-projection/src/hyperelliptical.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHyperelliptical", function() { return _hyperelliptical__WEBPACK_IMPORTED_MODULE_42__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoHyperellipticalRaw", function() { return _hyperelliptical__WEBPACK_IMPORTED_MODULE_42__["hyperellipticalRaw"]; });

/* harmony import */ var _interrupted_index__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(/*! ./interrupted/index */ "./node_modules/d3-geo-projection/src/interrupted/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterrupt", function() { return _interrupted_index__WEBPACK_IMPORTED_MODULE_43__["default"]; });

/* harmony import */ var _interrupted_boggs__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(/*! ./interrupted/boggs */ "./node_modules/d3-geo-projection/src/interrupted/boggs.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterruptedBoggs", function() { return _interrupted_boggs__WEBPACK_IMPORTED_MODULE_44__["default"]; });

/* harmony import */ var _interrupted_homolosine__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(/*! ./interrupted/homolosine */ "./node_modules/d3-geo-projection/src/interrupted/homolosine.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterruptedHomolosine", function() { return _interrupted_homolosine__WEBPACK_IMPORTED_MODULE_45__["default"]; });

/* harmony import */ var _interrupted_mollweide__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(/*! ./interrupted/mollweide */ "./node_modules/d3-geo-projection/src/interrupted/mollweide.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterruptedMollweide", function() { return _interrupted_mollweide__WEBPACK_IMPORTED_MODULE_46__["default"]; });

/* harmony import */ var _interrupted_mollweideHemispheres__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(/*! ./interrupted/mollweideHemispheres */ "./node_modules/d3-geo-projection/src/interrupted/mollweideHemispheres.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterruptedMollweideHemispheres", function() { return _interrupted_mollweideHemispheres__WEBPACK_IMPORTED_MODULE_47__["default"]; });

/* harmony import */ var _interrupted_sinuMollweide__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(/*! ./interrupted/sinuMollweide */ "./node_modules/d3-geo-projection/src/interrupted/sinuMollweide.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterruptedSinuMollweide", function() { return _interrupted_sinuMollweide__WEBPACK_IMPORTED_MODULE_48__["default"]; });

/* harmony import */ var _interrupted_sinusoidal__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(/*! ./interrupted/sinusoidal */ "./node_modules/d3-geo-projection/src/interrupted/sinusoidal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterruptedSinusoidal", function() { return _interrupted_sinusoidal__WEBPACK_IMPORTED_MODULE_49__["default"]; });

/* harmony import */ var _kavrayskiy7_js__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(/*! ./kavrayskiy7.js */ "./node_modules/d3-geo-projection/src/kavrayskiy7.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoKavrayskiy7", function() { return _kavrayskiy7_js__WEBPACK_IMPORTED_MODULE_50__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoKavrayskiy7Raw", function() { return _kavrayskiy7_js__WEBPACK_IMPORTED_MODULE_50__["kavrayskiy7Raw"]; });

/* harmony import */ var _lagrange_js__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(/*! ./lagrange.js */ "./node_modules/d3-geo-projection/src/lagrange.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLagrange", function() { return _lagrange_js__WEBPACK_IMPORTED_MODULE_51__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLagrangeRaw", function() { return _lagrange_js__WEBPACK_IMPORTED_MODULE_51__["lagrangeRaw"]; });

/* harmony import */ var _larrivee__WEBPACK_IMPORTED_MODULE_52__ = __webpack_require__(/*! ./larrivee */ "./node_modules/d3-geo-projection/src/larrivee.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLarrivee", function() { return _larrivee__WEBPACK_IMPORTED_MODULE_52__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLarriveeRaw", function() { return _larrivee__WEBPACK_IMPORTED_MODULE_52__["larriveeRaw"]; });

/* harmony import */ var _laskowski__WEBPACK_IMPORTED_MODULE_53__ = __webpack_require__(/*! ./laskowski */ "./node_modules/d3-geo-projection/src/laskowski.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLaskowski", function() { return _laskowski__WEBPACK_IMPORTED_MODULE_53__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLaskowskiRaw", function() { return _laskowski__WEBPACK_IMPORTED_MODULE_53__["laskowskiRaw"]; });

/* harmony import */ var _littrow_js__WEBPACK_IMPORTED_MODULE_54__ = __webpack_require__(/*! ./littrow.js */ "./node_modules/d3-geo-projection/src/littrow.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLittrow", function() { return _littrow_js__WEBPACK_IMPORTED_MODULE_54__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLittrowRaw", function() { return _littrow_js__WEBPACK_IMPORTED_MODULE_54__["littrowRaw"]; });

/* harmony import */ var _loximuthal_js__WEBPACK_IMPORTED_MODULE_55__ = __webpack_require__(/*! ./loximuthal.js */ "./node_modules/d3-geo-projection/src/loximuthal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLoximuthal", function() { return _loximuthal_js__WEBPACK_IMPORTED_MODULE_55__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLoximuthalRaw", function() { return _loximuthal_js__WEBPACK_IMPORTED_MODULE_55__["loximuthalRaw"]; });

/* harmony import */ var _miller__WEBPACK_IMPORTED_MODULE_56__ = __webpack_require__(/*! ./miller */ "./node_modules/d3-geo-projection/src/miller.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMiller", function() { return _miller__WEBPACK_IMPORTED_MODULE_56__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMillerRaw", function() { return _miller__WEBPACK_IMPORTED_MODULE_56__["millerRaw"]; });

/* harmony import */ var _modifiedStereographic__WEBPACK_IMPORTED_MODULE_57__ = __webpack_require__(/*! ./modifiedStereographic */ "./node_modules/d3-geo-projection/src/modifiedStereographic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoModifiedStereographic", function() { return _modifiedStereographic__WEBPACK_IMPORTED_MODULE_57__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoModifiedStereographicRaw", function() { return _modifiedStereographic__WEBPACK_IMPORTED_MODULE_57__["modifiedStereographicRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoModifiedStereographicAlaska", function() { return _modifiedStereographic__WEBPACK_IMPORTED_MODULE_57__["modifiedStereographicAlaska"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoModifiedStereographicGs48", function() { return _modifiedStereographic__WEBPACK_IMPORTED_MODULE_57__["modifiedStereographicGs48"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoModifiedStereographicGs50", function() { return _modifiedStereographic__WEBPACK_IMPORTED_MODULE_57__["modifiedStereographicGs50"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoModifiedStereographicMiller", function() { return _modifiedStereographic__WEBPACK_IMPORTED_MODULE_57__["modifiedStereographicMiller"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoModifiedStereographicLee", function() { return _modifiedStereographic__WEBPACK_IMPORTED_MODULE_57__["modifiedStereographicLee"]; });

/* harmony import */ var _mollweide__WEBPACK_IMPORTED_MODULE_58__ = __webpack_require__(/*! ./mollweide */ "./node_modules/d3-geo-projection/src/mollweide.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMollweide", function() { return _mollweide__WEBPACK_IMPORTED_MODULE_58__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMollweideRaw", function() { return _mollweide__WEBPACK_IMPORTED_MODULE_58__["mollweideRaw"]; });

/* harmony import */ var _mtFlatPolarParabolic__WEBPACK_IMPORTED_MODULE_59__ = __webpack_require__(/*! ./mtFlatPolarParabolic */ "./node_modules/d3-geo-projection/src/mtFlatPolarParabolic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMtFlatPolarParabolic", function() { return _mtFlatPolarParabolic__WEBPACK_IMPORTED_MODULE_59__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMtFlatPolarParabolicRaw", function() { return _mtFlatPolarParabolic__WEBPACK_IMPORTED_MODULE_59__["mtFlatPolarParabolicRaw"]; });

/* harmony import */ var _mtFlatPolarQuartic__WEBPACK_IMPORTED_MODULE_60__ = __webpack_require__(/*! ./mtFlatPolarQuartic */ "./node_modules/d3-geo-projection/src/mtFlatPolarQuartic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMtFlatPolarQuartic", function() { return _mtFlatPolarQuartic__WEBPACK_IMPORTED_MODULE_60__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMtFlatPolarQuarticRaw", function() { return _mtFlatPolarQuartic__WEBPACK_IMPORTED_MODULE_60__["mtFlatPolarQuarticRaw"]; });

/* harmony import */ var _mtFlatPolarSinusoidal__WEBPACK_IMPORTED_MODULE_61__ = __webpack_require__(/*! ./mtFlatPolarSinusoidal */ "./node_modules/d3-geo-projection/src/mtFlatPolarSinusoidal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMtFlatPolarSinusoidal", function() { return _mtFlatPolarSinusoidal__WEBPACK_IMPORTED_MODULE_61__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMtFlatPolarSinusoidalRaw", function() { return _mtFlatPolarSinusoidal__WEBPACK_IMPORTED_MODULE_61__["mtFlatPolarSinusoidalRaw"]; });

/* harmony import */ var _naturalEarth2__WEBPACK_IMPORTED_MODULE_62__ = __webpack_require__(/*! ./naturalEarth2 */ "./node_modules/d3-geo-projection/src/naturalEarth2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth2", function() { return _naturalEarth2__WEBPACK_IMPORTED_MODULE_62__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth2Raw", function() { return _naturalEarth2__WEBPACK_IMPORTED_MODULE_62__["naturalEarth2Raw"]; });

/* harmony import */ var _nellHammer__WEBPACK_IMPORTED_MODULE_63__ = __webpack_require__(/*! ./nellHammer */ "./node_modules/d3-geo-projection/src/nellHammer.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNellHammer", function() { return _nellHammer__WEBPACK_IMPORTED_MODULE_63__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNellHammerRaw", function() { return _nellHammer__WEBPACK_IMPORTED_MODULE_63__["nellHammerRaw"]; });

/* harmony import */ var _interrupted_quarticAuthalic__WEBPACK_IMPORTED_MODULE_64__ = __webpack_require__(/*! ./interrupted/quarticAuthalic */ "./node_modules/d3-geo-projection/src/interrupted/quarticAuthalic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterruptedQuarticAuthalic", function() { return _interrupted_quarticAuthalic__WEBPACK_IMPORTED_MODULE_64__["default"]; });

/* harmony import */ var _nicolosi__WEBPACK_IMPORTED_MODULE_65__ = __webpack_require__(/*! ./nicolosi */ "./node_modules/d3-geo-projection/src/nicolosi.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNicolosi", function() { return _nicolosi__WEBPACK_IMPORTED_MODULE_65__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNicolosiRaw", function() { return _nicolosi__WEBPACK_IMPORTED_MODULE_65__["nicolosiRaw"]; });

/* harmony import */ var _patterson__WEBPACK_IMPORTED_MODULE_66__ = __webpack_require__(/*! ./patterson */ "./node_modules/d3-geo-projection/src/patterson.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPatterson", function() { return _patterson__WEBPACK_IMPORTED_MODULE_66__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPattersonRaw", function() { return _patterson__WEBPACK_IMPORTED_MODULE_66__["pattersonRaw"]; });

/* harmony import */ var _polyconic__WEBPACK_IMPORTED_MODULE_67__ = __webpack_require__(/*! ./polyconic */ "./node_modules/d3-geo-projection/src/polyconic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPolyconic", function() { return _polyconic__WEBPACK_IMPORTED_MODULE_67__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPolyconicRaw", function() { return _polyconic__WEBPACK_IMPORTED_MODULE_67__["polyconicRaw"]; });

/* harmony import */ var _polyhedral_index_js__WEBPACK_IMPORTED_MODULE_68__ = __webpack_require__(/*! ./polyhedral/index.js */ "./node_modules/d3-geo-projection/src/polyhedral/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPolyhedral", function() { return _polyhedral_index_js__WEBPACK_IMPORTED_MODULE_68__["default"]; });

/* harmony import */ var _polyhedral_butterfly_js__WEBPACK_IMPORTED_MODULE_69__ = __webpack_require__(/*! ./polyhedral/butterfly.js */ "./node_modules/d3-geo-projection/src/polyhedral/butterfly.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPolyhedralButterfly", function() { return _polyhedral_butterfly_js__WEBPACK_IMPORTED_MODULE_69__["default"]; });

/* harmony import */ var _polyhedral_collignon_js__WEBPACK_IMPORTED_MODULE_70__ = __webpack_require__(/*! ./polyhedral/collignon.js */ "./node_modules/d3-geo-projection/src/polyhedral/collignon.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPolyhedralCollignon", function() { return _polyhedral_collignon_js__WEBPACK_IMPORTED_MODULE_70__["default"]; });

/* harmony import */ var _polyhedral_waterman_js__WEBPACK_IMPORTED_MODULE_71__ = __webpack_require__(/*! ./polyhedral/waterman.js */ "./node_modules/d3-geo-projection/src/polyhedral/waterman.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPolyhedralWaterman", function() { return _polyhedral_waterman_js__WEBPACK_IMPORTED_MODULE_71__["default"]; });

/* harmony import */ var _project_index__WEBPACK_IMPORTED_MODULE_72__ = __webpack_require__(/*! ./project/index */ "./node_modules/d3-geo-projection/src/project/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoProject", function() { return _project_index__WEBPACK_IMPORTED_MODULE_72__["default"]; });

/* harmony import */ var _quincuncial_gringorten_js__WEBPACK_IMPORTED_MODULE_73__ = __webpack_require__(/*! ./quincuncial/gringorten.js */ "./node_modules/d3-geo-projection/src/quincuncial/gringorten.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGringortenQuincuncial", function() { return _quincuncial_gringorten_js__WEBPACK_IMPORTED_MODULE_73__["default"]; });

/* harmony import */ var _quincuncial_peirce_js__WEBPACK_IMPORTED_MODULE_74__ = __webpack_require__(/*! ./quincuncial/peirce.js */ "./node_modules/d3-geo-projection/src/quincuncial/peirce.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPeirceQuincuncial", function() { return _quincuncial_peirce_js__WEBPACK_IMPORTED_MODULE_74__["default"]; });

/* harmony import */ var _quantize__WEBPACK_IMPORTED_MODULE_75__ = __webpack_require__(/*! ./quantize */ "./node_modules/d3-geo-projection/src/quantize.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoQuantize", function() { return _quantize__WEBPACK_IMPORTED_MODULE_75__["default"]; });

/* harmony import */ var _quincuncial_index_js__WEBPACK_IMPORTED_MODULE_76__ = __webpack_require__(/*! ./quincuncial/index.js */ "./node_modules/d3-geo-projection/src/quincuncial/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoQuincuncial", function() { return _quincuncial_index_js__WEBPACK_IMPORTED_MODULE_76__["default"]; });

/* harmony import */ var _rectangularPolyconic__WEBPACK_IMPORTED_MODULE_77__ = __webpack_require__(/*! ./rectangularPolyconic */ "./node_modules/d3-geo-projection/src/rectangularPolyconic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoRectangularPolyconic", function() { return _rectangularPolyconic__WEBPACK_IMPORTED_MODULE_77__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoRectangularPolyconicRaw", function() { return _rectangularPolyconic__WEBPACK_IMPORTED_MODULE_77__["rectangularPolyconicRaw"]; });

/* harmony import */ var _robinson__WEBPACK_IMPORTED_MODULE_78__ = __webpack_require__(/*! ./robinson */ "./node_modules/d3-geo-projection/src/robinson.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoRobinson", function() { return _robinson__WEBPACK_IMPORTED_MODULE_78__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoRobinsonRaw", function() { return _robinson__WEBPACK_IMPORTED_MODULE_78__["robinsonRaw"]; });

/* harmony import */ var _satellite__WEBPACK_IMPORTED_MODULE_79__ = __webpack_require__(/*! ./satellite */ "./node_modules/d3-geo-projection/src/satellite.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoSatellite", function() { return _satellite__WEBPACK_IMPORTED_MODULE_79__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoSatelliteRaw", function() { return _satellite__WEBPACK_IMPORTED_MODULE_79__["satelliteRaw"]; });

/* harmony import */ var _sinuMollweide__WEBPACK_IMPORTED_MODULE_80__ = __webpack_require__(/*! ./sinuMollweide */ "./node_modules/d3-geo-projection/src/sinuMollweide.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoSinuMollweide", function() { return _sinuMollweide__WEBPACK_IMPORTED_MODULE_80__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoSinuMollweideRaw", function() { return _sinuMollweide__WEBPACK_IMPORTED_MODULE_80__["sinuMollweideRaw"]; });

/* harmony import */ var _sinusoidal__WEBPACK_IMPORTED_MODULE_81__ = __webpack_require__(/*! ./sinusoidal */ "./node_modules/d3-geo-projection/src/sinusoidal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoSinusoidal", function() { return _sinusoidal__WEBPACK_IMPORTED_MODULE_81__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoSinusoidalRaw", function() { return _sinusoidal__WEBPACK_IMPORTED_MODULE_81__["sinusoidalRaw"]; });

/* harmony import */ var _stitch__WEBPACK_IMPORTED_MODULE_82__ = __webpack_require__(/*! ./stitch */ "./node_modules/d3-geo-projection/src/stitch.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStitch", function() { return _stitch__WEBPACK_IMPORTED_MODULE_82__["default"]; });

/* harmony import */ var _times__WEBPACK_IMPORTED_MODULE_83__ = __webpack_require__(/*! ./times */ "./node_modules/d3-geo-projection/src/times.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTimes", function() { return _times__WEBPACK_IMPORTED_MODULE_83__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTimesRaw", function() { return _times__WEBPACK_IMPORTED_MODULE_83__["timesRaw"]; });

/* harmony import */ var _twoPointAzimuthal__WEBPACK_IMPORTED_MODULE_84__ = __webpack_require__(/*! ./twoPointAzimuthal */ "./node_modules/d3-geo-projection/src/twoPointAzimuthal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTwoPointAzimuthal", function() { return _twoPointAzimuthal__WEBPACK_IMPORTED_MODULE_84__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTwoPointAzimuthalRaw", function() { return _twoPointAzimuthal__WEBPACK_IMPORTED_MODULE_84__["twoPointAzimuthalRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTwoPointAzimuthalUsa", function() { return _twoPointAzimuthal__WEBPACK_IMPORTED_MODULE_84__["twoPointAzimuthalUsa"]; });

/* harmony import */ var _twoPointEquidistant__WEBPACK_IMPORTED_MODULE_85__ = __webpack_require__(/*! ./twoPointEquidistant */ "./node_modules/d3-geo-projection/src/twoPointEquidistant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTwoPointEquidistant", function() { return _twoPointEquidistant__WEBPACK_IMPORTED_MODULE_85__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTwoPointEquidistantRaw", function() { return _twoPointEquidistant__WEBPACK_IMPORTED_MODULE_85__["twoPointEquidistantRaw"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTwoPointEquidistantUsa", function() { return _twoPointEquidistant__WEBPACK_IMPORTED_MODULE_85__["twoPointEquidistantUsa"]; });

/* harmony import */ var _vanDerGrinten__WEBPACK_IMPORTED_MODULE_86__ = __webpack_require__(/*! ./vanDerGrinten */ "./node_modules/d3-geo-projection/src/vanDerGrinten.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoVanDerGrinten", function() { return _vanDerGrinten__WEBPACK_IMPORTED_MODULE_86__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoVanDerGrintenRaw", function() { return _vanDerGrinten__WEBPACK_IMPORTED_MODULE_86__["vanDerGrintenRaw"]; });

/* harmony import */ var _vanDerGrinten2__WEBPACK_IMPORTED_MODULE_87__ = __webpack_require__(/*! ./vanDerGrinten2 */ "./node_modules/d3-geo-projection/src/vanDerGrinten2.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoVanDerGrinten2", function() { return _vanDerGrinten2__WEBPACK_IMPORTED_MODULE_87__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoVanDerGrinten2Raw", function() { return _vanDerGrinten2__WEBPACK_IMPORTED_MODULE_87__["vanDerGrinten2Raw"]; });

/* harmony import */ var _vanDerGrinten3__WEBPACK_IMPORTED_MODULE_88__ = __webpack_require__(/*! ./vanDerGrinten3 */ "./node_modules/d3-geo-projection/src/vanDerGrinten3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoVanDerGrinten3", function() { return _vanDerGrinten3__WEBPACK_IMPORTED_MODULE_88__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoVanDerGrinten3Raw", function() { return _vanDerGrinten3__WEBPACK_IMPORTED_MODULE_88__["vanDerGrinten3Raw"]; });

/* harmony import */ var _vanDerGrinten4__WEBPACK_IMPORTED_MODULE_89__ = __webpack_require__(/*! ./vanDerGrinten4 */ "./node_modules/d3-geo-projection/src/vanDerGrinten4.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoVanDerGrinten4", function() { return _vanDerGrinten4__WEBPACK_IMPORTED_MODULE_89__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoVanDerGrinten4Raw", function() { return _vanDerGrinten4__WEBPACK_IMPORTED_MODULE_89__["vanDerGrinten4Raw"]; });

/* harmony import */ var _wagner_js__WEBPACK_IMPORTED_MODULE_90__ = __webpack_require__(/*! ./wagner.js */ "./node_modules/d3-geo-projection/src/wagner.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoWagner", function() { return _wagner_js__WEBPACK_IMPORTED_MODULE_90__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoWagner7", function() { return _wagner_js__WEBPACK_IMPORTED_MODULE_90__["wagner7"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoWagnerRaw", function() { return _wagner_js__WEBPACK_IMPORTED_MODULE_90__["wagnerRaw"]; });

/* harmony import */ var _wagner4_js__WEBPACK_IMPORTED_MODULE_91__ = __webpack_require__(/*! ./wagner4.js */ "./node_modules/d3-geo-projection/src/wagner4.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoWagner4", function() { return _wagner4_js__WEBPACK_IMPORTED_MODULE_91__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoWagner4Raw", function() { return _wagner4_js__WEBPACK_IMPORTED_MODULE_91__["wagner4Raw"]; });

/* harmony import */ var _wagner6_js__WEBPACK_IMPORTED_MODULE_92__ = __webpack_require__(/*! ./wagner6.js */ "./node_modules/d3-geo-projection/src/wagner6.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoWagner6", function() { return _wagner6_js__WEBPACK_IMPORTED_MODULE_92__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoWagner6Raw", function() { return _wagner6_js__WEBPACK_IMPORTED_MODULE_92__["wagner6Raw"]; });

/* harmony import */ var _wiechel_js__WEBPACK_IMPORTED_MODULE_93__ = __webpack_require__(/*! ./wiechel.js */ "./node_modules/d3-geo-projection/src/wiechel.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoWiechel", function() { return _wiechel_js__WEBPACK_IMPORTED_MODULE_93__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoWiechelRaw", function() { return _wiechel_js__WEBPACK_IMPORTED_MODULE_93__["wiechelRaw"]; });

/* harmony import */ var _winkel3__WEBPACK_IMPORTED_MODULE_94__ = __webpack_require__(/*! ./winkel3 */ "./node_modules/d3-geo-projection/src/winkel3.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoWinkel3", function() { return _winkel3__WEBPACK_IMPORTED_MODULE_94__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoWinkel3Raw", function() { return _winkel3__WEBPACK_IMPORTED_MODULE_94__["winkel3Raw"]; });


































































































/***/ }),

/***/ "./node_modules/d3-geo-projection/src/integrate.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/integrate.js ***!
  \*********************************************************/
/*! exports provided: integrate */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "integrate", function() { return integrate; });
// https://github.com/scijs/integrate-adaptive-simpson

// This algorithm adapted from pseudocode in:
// http://www.math.utk.edu/~ccollins/refs/Handouts/rich.pdf
function adsimp (f, a, b, fa, fm, fb, V0, tol, maxdepth, depth, state) {
  if (state.nanEncountered) {
    return NaN;
  }

  var h, f1, f2, sl, sr, s2, m, V1, V2, err;

  h = b - a;
  f1 = f(a + h * 0.25);
  f2 = f(b - h * 0.25);

  // Simple check for NaN:
  if (isNaN(f1)) {
    state.nanEncountered = true;
    return;
  }

  // Simple check for NaN:
  if (isNaN(f2)) {
    state.nanEncountered = true;
    return;
  }

  sl = h * (fa + 4 * f1 + fm) / 12;
  sr = h * (fm + 4 * f2 + fb) / 12;
  s2 = sl + sr;
  err = (s2 - V0) / 15;

  if (depth > maxdepth) {
    state.maxDepthCount++;
    return s2 + err;
  } else if (Math.abs(err) < tol) {
    return s2 + err;
  } else {
    m = a + h * 0.5;

    V1 = adsimp(f, a, m, fa, f1, fm, sl, tol * 0.5, maxdepth, depth + 1, state);

    if (isNaN(V1)) {
      state.nanEncountered = true;
      return NaN;
    }

    V2 = adsimp(f, m, b, fm, f2, fb, sr, tol * 0.5, maxdepth, depth + 1, state);

    if (isNaN(V2)) {
      state.nanEncountered = true;
      return NaN;
    }

    return V1 + V2;
  }
}

function integrate (f, a, b, tol, maxdepth) {
  var state = {
    maxDepthCount: 0,
    nanEncountered: false
  };

  if (tol === undefined) {
    tol = 1e-8;
  }
  if (maxdepth === undefined) {
    maxdepth = 20;
  }

  var fa = f(a);
  var fm = f(0.5 * (a + b));
  var fb = f(b);

  var V0 = (fa + 4 * fm + fb) * (b - a) / 6;

  var result = adsimp(f, a, b, fa, fm, fb, V0, tol, maxdepth, 1, state);

/*
  if (state.maxDepthCount > 0 && console && console.warn) {
    console.warn('integrate-adaptive-simpson: Warning: maximum recursion depth (' + maxdepth + ') reached ' + state.maxDepthCount + ' times');
  }

  if (state.nanEncountered && console && console.warn) {
    console.warn('integrate-adaptive-simpson: Warning: NaN encountered. Halting early.');
  }
*/

  return result;
}

/***/ }),

/***/ "./node_modules/d3-geo-projection/src/interrupted/boggs.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/interrupted/boggs.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _boggs_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../boggs.js */ "./node_modules/d3-geo-projection/src/boggs.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo-projection/src/interrupted/index.js");



var lobes = [[ // northern hemisphere
  [[-180,   0], [-100,  90], [ -40,   0]],
  [[ -40,   0], [  30,  90], [ 180,   0]]
], [ // southern hemisphere
  [[-180,   0], [-160, -90], [-100,   0]],
  [[-100,   0], [ -60, -90], [ -20,   0]],
  [[ -20,   0], [  20, -90], [  80,   0]],
  [[  80,   0], [ 140, -90], [ 180,   0]]
]];

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_boggs_js__WEBPACK_IMPORTED_MODULE_0__["boggsRaw"], lobes)
      .scale(160.857);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/interrupted/homolosine.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/interrupted/homolosine.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _homolosine_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../homolosine.js */ "./node_modules/d3-geo-projection/src/homolosine.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo-projection/src/interrupted/index.js");



var lobes = [[ // northern hemisphere
  [[-180,   0], [-100,  90], [ -40,   0]],
  [[ -40,   0], [  30,  90], [ 180,   0]]
], [ // southern hemisphere
  [[-180,   0], [-160, -90], [-100,   0]],
  [[-100,   0], [ -60, -90], [ -20,   0]],
  [[ -20,   0], [  20, -90], [  80,   0]],
  [[  80,   0], [ 140, -90], [ 180,   0]]
]];

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_homolosine_js__WEBPACK_IMPORTED_MODULE_0__["homolosineRaw"], lobes)
      .scale(152.63);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/interrupted/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/interrupted/index.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo-projection/src/math.js");




function pointEqual(a, b) {
  return Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(a[0] - b[0]) < _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"] && Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(a[1] - b[1]) < _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"];
}

function interpolateLine(coordinates, m) {
  var i = -1,
      n = coordinates.length,
      p0 = coordinates[0],
      p1,
      dx,
      dy,
      resampled = [];
  while (++i < n) {
    p1 = coordinates[i];
    dx = (p1[0] - p0[0]) / m;
    dy = (p1[1] - p0[1]) / m;
    for (var j = 0; j < m; ++j) resampled.push([p0[0] + j * dx, p0[1] + j * dy]);
    p0 = p1;
  }
  resampled.push(p1);
  return resampled;
}

function interpolateSphere(lobes) {
  var coordinates = [],
      lobe,
      lambda0, phi0, phi1,
      lambda2, phi2,
      i, n = lobes[0].length;

  // Northern Hemisphere
  for (i = 0; i < n; ++i) {
    lobe = lobes[0][i];
    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];
    lambda2 = lobe[2][0], phi2 = lobe[2][1];
    coordinates.push(interpolateLine([
      [lambda0 + _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"], phi0 + _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"]],
      [lambda0 + _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"], phi1 - _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"]],
      [lambda2 - _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"], phi1 - _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"]],
      [lambda2 - _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"], phi2 + _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"]]
    ], 30));
  }

  // Southern Hemisphere
  for (i = lobes[1].length - 1; i >= 0; --i) {
    lobe = lobes[1][i];
    lambda0 = lobe[0][0], phi0 = lobe[0][1], phi1 = lobe[1][1];
    lambda2 = lobe[2][0], phi2 = lobe[2][1];
    coordinates.push(interpolateLine([
      [lambda2 - _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"], phi2 - _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"]],
      [lambda2 - _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"], phi1 + _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"]],
      [lambda0 + _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"], phi1 + _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"]],
      [lambda0 + _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"], phi0 - _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"]]
    ], 30));
  }

  return {
    type: "Polygon",
    coordinates: [Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["merge"])(coordinates)]
  };
}

/* harmony default export */ __webpack_exports__["default"] = (function(project, lobes, inverse) {
  var sphere, bounds;

  function forward(lambda, phi) {
    var sign = phi < 0 ? -1 : +1, lobe = lobes[+(phi < 0)];
    for (var i = 0, n = lobe.length - 1; i < n && lambda > lobe[i][2][0]; ++i);
    var p = project(lambda - lobe[i][1][0], phi);
    p[0] += project(lobe[i][1][0], sign * phi > sign * lobe[i][0][1] ? lobe[i][0][1] : phi)[0];
    return p;
  }

  if (inverse) {
    forward.invert = inverse(forward);
  } else if (project.invert) {
    forward.invert = function(x, y) {
      var bound = bounds[+(y < 0)], lobe = lobes[+(y < 0)];
      for (var i = 0, n = bound.length; i < n; ++i) {
        var b = bound[i];
        if (b[0][0] <= x && x < b[1][0] && b[0][1] <= y && y < b[1][1]) {
          var p = project.invert(x - project(lobe[i][1][0], 0)[0], y);
          p[0] += lobe[i][1][0];
          return pointEqual(forward(p[0], p[1]), [x, y]) ? p : null;
        }
      }
    };
  }

  var p = Object(d3_geo__WEBPACK_IMPORTED_MODULE_1__["geoProjection"])(forward),
      stream_ = p.stream;

  p.stream = function(stream) {
    var rotate = p.rotate(),
        rotateStream = stream_(stream),
        sphereStream = (p.rotate([0, 0]), stream_(stream));
    p.rotate(rotate);
    rotateStream.sphere = function() { Object(d3_geo__WEBPACK_IMPORTED_MODULE_1__["geoStream"])(sphere, sphereStream); };
    return rotateStream;
  };
  
  p.lobes = function(_) {
    if (!arguments.length) return lobes.map(function(lobe) {
      return lobe.map(function(l) {
        return [
          [l[0][0] * _math_js__WEBPACK_IMPORTED_MODULE_2__["degrees"], l[0][1] * _math_js__WEBPACK_IMPORTED_MODULE_2__["degrees"]],
          [l[1][0] * _math_js__WEBPACK_IMPORTED_MODULE_2__["degrees"], l[1][1] * _math_js__WEBPACK_IMPORTED_MODULE_2__["degrees"]],
          [l[2][0] * _math_js__WEBPACK_IMPORTED_MODULE_2__["degrees"], l[2][1] * _math_js__WEBPACK_IMPORTED_MODULE_2__["degrees"]]
        ];
      });
    });

    sphere = interpolateSphere(_);

    lobes = _.map(function(lobe) {
      return lobe.map(function(l) {
        return [
          [l[0][0] * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"], l[0][1] * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"]],
          [l[1][0] * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"], l[1][1] * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"]],
          [l[2][0] * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"], l[2][1] * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"]]
        ];
      });
    });

    bounds = lobes.map(function(lobe) {
      return lobe.map(function(l) {
        var x0 = project(l[0][0], l[0][1])[0],
            x1 = project(l[2][0], l[2][1])[0],
            y0 = project(l[1][0], l[0][1])[1],
            y1 = project(l[1][0], l[1][1])[1],
            t;
        if (y0 > y1) t = y0, y0 = y1, y1 = t;
        return [[x0, y0], [x1, y1]];
      });
    });

    return p;
  };

  if (lobes != null) p.lobes(lobes);

  return p;
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/interrupted/mollweide.js":
/*!*********************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/interrupted/mollweide.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mollweide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mollweide.js */ "./node_modules/d3-geo-projection/src/mollweide.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo-projection/src/interrupted/index.js");



var lobes = [[ // northern hemisphere
  [[-180,   0], [-100,  90], [ -40,   0]],
  [[ -40,   0], [  30,  90], [ 180,   0]]
], [ // southern hemisphere
  [[-180,   0], [-160, -90], [-100,   0]],
  [[-100,   0], [ -60, -90], [ -20,   0]],
  [[ -20,   0], [  20, -90], [  80,   0]],
  [[  80,   0], [ 140, -90], [ 180,   0]]
]];

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_mollweide_js__WEBPACK_IMPORTED_MODULE_0__["mollweideRaw"], lobes)
      .scale(169.529);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/interrupted/mollweideHemispheres.js":
/*!********************************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/interrupted/mollweideHemispheres.js ***!
  \********************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _mollweide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../mollweide.js */ "./node_modules/d3-geo-projection/src/mollweide.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo-projection/src/interrupted/index.js");



var lobes = [[ // northern hemisphere
  [[-180,   0], [ -90,  90], [   0,   0]],
  [[   0,   0], [  90,  90], [ 180,   0]]
], [ // southern hemisphere
  [[-180,   0], [ -90, -90], [   0,   0]],
  [[   0,   0], [  90, -90], [ 180,   0]]
]];

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_mollweide_js__WEBPACK_IMPORTED_MODULE_0__["mollweideRaw"], lobes)
      .scale(169.529)
      .rotate([20, 0]);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/interrupted/quarticAuthalic.js":
/*!***************************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/interrupted/quarticAuthalic.js ***!
  \***************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _hammer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../hammer.js */ "./node_modules/d3-geo-projection/src/hammer.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo-projection/src/interrupted/index.js");



var lobes = [[ // northern hemisphere
  [[-180,  0],  [-90,  90], [   0,  0]],
  [[   0,  0], [  90,  90], [ 180, 0]]
], [ // southern hemisphere
  [[-180, 0], [-90, -90], [  0, 0]],
  [[   0, 0], [ 90, -90], [180, 0]]
]];

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(Object(_hammer_js__WEBPACK_IMPORTED_MODULE_0__["hammerRaw"])(Infinity), lobes)
      .rotate([20, 0])
      .scale(152.63);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/interrupted/sinuMollweide.js":
/*!*************************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/interrupted/sinuMollweide.js ***!
  \*************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sinuMollweide_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../sinuMollweide.js */ "./node_modules/d3-geo-projection/src/sinuMollweide.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo-projection/src/interrupted/index.js");
/* harmony import */ var _newton_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../newton.js */ "./node_modules/d3-geo-projection/src/newton.js");




var lobes = [[ // northern hemisphere
  [[-180,  35], [ -30,  90], [   0,  35]],
  [[   0,  35], [  30,  90], [ 180,  35]]
], [ // southern hemisphere
  [[-180, -10], [-102, -90], [ -65, -10]],
  [[ -65, -10], [   5, -90], [  77, -10]],
  [[  77, -10], [ 103, -90], [ 180, -10]]
]];

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_sinuMollweide_js__WEBPACK_IMPORTED_MODULE_0__["sinuMollweideRaw"], lobes, _newton_js__WEBPACK_IMPORTED_MODULE_2__["solve2d"])
      .rotate([-20, -55])
      .scale(164.263)
      .center([0, -5.4036]);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/interrupted/sinusoidal.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/interrupted/sinusoidal.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _sinusoidal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../sinusoidal.js */ "./node_modules/d3-geo-projection/src/sinusoidal.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo-projection/src/interrupted/index.js");



var lobes = [[ // northern hemisphere
  [[-180,   0], [-110,  90], [ -40,   0]],
  [[ -40,   0], [   0,  90], [  40,   0]],
  [[  40,   0], [ 110,  90], [ 180,   0]]
], [ // southern hemisphere
  [[-180,   0], [-110, -90], [ -40,   0]],
  [[ -40,   0], [   0, -90], [  40,   0]],
  [[  40,   0], [ 110, -90], [ 180,   0]]
]];

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_sinusoidal_js__WEBPACK_IMPORTED_MODULE_0__["sinusoidalRaw"], lobes)
      .scale(152.63)
      .rotate([-20, 0]);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/kavrayskiy7.js":
/*!***********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/kavrayskiy7.js ***!
  \***********************************************************/
/*! exports provided: kavrayskiy7Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "kavrayskiy7Raw", function() { return kavrayskiy7Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function kavrayskiy7Raw(lambda, phi) {
  return [3 / _math_js__WEBPACK_IMPORTED_MODULE_1__["tau"] * lambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 3 - phi * phi), phi];
}

kavrayskiy7Raw.invert = function(x, y) {
  return [_math_js__WEBPACK_IMPORTED_MODULE_1__["tau"] / 3 * x / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 3 - y * y), y];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(kavrayskiy7Raw)
      .scale(158.837);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/lagrange.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/lagrange.js ***!
  \********************************************************/
/*! exports provided: lagrangeRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "lagrangeRaw", function() { return lagrangeRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function lagrangeRaw(n) {

  function forward(lambda, phi) {
    if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) return [0, phi < 0 ? -2 : 2];
    var sinPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        v = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["pow"])((1 + sinPhi) / (1 - sinPhi), n / 2),
        c = 0.5 * (v + 1 / v) + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda *= n);
    return [
      2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) / c,
      (v - 1 / v) / c
    ];
  }

  forward.invert = function(x, y) {
    var y0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y);
    if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y0 - 2) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) return x ? null : [0, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(y) * _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]];
    if (y0 > 2) return null;

    x /= 2, y /= 2;
    var x2 = x * x,
        y2 = y * y,
        t = 2 * y / (1 + x2 + y2); // tanh(nPhi)
    t = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["pow"])((1 + t) / (1 - t), 1 / n);
    return [
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(2 * x, 1 - x2 - y2) / n,
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])((t - 1) / (t + 1))
    ];
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var n = 0.5,
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(lagrangeRaw),
      p = m(n);

  p.spacing = function(_) {
    return arguments.length ? m(n = +_) : n;
  };

  return p
      .scale(124.75);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/larrivee.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/larrivee.js ***!
  \********************************************************/
/*! exports provided: larriveeRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "larriveeRaw", function() { return larriveeRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



var pi_sqrt2 = _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt2"];

function larriveeRaw(lambda, phi) {
  return [
    lambda * (1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi))) / 2,
    phi / (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi / 2) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda / 6))
  ];
}

larriveeRaw.invert = function(x, y) {
  var x0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x),
      y0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y),
      lambda = _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"],
      phi = _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"];
  if (y0 < pi_sqrt2) phi *= y0 / pi_sqrt2;
  else lambda += 6 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(pi_sqrt2 / y0);
  for (var i = 0; i < 25; i++) {
    var sinPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        sqrtcosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi)),
        sinPhi_2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi / 2),
        cosPhi_2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi / 2),
        sinLambda_6 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda / 6),
        cosLambda_6 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda / 6),
        f0 = 0.5 * lambda * (1 + sqrtcosPhi) - x0,
        f1 = phi / (cosPhi_2 * cosLambda_6) - y0,
        df0dPhi = sqrtcosPhi ? -0.25 * lambda * sinPhi / sqrtcosPhi : 0,
        df0dLambda = 0.5 * (1 + sqrtcosPhi),
        df1dPhi = (1 + 0.5 * phi * sinPhi_2 / cosPhi_2) / (cosPhi_2 * cosLambda_6),
        df1dLambda = (phi / cosPhi_2) * (sinLambda_6 / 6) / (cosLambda_6 * cosLambda_6),
        denom = df0dPhi * df1dLambda - df1dPhi * df0dLambda,
        dPhi = (f0 * df1dLambda - f1 * df0dLambda) / denom,
        dLambda = (f1 * df0dPhi - f0 * df1dPhi) / denom;
    phi -= dPhi;
    lambda -= dLambda;
    if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(dPhi) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(dLambda) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) break;
  }
  return [x < 0 ? -lambda : lambda, y < 0 ? -phi : phi];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(larriveeRaw)
      .scale(97.2672);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/laskowski.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/laskowski.js ***!
  \*********************************************************/
/*! exports provided: laskowskiRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "laskowskiRaw", function() { return laskowskiRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function laskowskiRaw(lambda, phi) {
  var lambda2 = lambda * lambda, phi2 = phi * phi;
  return [
    lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)),
    phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032))
  ];
}

laskowskiRaw.invert = function(x, y) {
  var lambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(x) * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"],
      phi = y / 2,
      i = 50;
  do {
    var lambda2 = lambda * lambda,
        phi2 = phi * phi,
        lambdaPhi = lambda * phi,
        fx = lambda * (0.975534 + phi2 * (-0.119161 + lambda2 * -0.0143059 + phi2 * -0.0547009)) - x,
        fy = phi * (1.00384 + lambda2 * (0.0802894 + phi2 * -0.02855 + lambda2 * 0.000199025) + phi2 * (0.0998909 + phi2 * -0.0491032)) - y,
        deltaxDeltaLambda = 0.975534 - phi2 * (0.119161 + 3 * lambda2 * 0.0143059 + phi2 * 0.0547009),
        deltaxDeltaPhi = -lambdaPhi * (2 * 0.119161 + 4 * 0.0547009 * phi2 + 2 * 0.0143059 * lambda2),
        deltayDeltaLambda = lambdaPhi * (2 * 0.0802894 + 4 * 0.000199025 * lambda2 + 2 * -0.02855 * phi2),
        deltayDeltaPhi = 1.00384 + lambda2 * (0.0802894 + 0.000199025 * lambda2) + phi2 * (3 * (0.0998909 - 0.02855 * lambda2) - 5 * 0.0491032 * phi2),
        denominator = deltaxDeltaPhi * deltayDeltaLambda - deltayDeltaPhi * deltaxDeltaLambda,
        deltaLambda = (fy * deltaxDeltaPhi - fx * deltayDeltaPhi) / denominator,
        deltaPhi = (fx * deltayDeltaLambda - fy * deltaxDeltaLambda) / denominator;
    lambda -= deltaLambda, phi -= deltaPhi;
  } while ((Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(deltaLambda) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(deltaPhi) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) && --i > 0);
  return i && [lambda, phi];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(laskowskiRaw)
      .scale(139.98);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/littrow.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/littrow.js ***!
  \*******************************************************/
/*! exports provided: littrowRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "littrowRaw", function() { return littrowRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function littrowRaw(lambda, phi) {
  return [
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(phi) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda)
  ];
}

littrowRaw.invert = function(x, y) {
  var x2 = x * x,
      y2 = y * y,
      y2_1 = y2 + 1,
      x2_y2_1 = x2 + y2_1,
      cosPhi = x
          ? _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt1_2"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])((x2_y2_1 - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x2_y2_1 * x2_y2_1 - 4 * x2)) / x2)
          : 1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(y2_1);
  return [
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(x * cosPhi),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(y) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(cosPhi)
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(littrowRaw)
      .scale(144.049)
      .clipAngle(90 - 1e-3);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/loximuthal.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/loximuthal.js ***!
  \**********************************************************/
/*! exports provided: loximuthalRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "loximuthalRaw", function() { return loximuthalRaw; });
/* harmony import */ var _parallel1_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./parallel1.js */ "./node_modules/d3-geo-projection/src/parallel1.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function loximuthalRaw(phi0) {
  var cosPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi0),
      tanPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["quarterPi"] + phi0 / 2);

  function forward(lambda, phi) {
    var y = phi - phi0,
        x = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? lambda * cosPhi0
            : Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x = _math_js__WEBPACK_IMPORTED_MODULE_1__["quarterPi"] + phi / 2) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x) - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]
            ? 0 : lambda * y / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["log"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(x) / tanPhi0);
    return [x, y];
  }

  forward.invert = function(x, y) {
    var lambda,
        phi = y + phi0;
    return [
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? x / cosPhi0
          : (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda = _math_js__WEBPACK_IMPORTED_MODULE_1__["quarterPi"] + phi / 2) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda) - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) ? 0
          : x * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["log"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(lambda) / tanPhi0) / y,
      phi
    ];
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_parallel1_js__WEBPACK_IMPORTED_MODULE_0__["default"])(loximuthalRaw)
      .parallel(40)
      .scale(158.837);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/math.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/math.js ***!
  \****************************************************/
/*! exports provided: abs, atan, atan2, ceil, cos, exp, floor, log, max, min, pow, round, sign, sin, tan, epsilon, epsilon2, pi, halfPi, quarterPi, sqrt1_2, sqrt2, sqrtPi, tau, degrees, radians, sinci, asin, acos, sqrt, tanh, sinh, cosh, arsinh, arcosh */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "abs", function() { return abs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan", function() { return atan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan2", function() { return atan2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return cos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exp", function() { return exp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "max", function() { return max; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "min", function() { return min; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pow", function() { return pow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "round", function() { return round; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sign", function() { return sign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return sin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tan", function() { return tan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon", function() { return epsilon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon2", function() { return epsilon2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return pi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "halfPi", function() { return halfPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quarterPi", function() { return quarterPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt1_2", function() { return sqrt1_2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt2", function() { return sqrt2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrtPi", function() { return sqrtPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return tau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "degrees", function() { return degrees; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "radians", function() { return radians; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinci", function() { return sinci; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asin", function() { return asin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acos", function() { return acos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return sqrt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tanh", function() { return tanh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinh", function() { return sinh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cosh", function() { return cosh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arsinh", function() { return arsinh; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "arcosh", function() { return arcosh; });
var abs = Math.abs;
var atan = Math.atan;
var atan2 = Math.atan2;
var ceil = Math.ceil;
var cos = Math.cos;
var exp = Math.exp;
var floor = Math.floor;
var log = Math.log;
var max = Math.max;
var min = Math.min;
var pow = Math.pow;
var round = Math.round;
var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };
var sin = Math.sin;
var tan = Math.tan;

var epsilon = 1e-6;
var epsilon2 = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var quarterPi = pi / 4;
var sqrt1_2 = Math.SQRT1_2;
var sqrt2 = sqrt(2);
var sqrtPi = sqrt(pi);
var tau = pi * 2;
var degrees = 180 / pi;
var radians = pi / 180;

function sinci(x) {
  return x ? x / Math.sin(x) : 1;
}

function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function sqrt(x) {
  return x > 0 ? Math.sqrt(x) : 0;
}

function tanh(x) {
  x = exp(2 * x);
  return (x - 1) / (x + 1);
}

function sinh(x) {
  return (exp(x) - exp(-x)) / 2;
}

function cosh(x) {
  return (exp(x) + exp(-x)) / 2;
}

function arsinh(x) {
  return log(x + sqrt(x * x + 1));
}

function arcosh(x) {
  return log(x + sqrt(x * x - 1));
}


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/miller.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/miller.js ***!
  \******************************************************/
/*! exports provided: millerRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "millerRaw", function() { return millerRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function millerRaw(lambda, phi) {
  return [lambda, 1.25 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["log"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["quarterPi"] + 0.4 * phi))];
}

millerRaw.invert = function(x, y) {
  return [x, 2.5 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["exp"])(0.8 * y)) - 0.625 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(millerRaw)
      .scale(108.318);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/modifiedStereographic.js":
/*!*********************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/modifiedStereographic.js ***!
  \*********************************************************************/
/*! exports provided: modifiedStereographicRaw, modifiedStereographicAlaska, modifiedStereographicGs48, modifiedStereographicGs50, modifiedStereographicMiller, modifiedStereographicLee, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifiedStereographicRaw", function() { return modifiedStereographicRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifiedStereographicAlaska", function() { return modifiedStereographicAlaska; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifiedStereographicGs48", function() { return modifiedStereographicGs48; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifiedStereographicGs50", function() { return modifiedStereographicGs50; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifiedStereographicMiller", function() { return modifiedStereographicMiller; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "modifiedStereographicLee", function() { return modifiedStereographicLee; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return modifiedStereographic; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function modifiedStereographicRaw(C) {
  var m = C.length - 1;

  function forward(lambda, phi) {
    var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        k = 2 / (1 + cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda)),
        zr = k * cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda),
        zi = k * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        i = m,
        w = C[i],
        ar = w[0],
        ai = w[1],
        t;
    while (--i >= 0) {
      w = C[i];
      ar = w[0] + zr * (t = ar) - zi * ai;
      ai = w[1] + zr * ai + zi * t;
    }
    ar = zr * (t = ar) - zi * ai;
    ai = zr * ai + zi * t;
    return [ar, ai];
  }

  forward.invert = function(x, y) {
    var i = 20,
        zr = x,
        zi = y;
    do {
      var j = m,
          w = C[j],
          ar = w[0],
          ai = w[1],
          br = 0,
          bi = 0,
          t;

      while (--j >= 0) {
        w = C[j];
        br = ar + zr * (t = br) - zi * bi;
        bi = ai + zr * bi + zi * t;
        ar = w[0] + zr * (t = ar) - zi * ai;
        ai = w[1] + zr * ai + zi * t;
      }
      br = ar + zr * (t = br) - zi * bi;
      bi = ai + zr * bi + zi * t;
      ar = zr * (t = ar) - zi * ai - x;
      ai = zr * ai + zi * t - y;

      var denominator = br * br + bi * bi, deltar, deltai;
      zr -= deltar = (ar * br + ai * bi) / denominator;
      zi -= deltai = (ai * br - ar * bi) / denominator;
    } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(deltar) + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(deltai) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] * _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);

    if (i) {
      var rho = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(zr * zr + zi * zi),
          c = 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan"])(rho * 0.5),
          sinc = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(c);
      return [Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(zr * sinc, rho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(c)), rho ? Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(zi * sinc / rho) : 0];
    }
  };

  return forward;
}

var alaska = [[0.9972523, 0], [0.0052513, -0.0041175], [0.0074606, 0.0048125], [-0.0153783, -0.1968253], [0.0636871, -0.1408027], [0.3660976, -0.2937382]],
    gs48 = [[0.98879, 0], [0, 0], [-0.050909, 0], [0, 0], [0.075528, 0]],
    gs50 = [[0.9842990, 0], [0.0211642, 0.0037608], [-0.1036018, -0.0575102], [-0.0329095, -0.0320119], [0.0499471, 0.1223335], [0.0260460, 0.0899805], [0.0007388, -0.1435792], [0.0075848, -0.1334108], [-0.0216473, 0.0776645], [-0.0225161, 0.0853673]],
    miller = [[0.9245, 0], [0, 0], [0.01943, 0]],
    lee = [[0.721316, 0], [0, 0], [-0.00881625, -0.00617325]];

function modifiedStereographicAlaska() {
  return modifiedStereographic(alaska, [152, -64])
      .scale(1400)
      .center([-160.908, 62.4864])
      .clipAngle(30)
      .angle(7.8);
}

function modifiedStereographicGs48() {
  return modifiedStereographic(gs48, [95, -38])
      .scale(1000)
      .clipAngle(55)
      .center([-96.5563, 38.8675]);
}

function modifiedStereographicGs50() {
  return modifiedStereographic(gs50, [120, -45])
      .scale(359.513)
      .clipAngle(55)
      .center([-117.474, 53.0628]);
}

function modifiedStereographicMiller() {
  return modifiedStereographic(miller, [-20, -18])
      .scale(209.091)
      .center([20, 16.7214])
      .clipAngle(82);
}

function modifiedStereographicLee() {
  return modifiedStereographic(lee, [165, 10])
      .scale(250)
      .clipAngle(130)
      .center([-165, -10]);
}

function modifiedStereographic(coefficients, rotate) {
  var p = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(modifiedStereographicRaw(coefficients)).rotate(rotate).clipAngle(90),
      r = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoRotation"])(rotate),
      center = p.center;

  delete p.rotate;

  p.center = function(_) {
    return arguments.length ? center(r(_)) : r.invert(center());
  };

  return p;
}


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/mollweide.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/mollweide.js ***!
  \*********************************************************/
/*! exports provided: mollweideBromleyTheta, mollweideBromleyRaw, mollweideRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mollweideBromleyTheta", function() { return mollweideBromleyTheta; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mollweideBromleyRaw", function() { return mollweideBromleyRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mollweideRaw", function() { return mollweideRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function mollweideBromleyTheta(cp, phi) {
  var cpsinPhi = cp * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi), i = 30, delta;
  do phi -= delta = (phi + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi) - cpsinPhi) / (1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi));
  while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);
  return phi / 2;
}

function mollweideBromleyRaw(cx, cy, cp) {

  function forward(lambda, phi) {
    return [cx * lambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi = mollweideBromleyTheta(cp, phi)), cy * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)];
  }

  forward.invert = function(x, y) {
    return y = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(y / cy), [x / (cx * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(y)), Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])((2 * y + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(2 * y)) / cp)];
  };

  return forward;
}

var mollweideRaw = mollweideBromleyRaw(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt2"] / _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"], _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt2"], _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]);

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(mollweideRaw)
      .scale(169.529);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/mtFlatPolarParabolic.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/mtFlatPolarParabolic.js ***!
  \********************************************************************/
/*! exports provided: mtFlatPolarParabolicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mtFlatPolarParabolicRaw", function() { return mtFlatPolarParabolicRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



var sqrt6 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(6),
    sqrt7 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(7);

function mtFlatPolarParabolicRaw(lambda, phi) {
  var theta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(7 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi) / (3 * sqrt6));
  return [
    sqrt6 * lambda * (2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(2 * theta / 3) - 1) / sqrt7,
    9 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta / 3) / sqrt7
  ];
}

mtFlatPolarParabolicRaw.invert = function(x, y) {
  var theta = 3 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(y * sqrt7 / 9);
  return [
    x * sqrt7 / (sqrt6 * (2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(2 * theta / 3) - 1)),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta) * 3 * sqrt6 / 7)
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(mtFlatPolarParabolicRaw)
      .scale(164.859);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/mtFlatPolarQuartic.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/mtFlatPolarQuartic.js ***!
  \******************************************************************/
/*! exports provided: mtFlatPolarQuarticRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mtFlatPolarQuarticRaw", function() { return mtFlatPolarQuarticRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function mtFlatPolarQuarticRaw(lambda, phi) {
  var k = (1 + _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt1_2"]) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
      theta = phi;
  for (var i = 0, delta; i < 25; i++) {
    theta -= delta = (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta / 2) + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta) - k) / (0.5 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta / 2) + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta));
    if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) break;
  }
  return [
    lambda * (1 + 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta / 2)) / (3 * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt2"]),
    2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(3) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta / 2) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(2 + _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt2"])
  ];
}

mtFlatPolarQuarticRaw.invert = function(x, y) {
  var sinTheta_2 = y * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(2 + _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt2"]) / (2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(3)),
      theta = 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(sinTheta_2);
  return [
    3 * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt2"] * x / (1 + 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta / 2)),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])((sinTheta_2 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta)) / (1 + _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt1_2"]))
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(mtFlatPolarQuarticRaw)
      .scale(188.209);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/mtFlatPolarSinusoidal.js":
/*!*********************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/mtFlatPolarSinusoidal.js ***!
  \*********************************************************************/
/*! exports provided: mtFlatPolarSinusoidalRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mtFlatPolarSinusoidalRaw", function() { return mtFlatPolarSinusoidalRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function mtFlatPolarSinusoidalRaw(lambda, phi) {
  var A = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(6 / (4 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"])),
      k = (1 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 4) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
      theta = phi / 2;
  for (var i = 0, delta; i < 25; i++) {
    theta -= delta = (theta / 2 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta) - k) / (0.5 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta));
    if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) break;
  }
  return [
    A * (0.5 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta)) * lambda / 1.5,
    A * theta
  ];
}

mtFlatPolarSinusoidalRaw.invert = function(x, y) {
  var A = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(6 / (4 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"])),
      theta = y / A;
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(theta) - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) theta = theta < 0 ? -_math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] : _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"];
  return [
    1.5 * x / (A * (0.5 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta))),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])((theta / 2 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(theta)) / (1 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 4))
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(mtFlatPolarSinusoidalRaw)
      .scale(166.518);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/naturalEarth2.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/naturalEarth2.js ***!
  \*************************************************************/
/*! exports provided: naturalEarth2Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "naturalEarth2Raw", function() { return naturalEarth2Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function naturalEarth2Raw(lambda, phi) {
  var phi2 = phi * phi, phi4 = phi2 * phi2, phi6 = phi2 * phi4;
  return [
    lambda * (0.84719 - 0.13063 * phi2 + phi6 * phi6 * (-0.04515 + 0.05494 * phi2 - 0.02326 * phi4 + 0.00331 * phi6)),
    phi * (1.01183 + phi4 * phi4 * (-0.02625 + 0.01926 * phi2 - 0.00396 * phi4))
  ];
}

naturalEarth2Raw.invert = function(x, y) {
  var phi = y, i = 25, delta, phi2, phi4, phi6;
  do {
    phi2 = phi * phi; phi4 = phi2 * phi2;
    phi -= delta = ((phi * (1.01183 + phi4 * phi4 * (-0.02625 + 0.01926 * phi2 - 0.00396 * phi4))) - y) /
      (1.01183 + phi4 * phi4 * ((9 * -0.02625) + (11 * 0.01926) * phi2 + (13 * -0.00396) * phi4));
  } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon2"] && --i > 0);
  phi2 = phi * phi; phi4 = phi2 * phi2; phi6 = phi2 * phi4;
  return [
    x / (0.84719 - 0.13063 * phi2 + phi6 * phi6 * (-0.04515 + 0.05494 * phi2 - 0.02326 * phi4 + 0.00331 * phi6)),
    phi
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(naturalEarth2Raw)
      .scale(175.295);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/nellHammer.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/nellHammer.js ***!
  \**********************************************************/
/*! exports provided: nellHammerRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nellHammerRaw", function() { return nellHammerRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function nellHammerRaw(lambda, phi) {
  return [
    lambda * (1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi)) / 2,
    2 * (phi - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(phi / 2))
  ];
}

nellHammerRaw.invert = function(x, y) {
  var p = y / 2;
  for (var i = 0, delta = Infinity; i < 10 && Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]; ++i) {
    var c = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(y / 2);
    y -= delta = (y - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(y / 2) - p) / (1 - 0.5 / (c * c));
  }
  return [
    2 * x / (1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(y)),
    y
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(nellHammerRaw)
      .scale(152.63);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/newton.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/newton.js ***!
  \******************************************************/
/*! exports provided: solve, solve2d */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "solve", function() { return solve; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "solve2d", function() { return solve2d; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");


// Approximate Newton-Raphson
// Solve f(x) = y, start from x
function solve(f, y, x) {
  var steps = 100, delta, f0, f1;
  x = x === undefined ? 0 : +x;
  y = +y;
  do {
    f0 = f(x);
    f1 = f(x + _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]);
    if (f0 === f1) f1 = f0 + _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"];
    x -= delta = (-1 * _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"] * (f0 - y)) / (f0 - f1);
  } while (steps-- > 0 && Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]);
  return steps < 0 ? NaN : x;
}

// Approximate Newton-Raphson in 2D
// Solve f(a,b) = [x,y]
function solve2d(f, MAX_ITERATIONS, eps) {
  if (MAX_ITERATIONS === undefined) MAX_ITERATIONS = 40;
  if (eps === undefined) eps = _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon2"];
  return function(x, y, a, b) {
    var err2, da, db;
    a = a === undefined ? 0 : +a;
    b = b === undefined ? 0 : +b;
    for (var i = 0; i < MAX_ITERATIONS; i++) {
      var p = f(a, b),
        // diffs
        tx = p[0] - x,
        ty = p[1] - y;
      if (Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(tx) < eps && Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(ty) < eps) break; // we're there!

      // backtrack if we overshot
      var h = tx * tx + ty * ty;
      if (h > err2) {
        a -= da /= 2;
        b -= db /= 2;
        continue;
      }
      err2 = h;

      // partial derivatives
      var ea = (a > 0 ? -1 : 1) * eps,
        eb = (b > 0 ? -1 : 1) * eps,
        pa = f(a + ea, b),
        pb = f(a, b + eb),
        dxa = (pa[0] - p[0]) / ea,
        dya = (pa[1] - p[1]) / ea,
        dxb = (pb[0] - p[0]) / eb,
        dyb = (pb[1] - p[1]) / eb,
        // determinant
        D = dyb * dxa - dya * dxb,
        // newton step — or half-step for small D
        l = (Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(D) < 0.5 ? 0.5 : 1) / D;
      da = (ty * dxb - tx * dyb) * l;
      db = (tx * dya - ty * dxa) * l;
      a += da;
      b += db;
      if (Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(da) < eps && Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(db) < eps) break; // we're crawling
    }
    return [a, b];
  };
}

/***/ }),

/***/ "./node_modules/d3-geo-projection/src/nicolosi.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/nicolosi.js ***!
  \********************************************************/
/*! exports provided: nicolosiRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "nicolosiRaw", function() { return nicolosiRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _newton_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./newton.js */ "./node_modules/d3-geo-projection/src/newton.js");




// Based on Torben Jansen's implementation
// https://beta.observablehq.com/@toja/nicolosi-globular-projection
// https://beta.observablehq.com/@toja/nicolosi-globular-inverse

function nicolosiRaw(lambda, phi) {
  var sinPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
    q = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
    s = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(lambda);

  if (lambda === 0 || Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) === _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) return [0, phi];
  else if (phi === 0) return [lambda, 0];
  else if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda) === _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) return [lambda * q, _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] * sinPhi];

  var b = _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / (2 * lambda) - (2 * lambda) / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"],
    c = (2 * phi) / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"],
    d = (1 - c * c) / (sinPhi - c);

  var b2 = b * b,
    d2 = d * d,
    b2d2 = 1 + b2 / d2,
    d2b2 = 1 + d2 / b2;

  var M = ((b * sinPhi) / d - b / 2) / b2d2,
    N = ((d2 * sinPhi) / b2 + d / 2) / d2b2,
    m = M * M + (q * q) / b2d2,
    n = N * N - ((d2 * sinPhi * sinPhi) / b2 + d * sinPhi - 1) / d2b2;

  return [
    _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] * (M + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(m) * s),
    _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] * (N + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(n < 0 ? 0 : n) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(-phi * b) * s)
  ];
}

nicolosiRaw.invert = function(x, y) {

  x /= _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"];
  y /= _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"];

  var x2 = x * x,
    y2 = y * y,
    x2y2 = x2 + y2,
    pi2 = _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"];

  return [
    x ? (x2y2 -1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])((1 - x2y2) * (1 - x2y2) + 4 * x2)) / (2 * x) * _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] : 0,
    Object(_newton_js__WEBPACK_IMPORTED_MODULE_2__["solve"])(function(phi) {
      return (
        x2y2 * (_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi) - 2 * phi) * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] +
        4 * phi * phi * (y - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)) +
        2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * phi -
        pi2 * y
      );
    }, 0)
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(nicolosiRaw)
    .scale(127.267);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/noop.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/noop.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (() => {});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/parallel1.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/parallel1.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



/* harmony default export */ __webpack_exports__["default"] = (function(projectAt) {
  var phi0 = 0,
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(projectAt),
      p = m(phi0);

  p.parallel = function(_) {
    return arguments.length ? m(phi0 = _ * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]) : phi0 * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"];
  };

  return p;
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/patterson.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/patterson.js ***!
  \*********************************************************/
/*! exports provided: pattersonRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pattersonRaw", function() { return pattersonRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



// Based on Java implementation by Bojan Savric.
// https://github.com/OSUCartography/JMapProjLib/blob/master/src/com/jhlabs/map/proj/PattersonProjection.java

var pattersonK1 = 1.0148,
    pattersonK2 = 0.23185,
    pattersonK3 = -0.14499,
    pattersonK4 = 0.02406,
    pattersonC1 = pattersonK1,
    pattersonC2 = 5 * pattersonK2,
    pattersonC3 = 7 * pattersonK3,
    pattersonC4 = 9 * pattersonK4,
    pattersonYmax = 1.790857183;

function pattersonRaw(lambda, phi) {
  var phi2 = phi * phi;
  return [
    lambda,
    phi * (pattersonK1 + phi2 * phi2 * (pattersonK2 + phi2 * (pattersonK3 + pattersonK4 * phi2)))
  ];
}

pattersonRaw.invert = function(x, y) {
  if (y > pattersonYmax) y = pattersonYmax;
  else if (y < -pattersonYmax) y = -pattersonYmax;
  var yc = y, delta;

  do { // Newton-Raphson
    var y2 = yc * yc;
    yc -= delta = ((yc * (pattersonK1 + y2 * y2 * (pattersonK2 + y2 * (pattersonK3 + pattersonK4 * y2)))) - y) / (pattersonC1 + y2 * y2 * (pattersonC2 + y2 * (pattersonC3 + pattersonC4 * y2)));
  } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]);

  return [x, yc];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(pattersonRaw)
      .scale(139.319);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/polyconic.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/polyconic.js ***!
  \*********************************************************/
/*! exports provided: polyconicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "polyconicRaw", function() { return polyconicRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function polyconicRaw(lambda, phi) {
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) return [lambda, 0];
  var tanPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(phi),
      k = lambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi);
  return [
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(k) / tanPhi,
    phi + (1 - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(k)) / tanPhi
  ];
}

polyconicRaw.invert = function(x, y) {
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) return [x, 0];
  var k = x * x + y * y,
      phi = y * 0.5,
      i = 10, delta;
  do {
    var tanPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(phi),
        secPhi = 1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        j = k - 2 * y * phi + phi * phi;
    phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);
  } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);
  tanPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(phi);
  return [
    (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y) < Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi + 1 / tanPhi) ? Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(x * tanPhi) : Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(y) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(x) * (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x * tanPhi)) + _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"])) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
    phi
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(polyconicRaw)
      .scale(103.74);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/polyhedral/butterfly.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/polyhedral/butterfly.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo-projection/src/polyhedral/index.js");
/* harmony import */ var _octahedron_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./octahedron.js */ "./node_modules/d3-geo-projection/src/polyhedral/octahedron.js");





/* harmony default export */ __webpack_exports__["default"] = (function(faceProjection) {

  faceProjection = faceProjection || function(face) {
    var c = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoCentroid"])({type: "MultiPoint", coordinates: face});
    return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoGnomonic"])().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);
  };

  var faces = _octahedron_js__WEBPACK_IMPORTED_MODULE_3__["default"].map(function(face) {
    return {face: face, project: faceProjection(face)};
  });

  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function(d, i) {
    var node = faces[d];
    node && (node.children || (node.children = [])).push(faces[i]);
  });

  return Object(_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(faces[0], function(lambda, phi) {
        return faces[lambda < -_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 2 ? phi < 0 ? 6 : 4
            : lambda < 0 ? phi < 0 ? 2 : 0
            : lambda < _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 2 ? phi < 0 ? 3 : 1
            : phi < 0 ? 7 : 5];
      })
      .angle(-30)
      .scale(101.858)
      .center([0, 45]);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/polyhedral/collignon.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/polyhedral/collignon.js ***!
  \********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _collignon_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../collignon.js */ "./node_modules/d3-geo-projection/src/collignon.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo-projection/src/polyhedral/index.js");
/* harmony import */ var _octahedron_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./octahedron.js */ "./node_modules/d3-geo-projection/src/polyhedral/octahedron.js");






var kx = 2 / Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(3);

function collignonK(a, b) {
  var p = Object(_collignon_js__WEBPACK_IMPORTED_MODULE_1__["collignonRaw"])(a, b);
  return [p[0] * kx, p[1]];
}

collignonK.invert = function(x,y) {
  return _collignon_js__WEBPACK_IMPORTED_MODULE_1__["collignonRaw"].invert(x / kx, y);
};

/* harmony default export */ __webpack_exports__["default"] = (function(faceProjection) {

  faceProjection = faceProjection || function(face) {
    var c = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoCentroid"])({type: "MultiPoint", coordinates: face});
    return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(collignonK).translate([0, 0]).scale(1).rotate(c[1] > 0 ? [-c[0], 0] : [180 - c[0], 180]);
  };

  var faces = _octahedron_js__WEBPACK_IMPORTED_MODULE_4__["default"].map(function(face) {
    return {face: face, project: faceProjection(face)};
  });

  [-1, 0, 0, 1, 0, 1, 4, 5].forEach(function(d, i) {
    var node = faces[d];
    node && (node.children || (node.children = [])).push(faces[i]);
  });

  return Object(_index_js__WEBPACK_IMPORTED_MODULE_3__["default"])(faces[0], function(lambda, phi) {
        return faces[lambda < -_math_js__WEBPACK_IMPORTED_MODULE_2__["pi"] / 2 ? phi < 0 ? 6 : 4
            : lambda < 0 ? phi < 0 ? 2 : 0
            : lambda < _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"] / 2 ? phi < 0 ? 3 : 1
            : phi < 0 ? 7 : 5];
      })
      .angle(-30)
      .scale(121.906)
      .center([0, 48.5904]);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/polyhedral/index.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/polyhedral/index.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _matrix_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./matrix.js */ "./node_modules/d3-geo-projection/src/polyhedral/matrix.js");




// Creates a polyhedral projection.
//  * root: a spanning tree of polygon faces.  Nodes are automatically
//    augmented with a transform matrix.
//  * face: a function that returns the appropriate node for a given {lambda, phi}
//    point (radians).
/* harmony default export */ __webpack_exports__["default"] = (function(root, face) {

  recurse(root, {transform: null});

  function recurse(node, parent) {
    node.edges = faceEdges(node.face);
    // Find shared edge.
    if (parent.face) {
      var shared = node.shared = sharedEdge(node.face, parent.face),
          m = Object(_matrix_js__WEBPACK_IMPORTED_MODULE_2__["default"])(shared.map(parent.project), shared.map(node.project));
      node.transform = parent.transform ? Object(_matrix_js__WEBPACK_IMPORTED_MODULE_2__["multiply"])(parent.transform, m) : m;
      // Replace shared edge in parent edges array.
      var edges = parent.edges;
      for (var i = 0, n = edges.length; i < n; ++i) {
        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = node;
        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = node;
      }
      edges = node.edges;
      for (i = 0, n = edges.length; i < n; ++i) {
        if (pointEqual(shared[0], edges[i][0]) && pointEqual(shared[1], edges[i][1])) edges[i] = parent;
        if (pointEqual(shared[0], edges[i][1]) && pointEqual(shared[1], edges[i][0])) edges[i] = parent;
      }
    } else {
      node.transform = parent.transform;
    }
    if (node.children) {
      node.children.forEach(function(child) {
        recurse(child, node);
      });
    }
    return node;
  }

  function forward(lambda, phi) {
    var node = face(lambda, phi),
        point = node.project([lambda * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"], phi * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"]]),
        t;
    if (t = node.transform) {
      return [
        t[0] * point[0] + t[1] * point[1] + t[2],
        -(t[3] * point[0] + t[4] * point[1] + t[5])
      ];
    }
    point[1] = -point[1];
    return point;
  }

  // Naive inverse!  A faster solution would use bounding boxes, or even a
  // polygonal quadtree.
  if (hasInverse(root)) forward.invert = function(x, y) {
    var coordinates = faceInvert(root, [x, -y]);
    return coordinates && (coordinates[0] *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], coordinates[1] *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], coordinates);
  };

  function faceInvert(node, coordinates) {
    var invert = node.project.invert,
        t = node.transform,
        point = coordinates;
    if (t) {
      t = Object(_matrix_js__WEBPACK_IMPORTED_MODULE_2__["inverse"])(t);
      point = [
        t[0] * point[0] + t[1] * point[1] + t[2],
        (t[3] * point[0] + t[4] * point[1] + t[5])
      ];
    }
    if (invert && node === faceDegrees(p = invert(point))) return p;
    var p,
        children = node.children;
    for (var i = 0, n = children && children.length; i < n; ++i) {
      if (p = faceInvert(children[i], coordinates)) return p;
    }
  }

  function faceDegrees(coordinates) {
    return face(coordinates[0] * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], coordinates[1] * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]);
  }

  var proj = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(forward),
      stream_ = proj.stream;

  proj.stream = function(stream) {
    var rotate = proj.rotate(),
        rotateStream = stream_(stream),
        sphereStream = (proj.rotate([0, 0]), stream_(stream));
    proj.rotate(rotate);
    rotateStream.sphere = function() {
      sphereStream.polygonStart();
      sphereStream.lineStart();
      outline(sphereStream, root);
      sphereStream.lineEnd();
      sphereStream.polygonEnd();
    };
    return rotateStream;
  };

  return proj.angle(-30);
});

function outline(stream, node, parent) {
  var point,
      edges = node.edges,
      n = edges.length,
      edge,
      multiPoint = {type: "MultiPoint", coordinates: node.face},
      notPoles = node.face.filter(function(d) { return Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(d[1]) !== 90; }),
      b = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoBounds"])({type: "MultiPoint", coordinates: notPoles}),
      inside = false,
      j = -1,
      dx = b[1][0] - b[0][0];
  // TODO
  var c = dx === 180 || dx === 360
      ? [(b[0][0] + b[1][0]) / 2, (b[0][1] + b[1][1]) / 2]
      : Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoCentroid"])(multiPoint);
  // First find the shared edge…
  if (parent) while (++j < n) {
    if (edges[j] === parent) break;
  }
  ++j;
  for (var i = 0; i < n; ++i) {
    edge = edges[(i + j) % n];
    if (Array.isArray(edge)) {
      if (!inside) {
        stream.point((point = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoInterpolate"])(edge[0], c)(_math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]))[0], point[1]);
        inside = true;
      }
      stream.point((point = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoInterpolate"])(edge[1], c)(_math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]))[0], point[1]);
    } else {
      inside = false;
      if (edge !== parent) outline(stream, edge, node);
    }
  }
}

// Tests equality of two spherical points.
function pointEqual(a, b) {
  return a && b && a[0] === b[0] && a[1] === b[1];
}

// Finds a shared edge given two clockwise polygons.
function sharedEdge(a, b) {
  var x, y, n = a.length, found = null;
  for (var i = 0; i < n; ++i) {
    x = a[i];
    for (var j = b.length; --j >= 0;) {
      y = b[j];
      if (x[0] === y[0] && x[1] === y[1]) {
        if (found) return [found, x];
        found = x;
      }
    }
  }
}

// Converts an array of n face vertices to an array of n + 1 edges.
function faceEdges(face) {
  var n = face.length,
      edges = [];
  for (var a = face[n - 1], i = 0; i < n; ++i) edges.push([a, a = face[i]]);
  return edges;
}

function hasInverse(node) {
  return node.project.invert || node.children && node.children.some(hasInverse);
}


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/polyhedral/matrix.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/polyhedral/matrix.js ***!
  \*****************************************************************/
/*! exports provided: default, inverse, multiply */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "inverse", function() { return inverse; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "multiply", function() { return multiply; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo-projection/src/math.js");


// Note: 6-element arrays are used to denote the 3x3 affine transform matrix:
// [a, b, c,
//  d, e, f,
//  0, 0, 1] - this redundant row is left out.

// Transform matrix for [a0, a1] -> [b0, b1].
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var u = subtract(a[1], a[0]),
      v = subtract(b[1], b[0]),
      phi = angle(u, v),
      s = length(u) / length(v);

  return multiply([
    1, 0, a[0][0],
    0, 1, a[0][1]
  ], multiply([
    s, 0, 0,
    0, s, 0
  ], multiply([
    Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi), Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi), 0,
    -Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi), Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi), 0
  ], [
    1, 0, -b[0][0],
    0, 1, -b[0][1]
  ])));
});

// Inverts a transform matrix.
function inverse(m) {
  var k = 1 / (m[0] * m[4] - m[1] * m[3]);
  return [
    k * m[4], -k * m[1], k * (m[1] * m[5] - m[2] * m[4]),
    -k * m[3], k * m[0], k * (m[2] * m[3] - m[0] * m[5])
  ];
}

// Multiplies two 3x2 matrices.
function multiply(a, b) {
  return [
    a[0] * b[0] + a[1] * b[3],
    a[0] * b[1] + a[1] * b[4],
    a[0] * b[2] + a[1] * b[5] + a[2],
    a[3] * b[0] + a[4] * b[3],
    a[3] * b[1] + a[4] * b[4],
    a[3] * b[2] + a[4] * b[5] + a[5]
  ];
}

// Subtracts 2D vectors.
function subtract(a, b) {
  return [a[0] - b[0], a[1] - b[1]];
}

// Magnitude of a 2D vector.
function length(v) {
  return Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(v[0] * v[0] + v[1] * v[1]);
}

// Angle between two 2D vectors.
function angle(a, b) {
  return Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan2"])(a[0] * b[1] - a[1] * b[0], a[0] * b[0] + a[1] * b[1]);
}


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/polyhedral/octahedron.js":
/*!*********************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/polyhedral/octahedron.js ***!
  \*********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
// TODO generate on-the-fly to avoid external modification.
var octahedron = [
  [0, 90],
  [-90, 0], [0, 0], [90, 0], [180, 0],
  [0, -90]
];

/* harmony default export */ __webpack_exports__["default"] = ([
  [0, 2, 1],
  [0, 3, 2],
  [5, 1, 2],
  [5, 2, 3],
  [0, 1, 4],
  [0, 4, 3],
  [5, 4, 1],
  [5, 3, 4]
].map(function(face) {
  return face.map(function(i) {
    return octahedron[i];
  });
}));


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/polyhedral/waterman.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/polyhedral/waterman.js ***!
  \*******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo-projection/src/polyhedral/index.js");
/* harmony import */ var _octahedron_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./octahedron.js */ "./node_modules/d3-geo-projection/src/polyhedral/octahedron.js");





/* harmony default export */ __webpack_exports__["default"] = (function(faceProjection) {

  faceProjection = faceProjection || function(face) {
    var c = face.length === 6 ? Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoCentroid"])({type: "MultiPoint", coordinates: face}) : face[0];
    return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoGnomonic"])().scale(1).translate([0, 0]).rotate([-c[0], -c[1]]);
  };

  var w5 = _octahedron_js__WEBPACK_IMPORTED_MODULE_3__["default"].map(function(face) {
    var xyz = face.map(cartesian),
        n = xyz.length,
        a = xyz[n - 1],
        b,
        hexagon = [];
    for (var i = 0; i < n; ++i) {
      b = xyz[i];
      hexagon.push(spherical([
        a[0] * 0.9486832980505138 + b[0] * 0.31622776601683794,
        a[1] * 0.9486832980505138 + b[1] * 0.31622776601683794,
        a[2] * 0.9486832980505138 + b[2] * 0.31622776601683794
      ]), spherical([
        b[0] * 0.9486832980505138 + a[0] * 0.31622776601683794,
        b[1] * 0.9486832980505138 + a[1] * 0.31622776601683794,
        b[2] * 0.9486832980505138 + a[2] * 0.31622776601683794
      ]));
      a = b;
    }
    return hexagon;
  });

  var cornerNormals = [];

  var parents = [-1, 0, 0, 1, 0, 1, 4, 5];

  w5.forEach(function(hexagon, j) {
    var face = _octahedron_js__WEBPACK_IMPORTED_MODULE_3__["default"][j],
        n = face.length,
        normals = cornerNormals[j] = [];
    for (var i = 0; i < n; ++i) {
      w5.push([
        face[i],
        hexagon[(i * 2 + 2) % (2 * n)],
        hexagon[(i * 2 + 1) % (2 * n)]
      ]);
      parents.push(j);
      normals.push(cross(
        cartesian(hexagon[(i * 2 + 2) % (2 * n)]),
        cartesian(hexagon[(i * 2 + 1) % (2 * n)])
      ));
    }
  });

  var faces = w5.map(function(face) {
    return {
      project: faceProjection(face),
      face: face
    };
  });

  parents.forEach(function(d, i) {
    var parent = faces[d];
    parent && (parent.children || (parent.children = [])).push(faces[i]);
  });

  function face(lambda, phi) {
    var cosphi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        p = [cosphi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda), cosphi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda), Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)];

    var hexagon = lambda < -_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 2 ? phi < 0 ? 6 : 4
        : lambda < 0 ? phi < 0 ? 2 : 0
        : lambda < _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 2 ? phi < 0 ? 3 : 1
        : phi < 0 ? 7 : 5;

    var n = cornerNormals[hexagon];

    return faces[dot(n[0], p) < 0 ? 8 + 3 * hexagon
        : dot(n[1], p) < 0 ? 8 + 3 * hexagon + 1
        : dot(n[2], p) < 0 ? 8 + 3 * hexagon + 2
        : hexagon];
  }

  return Object(_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(faces[0], face)
      .angle(-30)
      .scale(110.625)
      .center([0,45]);
});

function dot(a, b) {
  for (var i = 0, n = a.length, s = 0; i < n; ++i) s += a[i] * b[i];
  return s;
}

function cross(a, b) {
  return [
    a[1] * b[2] - a[2] * b[1],
    a[2] * b[0] - a[0] * b[2],
    a[0] * b[1] - a[1] * b[0]
  ];
}

// Converts 3D Cartesian to spherical coordinates (degrees).
function spherical(cartesian) {
  return [
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(cartesian[1], cartesian[0]) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"],
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["max"])(-1, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["min"])(1, cartesian[2]))) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"]
  ];
}

// Converts spherical coordinates (degrees) to 3D Cartesian.
function cartesian(coordinates) {
  var lambda = coordinates[0] * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"],
      phi = coordinates[1] * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"],
      cosphi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi);
  return [
    cosphi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda),
    cosphi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)
  ];
}


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/project/clockwise.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/project/clockwise.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(ring) {
  if ((n = ring.length) < 4) return false;
  var i = 0,
      n,
      area = ring[n - 1][1] * ring[0][0] - ring[n - 1][0] * ring[0][1];
  while (++i < n) area += ring[i - 1][1] * ring[i][0] - ring[i - 1][0] * ring[i][1];
  return area <= 0;
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/project/contains.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/project/contains.js ***!
  \****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(ring, point) {
  var x = point[0],
      y = point[1],
      contains = false;
  for (var i = 0, n = ring.length, j = n - 1; i < n; j = i++) {
    var pi = ring[i], xi = pi[0], yi = pi[1],
        pj = ring[j], xj = pj[0], yj = pj[1];
    if (((yi > y) ^ (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi)) contains = !contains;
  }
  return contains;
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/project/index.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/project/index.js ***!
  \*************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-geo-projection/src/noop.js");
/* harmony import */ var _clockwise_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./clockwise.js */ "./node_modules/d3-geo-projection/src/project/clockwise.js");
/* harmony import */ var _contains_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./contains.js */ "./node_modules/d3-geo-projection/src/project/contains.js");





/* harmony default export */ __webpack_exports__["default"] = (function(object, projection) {
  var stream = projection.stream, project;
  if (!stream) throw new Error("invalid projection");
  switch (object && object.type) {
    case "Feature": project = projectFeature; break;
    case "FeatureCollection": project = projectFeatureCollection; break;
    default: project = projectGeometry; break;
  }
  return project(object, stream);
});

function projectFeatureCollection(o, stream) {
  return {
    type: "FeatureCollection",
    features: o.features.map(function(f) {
      return projectFeature(f, stream);
    })
  };
}

function projectFeature(o, stream) {
  return {
    type: "Feature",
    id: o.id,
    properties: o.properties,
    geometry: projectGeometry(o.geometry, stream)
  };
}

function projectGeometryCollection(o, stream) {
  return {
    type: "GeometryCollection",
    geometries: o.geometries.map(function(o) {
      return projectGeometry(o, stream);
    })
  };
}

function projectGeometry(o, stream) {
  if (!o) return null;
  if (o.type === "GeometryCollection") return projectGeometryCollection(o, stream);
  var sink;
  switch (o.type) {
    case "Point": sink = sinkPoint; break;
    case "MultiPoint": sink = sinkPoint; break;
    case "LineString": sink = sinkLine; break;
    case "MultiLineString": sink = sinkLine; break;
    case "Polygon": sink = sinkPolygon; break;
    case "MultiPolygon": sink = sinkPolygon; break;
    case "Sphere": sink = sinkPolygon; break;
    default: return null;
  }
  Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoStream"])(o, stream(sink));
  return sink.result();
}

var points = [],
    lines = [];

var sinkPoint = {
  point: function(x, y) {
    points.push([x, y]);
  },
  result: function() {
    var result = !points.length ? null
        : points.length < 2 ? {type: "Point", coordinates: points[0]}
        : {type: "MultiPoint", coordinates: points};
    points = [];
    return result;
  }
};

var sinkLine = {
  lineStart: _noop_js__WEBPACK_IMPORTED_MODULE_1__["default"],
  point: function(x, y) {
    points.push([x, y]);
  },
  lineEnd: function() {
    if (points.length) lines.push(points), points = [];
  },
  result: function() {
    var result = !lines.length ? null
        : lines.length < 2 ? {type: "LineString", coordinates: lines[0]}
        : {type: "MultiLineString", coordinates: lines};
    lines = [];
    return result;
  }
};

var sinkPolygon = {
  polygonStart: _noop_js__WEBPACK_IMPORTED_MODULE_1__["default"],
  lineStart: _noop_js__WEBPACK_IMPORTED_MODULE_1__["default"],
  point: function(x, y) {
    points.push([x, y]);
  },
  lineEnd: function() {
    var n = points.length;
    if (n) {
      do points.push(points[0].slice()); while (++n < 4);
      lines.push(points), points = [];
    }
  },
  polygonEnd: _noop_js__WEBPACK_IMPORTED_MODULE_1__["default"],
  result: function() {
    if (!lines.length) return null;
    var polygons = [],
        holes = [];

    // https://github.com/d3/d3/issues/1558
    lines.forEach(function(ring) {
      if (Object(_clockwise_js__WEBPACK_IMPORTED_MODULE_2__["default"])(ring)) polygons.push([ring]);
      else holes.push(ring);
    });

    holes.forEach(function(hole) {
      var point = hole[0];
      polygons.some(function(polygon) {
        if (Object(_contains_js__WEBPACK_IMPORTED_MODULE_3__["default"])(polygon[0], point)) {
          polygon.push(hole);
          return true;
        }
      }) || polygons.push([hole]);
    });

    lines = [];

    return !polygons.length ? null
        : polygons.length > 1 ? {type: "MultiPolygon", coordinates: polygons}
        : {type: "Polygon", coordinates: polygons[0]};
  }
};


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/quantize.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/quantize.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(input, digits) {
  if (!(0 <= (digits = +digits) && digits <= 20)) throw new Error("invalid digits");

  function quantizePoint(input) {
    var n = input.length, i = 2, output = new Array(n);
    output[0] = +input[0].toFixed(digits);
    output[1] = +input[1].toFixed(digits);
    while (i < n) output[i] = input[i], ++i;
    return output;
  }

  function quantizePoints(input) {
    return input.map(quantizePoint);
  }

  function quantizePointsNoDuplicates(input) {
    var point0 = quantizePoint(input[0]);
    var output = [point0];
    for (var i = 1; i < input.length; i++) {
      var point = quantizePoint(input[i]);
      if (point.length > 2 || point[0] != point0[0] || point[1] != point0[1]) {
        output.push(point);
        point0 = point;
      }
    }
    if (output.length === 1 && input.length > 1) {
      output.push(quantizePoint(input[input.length - 1]));
    }
    return output;
  }

  function quantizePolygon(input) {
    return input.map(quantizePointsNoDuplicates);
  }

  function quantizeGeometry(input) {
    if (input == null) return input;
    var output;
    switch (input.type) {
      case "GeometryCollection": output = {type: "GeometryCollection", geometries: input.geometries.map(quantizeGeometry)}; break;
      case "Point": output = {type: "Point", coordinates: quantizePoint(input.coordinates)}; break;
      case "MultiPoint": output = {type: input.type, coordinates: quantizePoints(input.coordinates)}; break;
      case "LineString": output = {type: input.type, coordinates: quantizePointsNoDuplicates(input.coordinates)}; break;
      case "MultiLineString": case "Polygon": output = {type: input.type, coordinates: quantizePolygon(input.coordinates)}; break;
      case "MultiPolygon": output = {type: "MultiPolygon", coordinates: input.coordinates.map(quantizePolygon)}; break;
      default: return input;
    }
    if (input.bbox != null) output.bbox = input.bbox;
    return output;
  }

  function quantizeFeature(input) {
    var output = {type: "Feature", properties: input.properties, geometry: quantizeGeometry(input.geometry)};
    if (input.id != null) output.id = input.id;
    if (input.bbox != null) output.bbox = input.bbox;
    return output;
  }

  if (input != null) switch (input.type) {
    case "Feature": return quantizeFeature(input);
    case "FeatureCollection": {
      var output = {type: "FeatureCollection", features: input.features.map(quantizeFeature)};
      if (input.bbox != null) output.bbox = input.bbox;
      return output;
    }
    default: return quantizeGeometry(input);
  }

  return input;
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/quincuncial/gringorten.js":
/*!**********************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/quincuncial/gringorten.js ***!
  \**********************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _gringorten_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../gringorten.js */ "./node_modules/d3-geo-projection/src/gringorten.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo-projection/src/quincuncial/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_gringorten_js__WEBPACK_IMPORTED_MODULE_0__["gringortenRaw"])
      .scale(176.423);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/quincuncial/index.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/quincuncial/index.js ***!
  \*****************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo-projection/src/math.js");



/* harmony default export */ __webpack_exports__["default"] = (function(project) {
  var dx = project(_math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"], 0)[0] - project(-_math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"], 0)[0];

  function projectQuincuncial(lambda, phi) {
    var t = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda) < _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"],
        p = project(t ? lambda : lambda > 0 ? lambda - _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] : lambda + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"], phi),
        x = (p[0] - p[1]) * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt1_2"],
        y = (p[0] + p[1]) * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt1_2"];
    if (t) return [x, y];
    var d = dx * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt1_2"],
        s = x > 0 ^ y > 0 ? -1 : 1;
    return [s * x - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(y) * d, s * y - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(x) * d];
  }

  if (project.invert) projectQuincuncial.invert = function(x0, y0) {
    var x = (x0 + y0) * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt1_2"],
        y = (y0 - x0) * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt1_2"],
        t = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x) < 0.5 * dx && Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y) < 0.5 * dx;

    if (!t) {
      var d = dx * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt1_2"],
          s = x > 0 ^ y > 0 ? -1 : 1,
          x1 = -s * x0 + (y > 0 ? 1 : -1) * d,
          y1 = -s * y0 + (x > 0 ? 1 : -1) * d;
      x = (-x1 - y1) * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt1_2"];
      y = (x1 - y1) * _math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt1_2"];
    }

    var p = project.invert(x, y);
    if (!t) p[0] += x > 0 ? _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] : -_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"];
    return p;
  };

  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(projectQuincuncial)
      .rotate([-90, -90, 45])
      .clipAngle(180 - 1e-3);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/quincuncial/peirce.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/quincuncial/peirce.js ***!
  \******************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _guyou_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../guyou.js */ "./node_modules/d3-geo-projection/src/guyou.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo-projection/src/quincuncial/index.js");



/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_1__["default"])(_guyou_js__WEBPACK_IMPORTED_MODULE_0__["guyouRaw"])
      .scale(111.48);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/rectangularPolyconic.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/rectangularPolyconic.js ***!
  \********************************************************************/
/*! exports provided: rectangularPolyconicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rectangularPolyconicRaw", function() { return rectangularPolyconicRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _parallel1_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./parallel1.js */ "./node_modules/d3-geo-projection/src/parallel1.js");



function rectangularPolyconicRaw(phi0) {
  var sinPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi0);

  function forward(lambda, phi) {
    var A = sinPhi0 ? Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])(lambda * sinPhi0 / 2) / sinPhi0 : lambda / 2;
    if (!phi) return [2 * A, -phi0];
    var E = 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"])(A * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi)),
        cotPhi = 1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])(phi);
    return [
      Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(E) * cotPhi,
      phi + (1 - Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(E)) * cotPhi - phi0
    ];
  }

  // TODO return null for points outside outline.
  forward.invert = function(x, y) {
    if (Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(y += phi0) < _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) return [sinPhi0 ? 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"])(sinPhi0 * x / 2) / sinPhi0 : x, 0];
    var k = x * x + y * y,
        phi = 0,
        i = 10, delta;
    do {
      var tanPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])(phi),
          secPhi = 1 / Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi),
          j = k - 2 * y * phi + phi * phi;
      phi -= delta = (tanPhi * j + 2 * (phi - y)) / (2 + j * secPhi * secPhi + 2 * (phi - y) * tanPhi);
    } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"] && --i > 0);
    var E = x * (tanPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])(phi)),
        A = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(y) < Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(phi + 1 / tanPhi) ? Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["asin"])(E) * 0.5 : Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["acos"])(E) * 0.5 + _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"] / 4) / Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi);
    return [
      sinPhi0 ? 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"])(sinPhi0 * A) / sinPhi0 : 2 * A,
      phi
    ];
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_parallel1_js__WEBPACK_IMPORTED_MODULE_1__["default"])(rectangularPolyconicRaw)
      .scale(131.215);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/robinson.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/robinson.js ***!
  \********************************************************/
/*! exports provided: robinsonRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "robinsonRaw", function() { return robinsonRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



var K = [
  [0.9986, -0.062],
  [1.0000, 0.0000],
  [0.9986, 0.0620],
  [0.9954, 0.1240],
  [0.9900, 0.1860],
  [0.9822, 0.2480],
  [0.9730, 0.3100],
  [0.9600, 0.3720],
  [0.9427, 0.4340],
  [0.9216, 0.4958],
  [0.8962, 0.5571],
  [0.8679, 0.6176],
  [0.8350, 0.6769],
  [0.7986, 0.7346],
  [0.7597, 0.7903],
  [0.7186, 0.8435],
  [0.6732, 0.8936],
  [0.6213, 0.9394],
  [0.5722, 0.9761],
  [0.5322, 1.0000]
];

K.forEach(function(d) {
  d[1] *= 1.0144;
});

function robinsonRaw(lambda, phi) {
  var i = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["min"])(18, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) * 36 / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]),
      i0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["floor"])(i),
      di = i - i0,
      ax = (k = K[i0])[0],
      ay = k[1],
      bx = (k = K[++i0])[0],
      by = k[1],
      cx = (k = K[Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["min"])(19, ++i0)])[0],
      cy = k[1],
      k;
  return [
    lambda * (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2),
    (phi > 0 ? _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] : -_math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2)
  ];
}

robinsonRaw.invert = function(x, y) {
  var yy = y / _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"],
      phi = yy * 90,
      i = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["min"])(18, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi / 5)),
      i0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["max"])(0, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["floor"])(i));
  do {
    var ay = K[i0][1],
        by = K[i0 + 1][1],
        cy = K[Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["min"])(19, i0 + 2)][1],
        u = cy - ay,
        v = cy - 2 * by + ay,
        t = 2 * (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(yy) - by) / u,
        c = v / u,
        di = t * (1 - c * t * (1 - 2 * c * t));
    if (di >= 0 || i0 === 1) {
      phi = (y >= 0 ? 5 : -5) * (di + i);
      var j = 50, delta;
      do {
        i = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["min"])(18, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) / 5);
        i0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["floor"])(i);
        di = i - i0;
        ay = K[i0][1];
        by = K[i0 + 1][1];
        cy = K[Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["min"])(19, i0 + 2)][1];
        phi -= (delta = (y >= 0 ? _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] : -_math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) * (by + di * (cy - ay) / 2 + di * di * (cy - 2 * by + ay) / 2) - y) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"];
      } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon2"] && --j > 0);
      break;
    }
  } while (--i0 >= 0);
  var ax = K[i0][0],
      bx = K[i0 + 1][0],
      cx = K[Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["min"])(19, i0 + 2)][0];
  return [
    x / (bx + di * (cx - ax) / 2 + di * di * (cx - 2 * bx + ax) / 2),
    phi * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(robinsonRaw)
      .scale(152.63);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/satellite.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/satellite.js ***!
  \*********************************************************/
/*! exports provided: satelliteRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "satelliteRaw", function() { return satelliteRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function satelliteVerticalRaw(P) {
  function forward(lambda, phi) {
    var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        k = (P - 1) / (P - cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda));
    return [
      k * cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda),
      k * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)
    ];
  }

  forward.invert = function(x, y) {
    var rho2 = x * x + y * y,
        rho = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(rho2),
        sinc = (P - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 - rho2 * (P + 1) / (P - 1))) / ((P - 1) / rho + rho / (P - 1));
    return [
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(x * sinc, rho * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 - sinc * sinc)),
      rho ? Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(y * sinc / rho) : 0
    ];
  };

  return forward;
}

function satelliteRaw(P, omega) {
  var vertical = satelliteVerticalRaw(P);
  if (!omega) return vertical;
  var cosOmega = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(omega),
      sinOmega = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(omega);

  function forward(lambda, phi) {
    var coordinates = vertical(lambda, phi),
        y = coordinates[1],
        A = y * sinOmega / (P - 1) + cosOmega;
    return [
      coordinates[0] * cosOmega / A,
      y / A
    ];
  }

  forward.invert = function(x, y) {
    var k = (P - 1) / (P - 1 - y * sinOmega);
    return vertical.invert(k * x, k * y * cosOmega);
  };

  return forward;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var distance = 2,
      omega = 0,
      m = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(satelliteRaw),
      p = m(distance, omega);

  // As a multiple of radius.
  p.distance = function(_) {
    if (!arguments.length) return distance;
    return m(distance = +_, omega);
  };

  p.tilt = function(_) {
    if (!arguments.length) return omega * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"];
    return m(distance, omega = _ * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]);
  };

  return p
      .scale(432.147)
      .clipAngle(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(1 / distance) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"] - 1e-6);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/sinuMollweide.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/sinuMollweide.js ***!
  \*************************************************************/
/*! exports provided: sinuMollweidePhi, sinuMollweideY, sinuMollweideRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinuMollweidePhi", function() { return sinuMollweidePhi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinuMollweideY", function() { return sinuMollweideY; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinuMollweideRaw", function() { return sinuMollweideRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _mollweide_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mollweide.js */ "./node_modules/d3-geo-projection/src/mollweide.js");
/* harmony import */ var _sinusoidal_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sinusoidal.js */ "./node_modules/d3-geo-projection/src/sinusoidal.js");




var sinuMollweidePhi = 0.7109889596207567;

var sinuMollweideY = 0.0528035274542;

function sinuMollweideRaw(lambda, phi) {
  return phi > -sinuMollweidePhi
      ? (lambda = Object(_mollweide_js__WEBPACK_IMPORTED_MODULE_1__["mollweideRaw"])(lambda, phi), lambda[1] += sinuMollweideY, lambda)
      : Object(_sinusoidal_js__WEBPACK_IMPORTED_MODULE_2__["sinusoidalRaw"])(lambda, phi);
}

sinuMollweideRaw.invert = function(x, y) {
  return y > -sinuMollweidePhi
      ? _mollweide_js__WEBPACK_IMPORTED_MODULE_1__["mollweideRaw"].invert(x, y - sinuMollweideY)
      : _sinusoidal_js__WEBPACK_IMPORTED_MODULE_2__["sinusoidalRaw"].invert(x, y);
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(sinuMollweideRaw)
      .rotate([-20, -55])
      .scale(164.263)
      .center([0, -5.4036]);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/sinusoidal.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/sinusoidal.js ***!
  \**********************************************************/
/*! exports provided: sinusoidalRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sinusoidalRaw", function() { return sinusoidalRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function sinusoidalRaw(lambda, phi) {
  return [lambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi), phi];
}

sinusoidalRaw.invert = function(x, y) {
  return [x / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(y), y];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(sinusoidalRaw)
      .scale(152.63);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/square.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/square.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");


/* harmony default export */ __webpack_exports__["default"] = (function(project) {
  var dx = project(_math_js__WEBPACK_IMPORTED_MODULE_0__["halfPi"], 0)[0] - project(-_math_js__WEBPACK_IMPORTED_MODULE_0__["halfPi"], 0)[0];

  function projectSquare(lambda, phi) {
    var s = lambda > 0 ? -0.5 : 0.5,
        point = project(lambda + s * _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"], phi);
    point[0] -= s * dx;
    return point;
  }

  if (project.invert) projectSquare.invert = function(x, y) {
    var s = x > 0 ? -0.5 : 0.5,
        location = project.invert(x + s * dx, y),
        lambda = location[0] - s * _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"];
    if (lambda < -_math_js__WEBPACK_IMPORTED_MODULE_0__["pi"]) lambda += 2 * _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"];
    else if (lambda > _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"]) lambda -= 2 * _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"];
    location[0] = lambda;
    return location;
  };

  return projectSquare;
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/stitch.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/stitch.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var epsilon = 1e-4,
    epsilonInverse = 1e4,
    x0 = -180, x0e = x0 + epsilon,
    x1 = 180, x1e = x1 - epsilon,
    y0 = -90, y0e = y0 + epsilon,
    y1 = 90, y1e = y1 - epsilon;

function nonempty(coordinates) {
  return coordinates.length > 0;
}

function quantize(x) {
  return Math.floor(x * epsilonInverse) / epsilonInverse;
}

function normalizePoint(y) {
  return y === y0 || y === y1 ? [0, y] : [x0, quantize(y)]; // pole or antimeridian?
}

function clampPoint(p) {
  var x = p[0], y = p[1], clamped = false;
  if (x <= x0e) x = x0, clamped = true;
  else if (x >= x1e) x = x1, clamped = true;
  if (y <= y0e) y = y0, clamped = true;
  else if (y >= y1e) y = y1, clamped = true;
  return clamped ? [x, y] : p;
}

function clampPoints(points) {
  return points.map(clampPoint);
}

// For each ring, detect where it crosses the antimeridian or pole.
function extractFragments(rings, polygon, fragments) {
  for (var j = 0, m = rings.length; j < m; ++j) {
    var ring = rings[j].slice();

    // By default, assume that this ring doesn’t need any stitching.
    fragments.push({index: -1, polygon: polygon, ring: ring});

    for (var i = 0, n = ring.length; i < n; ++i) {
      var point = ring[i],
          x = point[0],
          y = point[1];

      // If this is an antimeridian or polar point…
      if (x <= x0e || x >= x1e || y <= y0e || y >= y1e) {
        ring[i] = clampPoint(point);

        // Advance through any antimeridian or polar points…
        for (var k = i + 1; k < n; ++k) {
          var pointk = ring[k],
              xk = pointk[0],
              yk = pointk[1];
          if (xk > x0e && xk < x1e && yk > y0e && yk < y1e) break;
        }

        // If this was just a single antimeridian or polar point,
        // we don’t need to cut this ring into a fragment;
        // we can just leave it as-is.
        if (k === i + 1) continue;

        // Otherwise, if this is not the first point in the ring,
        // cut the current fragment so that it ends at the current point.
        // The current point is also normalized for later joining.
        if (i) {
          var fragmentBefore = {index: -1, polygon: polygon, ring: ring.slice(0, i + 1)};
          fragmentBefore.ring[fragmentBefore.ring.length - 1] = normalizePoint(y);
          fragments[fragments.length - 1] = fragmentBefore;
        }

        // If the ring started with an antimeridian fragment,
        // we can ignore that fragment entirely.
        else fragments.pop();

        // If the remainder of the ring is an antimeridian fragment,
        // move on to the next ring.
        if (k >= n) break;

        // Otherwise, add the remaining ring fragment and continue.
        fragments.push({index: -1, polygon: polygon, ring: ring = ring.slice(k - 1)});
        ring[0] = normalizePoint(ring[0][1]);
        i = -1;
        n = ring.length;
      }
    }
  }
}

// Now stitch the fragments back together into rings.
function stitchFragments(fragments) {
  var i, n = fragments.length;

  // To connect the fragments start-to-end, create a simple index by end.
  var fragmentByStart = {},
      fragmentByEnd = {},
      fragment,
      start,
      startFragment,
      end,
      endFragment;

  // For each fragment…
  for (i = 0; i < n; ++i) {
    fragment = fragments[i];
    start = fragment.ring[0];
    end = fragment.ring[fragment.ring.length - 1];

    // If this fragment is closed, add it as a standalone ring.
    if (start[0] === end[0] && start[1] === end[1]) {
      fragment.polygon.push(fragment.ring);
      fragments[i] = null;
      continue;
    }

    fragment.index = i;
    fragmentByStart[start] = fragmentByEnd[end] = fragment;
  }

  // For each open fragment…
  for (i = 0; i < n; ++i) {
    fragment = fragments[i];
    if (fragment) {
      start = fragment.ring[0];
      end = fragment.ring[fragment.ring.length - 1];
      startFragment = fragmentByEnd[start];
      endFragment = fragmentByStart[end];

      delete fragmentByStart[start];
      delete fragmentByEnd[end];

      // If this fragment is closed, add it as a standalone ring.
      if (start[0] === end[0] && start[1] === end[1]) {
        fragment.polygon.push(fragment.ring);
        continue;
      }

      if (startFragment) {
        delete fragmentByEnd[start];
        delete fragmentByStart[startFragment.ring[0]];
        startFragment.ring.pop(); // drop the shared coordinate
        fragments[startFragment.index] = null;
        fragment = {index: -1, polygon: startFragment.polygon, ring: startFragment.ring.concat(fragment.ring)};

        if (startFragment === endFragment) {
          // Connect both ends to this single fragment to create a ring.
          fragment.polygon.push(fragment.ring);
        } else {
          fragment.index = n++;
          fragments.push(fragmentByStart[fragment.ring[0]] = fragmentByEnd[fragment.ring[fragment.ring.length - 1]] = fragment);
        }
      } else if (endFragment) {
        delete fragmentByStart[end];
        delete fragmentByEnd[endFragment.ring[endFragment.ring.length - 1]];
        fragment.ring.pop(); // drop the shared coordinate
        fragment = {index: n++, polygon: endFragment.polygon, ring: fragment.ring.concat(endFragment.ring)};
        fragments[endFragment.index] = null;
        fragments.push(fragmentByStart[fragment.ring[0]] = fragmentByEnd[fragment.ring[fragment.ring.length - 1]] = fragment);
      } else {
        fragment.ring.push(fragment.ring[0]); // close ring
        fragment.polygon.push(fragment.ring);
      }
    }
  }
}

function stitchFeature(input) {
  var output = {type: "Feature", geometry: stitchGeometry(input.geometry)};
  if (input.id != null) output.id = input.id;
  if (input.bbox != null) output.bbox = input.bbox;
  if (input.properties != null) output.properties = input.properties;
  return output;
}

function stitchGeometry(input) {
  if (input == null) return input;
  var output, fragments, i, n;
  switch (input.type) {
    case "GeometryCollection": output = {type: "GeometryCollection", geometries: input.geometries.map(stitchGeometry)}; break;
    case "Point": output = {type: "Point", coordinates: clampPoint(input.coordinates)}; break;
    case "MultiPoint": case "LineString": output = {type: input.type, coordinates: clampPoints(input.coordinates)}; break;
    case "MultiLineString": output = {type: "MultiLineString", coordinates: input.coordinates.map(clampPoints)}; break;
    case "Polygon": {
      var polygon = [];
      extractFragments(input.coordinates, polygon, fragments = []);
      stitchFragments(fragments);
      output = {type: "Polygon", coordinates: polygon};
      break;
    }
    case "MultiPolygon": {
      fragments = [], i = -1, n = input.coordinates.length;
      var polygons = new Array(n);
      while (++i < n) extractFragments(input.coordinates[i], polygons[i] = [], fragments);
      stitchFragments(fragments);
      output = {type: "MultiPolygon", coordinates: polygons.filter(nonempty)};
      break;
    }
    default: return input;
  }
  if (input.bbox != null) output.bbox = input.bbox;
  return output;
}

/* harmony default export */ __webpack_exports__["default"] = (function(input) {
  if (input == null) return input;
  switch (input.type) {
    case "Feature": return stitchFeature(input);
    case "FeatureCollection": {
      var output = {type: "FeatureCollection", features: input.features.map(stitchFeature)};
      if (input.bbox != null) output.bbox = input.bbox;
      return output;
    }
    default: return stitchGeometry(input);
  }
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/times.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/times.js ***!
  \*****************************************************/
/*! exports provided: timesRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "timesRaw", function() { return timesRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function timesRaw(lambda, phi) {
  var t = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(phi / 2),
      s = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["quarterPi"] * t);
  return [
    lambda * (0.74482 - 0.34588 * s * s),
    1.70711 * t
  ];
}

timesRaw.invert = function(x, y) {
  var t = y / 1.70711,
      s = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["quarterPi"] * t);
  return [
    x / (0.74482 - 0.34588 * s * s),
    2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan"])(t)
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(timesRaw)
      .scale(146.153);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/twoPoint.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/twoPoint.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



// Compute the origin as the midpoint of the two reference points.
// Rotate one of the reference points by the origin.
// Apply the spherical law of sines to compute gamma rotation.
/* harmony default export */ __webpack_exports__["default"] = (function(raw, p0, p1) {
  var i = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoInterpolate"])(p0, p1),
      o = i(0.5),
      a = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoRotation"])([-o[0], -o[1]])(p0),
      b = i.distance / 2,
      y = -Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(a[1] * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(b)),
      R = [-o[0], -o[1], -(a[0] > 0 ? _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] - y : y) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"]],
      p = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(raw(b)).rotate(R),
      r = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoRotation"])(R),
      center = p.center;

  delete p.rotate;

  p.center = function(_) {
    return arguments.length ? center(r(_)) : r.invert(center());
  };

  return p
      .clipAngle(90);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/twoPointAzimuthal.js":
/*!*****************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/twoPointAzimuthal.js ***!
  \*****************************************************************/
/*! exports provided: twoPointAzimuthalRaw, twoPointAzimuthalUsa, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "twoPointAzimuthalRaw", function() { return twoPointAzimuthalRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "twoPointAzimuthalUsa", function() { return twoPointAzimuthalUsa; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return twoPointAzimuthal; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _twoPoint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./twoPoint.js */ "./node_modules/d3-geo-projection/src/twoPoint.js");




function twoPointAzimuthalRaw(d) {
  var cosd = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(d);

  function forward(lambda, phi) {
    var coordinates = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoGnomonicRaw"])(lambda, phi);
    coordinates[0] *= cosd;
    return coordinates;
  }

  forward.invert = function(x, y) {
    return d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoGnomonicRaw"].invert(x / cosd, y);
  };

  return forward;
}

function twoPointAzimuthalUsa() {
  return twoPointAzimuthal([-158, 21.5], [-77, 39])
      .clipAngle(60)
      .scale(400);
}

function twoPointAzimuthal(p0, p1) {
  return Object(_twoPoint_js__WEBPACK_IMPORTED_MODULE_2__["default"])(twoPointAzimuthalRaw, p0, p1);
}


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/twoPointEquidistant.js":
/*!*******************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/twoPointEquidistant.js ***!
  \*******************************************************************/
/*! exports provided: twoPointEquidistantRaw, twoPointEquidistantUsa, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "twoPointEquidistantRaw", function() { return twoPointEquidistantRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "twoPointEquidistantUsa", function() { return twoPointEquidistantUsa; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return twoPointEquidistant; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _twoPoint_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./twoPoint.js */ "./node_modules/d3-geo-projection/src/twoPoint.js");




function twoPointEquidistantRaw(z0) {
  if (!(z0 *= 2)) return d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoAzimuthalEquidistantRaw"];
  var lambdaa = -z0 / 2,
      lambdab = -lambdaa,
      z02 = z0 * z0,
      tanLambda0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(lambdab),
      S = 0.5 / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambdab);

  function forward(lambda, phi) {
    var za = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda - lambdaa)),
        zb = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda - lambdab)),
        ys = phi < 0 ? -1 : 1;
    za *= za, zb *= zb;
    return [
      (za - zb) / (2 * z0),
      ys * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(4 * z02 * zb - (z02 - za + zb) * (z02 - za + zb)) / (2 * z0)
    ];
  }

  forward.invert = function(x, y) {
    var y2 = y * y,
        cosza = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(y2 + (t = x + lambdaa) * t)),
        coszb = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(y2 + (t = x + lambdab) * t)),
        t,
        d;
    return [
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(d = cosza - coszb, t = (cosza + coszb) * tanLambda0),
      (y < 0 ? -1 : 1) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(t * t + d * d) * S)
    ];
  };

  return forward;
}

function twoPointEquidistantUsa() {
  return twoPointEquidistant([-158, 21.5], [-77, 39])
      .clipAngle(130)
      .scale(122.571);
}

function twoPointEquidistant(p0, p1) {
  return Object(_twoPoint_js__WEBPACK_IMPORTED_MODULE_2__["default"])(twoPointEquidistantRaw, p0, p1);
}


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/vanDerGrinten.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/vanDerGrinten.js ***!
  \*************************************************************/
/*! exports provided: vanDerGrintenRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vanDerGrintenRaw", function() { return vanDerGrintenRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function vanDerGrintenRaw(lambda, phi) {
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) return [lambda, 0];
  var sinTheta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi / _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]),
      theta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(sinTheta);
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) return [0, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(phi) * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(theta / 2)];
  var cosTheta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta),
      A = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / lambda - lambda / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) / 2,
      A2 = A * A,
      G = cosTheta / (sinTheta + cosTheta - 1),
      P = G * (2 / sinTheta - 1),
      P2 = P * P,
      P2_A2 = P2 + A2,
      G_P2 = G - P2,
      Q = A2 + G;
  return [
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(lambda) * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * (A * G_P2 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(A2 * G_P2 * G_P2 - P2_A2 * (G * G - P2))) / P2_A2,
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(phi) * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * (P * Q - A * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])((A2 + 1) * P2_A2 - Q * Q)) / P2_A2
  ];
}

vanDerGrintenRaw.invert = function(x, y) {
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) return [x, 0];
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) return [0, _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan"])(y / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]))];
  var x2 = (x /= _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) * x,
      y2 = (y /= _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) * y,
      x2_y2 = x2 + y2,
      z = x2_y2 * x2_y2,
      c1 = -Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y) * (1 + x2_y2),
      c2 = c1 - 2 * y2 + x2,
      c3 = -2 * c1 + 1 + 2 * y2 + z,
      d = y2 / c3 + (2 * c2 * c2 * c2 / (c3 * c3 * c3) - 9 * c1 * c2 / (c3 * c3)) / 27,
      a1 = (c1 - c2 * c2 / (3 * c3)) / c3,
      m1 = 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(-a1 / 3),
      theta1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(3 * d / (a1 * m1)) / 3;
  return [
    _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * (x2_y2 - 1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 + 2 * (x2 - y2) + z)) / (2 * x),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(y) * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * (-m1 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta1 + _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 3) - c2 / (3 * c3))
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(vanDerGrintenRaw)
      .scale(79.4183);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/vanDerGrinten2.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/vanDerGrinten2.js ***!
  \**************************************************************/
/*! exports provided: vanDerGrinten2Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vanDerGrinten2Raw", function() { return vanDerGrinten2Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function vanDerGrinten2Raw(lambda, phi) {
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) return [lambda, 0];
  var sinTheta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi / _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]),
      theta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(sinTheta);
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) return [0, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(phi) * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(theta / 2)];
  var cosTheta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta),
      A = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / lambda - lambda / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) / 2,
      A2 = A * A,
      x1 = cosTheta * (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 + A2) - A * cosTheta) / (1 + A2 * sinTheta * sinTheta);
  return [
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(lambda) * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * x1,
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(phi) * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 - x1 * (2 * A + x1))
  ];
}

vanDerGrinten2Raw.invert = function(x, y) {
  if (!x) return [0, _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan"])(y / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]))];
  var x1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]),
      A = (1 - x1 * x1 - (y /= _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) * y) / (2 * x1),
      A2 = A * A,
      B = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(A2 + 1);
  return [
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(x) * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * (B - A),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(y) * _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])((1 - 2 * A * x1) * (A + B) - x1), Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(B + A + x1)))
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(vanDerGrinten2Raw)
      .scale(79.4183);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/vanDerGrinten3.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/vanDerGrinten3.js ***!
  \**************************************************************/
/*! exports provided: vanDerGrinten3Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vanDerGrinten3Raw", function() { return vanDerGrinten3Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function vanDerGrinten3Raw(lambda, phi) {
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) return [lambda, 0];
  var sinTheta = phi / _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"],
      theta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(sinTheta);
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi) - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) return [0, _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(theta / 2)];
  var A = (_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / lambda - lambda / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) / 2,
      y1 = sinTheta / (1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(theta));
  return [
    _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(lambda) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(A * A + 1 - y1 * y1) - A),
    _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * y1
  ];
}

vanDerGrinten3Raw.invert = function(x, y) {
  if (!y) return [x, 0];
  var y1 = y / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"],
      A = (_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * (1 - y1 * y1) - x * x) / (2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * x);
  return [
    x ? _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(x) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(A * A + 1) - A) : 0,
    _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan"])(y1))
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(vanDerGrinten3Raw)
        .scale(79.4183);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/vanDerGrinten4.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/vanDerGrinten4.js ***!
  \**************************************************************/
/*! exports provided: vanDerGrinten4Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "vanDerGrinten4Raw", function() { return vanDerGrinten4Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function vanDerGrinten4Raw(lambda, phi) {
  if (!phi) return [lambda, 0];
  var phi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(phi);
  if (!lambda || phi0 === _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) return [0, phi];
  var B = phi0 / _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"],
      B2 = B * B,
      C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),
      C2 = C * C,
      BC = B * C,
      B_C2 = B2 + C2 + 2 * BC,
      B_3C = B + 3 * C,
      lambda0 = lambda / _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"],
      lambda1 = lambda0 + 1 / lambda0,
      D = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda) - _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(lambda1 * lambda1 - 4),
      D2 = D * D,
      F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + 12 * BC * C2 + 4 * C2 * C2),
      x1 = (D * (B_C2 + C2 - 1) + 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(F)) / (4 * B_C2 + D2);
  return [
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(lambda) * _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] * x1,
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(phi) * _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 + D * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x1) - x1 * x1)
  ];
}

vanDerGrinten4Raw.invert = function(x, y) {
  var delta;
  if (!x || !y) return [x, y];
  var sy = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(y);
  y = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y) / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"];
  var x1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(x) * x / _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"],
      D = (x1 * x1 - 1 + 4 * y * y) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x1),
      D2 = D * D,
      B = y * (2 - (y > 0.5 ? Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["min"])(y, Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x)) : 0)),
      r = x * x + y * y,
      i = 50;
  do {
    var B2 = B * B,
        C = (8 * B - B2 * (B2 + 2) - 5) / (2 * B2 * (B - 1)),
        C_ = (3 * B - B2 * B - 10) / (2 * B2 * B),
        C2 = C * C,
        BC = B * C,
        B_C = B + C,
        B_C2 = B_C * B_C,
        B_3C = B + 3 * C,
        F = B_C2 * (B2 + C2 * D2 - 1) + (1 - B2) * (B2 * (B_3C * B_3C + 4 * C2) + C2 * (12 * BC + 4 * C2)),
        F_ = -2 * B_C * (4 * BC * C2 + (1 - 4 * B2 + 3 * B2 * B2) * (1 + C_) + C2 * (-6 + 14 * B2 - D2 + (-8 + 8 * B2 - 2 * D2) * C_) + BC * (-8 + 12 * B2 + (-10 + 10 * B2 - D2) * C_)),
        sqrtF = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(F),
        f = D * (B_C2 + C2 - 1) + 2 * sqrtF - x1 * (4 * B_C2 + D2),
        f_ = D * (2 * C * C_ + 2 * B_C * (1 + C_)) + F_ / sqrtF - 8 * B_C * (D * (-1 + C2 + B_C2) + 2 * sqrtF) * (1 + C_) / (D2 + 4 * B_C2);
    B -= delta = f / f_;
  } while (delta * r * r > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);
  return [
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sign"])(x) * (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(D * D + 4) + D) * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 4,
    sy * _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] * B
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(vanDerGrinten4Raw)
      .scale(127.16);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/wagner.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/wagner.js ***!
  \******************************************************/
/*! exports provided: wagnerRaw, default, wagner7 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wagnerRaw", function() { return wagnerRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return wagner; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wagner7", function() { return wagner7; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function wagnerFormula(cx, cy, m1, m2, n) {
  function forward(lambda, phi) {
    var s = m1 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(m2 * phi),
        c0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 - s * s),
        c1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(2 / (1 + c0 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda *= n)));
    return [
      cx * c0 * c1 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda),
      cy * s * c1
    ];
  }

  forward.invert = function(x, y) {
    var t1 = x / cx,
        t2 = y / cy,
        p = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(t1 * t1 + t2 * t2),
        c = 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(p / 2);
    return [
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(x * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["tan"])(c), cx * p) / n,
      p && Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(y * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(c) / (cy * m1 * p)) / m2
    ];
  };

  return forward;
}

function wagnerRaw(poleline, parallels, inflation, ratio) {
  // 60 is always used as reference parallel
  var phi1 = _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] / 3;

  // sanitizing the input values
  // poleline and parallels may approximate but never equal 0
  poleline = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["max"])(poleline, _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]);
  parallels = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["max"])(parallels, _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]);
  // poleline must be <= 90; parallels may approximate but never equal 180
  poleline = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["min"])(poleline, _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]);
  parallels = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["min"])(parallels, _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] - _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]);
  // 0 <= inflation <= 99.999
  inflation = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["max"])(inflation, 0);
  inflation = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["min"])(inflation, 100 - _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]);
  // ratio > 0.
  // sensible values, i.e. something that renders a map which still can be
  // recognized as world map, are e.g. 20 <= ratio <= 1000.
  ratio = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["max"])(ratio, _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]);

  // convert values from boehm notation
  // areal inflation e.g. from 0 to 1 or 20 to 1.2:
  var vinflation = inflation/100 + 1;
  // axial ratio e.g. from 200 to 2:
  var vratio  = ratio / 100;
  // the other ones are a bit more complicated...
  var m2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["acos"])(vinflation * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi1)) / phi1,
      m1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(poleline) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(m2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]),
      n = parallels / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"],
      k = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(vratio * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(poleline / 2) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(parallels / 2)),
      cx = k / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(n * m1 * m2),
      cy = 1 / (k * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(n * m1 * m2));

  return wagnerFormula(cx, cy, m1, m2, n);
}

function wagner() {
  // default values generate wagner8
  var poleline = 65 * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"],
      parallels = 60 * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"],
      inflation = 20,
      ratio = 200,
      mutate = Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjectionMutator"])(wagnerRaw),
      projection = mutate(poleline, parallels, inflation, ratio);

  projection.poleline = function(_) {
    return arguments.length ? mutate(poleline = +_ * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], parallels, inflation, ratio) : poleline * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"];
  };

  projection.parallels = function(_) {
    return arguments.length ? mutate(poleline, parallels = +_ * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], inflation, ratio) : parallels * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"];
  };
  projection.inflation = function(_) {
    return arguments.length ? mutate(poleline, parallels, inflation = +_, ratio) : inflation;
  };
  projection.ratio = function(_) {
    return arguments.length ? mutate(poleline, parallels, inflation, ratio = +_) : ratio;
  };

  return projection
    .scale(163.775);
}

function wagner7() {
  return wagner()
      .poleline(65)
      .parallels(60)
      .inflation(0)
      .ratio(200)
      .scale(172.633);
}


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/wagner4.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/wagner4.js ***!
  \*******************************************************/
/*! exports provided: wagner4Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wagner4Raw", function() { return wagner4Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");
/* harmony import */ var _mollweide_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mollweide.js */ "./node_modules/d3-geo-projection/src/mollweide.js");




var A = 4 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] + 3 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(3),
    B = 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(3) / A);

var wagner4Raw = Object(_mollweide_js__WEBPACK_IMPORTED_MODULE_2__["mollweideBromleyRaw"])(B * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(3) / _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"], B, A / 6);

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(wagner4Raw)
      .scale(176.84);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/wagner6.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/wagner6.js ***!
  \*******************************************************/
/*! exports provided: wagner6Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wagner6Raw", function() { return wagner6Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function wagner6Raw(lambda, phi) {
  return [lambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 - 3 * phi * phi / (_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"])), phi];
}

wagner6Raw.invert = function(x, y) {
  return [x / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 - 3 * y * y / (_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] * _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"])), y];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(wagner6Raw)
      .scale(152.63);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/wiechel.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/wiechel.js ***!
  \*******************************************************/
/*! exports provided: wiechelRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "wiechelRaw", function() { return wiechelRaw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");



function wiechelRaw(lambda, phi) {
  var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      sinPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda) * cosPhi,
      sin1_Phi = 1 - sinPhi,
      cosLambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) * cosPhi, -Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi))),
      sinLambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda);
  cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(1 - sinPhi * sinPhi);
  return [
    sinLambda * cosPhi - cosLambda * sin1_Phi,
    -cosLambda * cosPhi - sinLambda * sin1_Phi
  ];
}

wiechelRaw.invert = function(x, y) {
  var w = (x * x + y * y) / -2,
      k = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(-w * (2 + w)),
      b = y * w + x * k,
      a = x * w - y * k,
      D = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(a * a + b * b);
  return [
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(k * b, D * (1 + w)),
    D ? -Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(k * a / D) : 0
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(wiechelRaw)
      .rotate([0, -90, 45])
      .scale(124.75)
      .clipAngle(180 - 1e-3);
});


/***/ }),

/***/ "./node_modules/d3-geo-projection/src/winkel3.js":
/*!*******************************************************!*\
  !*** ./node_modules/d3-geo-projection/src/winkel3.js ***!
  \*******************************************************/
/*! exports provided: winkel3Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "winkel3Raw", function() { return winkel3Raw; });
/* harmony import */ var d3_geo__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-geo */ "./node_modules/d3-geo/src/index.js");
/* harmony import */ var _aitoff_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./aitoff.js */ "./node_modules/d3-geo-projection/src/aitoff.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo-projection/src/math.js");




function winkel3Raw(lambda, phi) {
  var coordinates = Object(_aitoff_js__WEBPACK_IMPORTED_MODULE_1__["aitoffRaw"])(lambda, phi);
  return [
    (coordinates[0] + lambda / _math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"]) / 2,
    (coordinates[1] + phi) / 2
  ];
}

winkel3Raw.invert = function(x, y) {
  var lambda = x, phi = y, i = 25;
  do {
    var cosphi = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi),
        sinphi = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi),
        sin_2phi = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(2 * phi),
        sin2phi = sinphi * sinphi,
        cos2phi = cosphi * cosphi,
        sinlambda = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(lambda),
        coslambda_2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(lambda / 2),
        sinlambda_2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(lambda / 2),
        sin2lambda_2 = sinlambda_2 * sinlambda_2,
        C = 1 - cos2phi * coslambda_2 * coslambda_2,
        E = C ? Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["acos"])(cosphi * coslambda_2) * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(F = 1 / C) : F = 0,
        F,
        fx = 0.5 * (2 * E * cosphi * sinlambda_2 + lambda / _math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"]) - x,
        fy = 0.5 * (E * sinphi + phi) - y,
        dxdlambda = 0.5 * F * (cos2phi * sin2lambda_2 + E * cosphi * coslambda_2 * sin2phi) + 0.5 / _math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"],
        dxdphi = F * (sinlambda * sin_2phi / 4 - E * sinphi * sinlambda_2),
        dydlambda = 0.125 * F * (sin_2phi * sinlambda_2 - E * sinphi * cos2phi * sinlambda),
        dydphi = 0.5 * F * (sin2phi * coslambda_2 + E * sin2lambda_2 * cosphi) + 0.5,
        denominator = dxdphi * dydlambda - dydphi * dxdlambda,
        dlambda = (fy * dxdphi - fx * dydphi) / denominator,
        dphi = (fx * dydlambda - fy * dxdlambda) / denominator;
    lambda -= dlambda, phi -= dphi;
  } while ((Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(dlambda) > _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"] || Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(dphi) > _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) && --i > 0);
  return [lambda, phi];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(d3_geo__WEBPACK_IMPORTED_MODULE_0__["geoProjection"])(winkel3Raw)
      .scale(158.837);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/area.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/area.js ***!
  \*****************************************/
/*! exports provided: areaRingSum, areaStream, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "areaRingSum", function() { return areaRingSum; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "areaStream", function() { return areaStream; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./noop.js */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream.js */ "./node_modules/d3-geo/src/stream.js");





var areaRingSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"]();

// hello?

var areaSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"](),
    lambda00,
    phi00,
    lambda0,
    cosPhi0,
    sinPhi0;

var areaStream = {
  point: _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineEnd: _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonStart: function() {
    areaRingSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"]();
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function() {
    var areaRing = +areaRingSum;
    areaSum.add(areaRing < 0 ? _math_js__WEBPACK_IMPORTED_MODULE_1__["tau"] + areaRing : areaRing);
    this.lineStart = this.lineEnd = this.point = _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"];
  },
  sphere: function() {
    areaSum.add(_math_js__WEBPACK_IMPORTED_MODULE_1__["tau"]);
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaRingEnd() {
  areaPoint(lambda00, phi00);
}

function areaPointFirst(lambda, phi) {
  areaStream.point = areaPoint;
  lambda00 = lambda, phi00 = phi;
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"];
  lambda0 = lambda, cosPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi = phi / 2 + _math_js__WEBPACK_IMPORTED_MODULE_1__["quarterPi"]), sinPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi);
}

function areaPoint(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"];
  phi = phi / 2 + _math_js__WEBPACK_IMPORTED_MODULE_1__["quarterPi"]; // half the angular distance from south pole

  // Spherical excess E for a spherical triangle with vertices: south pole,
  // previous point, current point.  Uses a formula derived from Cagnoli’s
  // theorem.  See Todhunter, Spherical Trig. (1871), Sec. 103, Eq. (2).
  var dLambda = lambda - lambda0,
      sdLambda = dLambda >= 0 ? 1 : -1,
      adLambda = sdLambda * dLambda,
      cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      sinPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
      k = sinPhi0 * sinPhi,
      u = cosPhi0 * cosPhi + k * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(adLambda),
      v = k * sdLambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(adLambda);
  areaRingSum.add(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(v, u));

  // Advance the previous points.
  lambda0 = lambda, cosPhi0 = cosPhi, sinPhi0 = sinPhi;
}

/* harmony default export */ __webpack_exports__["default"] = (function(object) {
  areaSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"]();
  Object(_stream_js__WEBPACK_IMPORTED_MODULE_3__["default"])(object, areaStream);
  return areaSum * 2;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/bounds.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/bounds.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _area_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./area.js */ "./node_modules/d3-geo/src/area.js");
/* harmony import */ var _cartesian_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cartesian.js */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./stream.js */ "./node_modules/d3-geo/src/stream.js");






var lambda0, phi0, lambda1, phi1, // bounds
    lambda2, // previous lambda-coordinate
    lambda00, phi00, // first point
    p0, // previous 3D point
    deltaSum,
    ranges,
    range;

var boundsStream = {
  point: boundsPoint,
  lineStart: boundsLineStart,
  lineEnd: boundsLineEnd,
  polygonStart: function() {
    boundsStream.point = boundsRingPoint;
    boundsStream.lineStart = boundsRingStart;
    boundsStream.lineEnd = boundsRingEnd;
    deltaSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"]();
    _area_js__WEBPACK_IMPORTED_MODULE_1__["areaStream"].polygonStart();
  },
  polygonEnd: function() {
    _area_js__WEBPACK_IMPORTED_MODULE_1__["areaStream"].polygonEnd();
    boundsStream.point = boundsPoint;
    boundsStream.lineStart = boundsLineStart;
    boundsStream.lineEnd = boundsLineEnd;
    if (_area_js__WEBPACK_IMPORTED_MODULE_1__["areaRingSum"] < 0) lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
    else if (deltaSum > _math_js__WEBPACK_IMPORTED_MODULE_3__["epsilon"]) phi1 = 90;
    else if (deltaSum < -_math_js__WEBPACK_IMPORTED_MODULE_3__["epsilon"]) phi0 = -90;
    range[0] = lambda0, range[1] = lambda1;
  },
  sphere: function() {
    lambda0 = -(lambda1 = 180), phi0 = -(phi1 = 90);
  }
};

function boundsPoint(lambda, phi) {
  ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
}

function linePoint(lambda, phi) {
  var p = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_2__["cartesian"])([lambda * _math_js__WEBPACK_IMPORTED_MODULE_3__["radians"], phi * _math_js__WEBPACK_IMPORTED_MODULE_3__["radians"]]);
  if (p0) {
    var normal = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_2__["cartesianCross"])(p0, p),
        equatorial = [normal[1], -normal[0], 0],
        inflection = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_2__["cartesianCross"])(equatorial, normal);
    Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_2__["cartesianNormalizeInPlace"])(inflection);
    inflection = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_2__["spherical"])(inflection);
    var delta = lambda - lambda2,
        sign = delta > 0 ? 1 : -1,
        lambdai = inflection[0] * _math_js__WEBPACK_IMPORTED_MODULE_3__["degrees"] * sign,
        phii,
        antimeridian = Object(_math_js__WEBPACK_IMPORTED_MODULE_3__["abs"])(delta) > 180;
    if (antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = inflection[1] * _math_js__WEBPACK_IMPORTED_MODULE_3__["degrees"];
      if (phii > phi1) phi1 = phii;
    } else if (lambdai = (lambdai + 360) % 360 - 180, antimeridian ^ (sign * lambda2 < lambdai && lambdai < sign * lambda)) {
      phii = -inflection[1] * _math_js__WEBPACK_IMPORTED_MODULE_3__["degrees"];
      if (phii < phi0) phi0 = phii;
    } else {
      if (phi < phi0) phi0 = phi;
      if (phi > phi1) phi1 = phi;
    }
    if (antimeridian) {
      if (lambda < lambda2) {
        if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
      } else {
        if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
      }
    } else {
      if (lambda1 >= lambda0) {
        if (lambda < lambda0) lambda0 = lambda;
        if (lambda > lambda1) lambda1 = lambda;
      } else {
        if (lambda > lambda2) {
          if (angle(lambda0, lambda) > angle(lambda0, lambda1)) lambda1 = lambda;
        } else {
          if (angle(lambda, lambda1) > angle(lambda0, lambda1)) lambda0 = lambda;
        }
      }
    }
  } else {
    ranges.push(range = [lambda0 = lambda, lambda1 = lambda]);
  }
  if (phi < phi0) phi0 = phi;
  if (phi > phi1) phi1 = phi;
  p0 = p, lambda2 = lambda;
}

function boundsLineStart() {
  boundsStream.point = linePoint;
}

function boundsLineEnd() {
  range[0] = lambda0, range[1] = lambda1;
  boundsStream.point = boundsPoint;
  p0 = null;
}

function boundsRingPoint(lambda, phi) {
  if (p0) {
    var delta = lambda - lambda2;
    deltaSum.add(Object(_math_js__WEBPACK_IMPORTED_MODULE_3__["abs"])(delta) > 180 ? delta + (delta > 0 ? 360 : -360) : delta);
  } else {
    lambda00 = lambda, phi00 = phi;
  }
  _area_js__WEBPACK_IMPORTED_MODULE_1__["areaStream"].point(lambda, phi);
  linePoint(lambda, phi);
}

function boundsRingStart() {
  _area_js__WEBPACK_IMPORTED_MODULE_1__["areaStream"].lineStart();
}

function boundsRingEnd() {
  boundsRingPoint(lambda00, phi00);
  _area_js__WEBPACK_IMPORTED_MODULE_1__["areaStream"].lineEnd();
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_3__["abs"])(deltaSum) > _math_js__WEBPACK_IMPORTED_MODULE_3__["epsilon"]) lambda0 = -(lambda1 = 180);
  range[0] = lambda0, range[1] = lambda1;
  p0 = null;
}

// Finds the left-right distance between two longitudes.
// This is almost the same as (lambda1 - lambda0 + 360°) % 360°, except that we want
// the distance between ±180° to be 360°.
function angle(lambda0, lambda1) {
  return (lambda1 -= lambda0) < 0 ? lambda1 + 360 : lambda1;
}

function rangeCompare(a, b) {
  return a[0] - b[0];
}

function rangeContains(range, x) {
  return range[0] <= range[1] ? range[0] <= x && x <= range[1] : x < range[0] || range[1] < x;
}

/* harmony default export */ __webpack_exports__["default"] = (function(feature) {
  var i, n, a, b, merged, deltaMax, delta;

  phi1 = lambda1 = -(lambda0 = phi0 = Infinity);
  ranges = [];
  Object(_stream_js__WEBPACK_IMPORTED_MODULE_4__["default"])(feature, boundsStream);

  // First, sort ranges by their minimum longitudes.
  if (n = ranges.length) {
    ranges.sort(rangeCompare);

    // Then, merge any ranges that overlap.
    for (i = 1, a = ranges[0], merged = [a]; i < n; ++i) {
      b = ranges[i];
      if (rangeContains(a, b[0]) || rangeContains(a, b[1])) {
        if (angle(a[0], b[1]) > angle(a[0], a[1])) a[1] = b[1];
        if (angle(b[0], a[1]) > angle(a[0], a[1])) a[0] = b[0];
      } else {
        merged.push(a = b);
      }
    }

    // Finally, find the largest gap between the merged ranges.
    // The final bounding box will be the inverse of this gap.
    for (deltaMax = -Infinity, n = merged.length - 1, i = 0, a = merged[n]; i <= n; a = b, ++i) {
      b = merged[i];
      if ((delta = angle(a[1], b[0])) > deltaMax) deltaMax = delta, lambda0 = b[0], lambda1 = a[1];
    }
  }

  ranges = range = null;

  return lambda0 === Infinity || phi0 === Infinity
      ? [[NaN, NaN], [NaN, NaN]]
      : [[lambda0, phi0], [lambda1, phi1]];
});


/***/ }),

/***/ "./node_modules/d3-geo/src/cartesian.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/cartesian.js ***!
  \**********************************************/
/*! exports provided: spherical, cartesian, cartesianDot, cartesianCross, cartesianAddInPlace, cartesianScale, cartesianNormalizeInPlace */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "spherical", function() { return spherical; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesian", function() { return cartesian; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianDot", function() { return cartesianDot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianCross", function() { return cartesianCross; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianAddInPlace", function() { return cartesianAddInPlace; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianScale", function() { return cartesianScale; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cartesianNormalizeInPlace", function() { return cartesianNormalizeInPlace; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");


function spherical(cartesian) {
  return [Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan2"])(cartesian[1], cartesian[0]), Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["asin"])(cartesian[2])];
}

function cartesian(spherical) {
  var lambda = spherical[0], phi = spherical[1], cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi);
  return [cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(lambda), cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(lambda), Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi)];
}

function cartesianDot(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}

function cartesianCross(a, b) {
  return [a[1] * b[2] - a[2] * b[1], a[2] * b[0] - a[0] * b[2], a[0] * b[1] - a[1] * b[0]];
}

// TODO return a
function cartesianAddInPlace(a, b) {
  a[0] += b[0], a[1] += b[1], a[2] += b[2];
}

function cartesianScale(vector, k) {
  return [vector[0] * k, vector[1] * k, vector[2] * k];
}

// TODO return d
function cartesianNormalizeInPlace(d) {
  var l = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(d[0] * d[0] + d[1] * d[1] + d[2] * d[2]);
  d[0] /= l, d[1] /= l, d[2] /= l;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/centroid.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/centroid.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./noop.js */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream.js */ "./node_modules/d3-geo/src/stream.js");





var W0, W1,
    X0, Y0, Z0,
    X1, Y1, Z1,
    X2, Y2, Z2,
    lambda00, phi00, // first point
    x0, y0, z0; // previous point

var centroidStream = {
  sphere: _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function() {
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  }
};

// Arithmetic mean of Cartesian vectors.
function centroidPoint(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"];
  var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi);
  centroidPointCartesian(cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda), cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda), Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi));
}

function centroidPointCartesian(x, y, z) {
  ++W0;
  X0 += (x - X0) / W0;
  Y0 += (y - Y0) / W0;
  Z0 += (z - Z0) / W0;
}

function centroidLineStart() {
  centroidStream.point = centroidLinePointFirst;
}

function centroidLinePointFirst(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"];
  var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi);
  x0 = cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda);
  y0 = cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda);
  z0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi);
  centroidStream.point = centroidLinePoint;
  centroidPointCartesian(x0, y0, z0);
}

function centroidLinePoint(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"];
  var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      x = cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda),
      y = cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda),
      z = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
      w = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])((w = y0 * z - z0 * y) * w + (w = z0 * x - x0 * z) * w + (w = x0 * y - y0 * x) * w), x0 * x + y0 * y + z0 * z);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

// See J. E. Brock, The Inertia Tensor for a Spherical Triangle,
// J. Applied Mechanics 42, 239 (1975).
function centroidRingStart() {
  centroidStream.point = centroidRingPointFirst;
}

function centroidRingEnd() {
  centroidRingPoint(lambda00, phi00);
  centroidStream.point = centroidPoint;
}

function centroidRingPointFirst(lambda, phi) {
  lambda00 = lambda, phi00 = phi;
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"];
  centroidStream.point = centroidRingPoint;
  var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi);
  x0 = cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda);
  y0 = cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda);
  z0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi);
  centroidPointCartesian(x0, y0, z0);
}

function centroidRingPoint(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"];
  var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      x = cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda),
      y = cosPhi * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda),
      z = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
      cx = y0 * z - z0 * y,
      cy = z0 * x - x0 * z,
      cz = x0 * y - y0 * x,
      m = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["hypot"])(cx, cy, cz),
      w = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(m), // line weight = angle
      v = m && -w / m; // area weight multiplier
  X2.add(v * cx);
  Y2.add(v * cy);
  Z2.add(v * cz);
  W1 += w;
  X1 += w * (x0 + (x0 = x));
  Y1 += w * (y0 + (y0 = y));
  Z1 += w * (z0 + (z0 = z));
  centroidPointCartesian(x0, y0, z0);
}

/* harmony default export */ __webpack_exports__["default"] = (function(object) {
  W0 = W1 =
  X0 = Y0 = Z0 =
  X1 = Y1 = Z1 = 0;
  X2 = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"]();
  Y2 = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"]();
  Z2 = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"]();
  Object(_stream_js__WEBPACK_IMPORTED_MODULE_3__["default"])(object, centroidStream);

  var x = +X2,
      y = +Y2,
      z = +Z2,
      m = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["hypot"])(x, y, z);

  // If the area-weighted ccentroid is undefined, fall back to length-weighted ccentroid.
  if (m < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon2"]) {
    x = X1, y = Y1, z = Z1;
    // If the feature has zero length, fall back to arithmetic mean of point vectors.
    if (W1 < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) x = X0, y = Y0, z = Z0;
    m = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["hypot"])(x, y, z);
    // If the feature still has an undefined ccentroid, then return.
    if (m < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon2"]) return [NaN, NaN];
  }

  return [Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y, x) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"], Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(z / m) * _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"]];
});


/***/ }),

/***/ "./node_modules/d3-geo/src/circle.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/circle.js ***!
  \*******************************************/
/*! exports provided: circleStream, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "circleStream", function() { return circleStream; });
/* harmony import */ var _cartesian_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./cartesian.js */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./constant.js */ "./node_modules/d3-geo/src/constant.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rotation.js */ "./node_modules/d3-geo/src/rotation.js");





// Generates a circle centered at [0°, 0°], with a given radius and precision.
function circleStream(stream, radius, delta, direction, t0, t1) {
  if (!delta) return;
  var cosRadius = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(radius),
      sinRadius = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(radius),
      step = direction * delta;
  if (t0 == null) {
    t0 = radius + direction * _math_js__WEBPACK_IMPORTED_MODULE_2__["tau"];
    t1 = radius - step / 2;
  } else {
    t0 = circleRadius(cosRadius, t0);
    t1 = circleRadius(cosRadius, t1);
    if (direction > 0 ? t0 < t1 : t0 > t1) t0 += direction * _math_js__WEBPACK_IMPORTED_MODULE_2__["tau"];
  }
  for (var point, t = t0; direction > 0 ? t > t1 : t < t1; t -= step) {
    point = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["spherical"])([cosRadius, -sinRadius * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(t), -sinRadius * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(t)]);
    stream.point(point[0], point[1]);
  }
}

// Returns the signed angle of a cartesian point relative to [cosRadius, 0, 0].
function circleRadius(cosRadius, point) {
  point = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesian"])(point), point[0] -= cosRadius;
  Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianNormalizeInPlace"])(point);
  var radius = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["acos"])(-point[1]);
  return ((-point[2] < 0 ? -radius : radius) + _math_js__WEBPACK_IMPORTED_MODULE_2__["tau"] - _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"]) % _math_js__WEBPACK_IMPORTED_MODULE_2__["tau"];
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var center = Object(_constant_js__WEBPACK_IMPORTED_MODULE_1__["default"])([0, 0]),
      radius = Object(_constant_js__WEBPACK_IMPORTED_MODULE_1__["default"])(90),
      precision = Object(_constant_js__WEBPACK_IMPORTED_MODULE_1__["default"])(6),
      ring,
      rotate,
      stream = {point: point};

  function point(x, y) {
    ring.push(x = rotate(x, y));
    x[0] *= _math_js__WEBPACK_IMPORTED_MODULE_2__["degrees"], x[1] *= _math_js__WEBPACK_IMPORTED_MODULE_2__["degrees"];
  }

  function circle() {
    var c = center.apply(this, arguments),
        r = radius.apply(this, arguments) * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"],
        p = precision.apply(this, arguments) * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"];
    ring = [];
    rotate = Object(_rotation_js__WEBPACK_IMPORTED_MODULE_3__["rotateRadians"])(-c[0] * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"], -c[1] * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"], 0).invert;
    circleStream(stream, r, p, 1);
    c = {type: "Polygon", coordinates: [ring]};
    ring = rotate = null;
    return c;
  }

  circle.center = function(_) {
    return arguments.length ? (center = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_1__["default"])([+_[0], +_[1]]), circle) : center;
  };

  circle.radius = function(_) {
    return arguments.length ? (radius = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), circle) : radius;
  };

  circle.precision = function(_) {
    return arguments.length ? (precision = typeof _ === "function" ? _ : Object(_constant_js__WEBPACK_IMPORTED_MODULE_1__["default"])(+_), circle) : precision;
  };

  return circle;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/antimeridian.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/antimeridian.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/clip/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");



/* harmony default export */ __webpack_exports__["default"] = (Object(_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(
  function() { return true; },
  clipAntimeridianLine,
  clipAntimeridianInterpolate,
  [-_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"], -_math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]]
));

// Takes a line and cuts into visible segments. Return values: 0 - there were
// intersections or the line was empty; 1 - no intersections; 2 - there were
// intersections, and the first and last segments should be rejoined.
function clipAntimeridianLine(stream) {
  var lambda0 = NaN,
      phi0 = NaN,
      sign0 = NaN,
      clean; // no intersections

  return {
    lineStart: function() {
      stream.lineStart();
      clean = 1;
    },
    point: function(lambda1, phi1) {
      var sign1 = lambda1 > 0 ? _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] : -_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"],
          delta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda1 - lambda0);
      if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta - _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) { // line crosses a pole
        stream.point(lambda0, phi0 = (phi0 + phi1) / 2 > 0 ? _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"] : -_math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"]);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        stream.point(lambda1, phi0);
        clean = 0;
      } else if (sign0 !== sign1 && delta >= _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"]) { // line crosses antimeridian
        if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda0 - sign0) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) lambda0 -= sign0 * _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]; // handle degeneracies
        if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda1 - sign1) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) lambda1 -= sign1 * _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"];
        phi0 = clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1);
        stream.point(sign0, phi0);
        stream.lineEnd();
        stream.lineStart();
        stream.point(sign1, phi0);
        clean = 0;
      }
      stream.point(lambda0 = lambda1, phi0 = phi1);
      sign0 = sign1;
    },
    lineEnd: function() {
      stream.lineEnd();
      lambda0 = phi0 = NaN;
    },
    clean: function() {
      return 2 - clean; // if intersections, rejoin first and last segments
    }
  };
}

function clipAntimeridianIntersect(lambda0, phi0, lambda1, phi1) {
  var cosPhi0,
      cosPhi1,
      sinLambda0Lambda1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda0 - lambda1);
  return Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(sinLambda0Lambda1) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]
      ? Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan"])((Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi0) * (cosPhi1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi1)) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda1)
          - Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi1) * (cosPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi0)) * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda0))
          / (cosPhi0 * cosPhi1 * sinLambda0Lambda1))
      : (phi0 + phi1) / 2;
}

function clipAntimeridianInterpolate(from, to, direction, stream) {
  var phi;
  if (from == null) {
    phi = direction * _math_js__WEBPACK_IMPORTED_MODULE_1__["halfPi"];
    stream.point(-_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"], phi);
    stream.point(0, phi);
    stream.point(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"], phi);
    stream.point(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"], 0);
    stream.point(_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"], -phi);
    stream.point(0, -phi);
    stream.point(-_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"], -phi);
    stream.point(-_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"], 0);
    stream.point(-_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"], phi);
  } else if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(from[0] - to[0]) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]) {
    var lambda = from[0] < to[0] ? _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] : -_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"];
    phi = direction * lambda / 2;
    stream.point(-lambda, phi);
    stream.point(0, phi);
    stream.point(lambda, phi);
  } else {
    stream.point(to[0], to[1]);
  }
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/buffer.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/buffer.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-geo/src/noop.js");


/* harmony default export */ __webpack_exports__["default"] = (function() {
  var lines = [],
      line;
  return {
    point: function(x, y, m) {
      line.push([x, y, m]);
    },
    lineStart: function() {
      lines.push(line = []);
    },
    lineEnd: _noop_js__WEBPACK_IMPORTED_MODULE_0__["default"],
    rejoin: function() {
      if (lines.length > 1) lines.push(lines.pop().concat(lines.shift()));
    },
    result: function() {
      var result = lines;
      lines = [];
      line = null;
      return result;
    }
  };
});


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/circle.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/circle.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cartesian_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cartesian.js */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _circle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../circle.js */ "./node_modules/d3-geo/src/circle.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _pointEqual_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pointEqual.js */ "./node_modules/d3-geo/src/pointEqual.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/clip/index.js");






/* harmony default export */ __webpack_exports__["default"] = (function(radius) {
  var cr = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(radius),
      delta = 6 * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"],
      smallRadius = cr > 0,
      notHemisphere = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(cr) > _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"]; // TODO optimise for this common case

  function interpolate(from, to, direction, stream) {
    Object(_circle_js__WEBPACK_IMPORTED_MODULE_1__["circleStream"])(stream, radius, delta, direction, from, to);
  }

  function visible(lambda, phi) {
    return Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(lambda) * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi) > cr;
  }

  // Takes a line and cuts into visible segments. Return values used for polygon
  // clipping: 0 - there were intersections or the line was empty; 1 - no
  // intersections 2 - there were intersections, and the first and last segments
  // should be rejoined.
  function clipLine(stream) {
    var point0, // previous point
        c0, // code for previous point
        v0, // visibility of previous point
        v00, // visibility of first point
        clean; // no intersections
    return {
      lineStart: function() {
        v00 = v0 = false;
        clean = 1;
      },
      point: function(lambda, phi) {
        var point1 = [lambda, phi],
            point2,
            v = visible(lambda, phi),
            c = smallRadius
              ? v ? 0 : code(lambda, phi)
              : v ? code(lambda + (lambda < 0 ? _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"] : -_math_js__WEBPACK_IMPORTED_MODULE_2__["pi"]), phi) : 0;
        if (!point0 && (v00 = v0 = v)) stream.lineStart();
        if (v !== v0) {
          point2 = intersect(point0, point1);
          if (!point2 || Object(_pointEqual_js__WEBPACK_IMPORTED_MODULE_3__["default"])(point0, point2) || Object(_pointEqual_js__WEBPACK_IMPORTED_MODULE_3__["default"])(point1, point2))
            point1[2] = 1;
        }
        if (v !== v0) {
          clean = 0;
          if (v) {
            // outside going in
            stream.lineStart();
            point2 = intersect(point1, point0);
            stream.point(point2[0], point2[1]);
          } else {
            // inside going out
            point2 = intersect(point0, point1);
            stream.point(point2[0], point2[1], 2);
            stream.lineEnd();
          }
          point0 = point2;
        } else if (notHemisphere && point0 && smallRadius ^ v) {
          var t;
          // If the codes for two points are different, or are both zero,
          // and there this segment intersects with the small circle.
          if (!(c & c0) && (t = intersect(point1, point0, true))) {
            clean = 0;
            if (smallRadius) {
              stream.lineStart();
              stream.point(t[0][0], t[0][1]);
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
            } else {
              stream.point(t[1][0], t[1][1]);
              stream.lineEnd();
              stream.lineStart();
              stream.point(t[0][0], t[0][1], 3);
            }
          }
        }
        if (v && (!point0 || !Object(_pointEqual_js__WEBPACK_IMPORTED_MODULE_3__["default"])(point0, point1))) {
          stream.point(point1[0], point1[1]);
        }
        point0 = point1, v0 = v, c0 = c;
      },
      lineEnd: function() {
        if (v0) stream.lineEnd();
        point0 = null;
      },
      // Rejoin first and last segments if there were intersections and the first
      // and last points were visible.
      clean: function() {
        return clean | ((v00 && v0) << 1);
      }
    };
  }

  // Intersects the great circle between a and b with the clip circle.
  function intersect(a, b, two) {
    var pa = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesian"])(a),
        pb = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesian"])(b);

    // We have two planes, n1.p = d1 and n2.p = d2.
    // Find intersection line p(t) = c1 n1 + c2 n2 + t (n1 ⨯ n2).
    var n1 = [1, 0, 0], // normal
        n2 = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianCross"])(pa, pb),
        n2n2 = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(n2, n2),
        n1n2 = n2[0], // cartesianDot(n1, n2),
        determinant = n2n2 - n1n2 * n1n2;

    // Two polar points.
    if (!determinant) return !two && a;

    var c1 =  cr * n2n2 / determinant,
        c2 = -cr * n1n2 / determinant,
        n1xn2 = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianCross"])(n1, n2),
        A = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(n1, c1),
        B = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(n2, c2);
    Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianAddInPlace"])(A, B);

    // Solve |p(t)|^2 = 1.
    var u = n1xn2,
        w = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(A, u),
        uu = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(u, u),
        t2 = w * w - uu * (Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianDot"])(A, A) - 1);

    if (t2 < 0) return;

    var t = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sqrt"])(t2),
        q = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(u, (-w - t) / uu);
    Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianAddInPlace"])(q, A);
    q = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["spherical"])(q);

    if (!two) return q;

    // Two intersection points.
    var lambda0 = a[0],
        lambda1 = b[0],
        phi0 = a[1],
        phi1 = b[1],
        z;

    if (lambda1 < lambda0) z = lambda0, lambda0 = lambda1, lambda1 = z;

    var delta = lambda1 - lambda0,
        polar = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(delta - _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"]) < _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"],
        meridian = polar || delta < _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"];

    if (!polar && phi1 < phi0) z = phi0, phi0 = phi1, phi1 = z;

    // Check that the first point is between a and b.
    if (meridian
        ? polar
          ? phi0 + phi1 > 0 ^ q[1] < (Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(q[0] - lambda0) < _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"] ? phi0 : phi1)
          : phi0 <= q[1] && q[1] <= phi1
        : delta > _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"] ^ (lambda0 <= q[0] && q[0] <= lambda1)) {
      var q1 = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianScale"])(u, (-w + t) / uu);
      Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesianAddInPlace"])(q1, A);
      return [q, Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["spherical"])(q1)];
    }
  }

  // Generates a 4-bit vector representing the location of a point relative to
  // the small circle's bounding box.
  function code(lambda, phi) {
    var r = smallRadius ? radius : _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"] - radius,
        code = 0;
    if (lambda < -r) code |= 1; // left
    else if (lambda > r) code |= 2; // right
    if (phi < -r) code |= 4; // below
    else if (phi > r) code |= 8; // above
    return code;
  }

  return Object(_index_js__WEBPACK_IMPORTED_MODULE_4__["default"])(visible, clipLine, interpolate, smallRadius ? [0, -radius] : [-_math_js__WEBPACK_IMPORTED_MODULE_2__["pi"], radius - _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"]]);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/extent.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/extent.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _rectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./rectangle.js */ "./node_modules/d3-geo/src/clip/rectangle.js");


/* harmony default export */ __webpack_exports__["default"] = (function() {
  var x0 = 0,
      y0 = 0,
      x1 = 960,
      y1 = 500,
      cache,
      cacheStream,
      clip;

  return clip = {
    stream: function(stream) {
      return cache && cacheStream === stream ? cache : cache = Object(_rectangle_js__WEBPACK_IMPORTED_MODULE_0__["default"])(x0, y0, x1, y1)(cacheStream = stream);
    },
    extent: function(_) {
      return arguments.length ? (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1], cache = cacheStream = null, clip) : [[x0, y0], [x1, y1]];
    }
  };
});


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/clip/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _buffer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./buffer.js */ "./node_modules/d3-geo/src/clip/buffer.js");
/* harmony import */ var _rejoin_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./rejoin.js */ "./node_modules/d3-geo/src/clip/rejoin.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _polygonContains_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../polygonContains.js */ "./node_modules/d3-geo/src/polygonContains.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");






/* harmony default export */ __webpack_exports__["default"] = (function(pointVisible, clipLine, interpolate, start) {
  return function(sink) {
    var line = clipLine(sink),
        ringBuffer = Object(_buffer_js__WEBPACK_IMPORTED_MODULE_0__["default"])(),
        ringSink = clipLine(ringBuffer),
        polygonStarted = false,
        polygon,
        segments,
        ring;

    var clip = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() {
        clip.point = pointRing;
        clip.lineStart = ringStart;
        clip.lineEnd = ringEnd;
        segments = [];
        polygon = [];
      },
      polygonEnd: function() {
        clip.point = point;
        clip.lineStart = lineStart;
        clip.lineEnd = lineEnd;
        segments = Object(d3_array__WEBPACK_IMPORTED_MODULE_4__["merge"])(segments);
        var startInside = Object(_polygonContains_js__WEBPACK_IMPORTED_MODULE_3__["default"])(polygon, start);
        if (segments.length) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          Object(_rejoin_js__WEBPACK_IMPORTED_MODULE_1__["default"])(segments, compareIntersection, startInside, interpolate, sink);
        } else if (startInside) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          interpolate(null, null, 1, sink);
          sink.lineEnd();
        }
        if (polygonStarted) sink.polygonEnd(), polygonStarted = false;
        segments = polygon = null;
      },
      sphere: function() {
        sink.polygonStart();
        sink.lineStart();
        interpolate(null, null, 1, sink);
        sink.lineEnd();
        sink.polygonEnd();
      }
    };

    function point(lambda, phi) {
      if (pointVisible(lambda, phi)) sink.point(lambda, phi);
    }

    function pointLine(lambda, phi) {
      line.point(lambda, phi);
    }

    function lineStart() {
      clip.point = pointLine;
      line.lineStart();
    }

    function lineEnd() {
      clip.point = point;
      line.lineEnd();
    }

    function pointRing(lambda, phi) {
      ring.push([lambda, phi]);
      ringSink.point(lambda, phi);
    }

    function ringStart() {
      ringSink.lineStart();
      ring = [];
    }

    function ringEnd() {
      pointRing(ring[0][0], ring[0][1]);
      ringSink.lineEnd();

      var clean = ringSink.clean(),
          ringSegments = ringBuffer.result(),
          i, n = ringSegments.length, m,
          segment,
          point;

      ring.pop();
      polygon.push(ring);
      ring = null;

      if (!n) return;

      // No intersections.
      if (clean & 1) {
        segment = ringSegments[0];
        if ((m = segment.length - 1) > 0) {
          if (!polygonStarted) sink.polygonStart(), polygonStarted = true;
          sink.lineStart();
          for (i = 0; i < m; ++i) sink.point((point = segment[i])[0], point[1]);
          sink.lineEnd();
        }
        return;
      }

      // Rejoin connected segments.
      // TODO reuse ringBuffer.rejoin()?
      if (n > 1 && clean & 2) ringSegments.push(ringSegments.pop().concat(ringSegments.shift()));

      segments.push(ringSegments.filter(validSegment));
    }

    return clip;
  };
});

function validSegment(segment) {
  return segment.length > 1;
}

// Intersections are sorted along the clip edge. For both antimeridian cutting
// and circle clipping, the same comparison is used.
function compareIntersection(a, b) {
  return ((a = a.x)[0] < 0 ? a[1] - _math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"] : _math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - a[1])
       - ((b = b.x)[0] < 0 ? b[1] - _math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"] : _math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - b[1]);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/line.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/clip/line.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b, x0, y0, x1, y1) {
  var ax = a[0],
      ay = a[1],
      bx = b[0],
      by = b[1],
      t0 = 0,
      t1 = 1,
      dx = bx - ax,
      dy = by - ay,
      r;

  r = x0 - ax;
  if (!dx && r > 0) return;
  r /= dx;
  if (dx < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dx > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = x1 - ax;
  if (!dx && r < 0) return;
  r /= dx;
  if (dx < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dx > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  r = y0 - ay;
  if (!dy && r > 0) return;
  r /= dy;
  if (dy < 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  } else if (dy > 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  }

  r = y1 - ay;
  if (!dy && r < 0) return;
  r /= dy;
  if (dy < 0) {
    if (r > t1) return;
    if (r > t0) t0 = r;
  } else if (dy > 0) {
    if (r < t0) return;
    if (r < t1) t1 = r;
  }

  if (t0 > 0) a[0] = ax + t0 * dx, a[1] = ay + t0 * dy;
  if (t1 < 1) b[0] = ax + t1 * dx, b[1] = ay + t1 * dy;
  return true;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/rectangle.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/rectangle.js ***!
  \***************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return clipRectangle; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _buffer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./buffer.js */ "./node_modules/d3-geo/src/clip/buffer.js");
/* harmony import */ var _line_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./line.js */ "./node_modules/d3-geo/src/clip/line.js");
/* harmony import */ var _rejoin_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./rejoin.js */ "./node_modules/d3-geo/src/clip/rejoin.js");
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");






var clipMax = 1e9, clipMin = -clipMax;

// TODO Use d3-polygon’s polygonContains here for the ring check?
// TODO Eliminate duplicate buffering in clipBuffer and polygon.push?

function clipRectangle(x0, y0, x1, y1) {

  function visible(x, y) {
    return x0 <= x && x <= x1 && y0 <= y && y <= y1;
  }

  function interpolate(from, to, direction, stream) {
    var a = 0, a1 = 0;
    if (from == null
        || (a = corner(from, direction)) !== (a1 = corner(to, direction))
        || comparePoint(from, to) < 0 ^ direction > 0) {
      do stream.point(a === 0 || a === 3 ? x0 : x1, a > 1 ? y1 : y0);
      while ((a = (a + direction + 4) % 4) !== a1);
    } else {
      stream.point(to[0], to[1]);
    }
  }

  function corner(p, direction) {
    return Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(p[0] - x0) < _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"] ? direction > 0 ? 0 : 3
        : Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(p[0] - x1) < _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"] ? direction > 0 ? 2 : 1
        : Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(p[1] - y0) < _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"] ? direction > 0 ? 1 : 0
        : direction > 0 ? 3 : 2; // abs(p[1] - y1) < epsilon
  }

  function compareIntersection(a, b) {
    return comparePoint(a.x, b.x);
  }

  function comparePoint(a, b) {
    var ca = corner(a, 1),
        cb = corner(b, 1);
    return ca !== cb ? ca - cb
        : ca === 0 ? b[1] - a[1]
        : ca === 1 ? a[0] - b[0]
        : ca === 2 ? a[1] - b[1]
        : b[0] - a[0];
  }

  return function(stream) {
    var activeStream = stream,
        bufferStream = Object(_buffer_js__WEBPACK_IMPORTED_MODULE_1__["default"])(),
        segments,
        polygon,
        ring,
        x__, y__, v__, // first point
        x_, y_, v_, // previous point
        first,
        clean;

    var clipStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: polygonStart,
      polygonEnd: polygonEnd
    };

    function point(x, y) {
      if (visible(x, y)) activeStream.point(x, y);
    }

    function polygonInside() {
      var winding = 0;

      for (var i = 0, n = polygon.length; i < n; ++i) {
        for (var ring = polygon[i], j = 1, m = ring.length, point = ring[0], a0, a1, b0 = point[0], b1 = point[1]; j < m; ++j) {
          a0 = b0, a1 = b1, point = ring[j], b0 = point[0], b1 = point[1];
          if (a1 <= y1) { if (b1 > y1 && (b0 - a0) * (y1 - a1) > (b1 - a1) * (x0 - a0)) ++winding; }
          else { if (b1 <= y1 && (b0 - a0) * (y1 - a1) < (b1 - a1) * (x0 - a0)) --winding; }
        }
      }

      return winding;
    }

    // Buffer geometry within a polygon and then clip it en masse.
    function polygonStart() {
      activeStream = bufferStream, segments = [], polygon = [], clean = true;
    }

    function polygonEnd() {
      var startInside = polygonInside(),
          cleanInside = clean && startInside,
          visible = (segments = Object(d3_array__WEBPACK_IMPORTED_MODULE_4__["merge"])(segments)).length;
      if (cleanInside || visible) {
        stream.polygonStart();
        if (cleanInside) {
          stream.lineStart();
          interpolate(null, null, 1, stream);
          stream.lineEnd();
        }
        if (visible) {
          Object(_rejoin_js__WEBPACK_IMPORTED_MODULE_3__["default"])(segments, compareIntersection, startInside, interpolate, stream);
        }
        stream.polygonEnd();
      }
      activeStream = stream, segments = polygon = ring = null;
    }

    function lineStart() {
      clipStream.point = linePoint;
      if (polygon) polygon.push(ring = []);
      first = true;
      v_ = false;
      x_ = y_ = NaN;
    }

    // TODO rather than special-case polygons, simply handle them separately.
    // Ideally, coincident intersection points should be jittered to avoid
    // clipping issues.
    function lineEnd() {
      if (segments) {
        linePoint(x__, y__);
        if (v__ && v_) bufferStream.rejoin();
        segments.push(bufferStream.result());
      }
      clipStream.point = point;
      if (v_) activeStream.lineEnd();
    }

    function linePoint(x, y) {
      var v = visible(x, y);
      if (polygon) ring.push([x, y]);
      if (first) {
        x__ = x, y__ = y, v__ = v;
        first = false;
        if (v) {
          activeStream.lineStart();
          activeStream.point(x, y);
        }
      } else {
        if (v && v_) activeStream.point(x, y);
        else {
          var a = [x_ = Math.max(clipMin, Math.min(clipMax, x_)), y_ = Math.max(clipMin, Math.min(clipMax, y_))],
              b = [x = Math.max(clipMin, Math.min(clipMax, x)), y = Math.max(clipMin, Math.min(clipMax, y))];
          if (Object(_line_js__WEBPACK_IMPORTED_MODULE_2__["default"])(a, b, x0, y0, x1, y1)) {
            if (!v_) {
              activeStream.lineStart();
              activeStream.point(a[0], a[1]);
            }
            activeStream.point(b[0], b[1]);
            if (!v) activeStream.lineEnd();
            clean = false;
          } else if (v) {
            activeStream.lineStart();
            activeStream.point(x, y);
            clean = false;
          }
        }
      }
      x_ = x, y_ = y, v_ = v;
    }

    return clipStream;
  };
}


/***/ }),

/***/ "./node_modules/d3-geo/src/clip/rejoin.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/clip/rejoin.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _pointEqual_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../pointEqual.js */ "./node_modules/d3-geo/src/pointEqual.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");



function Intersection(point, points, other, entry) {
  this.x = point;
  this.z = points;
  this.o = other; // another intersection
  this.e = entry; // is an entry?
  this.v = false; // visited
  this.n = this.p = null; // next & previous
}

// A generalized polygon clipping algorithm: given a polygon that has been cut
// into its visible line segments, and rejoins the segments by interpolating
// along the clip edge.
/* harmony default export */ __webpack_exports__["default"] = (function(segments, compareIntersection, startInside, interpolate, stream) {
  var subject = [],
      clip = [],
      i,
      n;

  segments.forEach(function(segment) {
    if ((n = segment.length - 1) <= 0) return;
    var n, p0 = segment[0], p1 = segment[n], x;

    if (Object(_pointEqual_js__WEBPACK_IMPORTED_MODULE_0__["default"])(p0, p1)) {
      if (!p0[2] && !p1[2]) {
        stream.lineStart();
        for (i = 0; i < n; ++i) stream.point((p0 = segment[i])[0], p0[1]);
        stream.lineEnd();
        return;
      }
      // handle degenerate cases by moving the point
      p1[0] += 2 * _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"];
    }

    subject.push(x = new Intersection(p0, segment, null, true));
    clip.push(x.o = new Intersection(p0, null, x, false));
    subject.push(x = new Intersection(p1, segment, null, false));
    clip.push(x.o = new Intersection(p1, null, x, true));
  });

  if (!subject.length) return;

  clip.sort(compareIntersection);
  link(subject);
  link(clip);

  for (i = 0, n = clip.length; i < n; ++i) {
    clip[i].e = startInside = !startInside;
  }

  var start = subject[0],
      points,
      point;

  while (1) {
    // Find first unvisited intersection.
    var current = start,
        isSubject = true;
    while (current.v) if ((current = current.n) === start) return;
    points = current.z;
    stream.lineStart();
    do {
      current.v = current.o.v = true;
      if (current.e) {
        if (isSubject) {
          for (i = 0, n = points.length; i < n; ++i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.n.x, 1, stream);
        }
        current = current.n;
      } else {
        if (isSubject) {
          points = current.p.z;
          for (i = points.length - 1; i >= 0; --i) stream.point((point = points[i])[0], point[1]);
        } else {
          interpolate(current.x, current.p.x, -1, stream);
        }
        current = current.p;
      }
      current = current.o;
      points = current.z;
      isSubject = !isSubject;
    } while (!current.v);
    stream.lineEnd();
  }
});

function link(array) {
  if (!(n = array.length)) return;
  var n,
      i = 0,
      a = array[0],
      b;
  while (++i < n) {
    a.n = b = array[i];
    b.p = a;
    a = b;
  }
  a.n = b = array[0];
  b.p = a;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/compose.js":
/*!********************************************!*\
  !*** ./node_modules/d3-geo/src/compose.js ***!
  \********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {

  function compose(x, y) {
    return x = a(x, y), b(x[0], x[1]);
  }

  if (a.invert && b.invert) compose.invert = function(x, y) {
    return x = b.invert(x, y), x && a.invert(x[0], x[1]);
  };

  return compose;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/constant.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/constant.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (function(x) {
  return function() {
    return x;
  };
});


/***/ }),

/***/ "./node_modules/d3-geo/src/contains.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/contains.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _polygonContains_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./polygonContains.js */ "./node_modules/d3-geo/src/polygonContains.js");
/* harmony import */ var _distance_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./distance.js */ "./node_modules/d3-geo/src/distance.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");




var containsObjectType = {
  Feature: function(object, point) {
    return containsGeometry(object.geometry, point);
  },
  FeatureCollection: function(object, point) {
    var features = object.features, i = -1, n = features.length;
    while (++i < n) if (containsGeometry(features[i].geometry, point)) return true;
    return false;
  }
};

var containsGeometryType = {
  Sphere: function() {
    return true;
  },
  Point: function(object, point) {
    return containsPoint(object.coordinates, point);
  },
  MultiPoint: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsPoint(coordinates[i], point)) return true;
    return false;
  },
  LineString: function(object, point) {
    return containsLine(object.coordinates, point);
  },
  MultiLineString: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsLine(coordinates[i], point)) return true;
    return false;
  },
  Polygon: function(object, point) {
    return containsPolygon(object.coordinates, point);
  },
  MultiPolygon: function(object, point) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) if (containsPolygon(coordinates[i], point)) return true;
    return false;
  },
  GeometryCollection: function(object, point) {
    var geometries = object.geometries, i = -1, n = geometries.length;
    while (++i < n) if (containsGeometry(geometries[i], point)) return true;
    return false;
  }
};

function containsGeometry(geometry, point) {
  return geometry && containsGeometryType.hasOwnProperty(geometry.type)
      ? containsGeometryType[geometry.type](geometry, point)
      : false;
}

function containsPoint(coordinates, point) {
  return Object(_distance_js__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates, point) === 0;
}

function containsLine(coordinates, point) {
  var ao, bo, ab;
  for (var i = 0, n = coordinates.length; i < n; i++) {
    bo = Object(_distance_js__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[i], point);
    if (bo === 0) return true;
    if (i > 0) {
      ab = Object(_distance_js__WEBPACK_IMPORTED_MODULE_1__["default"])(coordinates[i], coordinates[i - 1]);
      if (
        ab > 0 &&
        ao <= ab &&
        bo <= ab &&
        (ao + bo - ab) * (1 - Math.pow((ao - bo) / ab, 2)) < _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon2"] * ab
      )
        return true;
    }
    ao = bo;
  }
  return false;
}

function containsPolygon(coordinates, point) {
  return !!Object(_polygonContains_js__WEBPACK_IMPORTED_MODULE_0__["default"])(coordinates.map(ringRadians), pointRadians(point));
}

function ringRadians(ring) {
  return ring = ring.map(pointRadians), ring.pop(), ring;
}

function pointRadians(point) {
  return [point[0] * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"], point[1] * _math_js__WEBPACK_IMPORTED_MODULE_2__["radians"]];
}

/* harmony default export */ __webpack_exports__["default"] = (function(object, point) {
  return (object && containsObjectType.hasOwnProperty(object.type)
      ? containsObjectType[object.type]
      : containsGeometry)(object, point);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/distance.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/distance.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _length_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./length.js */ "./node_modules/d3-geo/src/length.js");


var coordinates = [null, null],
    object = {type: "LineString", coordinates: coordinates};

/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  coordinates[0] = a;
  coordinates[1] = b;
  return Object(_length_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/graticule.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/graticule.js ***!
  \**********************************************/
/*! exports provided: default, graticule10 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return graticule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "graticule10", function() { return graticule10; });
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");



function graticuleX(y0, y1, dy) {
  var y = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(y0, y1 - _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"], dy).concat(y1);
  return function(x) { return y.map(function(y) { return [x, y]; }); };
}

function graticuleY(x0, x1, dx) {
  var x = Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(x0, x1 - _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"], dx).concat(x1);
  return function(y) { return x.map(function(x) { return [x, y]; }); };
}

function graticule() {
  var x1, x0, X1, X0,
      y1, y0, Y1, Y0,
      dx = 10, dy = dx, DX = 90, DY = 360,
      x, y, X, Y,
      precision = 2.5;

  function graticule() {
    return {type: "MultiLineString", coordinates: lines()};
  }

  function lines() {
    return Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["ceil"])(X0 / DX) * DX, X1, DX).map(X)
        .concat(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["ceil"])(Y0 / DY) * DY, Y1, DY).map(Y))
        .concat(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["ceil"])(x0 / dx) * dx, x1, dx).filter(function(x) { return Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(x % DX) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]; }).map(x))
        .concat(Object(d3_array__WEBPACK_IMPORTED_MODULE_0__["range"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["ceil"])(y0 / dy) * dy, y1, dy).filter(function(y) { return Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(y % DY) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]; }).map(y));
  }

  graticule.lines = function() {
    return lines().map(function(coordinates) { return {type: "LineString", coordinates: coordinates}; });
  };

  graticule.outline = function() {
    return {
      type: "Polygon",
      coordinates: [
        X(X0).concat(
        Y(Y1).slice(1),
        X(X1).reverse().slice(1),
        Y(Y0).reverse().slice(1))
      ]
    };
  };

  graticule.extent = function(_) {
    if (!arguments.length) return graticule.extentMinor();
    return graticule.extentMajor(_).extentMinor(_);
  };

  graticule.extentMajor = function(_) {
    if (!arguments.length) return [[X0, Y0], [X1, Y1]];
    X0 = +_[0][0], X1 = +_[1][0];
    Y0 = +_[0][1], Y1 = +_[1][1];
    if (X0 > X1) _ = X0, X0 = X1, X1 = _;
    if (Y0 > Y1) _ = Y0, Y0 = Y1, Y1 = _;
    return graticule.precision(precision);
  };

  graticule.extentMinor = function(_) {
    if (!arguments.length) return [[x0, y0], [x1, y1]];
    x0 = +_[0][0], x1 = +_[1][0];
    y0 = +_[0][1], y1 = +_[1][1];
    if (x0 > x1) _ = x0, x0 = x1, x1 = _;
    if (y0 > y1) _ = y0, y0 = y1, y1 = _;
    return graticule.precision(precision);
  };

  graticule.step = function(_) {
    if (!arguments.length) return graticule.stepMinor();
    return graticule.stepMajor(_).stepMinor(_);
  };

  graticule.stepMajor = function(_) {
    if (!arguments.length) return [DX, DY];
    DX = +_[0], DY = +_[1];
    return graticule;
  };

  graticule.stepMinor = function(_) {
    if (!arguments.length) return [dx, dy];
    dx = +_[0], dy = +_[1];
    return graticule;
  };

  graticule.precision = function(_) {
    if (!arguments.length) return precision;
    precision = +_;
    x = graticuleX(y0, y1, 90);
    y = graticuleY(x0, x1, precision);
    X = graticuleX(Y0, Y1, 90);
    Y = graticuleY(X0, X1, precision);
    return graticule;
  };

  return graticule
      .extentMajor([[-180, -90 + _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]], [180, 90 - _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]]])
      .extentMinor([[-180, -80 - _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]], [180, 80 + _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"]]]);
}

function graticule10() {
  return graticule()();
}


/***/ }),

/***/ "./node_modules/d3-geo/src/identity.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/identity.js ***!
  \*********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony default export */ __webpack_exports__["default"] = (x => x);


/***/ }),

/***/ "./node_modules/d3-geo/src/index.js":
/*!******************************************!*\
  !*** ./node_modules/d3-geo/src/index.js ***!
  \******************************************/
/*! exports provided: geoArea, geoBounds, geoCentroid, geoCircle, geoClipAntimeridian, geoClipCircle, geoClipExtent, geoClipRectangle, geoContains, geoDistance, geoGraticule, geoGraticule10, geoInterpolate, geoLength, geoPath, geoAlbers, geoAlbersUsa, geoAzimuthalEqualArea, geoAzimuthalEqualAreaRaw, geoAzimuthalEquidistant, geoAzimuthalEquidistantRaw, geoConicConformal, geoConicConformalRaw, geoConicEqualArea, geoConicEqualAreaRaw, geoConicEquidistant, geoConicEquidistantRaw, geoEqualEarth, geoEqualEarthRaw, geoEquirectangular, geoEquirectangularRaw, geoGnomonic, geoGnomonicRaw, geoIdentity, geoProjection, geoProjectionMutator, geoMercator, geoMercatorRaw, geoNaturalEarth1, geoNaturalEarth1Raw, geoOrthographic, geoOrthographicRaw, geoStereographic, geoStereographicRaw, geoTransverseMercator, geoTransverseMercatorRaw, geoRotation, geoStream, geoTransform */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _area_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./area.js */ "./node_modules/d3-geo/src/area.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoArea", function() { return _area_js__WEBPACK_IMPORTED_MODULE_0__["default"]; });

/* harmony import */ var _bounds_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./bounds.js */ "./node_modules/d3-geo/src/bounds.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoBounds", function() { return _bounds_js__WEBPACK_IMPORTED_MODULE_1__["default"]; });

/* harmony import */ var _centroid_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./centroid.js */ "./node_modules/d3-geo/src/centroid.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCentroid", function() { return _centroid_js__WEBPACK_IMPORTED_MODULE_2__["default"]; });

/* harmony import */ var _circle_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./circle.js */ "./node_modules/d3-geo/src/circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoCircle", function() { return _circle_js__WEBPACK_IMPORTED_MODULE_3__["default"]; });

/* harmony import */ var _clip_antimeridian_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./clip/antimeridian.js */ "./node_modules/d3-geo/src/clip/antimeridian.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipAntimeridian", function() { return _clip_antimeridian_js__WEBPACK_IMPORTED_MODULE_4__["default"]; });

/* harmony import */ var _clip_circle_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./clip/circle.js */ "./node_modules/d3-geo/src/clip/circle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipCircle", function() { return _clip_circle_js__WEBPACK_IMPORTED_MODULE_5__["default"]; });

/* harmony import */ var _clip_extent_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./clip/extent.js */ "./node_modules/d3-geo/src/clip/extent.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipExtent", function() { return _clip_extent_js__WEBPACK_IMPORTED_MODULE_6__["default"]; });

/* harmony import */ var _clip_rectangle_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./clip/rectangle.js */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoClipRectangle", function() { return _clip_rectangle_js__WEBPACK_IMPORTED_MODULE_7__["default"]; });

/* harmony import */ var _contains_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./contains.js */ "./node_modules/d3-geo/src/contains.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoContains", function() { return _contains_js__WEBPACK_IMPORTED_MODULE_8__["default"]; });

/* harmony import */ var _distance_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./distance.js */ "./node_modules/d3-geo/src/distance.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoDistance", function() { return _distance_js__WEBPACK_IMPORTED_MODULE_9__["default"]; });

/* harmony import */ var _graticule_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./graticule.js */ "./node_modules/d3-geo/src/graticule.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGraticule", function() { return _graticule_js__WEBPACK_IMPORTED_MODULE_10__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGraticule10", function() { return _graticule_js__WEBPACK_IMPORTED_MODULE_10__["graticule10"]; });

/* harmony import */ var _interpolate_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./interpolate.js */ "./node_modules/d3-geo/src/interpolate.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoInterpolate", function() { return _interpolate_js__WEBPACK_IMPORTED_MODULE_11__["default"]; });

/* harmony import */ var _length_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./length.js */ "./node_modules/d3-geo/src/length.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoLength", function() { return _length_js__WEBPACK_IMPORTED_MODULE_12__["default"]; });

/* harmony import */ var _path_index_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./path/index.js */ "./node_modules/d3-geo/src/path/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoPath", function() { return _path_index_js__WEBPACK_IMPORTED_MODULE_13__["default"]; });

/* harmony import */ var _projection_albers_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ./projection/albers.js */ "./node_modules/d3-geo/src/projection/albers.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAlbers", function() { return _projection_albers_js__WEBPACK_IMPORTED_MODULE_14__["default"]; });

/* harmony import */ var _projection_albersUsa_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ./projection/albersUsa.js */ "./node_modules/d3-geo/src/projection/albersUsa.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAlbersUsa", function() { return _projection_albersUsa_js__WEBPACK_IMPORTED_MODULE_15__["default"]; });

/* harmony import */ var _projection_azimuthalEqualArea_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./projection/azimuthalEqualArea.js */ "./node_modules/d3-geo/src/projection/azimuthalEqualArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEqualArea", function() { return _projection_azimuthalEqualArea_js__WEBPACK_IMPORTED_MODULE_16__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEqualAreaRaw", function() { return _projection_azimuthalEqualArea_js__WEBPACK_IMPORTED_MODULE_16__["azimuthalEqualAreaRaw"]; });

/* harmony import */ var _projection_azimuthalEquidistant_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./projection/azimuthalEquidistant.js */ "./node_modules/d3-geo/src/projection/azimuthalEquidistant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEquidistant", function() { return _projection_azimuthalEquidistant_js__WEBPACK_IMPORTED_MODULE_17__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoAzimuthalEquidistantRaw", function() { return _projection_azimuthalEquidistant_js__WEBPACK_IMPORTED_MODULE_17__["azimuthalEquidistantRaw"]; });

/* harmony import */ var _projection_conicConformal_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./projection/conicConformal.js */ "./node_modules/d3-geo/src/projection/conicConformal.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicConformal", function() { return _projection_conicConformal_js__WEBPACK_IMPORTED_MODULE_18__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicConformalRaw", function() { return _projection_conicConformal_js__WEBPACK_IMPORTED_MODULE_18__["conicConformalRaw"]; });

/* harmony import */ var _projection_conicEqualArea_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./projection/conicEqualArea.js */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEqualArea", function() { return _projection_conicEqualArea_js__WEBPACK_IMPORTED_MODULE_19__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEqualAreaRaw", function() { return _projection_conicEqualArea_js__WEBPACK_IMPORTED_MODULE_19__["conicEqualAreaRaw"]; });

/* harmony import */ var _projection_conicEquidistant_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(/*! ./projection/conicEquidistant.js */ "./node_modules/d3-geo/src/projection/conicEquidistant.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEquidistant", function() { return _projection_conicEquidistant_js__WEBPACK_IMPORTED_MODULE_20__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoConicEquidistantRaw", function() { return _projection_conicEquidistant_js__WEBPACK_IMPORTED_MODULE_20__["conicEquidistantRaw"]; });

/* harmony import */ var _projection_equalEarth_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(/*! ./projection/equalEarth.js */ "./node_modules/d3-geo/src/projection/equalEarth.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEqualEarth", function() { return _projection_equalEarth_js__WEBPACK_IMPORTED_MODULE_21__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEqualEarthRaw", function() { return _projection_equalEarth_js__WEBPACK_IMPORTED_MODULE_21__["equalEarthRaw"]; });

/* harmony import */ var _projection_equirectangular_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(/*! ./projection/equirectangular.js */ "./node_modules/d3-geo/src/projection/equirectangular.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEquirectangular", function() { return _projection_equirectangular_js__WEBPACK_IMPORTED_MODULE_22__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoEquirectangularRaw", function() { return _projection_equirectangular_js__WEBPACK_IMPORTED_MODULE_22__["equirectangularRaw"]; });

/* harmony import */ var _projection_gnomonic_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(/*! ./projection/gnomonic.js */ "./node_modules/d3-geo/src/projection/gnomonic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGnomonic", function() { return _projection_gnomonic_js__WEBPACK_IMPORTED_MODULE_23__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoGnomonicRaw", function() { return _projection_gnomonic_js__WEBPACK_IMPORTED_MODULE_23__["gnomonicRaw"]; });

/* harmony import */ var _projection_identity_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(/*! ./projection/identity.js */ "./node_modules/d3-geo/src/projection/identity.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoIdentity", function() { return _projection_identity_js__WEBPACK_IMPORTED_MODULE_24__["default"]; });

/* harmony import */ var _projection_index_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(/*! ./projection/index.js */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoProjection", function() { return _projection_index_js__WEBPACK_IMPORTED_MODULE_25__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoProjectionMutator", function() { return _projection_index_js__WEBPACK_IMPORTED_MODULE_25__["projectionMutator"]; });

/* harmony import */ var _projection_mercator_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(/*! ./projection/mercator.js */ "./node_modules/d3-geo/src/projection/mercator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMercator", function() { return _projection_mercator_js__WEBPACK_IMPORTED_MODULE_26__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoMercatorRaw", function() { return _projection_mercator_js__WEBPACK_IMPORTED_MODULE_26__["mercatorRaw"]; });

/* harmony import */ var _projection_naturalEarth1_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(/*! ./projection/naturalEarth1.js */ "./node_modules/d3-geo/src/projection/naturalEarth1.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth1", function() { return _projection_naturalEarth1_js__WEBPACK_IMPORTED_MODULE_27__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoNaturalEarth1Raw", function() { return _projection_naturalEarth1_js__WEBPACK_IMPORTED_MODULE_27__["naturalEarth1Raw"]; });

/* harmony import */ var _projection_orthographic_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(/*! ./projection/orthographic.js */ "./node_modules/d3-geo/src/projection/orthographic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoOrthographic", function() { return _projection_orthographic_js__WEBPACK_IMPORTED_MODULE_28__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoOrthographicRaw", function() { return _projection_orthographic_js__WEBPACK_IMPORTED_MODULE_28__["orthographicRaw"]; });

/* harmony import */ var _projection_stereographic_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(/*! ./projection/stereographic.js */ "./node_modules/d3-geo/src/projection/stereographic.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStereographic", function() { return _projection_stereographic_js__WEBPACK_IMPORTED_MODULE_29__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStereographicRaw", function() { return _projection_stereographic_js__WEBPACK_IMPORTED_MODULE_29__["stereographicRaw"]; });

/* harmony import */ var _projection_transverseMercator_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(/*! ./projection/transverseMercator.js */ "./node_modules/d3-geo/src/projection/transverseMercator.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransverseMercator", function() { return _projection_transverseMercator_js__WEBPACK_IMPORTED_MODULE_30__["default"]; });

/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransverseMercatorRaw", function() { return _projection_transverseMercator_js__WEBPACK_IMPORTED_MODULE_30__["transverseMercatorRaw"]; });

/* harmony import */ var _rotation_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(/*! ./rotation.js */ "./node_modules/d3-geo/src/rotation.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoRotation", function() { return _rotation_js__WEBPACK_IMPORTED_MODULE_31__["default"]; });

/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(/*! ./stream.js */ "./node_modules/d3-geo/src/stream.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoStream", function() { return _stream_js__WEBPACK_IMPORTED_MODULE_32__["default"]; });

/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(/*! ./transform.js */ "./node_modules/d3-geo/src/transform.js");
/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, "geoTransform", function() { return _transform_js__WEBPACK_IMPORTED_MODULE_33__["default"]; });







 // DEPRECATED! Use d3.geoIdentity().clipExtent(…).





























/***/ }),

/***/ "./node_modules/d3-geo/src/interpolate.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/interpolate.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");


/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  var x0 = a[0] * _math_js__WEBPACK_IMPORTED_MODULE_0__["radians"],
      y0 = a[1] * _math_js__WEBPACK_IMPORTED_MODULE_0__["radians"],
      x1 = b[0] * _math_js__WEBPACK_IMPORTED_MODULE_0__["radians"],
      y1 = b[1] * _math_js__WEBPACK_IMPORTED_MODULE_0__["radians"],
      cy0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(y0),
      sy0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0),
      cy1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(y1),
      sy1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(y1),
      kx0 = cy0 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(x0),
      ky0 = cy0 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(x0),
      kx1 = cy1 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(x1),
      ky1 = cy1 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(x1),
      d = 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["asin"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["haversin"])(y1 - y0) + cy0 * cy1 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["haversin"])(x1 - x0))),
      k = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(d);

  var interpolate = d ? function(t) {
    var B = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(t *= d) / k,
        A = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(d - t) / k,
        x = A * kx0 + B * kx1,
        y = A * ky0 + B * ky1,
        z = A * sy0 + B * sy1;
    return [
      Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan2"])(y, x) * _math_js__WEBPACK_IMPORTED_MODULE_0__["degrees"],
      Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan2"])(z, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + y * y)) * _math_js__WEBPACK_IMPORTED_MODULE_0__["degrees"]
    ];
  } : function() {
    return [x0 * _math_js__WEBPACK_IMPORTED_MODULE_0__["degrees"], y0 * _math_js__WEBPACK_IMPORTED_MODULE_0__["degrees"]];
  };

  interpolate.distance = d;

  return interpolate;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/length.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/length.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./noop.js */ "./node_modules/d3-geo/src/noop.js");
/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./stream.js */ "./node_modules/d3-geo/src/stream.js");





var lengthSum,
    lambda0,
    sinPhi0,
    cosPhi0;

var lengthStream = {
  sphere: _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  point: _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: lengthLineStart,
  lineEnd: _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonStart: _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonEnd: _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"]
};

function lengthLineStart() {
  lengthStream.point = lengthPointFirst;
  lengthStream.lineEnd = lengthLineEnd;
}

function lengthLineEnd() {
  lengthStream.point = lengthStream.lineEnd = _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"];
}

function lengthPointFirst(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"];
  lambda0 = lambda, sinPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi), cosPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi);
  lengthStream.point = lengthPoint;
}

function lengthPoint(lambda, phi) {
  lambda *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], phi *= _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"];
  var sinPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
      cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
      delta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda - lambda0),
      cosDelta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(delta),
      sinDelta = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(delta),
      x = cosPhi * sinDelta,
      y = cosPhi0 * sinPhi - sinPhi0 * cosPhi * cosDelta,
      z = sinPhi0 * sinPhi + cosPhi0 * cosPhi * cosDelta;
  lengthSum.add(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x * x + y * y), z));
  lambda0 = lambda, sinPhi0 = sinPhi, cosPhi0 = cosPhi;
}

/* harmony default export */ __webpack_exports__["default"] = (function(object) {
  lengthSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"]();
  Object(_stream_js__WEBPACK_IMPORTED_MODULE_3__["default"])(object, lengthStream);
  return +lengthSum;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/math.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/math.js ***!
  \*****************************************/
/*! exports provided: epsilon, epsilon2, pi, halfPi, quarterPi, tau, degrees, radians, abs, atan, atan2, cos, ceil, exp, floor, hypot, log, pow, sin, sign, sqrt, tan, acos, asin, haversin */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon", function() { return epsilon; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "epsilon2", function() { return epsilon2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pi", function() { return pi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "halfPi", function() { return halfPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "quarterPi", function() { return quarterPi; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tau", function() { return tau; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "degrees", function() { return degrees; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "radians", function() { return radians; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "abs", function() { return abs; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan", function() { return atan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "atan2", function() { return atan2; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cos", function() { return cos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ceil", function() { return ceil; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "exp", function() { return exp; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "floor", function() { return floor; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "hypot", function() { return hypot; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "log", function() { return log; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "pow", function() { return pow; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sin", function() { return sin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sign", function() { return sign; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "sqrt", function() { return sqrt; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "tan", function() { return tan; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "acos", function() { return acos; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "asin", function() { return asin; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "haversin", function() { return haversin; });
var epsilon = 1e-6;
var epsilon2 = 1e-12;
var pi = Math.PI;
var halfPi = pi / 2;
var quarterPi = pi / 4;
var tau = pi * 2;

var degrees = 180 / pi;
var radians = pi / 180;

var abs = Math.abs;
var atan = Math.atan;
var atan2 = Math.atan2;
var cos = Math.cos;
var ceil = Math.ceil;
var exp = Math.exp;
var floor = Math.floor;
var hypot = Math.hypot;
var log = Math.log;
var pow = Math.pow;
var sin = Math.sin;
var sign = Math.sign || function(x) { return x > 0 ? 1 : x < 0 ? -1 : 0; };
var sqrt = Math.sqrt;
var tan = Math.tan;

function acos(x) {
  return x > 1 ? 0 : x < -1 ? pi : Math.acos(x);
}

function asin(x) {
  return x > 1 ? halfPi : x < -1 ? -halfPi : Math.asin(x);
}

function haversin(x) {
  return (x = sin(x / 2)) * x;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/noop.js":
/*!*****************************************!*\
  !*** ./node_modules/d3-geo/src/noop.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return noop; });
function noop() {}


/***/ }),

/***/ "./node_modules/d3-geo/src/path/area.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/path/area.js ***!
  \**********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-geo/src/noop.js");




var areaSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"](),
    areaRingSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"](),
    x00,
    y00,
    x0,
    y0;

var areaStream = {
  point: _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineEnd: _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  polygonStart: function() {
    areaStream.lineStart = areaRingStart;
    areaStream.lineEnd = areaRingEnd;
  },
  polygonEnd: function() {
    areaStream.lineStart = areaStream.lineEnd = areaStream.point = _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"];
    areaSum.add(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(areaRingSum));
    areaRingSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"]();
  },
  result: function() {
    var area = areaSum / 2;
    areaSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"]();
    return area;
  }
};

function areaRingStart() {
  areaStream.point = areaPointFirst;
}

function areaPointFirst(x, y) {
  areaStream.point = areaPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function areaPoint(x, y) {
  areaRingSum.add(y0 * x - x0 * y);
  x0 = x, y0 = y;
}

function areaRingEnd() {
  areaPoint(x00, y00);
}

/* harmony default export */ __webpack_exports__["default"] = (areaStream);


/***/ }),

/***/ "./node_modules/d3-geo/src/path/bounds.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/path/bounds.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-geo/src/noop.js");


var x0 = Infinity,
    y0 = x0,
    x1 = -x0,
    y1 = x1;

var boundsStream = {
  point: boundsPoint,
  lineStart: _noop_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  lineEnd: _noop_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  polygonStart: _noop_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  polygonEnd: _noop_js__WEBPACK_IMPORTED_MODULE_0__["default"],
  result: function() {
    var bounds = [[x0, y0], [x1, y1]];
    x1 = y1 = -(y0 = x0 = Infinity);
    return bounds;
  }
};

function boundsPoint(x, y) {
  if (x < x0) x0 = x;
  if (x > x1) x1 = x;
  if (y < y0) y0 = y;
  if (y > y1) y1 = y;
}

/* harmony default export */ __webpack_exports__["default"] = (boundsStream);


/***/ }),

/***/ "./node_modules/d3-geo/src/path/centroid.js":
/*!**************************************************!*\
  !*** ./node_modules/d3-geo/src/path/centroid.js ***!
  \**************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");


// TODO Enforce positive area for exterior, negative area for interior?

var X0 = 0,
    Y0 = 0,
    Z0 = 0,
    X1 = 0,
    Y1 = 0,
    Z1 = 0,
    X2 = 0,
    Y2 = 0,
    Z2 = 0,
    x00,
    y00,
    x0,
    y0;

var centroidStream = {
  point: centroidPoint,
  lineStart: centroidLineStart,
  lineEnd: centroidLineEnd,
  polygonStart: function() {
    centroidStream.lineStart = centroidRingStart;
    centroidStream.lineEnd = centroidRingEnd;
  },
  polygonEnd: function() {
    centroidStream.point = centroidPoint;
    centroidStream.lineStart = centroidLineStart;
    centroidStream.lineEnd = centroidLineEnd;
  },
  result: function() {
    var centroid = Z2 ? [X2 / Z2, Y2 / Z2]
        : Z1 ? [X1 / Z1, Y1 / Z1]
        : Z0 ? [X0 / Z0, Y0 / Z0]
        : [NaN, NaN];
    X0 = Y0 = Z0 =
    X1 = Y1 = Z1 =
    X2 = Y2 = Z2 = 0;
    return centroid;
  }
};

function centroidPoint(x, y) {
  X0 += x;
  Y0 += y;
  ++Z0;
}

function centroidLineStart() {
  centroidStream.point = centroidPointFirstLine;
}

function centroidPointFirstLine(x, y) {
  centroidStream.point = centroidPointLine;
  centroidPoint(x0 = x, y0 = y);
}

function centroidPointLine(x, y) {
  var dx = x - x0, dy = y - y0, z = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(dx * dx + dy * dy);
  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;
  centroidPoint(x0 = x, y0 = y);
}

function centroidLineEnd() {
  centroidStream.point = centroidPoint;
}

function centroidRingStart() {
  centroidStream.point = centroidPointFirstRing;
}

function centroidRingEnd() {
  centroidPointRing(x00, y00);
}

function centroidPointFirstRing(x, y) {
  centroidStream.point = centroidPointRing;
  centroidPoint(x00 = x0 = x, y00 = y0 = y);
}

function centroidPointRing(x, y) {
  var dx = x - x0,
      dy = y - y0,
      z = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(dx * dx + dy * dy);

  X1 += z * (x0 + x) / 2;
  Y1 += z * (y0 + y) / 2;
  Z1 += z;

  z = y0 * x - x0 * y;
  X2 += z * (x0 + x);
  Y2 += z * (y0 + y);
  Z2 += z * 3;
  centroidPoint(x0 = x, y0 = y);
}

/* harmony default export */ __webpack_exports__["default"] = (centroidStream);


/***/ }),

/***/ "./node_modules/d3-geo/src/path/context.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-geo/src/path/context.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PathContext; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-geo/src/noop.js");



function PathContext(context) {
  this._context = context;
}

PathContext.prototype = {
  _radius: 4.5,
  pointRadius: function(_) {
    return this._radius = _, this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0) this._context.closePath();
    this._point = NaN;
  },
  point: function(x, y) {
    switch (this._point) {
      case 0: {
        this._context.moveTo(x, y);
        this._point = 1;
        break;
      }
      case 1: {
        this._context.lineTo(x, y);
        break;
      }
      default: {
        this._context.moveTo(x + this._radius, y);
        this._context.arc(x, y, this._radius, 0, _math_js__WEBPACK_IMPORTED_MODULE_0__["tau"]);
        break;
      }
    }
  },
  result: _noop_js__WEBPACK_IMPORTED_MODULE_1__["default"]
};


/***/ }),

/***/ "./node_modules/d3-geo/src/path/index.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/path/index.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../identity.js */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stream.js */ "./node_modules/d3-geo/src/stream.js");
/* harmony import */ var _area_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./area.js */ "./node_modules/d3-geo/src/path/area.js");
/* harmony import */ var _bounds_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./bounds.js */ "./node_modules/d3-geo/src/path/bounds.js");
/* harmony import */ var _centroid_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./centroid.js */ "./node_modules/d3-geo/src/path/centroid.js");
/* harmony import */ var _context_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./context.js */ "./node_modules/d3-geo/src/path/context.js");
/* harmony import */ var _measure_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./measure.js */ "./node_modules/d3-geo/src/path/measure.js");
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./string.js */ "./node_modules/d3-geo/src/path/string.js");









/* harmony default export */ __webpack_exports__["default"] = (function(projection, context) {
  var pointRadius = 4.5,
      projectionStream,
      contextStream;

  function path(object) {
    if (object) {
      if (typeof pointRadius === "function") contextStream.pointRadius(+pointRadius.apply(this, arguments));
      Object(_stream_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(contextStream));
    }
    return contextStream.result();
  }

  path.area = function(object) {
    Object(_stream_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_area_js__WEBPACK_IMPORTED_MODULE_2__["default"]));
    return _area_js__WEBPACK_IMPORTED_MODULE_2__["default"].result();
  };

  path.measure = function(object) {
    Object(_stream_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_measure_js__WEBPACK_IMPORTED_MODULE_6__["default"]));
    return _measure_js__WEBPACK_IMPORTED_MODULE_6__["default"].result();
  };

  path.bounds = function(object) {
    Object(_stream_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_bounds_js__WEBPACK_IMPORTED_MODULE_3__["default"]));
    return _bounds_js__WEBPACK_IMPORTED_MODULE_3__["default"].result();
  };

  path.centroid = function(object) {
    Object(_stream_js__WEBPACK_IMPORTED_MODULE_1__["default"])(object, projectionStream(_centroid_js__WEBPACK_IMPORTED_MODULE_4__["default"]));
    return _centroid_js__WEBPACK_IMPORTED_MODULE_4__["default"].result();
  };

  path.projection = function(_) {
    return arguments.length ? (projectionStream = _ == null ? (projection = null, _identity_js__WEBPACK_IMPORTED_MODULE_0__["default"]) : (projection = _).stream, path) : projection;
  };

  path.context = function(_) {
    if (!arguments.length) return context;
    contextStream = _ == null ? (context = null, new _string_js__WEBPACK_IMPORTED_MODULE_7__["default"]) : new _context_js__WEBPACK_IMPORTED_MODULE_5__["default"](context = _);
    if (typeof pointRadius !== "function") contextStream.pointRadius(pointRadius);
    return path;
  };

  path.pointRadius = function(_) {
    if (!arguments.length) return pointRadius;
    pointRadius = typeof _ === "function" ? _ : (contextStream.pointRadius(+_), +_);
    return path;
  };

  return path.projection(projection).context(context);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/path/measure.js":
/*!*************************************************!*\
  !*** ./node_modules/d3-geo/src/path/measure.js ***!
  \*************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _noop_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../noop.js */ "./node_modules/d3-geo/src/noop.js");




var lengthSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"](),
    lengthRing,
    x00,
    y00,
    x0,
    y0;

var lengthStream = {
  point: _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"],
  lineStart: function() {
    lengthStream.point = lengthPointFirst;
  },
  lineEnd: function() {
    if (lengthRing) lengthPoint(x00, y00);
    lengthStream.point = _noop_js__WEBPACK_IMPORTED_MODULE_2__["default"];
  },
  polygonStart: function() {
    lengthRing = true;
  },
  polygonEnd: function() {
    lengthRing = null;
  },
  result: function() {
    var length = +lengthSum;
    lengthSum = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"]();
    return length;
  }
};

function lengthPointFirst(x, y) {
  lengthStream.point = lengthPoint;
  x00 = x0 = x, y00 = y0 = y;
}

function lengthPoint(x, y) {
  x0 -= x, y0 -= y;
  lengthSum.add(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(x0 * x0 + y0 * y0));
  x0 = x, y0 = y;
}

/* harmony default export */ __webpack_exports__["default"] = (lengthStream);


/***/ }),

/***/ "./node_modules/d3-geo/src/path/string.js":
/*!************************************************!*\
  !*** ./node_modules/d3-geo/src/path/string.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return PathString; });
function PathString() {
  this._string = [];
}

PathString.prototype = {
  _radius: 4.5,
  _circle: circle(4.5),
  pointRadius: function(_) {
    if ((_ = +_) !== this._radius) this._radius = _, this._circle = null;
    return this;
  },
  polygonStart: function() {
    this._line = 0;
  },
  polygonEnd: function() {
    this._line = NaN;
  },
  lineStart: function() {
    this._point = 0;
  },
  lineEnd: function() {
    if (this._line === 0) this._string.push("Z");
    this._point = NaN;
  },
  point: function(x, y) {
    switch (this._point) {
      case 0: {
        this._string.push("M", x, ",", y);
        this._point = 1;
        break;
      }
      case 1: {
        this._string.push("L", x, ",", y);
        break;
      }
      default: {
        if (this._circle == null) this._circle = circle(this._radius);
        this._string.push("M", x, ",", y, this._circle);
        break;
      }
    }
  },
  result: function() {
    if (this._string.length) {
      var result = this._string.join("");
      this._string = [];
      return result;
    } else {
      return null;
    }
  }
};

function circle(radius) {
  return "m0," + radius
      + "a" + radius + "," + radius + " 0 1,1 0," + -2 * radius
      + "a" + radius + "," + radius + " 0 1,1 0," + 2 * radius
      + "z";
}


/***/ }),

/***/ "./node_modules/d3-geo/src/pointEqual.js":
/*!***********************************************!*\
  !*** ./node_modules/d3-geo/src/pointEqual.js ***!
  \***********************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");


/* harmony default export */ __webpack_exports__["default"] = (function(a, b) {
  return Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(a[0] - b[0]) < _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"] && Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(a[1] - b[1]) < _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"];
});


/***/ }),

/***/ "./node_modules/d3-geo/src/polygonContains.js":
/*!****************************************************!*\
  !*** ./node_modules/d3-geo/src/polygonContains.js ***!
  \****************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! d3-array */ "./node_modules/d3-array/src/index.js");
/* harmony import */ var _cartesian_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./cartesian.js */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");




function longitude(point) {
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(point[0]) <= _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"])
    return point[0];
  else
    return Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sign"])(point[0]) * ((Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["abs"])(point[0]) + _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"]) % _math_js__WEBPACK_IMPORTED_MODULE_2__["tau"] - _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"]);
}

/* harmony default export */ __webpack_exports__["default"] = (function(polygon, point) {
  var lambda = longitude(point),
      phi = point[1],
      sinPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi),
      normal = [Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(lambda), -Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(lambda), 0],
      angle = 0,
      winding = 0;

  var sum = new d3_array__WEBPACK_IMPORTED_MODULE_0__["Adder"]();

  if (sinPhi === 1) phi = _math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"] + _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"];
  else if (sinPhi === -1) phi = -_math_js__WEBPACK_IMPORTED_MODULE_2__["halfPi"] - _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"];

  for (var i = 0, n = polygon.length; i < n; ++i) {
    if (!(m = (ring = polygon[i]).length)) continue;
    var ring,
        m,
        point0 = ring[m - 1],
        lambda0 = longitude(point0),
        phi0 = point0[1] / 2 + _math_js__WEBPACK_IMPORTED_MODULE_2__["quarterPi"],
        sinPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi0),
        cosPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi0);

    for (var j = 0; j < m; ++j, lambda0 = lambda1, sinPhi0 = sinPhi1, cosPhi0 = cosPhi1, point0 = point1) {
      var point1 = ring[j],
          lambda1 = longitude(point1),
          phi1 = point1[1] / 2 + _math_js__WEBPACK_IMPORTED_MODULE_2__["quarterPi"],
          sinPhi1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(phi1),
          cosPhi1 = Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(phi1),
          delta = lambda1 - lambda0,
          sign = delta >= 0 ? 1 : -1,
          absDelta = sign * delta,
          antimeridian = absDelta > _math_js__WEBPACK_IMPORTED_MODULE_2__["pi"],
          k = sinPhi0 * sinPhi1;

      sum.add(Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["atan2"])(k * sign * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["sin"])(absDelta), cosPhi0 * cosPhi1 + k * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["cos"])(absDelta)));
      angle += antimeridian ? delta + sign * _math_js__WEBPACK_IMPORTED_MODULE_2__["tau"] : delta;

      // Are the longitudes either side of the point’s meridian (lambda),
      // and are the latitudes smaller than the parallel (phi)?
      if (antimeridian ^ lambda0 >= lambda ^ lambda1 >= lambda) {
        var arc = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_1__["cartesianCross"])(Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_1__["cartesian"])(point0), Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_1__["cartesian"])(point1));
        Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_1__["cartesianNormalizeInPlace"])(arc);
        var intersection = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_1__["cartesianCross"])(normal, arc);
        Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_1__["cartesianNormalizeInPlace"])(intersection);
        var phiArc = (antimeridian ^ delta >= 0 ? -1 : 1) * Object(_math_js__WEBPACK_IMPORTED_MODULE_2__["asin"])(intersection[2]);
        if (phi > phiArc || phi === phiArc && (arc[0] || arc[1])) {
          winding += antimeridian ^ delta >= 0 ? 1 : -1;
        }
      }
    }
  }

  // First, determine whether the South pole is inside or outside:
  //
  // It is inside if:
  // * the polygon winds around it in a clockwise direction.
  // * the polygon does not (cumulatively) wind around it, but has a negative
  //   (counter-clockwise) area.
  //
  // Second, count the (signed) number of times a segment crosses a lambda
  // from the point to the South pole.  If it is zero, then the point is the
  // same side as the South pole.

  return (angle < -_math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"] || angle < _math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon"] && sum < -_math_js__WEBPACK_IMPORTED_MODULE_2__["epsilon2"]) ^ (winding & 1);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/albers.js":
/*!******************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/albers.js ***!
  \******************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _conicEqualArea_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./conicEqualArea.js */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");


/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_conicEqualArea_js__WEBPACK_IMPORTED_MODULE_0__["default"])()
      .parallels([29.5, 45.5])
      .scale(1070)
      .translate([480, 250])
      .rotate([96, 0])
      .center([-0.6, 38.7]);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/albersUsa.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/albersUsa.js ***!
  \*********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _albers_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./albers.js */ "./node_modules/d3-geo/src/projection/albers.js");
/* harmony import */ var _conicEqualArea_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./conicEqualArea.js */ "./node_modules/d3-geo/src/projection/conicEqualArea.js");
/* harmony import */ var _fit_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fit.js */ "./node_modules/d3-geo/src/projection/fit.js");





// The projections must have mutually exclusive clip regions on the sphere,
// as this will avoid emitting interleaving lines and polygons.
function multiplex(streams) {
  var n = streams.length;
  return {
    point: function(x, y) { var i = -1; while (++i < n) streams[i].point(x, y); },
    sphere: function() { var i = -1; while (++i < n) streams[i].sphere(); },
    lineStart: function() { var i = -1; while (++i < n) streams[i].lineStart(); },
    lineEnd: function() { var i = -1; while (++i < n) streams[i].lineEnd(); },
    polygonStart: function() { var i = -1; while (++i < n) streams[i].polygonStart(); },
    polygonEnd: function() { var i = -1; while (++i < n) streams[i].polygonEnd(); }
  };
}

// A composite projection for the United States, configured by default for
// 960×500. The projection also works quite well at 960×600 if you change the
// scale to 1285 and adjust the translate accordingly. The set of standard
// parallels for each region comes from USGS, which is published here:
// http://egsc.usgs.gov/isb/pubs/MapProjections/projections.html#albers
/* harmony default export */ __webpack_exports__["default"] = (function() {
  var cache,
      cacheStream,
      lower48 = Object(_albers_js__WEBPACK_IMPORTED_MODULE_1__["default"])(), lower48Point,
      alaska = Object(_conicEqualArea_js__WEBPACK_IMPORTED_MODULE_2__["default"])().rotate([154, 0]).center([-2, 58.5]).parallels([55, 65]), alaskaPoint, // EPSG:3338
      hawaii = Object(_conicEqualArea_js__WEBPACK_IMPORTED_MODULE_2__["default"])().rotate([157, 0]).center([-3, 19.9]).parallels([8, 18]), hawaiiPoint, // ESRI:102007
      point, pointStream = {point: function(x, y) { point = [x, y]; }};

  function albersUsa(coordinates) {
    var x = coordinates[0], y = coordinates[1];
    return point = null,
        (lower48Point.point(x, y), point)
        || (alaskaPoint.point(x, y), point)
        || (hawaiiPoint.point(x, y), point);
  }

  albersUsa.invert = function(coordinates) {
    var k = lower48.scale(),
        t = lower48.translate(),
        x = (coordinates[0] - t[0]) / k,
        y = (coordinates[1] - t[1]) / k;
    return (y >= 0.120 && y < 0.234 && x >= -0.425 && x < -0.214 ? alaska
        : y >= 0.166 && y < 0.234 && x >= -0.214 && x < -0.115 ? hawaii
        : lower48).invert(coordinates);
  };

  albersUsa.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = multiplex([lower48.stream(cacheStream = stream), alaska.stream(stream), hawaii.stream(stream)]);
  };

  albersUsa.precision = function(_) {
    if (!arguments.length) return lower48.precision();
    lower48.precision(_), alaska.precision(_), hawaii.precision(_);
    return reset();
  };

  albersUsa.scale = function(_) {
    if (!arguments.length) return lower48.scale();
    lower48.scale(_), alaska.scale(_ * 0.35), hawaii.scale(_);
    return albersUsa.translate(lower48.translate());
  };

  albersUsa.translate = function(_) {
    if (!arguments.length) return lower48.translate();
    var k = lower48.scale(), x = +_[0], y = +_[1];

    lower48Point = lower48
        .translate(_)
        .clipExtent([[x - 0.455 * k, y - 0.238 * k], [x + 0.455 * k, y + 0.238 * k]])
        .stream(pointStream);

    alaskaPoint = alaska
        .translate([x - 0.307 * k, y + 0.201 * k])
        .clipExtent([[x - 0.425 * k + _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.120 * k + _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]], [x - 0.214 * k - _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.234 * k - _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]]])
        .stream(pointStream);

    hawaiiPoint = hawaii
        .translate([x - 0.205 * k, y + 0.212 * k])
        .clipExtent([[x - 0.214 * k + _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.166 * k + _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]], [x - 0.115 * k - _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"], y + 0.234 * k - _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]]])
        .stream(pointStream);

    return reset();
  };

  albersUsa.fitExtent = function(extent, object) {
    return Object(_fit_js__WEBPACK_IMPORTED_MODULE_3__["fitExtent"])(albersUsa, extent, object);
  };

  albersUsa.fitSize = function(size, object) {
    return Object(_fit_js__WEBPACK_IMPORTED_MODULE_3__["fitSize"])(albersUsa, size, object);
  };

  albersUsa.fitWidth = function(width, object) {
    return Object(_fit_js__WEBPACK_IMPORTED_MODULE_3__["fitWidth"])(albersUsa, width, object);
  };

  albersUsa.fitHeight = function(height, object) {
    return Object(_fit_js__WEBPACK_IMPORTED_MODULE_3__["fitHeight"])(albersUsa, height, object);
  };

  function reset() {
    cache = cacheStream = null;
    return albersUsa;
  }

  return albersUsa.scale(1070);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthal.js":
/*!*********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthal.js ***!
  \*********************************************************/
/*! exports provided: azimuthalRaw, azimuthalInvert */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalRaw", function() { return azimuthalRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalInvert", function() { return azimuthalInvert; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");


function azimuthalRaw(scale) {
  return function(x, y) {
    var cx = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(x),
        cy = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(y),
        k = scale(cx * cy);
        if (k === Infinity) return [2, 0];
    return [
      k * cy * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(x),
      k * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(y)
    ];
  }
}

function azimuthalInvert(angle) {
  return function(x, y) {
    var z = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + y * y),
        c = angle(z),
        sc = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(c),
        cc = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(c);
    return [
      Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x * sc, z * cc),
      Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["asin"])(z && y * sc / z)
    ];
  }
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthalEqualArea.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthalEqualArea.js ***!
  \******************************************************************/
/*! exports provided: azimuthalEqualAreaRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalEqualAreaRaw", function() { return azimuthalEqualAreaRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal.js */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");




var azimuthalEqualAreaRaw = Object(_azimuthal_js__WEBPACK_IMPORTED_MODULE_1__["azimuthalRaw"])(function(cxcy) {
  return Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(2 / (1 + cxcy));
});

azimuthalEqualAreaRaw.invert = Object(_azimuthal_js__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(function(z) {
  return 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["asin"])(z / 2);
});

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(azimuthalEqualAreaRaw)
      .scale(124.75)
      .clipAngle(180 - 1e-3);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/azimuthalEquidistant.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/azimuthalEquidistant.js ***!
  \********************************************************************/
/*! exports provided: azimuthalEquidistantRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "azimuthalEquidistantRaw", function() { return azimuthalEquidistantRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal.js */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");




var azimuthalEquidistantRaw = Object(_azimuthal_js__WEBPACK_IMPORTED_MODULE_1__["azimuthalRaw"])(function(c) {
  return (c = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["acos"])(c)) && c / Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(c);
});

azimuthalEquidistantRaw.invert = Object(_azimuthal_js__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(function(z) {
  return z;
});

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(azimuthalEquidistantRaw)
      .scale(79.4188)
      .clipAngle(180 - 1e-3);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conic.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conic.js ***!
  \*****************************************************/
/*! exports provided: conicProjection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicProjection", function() { return conicProjection; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");



function conicProjection(projectAt) {
  var phi0 = 0,
      phi1 = _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"] / 3,
      m = Object(_index_js__WEBPACK_IMPORTED_MODULE_1__["projectionMutator"])(projectAt),
      p = m(phi0, phi1);

  p.parallels = function(_) {
    return arguments.length ? m(phi0 = _[0] * _math_js__WEBPACK_IMPORTED_MODULE_0__["radians"], phi1 = _[1] * _math_js__WEBPACK_IMPORTED_MODULE_0__["radians"]) : [phi0 * _math_js__WEBPACK_IMPORTED_MODULE_0__["degrees"], phi1 * _math_js__WEBPACK_IMPORTED_MODULE_0__["degrees"]];
  };

  return p;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicConformal.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicConformal.js ***!
  \**************************************************************/
/*! exports provided: conicConformalRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicConformalRaw", function() { return conicConformalRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conic.js */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _mercator_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./mercator.js */ "./node_modules/d3-geo/src/projection/mercator.js");




function tany(y) {
  return Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])((_math_js__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + y) / 2);
}

function conicConformalRaw(y0, y1) {
  var cy0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(y0),
      n = y0 === y1 ? Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0) : Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["log"])(cy0 / Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(y1)) / Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["log"])(tany(y1) / tany(y0)),
      f = cy0 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["pow"])(tany(y0), n) / n;

  if (!n) return _mercator_js__WEBPACK_IMPORTED_MODULE_2__["mercatorRaw"];

  function project(x, y) {
    if (f > 0) { if (y < -_math_js__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) y = -_math_js__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]; }
    else { if (y > _math_js__WEBPACK_IMPORTED_MODULE_0__["halfPi"] - _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) y = _math_js__WEBPACK_IMPORTED_MODULE_0__["halfPi"] - _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]; }
    var r = f / Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["pow"])(tany(y), n);
    return [r * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(n * x), f - r * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(n * x)];
  }

  project.invert = function(x, y) {
    var fy = f - y, r = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(n) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + fy * fy),
      l = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(fy)) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(fy);
    if (fy * n < 0)
      l -= _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(x) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(fy);
    return [l / n, 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["pow"])(f / r, 1 / n)) - _math_js__WEBPACK_IMPORTED_MODULE_0__["halfPi"]];
  };

  return project;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_conic_js__WEBPACK_IMPORTED_MODULE_1__["conicProjection"])(conicConformalRaw)
      .scale(109.5)
      .parallels([30, 30]);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicEqualArea.js":
/*!**************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicEqualArea.js ***!
  \**************************************************************/
/*! exports provided: conicEqualAreaRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicEqualAreaRaw", function() { return conicEqualAreaRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conic.js */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _cylindricalEqualArea_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./cylindricalEqualArea.js */ "./node_modules/d3-geo/src/projection/cylindricalEqualArea.js");




function conicEqualAreaRaw(y0, y1) {
  var sy0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0), n = (sy0 + Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(y1)) / 2;

  // Are the parallels symmetrical around the Equator?
  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(n) < _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) return Object(_cylindricalEqualArea_js__WEBPACK_IMPORTED_MODULE_2__["cylindricalEqualAreaRaw"])(y0);

  var c = 1 + sy0 * (2 * n - sy0), r0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(c) / n;

  function project(x, y) {
    var r = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(c - 2 * n * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(y)) / n;
    return [r * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(x *= n), r0 - r * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(x)];
  }

  project.invert = function(x, y) {
    var r0y = r0 - y,
        l = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(r0y)) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(r0y);
    if (r0y * n < 0)
      l -= _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(x) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(r0y);
    return [l / n, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["asin"])((c - (x * x + r0y * r0y) * n * n) / (2 * n))];
  };

  return project;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_conic_js__WEBPACK_IMPORTED_MODULE_1__["conicProjection"])(conicEqualAreaRaw)
      .scale(155.424)
      .center([0, 33.6442]);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/conicEquidistant.js":
/*!****************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/conicEquidistant.js ***!
  \****************************************************************/
/*! exports provided: conicEquidistantRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "conicEquidistantRaw", function() { return conicEquidistantRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _conic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./conic.js */ "./node_modules/d3-geo/src/projection/conic.js");
/* harmony import */ var _equirectangular_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./equirectangular.js */ "./node_modules/d3-geo/src/projection/equirectangular.js");




function conicEquidistantRaw(y0, y1) {
  var cy0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(y0),
      n = y0 === y1 ? Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(y0) : (cy0 - Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(y1)) / (y1 - y0),
      g = cy0 / n + y0;

  if (Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(n) < _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]) return _equirectangular_js__WEBPACK_IMPORTED_MODULE_2__["equirectangularRaw"];

  function project(x, y) {
    var gy = g - y, nx = n * x;
    return [gy * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(nx), g - gy * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(nx)];
  }

  project.invert = function(x, y) {
    var gy = g - y,
        l = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan2"])(x, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["abs"])(gy)) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(gy);
    if (gy * n < 0)
      l -= _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"] * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(x) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(gy);
    return [l / n, g - Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sign"])(n) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sqrt"])(x * x + gy * gy)];
  };

  return project;
}

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_conic_js__WEBPACK_IMPORTED_MODULE_1__["conicProjection"])(conicEquidistantRaw)
      .scale(131.154)
      .center([0, 13.9389]);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/cylindricalEqualArea.js":
/*!********************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/cylindricalEqualArea.js ***!
  \********************************************************************/
/*! exports provided: cylindricalEqualAreaRaw */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "cylindricalEqualAreaRaw", function() { return cylindricalEqualAreaRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");


function cylindricalEqualAreaRaw(phi0) {
  var cosPhi0 = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(phi0);

  function forward(lambda, phi) {
    return [lambda * cosPhi0, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(phi) / cosPhi0];
  }

  forward.invert = function(x, y) {
    return [x / cosPhi0, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["asin"])(y * cosPhi0)];
  };

  return forward;
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/equalEarth.js":
/*!**********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/equalEarth.js ***!
  \**********************************************************/
/*! exports provided: equalEarthRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equalEarthRaw", function() { return equalEarthRaw; });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");



var A1 = 1.340264,
    A2 = -0.081106,
    A3 = 0.000893,
    A4 = 0.003796,
    M = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(3) / 2,
    iterations = 12;

function equalEarthRaw(lambda, phi) {
  var l = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(M * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi)), l2 = l * l, l6 = l2 * l2 * l2;
  return [
    lambda * Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(l) / (M * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2))),
    l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2))
  ];
}

equalEarthRaw.invert = function(x, y) {
  var l = y, l2 = l * l, l6 = l2 * l2 * l2;
  for (var i = 0, delta, fy, fpy; i < iterations; ++i) {
    fy = l * (A1 + A2 * l2 + l6 * (A3 + A4 * l2)) - y;
    fpy = A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2);
    l -= delta = fy / fpy, l2 = l * l, l6 = l2 * l2 * l2;
    if (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon2"]) break;
  }
  return [
    M * x * (A1 + 3 * A2 * l2 + l6 * (7 * A3 + 9 * A4 * l2)) / Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(l),
    Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(l) / M)
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(equalEarthRaw)
      .scale(177.158);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/equirectangular.js":
/*!***************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/equirectangular.js ***!
  \***************************************************************/
/*! exports provided: equirectangularRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "equirectangularRaw", function() { return equirectangularRaw; });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");


function equirectangularRaw(lambda, phi) {
  return [lambda, phi];
}

equirectangularRaw.invert = equirectangularRaw;

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(equirectangularRaw)
      .scale(152.63);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/fit.js":
/*!***************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/fit.js ***!
  \***************************************************/
/*! exports provided: fitExtent, fitSize, fitWidth, fitHeight */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitExtent", function() { return fitExtent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitSize", function() { return fitSize; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitWidth", function() { return fitWidth; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "fitHeight", function() { return fitHeight; });
/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../stream.js */ "./node_modules/d3-geo/src/stream.js");
/* harmony import */ var _path_bounds_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../path/bounds.js */ "./node_modules/d3-geo/src/path/bounds.js");



function fit(projection, fitBounds, object) {
  var clip = projection.clipExtent && projection.clipExtent();
  projection.scale(150).translate([0, 0]);
  if (clip != null) projection.clipExtent(null);
  Object(_stream_js__WEBPACK_IMPORTED_MODULE_0__["default"])(object, projection.stream(_path_bounds_js__WEBPACK_IMPORTED_MODULE_1__["default"]));
  fitBounds(_path_bounds_js__WEBPACK_IMPORTED_MODULE_1__["default"].result());
  if (clip != null) projection.clipExtent(clip);
  return projection;
}

function fitExtent(projection, extent, object) {
  return fit(projection, function(b) {
    var w = extent[1][0] - extent[0][0],
        h = extent[1][1] - extent[0][1],
        k = Math.min(w / (b[1][0] - b[0][0]), h / (b[1][1] - b[0][1])),
        x = +extent[0][0] + (w - k * (b[1][0] + b[0][0])) / 2,
        y = +extent[0][1] + (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitSize(projection, size, object) {
  return fitExtent(projection, [[0, 0], size], object);
}

function fitWidth(projection, width, object) {
  return fit(projection, function(b) {
    var w = +width,
        k = w / (b[1][0] - b[0][0]),
        x = (w - k * (b[1][0] + b[0][0])) / 2,
        y = -k * b[0][1];
    projection.scale(150 * k).translate([x, y]);
  }, object);
}

function fitHeight(projection, height, object) {
  return fit(projection, function(b) {
    var h = +height,
        k = h / (b[1][1] - b[0][1]),
        x = -k * b[0][0],
        y = (h - k * (b[1][1] + b[0][1])) / 2;
    projection.scale(150 * k).translate([x, y]);
  }, object);
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/gnomonic.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/gnomonic.js ***!
  \********************************************************/
/*! exports provided: gnomonicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "gnomonicRaw", function() { return gnomonicRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal.js */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");




function gnomonicRaw(x, y) {
  var cy = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(y), k = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(x) * cy;
  return [cy * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(x) / k, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(y) / k];
}

gnomonicRaw.invert = Object(_azimuthal_js__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"]);

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(gnomonicRaw)
      .scale(144.049)
      .clipAngle(60);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/identity.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/identity.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _clip_rectangle_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clip/rectangle.js */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../identity.js */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transform.js */ "./node_modules/d3-geo/src/transform.js");
/* harmony import */ var _fit_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./fit.js */ "./node_modules/d3-geo/src/projection/fit.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");






/* harmony default export */ __webpack_exports__["default"] = (function() {
  var k = 1, tx = 0, ty = 0, sx = 1, sy = 1, // scale, translate and reflect
      alpha = 0, ca, sa, // angle
      x0 = null, y0, x1, y1, // clip extent
      kx = 1, ky = 1,
      transform = Object(_transform_js__WEBPACK_IMPORTED_MODULE_2__["transformer"])({
        point: function(x, y) {
          var p = projection([x, y])
          this.stream.point(p[0], p[1]);
        }
      }),
      postclip = _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"],
      cache,
      cacheStream;

  function reset() {
    kx = k * sx;
    ky = k * sy;
    cache = cacheStream = null;
    return projection;
  }

  function projection (p) {
    var x = p[0] * kx, y = p[1] * ky;
    if (alpha) {
      var t = y * ca - x * sa;
      x = x * ca + y * sa;
      y = t;
    }    
    return [x + tx, y + ty];
  }
  projection.invert = function(p) {
    var x = p[0] - tx, y = p[1] - ty;
    if (alpha) {
      var t = y * ca + x * sa;
      x = x * ca - y * sa;
      y = t;
    }
    return [x / kx, y / ky];
  };
  projection.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = transform(postclip(cacheStream = stream));
  };
  projection.postclip = function(_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };
  projection.clipExtent = function(_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity_js__WEBPACK_IMPORTED_MODULE_1__["default"]) : Object(_clip_rectangle_js__WEBPACK_IMPORTED_MODULE_0__["default"])(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };
  projection.scale = function(_) {
    return arguments.length ? (k = +_, reset()) : k;
  };
  projection.translate = function(_) {
    return arguments.length ? (tx = +_[0], ty = +_[1], reset()) : [tx, ty];
  }
  projection.angle = function(_) {
    return arguments.length ? (alpha = _ % 360 * _math_js__WEBPACK_IMPORTED_MODULE_4__["radians"], sa = Object(_math_js__WEBPACK_IMPORTED_MODULE_4__["sin"])(alpha), ca = Object(_math_js__WEBPACK_IMPORTED_MODULE_4__["cos"])(alpha), reset()) : alpha * _math_js__WEBPACK_IMPORTED_MODULE_4__["degrees"];
  };
  projection.reflectX = function(_) {
    return arguments.length ? (sx = _ ? -1 : 1, reset()) : sx < 0;
  };
  projection.reflectY = function(_) {
    return arguments.length ? (sy = _ ? -1 : 1, reset()) : sy < 0;
  };
  projection.fitExtent = function(extent, object) {
    return Object(_fit_js__WEBPACK_IMPORTED_MODULE_3__["fitExtent"])(projection, extent, object);
  };
  projection.fitSize = function(size, object) {
    return Object(_fit_js__WEBPACK_IMPORTED_MODULE_3__["fitSize"])(projection, size, object);
  };
  projection.fitWidth = function(width, object) {
    return Object(_fit_js__WEBPACK_IMPORTED_MODULE_3__["fitWidth"])(projection, width, object);
  };
  projection.fitHeight = function(height, object) {
    return Object(_fit_js__WEBPACK_IMPORTED_MODULE_3__["fitHeight"])(projection, height, object);
  };

  return projection;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/index.js ***!
  \*****************************************************/
/*! exports provided: default, projectionMutator */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return projection; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "projectionMutator", function() { return projectionMutator; });
/* harmony import */ var _clip_antimeridian_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../clip/antimeridian.js */ "./node_modules/d3-geo/src/clip/antimeridian.js");
/* harmony import */ var _clip_circle_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../clip/circle.js */ "./node_modules/d3-geo/src/clip/circle.js");
/* harmony import */ var _clip_rectangle_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../clip/rectangle.js */ "./node_modules/d3-geo/src/clip/rectangle.js");
/* harmony import */ var _compose_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../compose.js */ "./node_modules/d3-geo/src/compose.js");
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../identity.js */ "./node_modules/d3-geo/src/identity.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../rotation.js */ "./node_modules/d3-geo/src/rotation.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../transform.js */ "./node_modules/d3-geo/src/transform.js");
/* harmony import */ var _fit_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./fit.js */ "./node_modules/d3-geo/src/projection/fit.js");
/* harmony import */ var _resample_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./resample.js */ "./node_modules/d3-geo/src/projection/resample.js");











var transformRadians = Object(_transform_js__WEBPACK_IMPORTED_MODULE_7__["transformer"])({
  point: function(x, y) {
    this.stream.point(x * _math_js__WEBPACK_IMPORTED_MODULE_5__["radians"], y * _math_js__WEBPACK_IMPORTED_MODULE_5__["radians"]);
  }
});

function transformRotate(rotate) {
  return Object(_transform_js__WEBPACK_IMPORTED_MODULE_7__["transformer"])({
    point: function(x, y) {
      var r = rotate(x, y);
      return this.stream.point(r[0], r[1]);
    }
  });
}

function scaleTranslate(k, dx, dy, sx, sy) {
  function transform(x, y) {
    x *= sx; y *= sy;
    return [dx + k * x, dy - k * y];
  }
  transform.invert = function(x, y) {
    return [(x - dx) / k * sx, (dy - y) / k * sy];
  };
  return transform;
}

function scaleTranslateRotate(k, dx, dy, sx, sy, alpha) {
  if (!alpha) return scaleTranslate(k, dx, dy, sx, sy);
  var cosAlpha = Object(_math_js__WEBPACK_IMPORTED_MODULE_5__["cos"])(alpha),
      sinAlpha = Object(_math_js__WEBPACK_IMPORTED_MODULE_5__["sin"])(alpha),
      a = cosAlpha * k,
      b = sinAlpha * k,
      ai = cosAlpha / k,
      bi = sinAlpha / k,
      ci = (sinAlpha * dy - cosAlpha * dx) / k,
      fi = (sinAlpha * dx + cosAlpha * dy) / k;
  function transform(x, y) {
    x *= sx; y *= sy;
    return [a * x - b * y + dx, dy - b * x - a * y];
  }
  transform.invert = function(x, y) {
    return [sx * (ai * x - bi * y + ci), sy * (fi - bi * x - ai * y)];
  };
  return transform;
}

function projection(project) {
  return projectionMutator(function() { return project; })();
}

function projectionMutator(projectAt) {
  var project,
      k = 150, // scale
      x = 480, y = 250, // translate
      lambda = 0, phi = 0, // center
      deltaLambda = 0, deltaPhi = 0, deltaGamma = 0, rotate, // pre-rotate
      alpha = 0, // post-rotate angle
      sx = 1, // reflectX
      sy = 1, // reflectX
      theta = null, preclip = _clip_antimeridian_js__WEBPACK_IMPORTED_MODULE_0__["default"], // pre-clip angle
      x0 = null, y0, x1, y1, postclip = _identity_js__WEBPACK_IMPORTED_MODULE_4__["default"], // post-clip extent
      delta2 = 0.5, // precision
      projectResample,
      projectTransform,
      projectRotateTransform,
      cache,
      cacheStream;

  function projection(point) {
    return projectRotateTransform(point[0] * _math_js__WEBPACK_IMPORTED_MODULE_5__["radians"], point[1] * _math_js__WEBPACK_IMPORTED_MODULE_5__["radians"]);
  }

  function invert(point) {
    point = projectRotateTransform.invert(point[0], point[1]);
    return point && [point[0] * _math_js__WEBPACK_IMPORTED_MODULE_5__["degrees"], point[1] * _math_js__WEBPACK_IMPORTED_MODULE_5__["degrees"]];
  }

  projection.stream = function(stream) {
    return cache && cacheStream === stream ? cache : cache = transformRadians(transformRotate(rotate)(preclip(projectResample(postclip(cacheStream = stream)))));
  };

  projection.preclip = function(_) {
    return arguments.length ? (preclip = _, theta = undefined, reset()) : preclip;
  };

  projection.postclip = function(_) {
    return arguments.length ? (postclip = _, x0 = y0 = x1 = y1 = null, reset()) : postclip;
  };

  projection.clipAngle = function(_) {
    return arguments.length ? (preclip = +_ ? Object(_clip_circle_js__WEBPACK_IMPORTED_MODULE_1__["default"])(theta = _ * _math_js__WEBPACK_IMPORTED_MODULE_5__["radians"]) : (theta = null, _clip_antimeridian_js__WEBPACK_IMPORTED_MODULE_0__["default"]), reset()) : theta * _math_js__WEBPACK_IMPORTED_MODULE_5__["degrees"];
  };

  projection.clipExtent = function(_) {
    return arguments.length ? (postclip = _ == null ? (x0 = y0 = x1 = y1 = null, _identity_js__WEBPACK_IMPORTED_MODULE_4__["default"]) : Object(_clip_rectangle_js__WEBPACK_IMPORTED_MODULE_2__["default"])(x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1]), reset()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  projection.scale = function(_) {
    return arguments.length ? (k = +_, recenter()) : k;
  };

  projection.translate = function(_) {
    return arguments.length ? (x = +_[0], y = +_[1], recenter()) : [x, y];
  };

  projection.center = function(_) {
    return arguments.length ? (lambda = _[0] % 360 * _math_js__WEBPACK_IMPORTED_MODULE_5__["radians"], phi = _[1] % 360 * _math_js__WEBPACK_IMPORTED_MODULE_5__["radians"], recenter()) : [lambda * _math_js__WEBPACK_IMPORTED_MODULE_5__["degrees"], phi * _math_js__WEBPACK_IMPORTED_MODULE_5__["degrees"]];
  };

  projection.rotate = function(_) {
    return arguments.length ? (deltaLambda = _[0] % 360 * _math_js__WEBPACK_IMPORTED_MODULE_5__["radians"], deltaPhi = _[1] % 360 * _math_js__WEBPACK_IMPORTED_MODULE_5__["radians"], deltaGamma = _.length > 2 ? _[2] % 360 * _math_js__WEBPACK_IMPORTED_MODULE_5__["radians"] : 0, recenter()) : [deltaLambda * _math_js__WEBPACK_IMPORTED_MODULE_5__["degrees"], deltaPhi * _math_js__WEBPACK_IMPORTED_MODULE_5__["degrees"], deltaGamma * _math_js__WEBPACK_IMPORTED_MODULE_5__["degrees"]];
  };

  projection.angle = function(_) {
    return arguments.length ? (alpha = _ % 360 * _math_js__WEBPACK_IMPORTED_MODULE_5__["radians"], recenter()) : alpha * _math_js__WEBPACK_IMPORTED_MODULE_5__["degrees"];
  };

  projection.reflectX = function(_) {
    return arguments.length ? (sx = _ ? -1 : 1, recenter()) : sx < 0;
  };

  projection.reflectY = function(_) {
    return arguments.length ? (sy = _ ? -1 : 1, recenter()) : sy < 0;
  };

  projection.precision = function(_) {
    return arguments.length ? (projectResample = Object(_resample_js__WEBPACK_IMPORTED_MODULE_9__["default"])(projectTransform, delta2 = _ * _), reset()) : Object(_math_js__WEBPACK_IMPORTED_MODULE_5__["sqrt"])(delta2);
  };

  projection.fitExtent = function(extent, object) {
    return Object(_fit_js__WEBPACK_IMPORTED_MODULE_8__["fitExtent"])(projection, extent, object);
  };

  projection.fitSize = function(size, object) {
    return Object(_fit_js__WEBPACK_IMPORTED_MODULE_8__["fitSize"])(projection, size, object);
  };

  projection.fitWidth = function(width, object) {
    return Object(_fit_js__WEBPACK_IMPORTED_MODULE_8__["fitWidth"])(projection, width, object);
  };

  projection.fitHeight = function(height, object) {
    return Object(_fit_js__WEBPACK_IMPORTED_MODULE_8__["fitHeight"])(projection, height, object);
  };

  function recenter() {
    var center = scaleTranslateRotate(k, 0, 0, sx, sy, alpha).apply(null, project(lambda, phi)),
        transform = scaleTranslateRotate(k, x - center[0], y - center[1], sx, sy, alpha);
    rotate = Object(_rotation_js__WEBPACK_IMPORTED_MODULE_6__["rotateRadians"])(deltaLambda, deltaPhi, deltaGamma);
    projectTransform = Object(_compose_js__WEBPACK_IMPORTED_MODULE_3__["default"])(project, transform);
    projectRotateTransform = Object(_compose_js__WEBPACK_IMPORTED_MODULE_3__["default"])(rotate, projectTransform);
    projectResample = Object(_resample_js__WEBPACK_IMPORTED_MODULE_9__["default"])(projectTransform, delta2);
    return reset();
  }

  function reset() {
    cache = cacheStream = null;
    return projection;
  }

  return function() {
    project = projectAt.apply(this, arguments);
    projection.invert = project.invert && invert;
    return recenter();
  };
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/mercator.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/mercator.js ***!
  \********************************************************/
/*! exports provided: mercatorRaw, default, mercatorProjection */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mercatorRaw", function() { return mercatorRaw; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "mercatorProjection", function() { return mercatorProjection; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _rotation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../rotation.js */ "./node_modules/d3-geo/src/rotation.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");




function mercatorRaw(lambda, phi) {
  return [lambda, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["log"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])((_math_js__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + phi) / 2))];
}

mercatorRaw.invert = function(x, y) {
  return [x, 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["exp"])(y)) - _math_js__WEBPACK_IMPORTED_MODULE_0__["halfPi"]];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return mercatorProjection(mercatorRaw)
      .scale(961 / _math_js__WEBPACK_IMPORTED_MODULE_0__["tau"]);
});

function mercatorProjection(project) {
  var m = Object(_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(project),
      center = m.center,
      scale = m.scale,
      translate = m.translate,
      clipExtent = m.clipExtent,
      x0 = null, y0, x1, y1; // clip extent

  m.scale = function(_) {
    return arguments.length ? (scale(_), reclip()) : scale();
  };

  m.translate = function(_) {
    return arguments.length ? (translate(_), reclip()) : translate();
  };

  m.center = function(_) {
    return arguments.length ? (center(_), reclip()) : center();
  };

  m.clipExtent = function(_) {
    return arguments.length ? ((_ == null ? x0 = y0 = x1 = y1 = null : (x0 = +_[0][0], y0 = +_[0][1], x1 = +_[1][0], y1 = +_[1][1])), reclip()) : x0 == null ? null : [[x0, y0], [x1, y1]];
  };

  function reclip() {
    var k = _math_js__WEBPACK_IMPORTED_MODULE_0__["pi"] * scale(),
        t = m(Object(_rotation_js__WEBPACK_IMPORTED_MODULE_1__["default"])(m.rotate()).invert([0, 0]));
    return clipExtent(x0 == null
        ? [[t[0] - k, t[1] - k], [t[0] + k, t[1] + k]] : project === mercatorRaw
        ? [[Math.max(t[0] - k, x0), y0], [Math.min(t[0] + k, x1), y1]]
        : [[x0, Math.max(t[1] - k, y0)], [x1, Math.min(t[1] + k, y1)]]);
  }

  return reclip();
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/naturalEarth1.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/naturalEarth1.js ***!
  \*************************************************************/
/*! exports provided: naturalEarth1Raw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "naturalEarth1Raw", function() { return naturalEarth1Raw; });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");



function naturalEarth1Raw(lambda, phi) {
  var phi2 = phi * phi, phi4 = phi2 * phi2;
  return [
    lambda * (0.8707 - 0.131979 * phi2 + phi4 * (-0.013791 + phi4 * (0.003971 * phi2 - 0.001529 * phi4))),
    phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4)))
  ];
}

naturalEarth1Raw.invert = function(x, y) {
  var phi = y, i = 25, delta;
  do {
    var phi2 = phi * phi, phi4 = phi2 * phi2;
    phi -= delta = (phi * (1.007226 + phi2 * (0.015085 + phi4 * (-0.044475 + 0.028874 * phi2 - 0.005916 * phi4))) - y) /
        (1.007226 + phi2 * (0.015085 * 3 + phi4 * (-0.044475 * 7 + 0.028874 * 9 * phi2 - 0.005916 * 11 * phi4)));
  } while (Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(delta) > _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] && --i > 0);
  return [
    x / (0.8707 + (phi2 = phi * phi) * (-0.131979 + phi2 * (-0.013791 + phi2 * phi2 * phi2 * (0.003971 - 0.001529 * phi2)))),
    phi
  ];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_0__["default"])(naturalEarth1Raw)
      .scale(175.295);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/orthographic.js":
/*!************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/orthographic.js ***!
  \************************************************************/
/*! exports provided: orthographicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "orthographicRaw", function() { return orthographicRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal.js */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");




function orthographicRaw(x, y) {
  return [Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(y) * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(x), Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(y)];
}

orthographicRaw.invert = Object(_azimuthal_js__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(_math_js__WEBPACK_IMPORTED_MODULE_0__["asin"]);

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(orthographicRaw)
      .scale(249.5)
      .clipAngle(90 + _math_js__WEBPACK_IMPORTED_MODULE_0__["epsilon"]);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/resample.js":
/*!********************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/resample.js ***!
  \********************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _cartesian_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../cartesian.js */ "./node_modules/d3-geo/src/cartesian.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../transform.js */ "./node_modules/d3-geo/src/transform.js");




var maxDepth = 16, // maximum depth of subdivision
    cosMinDistance = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(30 * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]); // cos(minimum angular distance)

/* harmony default export */ __webpack_exports__["default"] = (function(project, delta2) {
  return +delta2 ? resample(project, delta2) : resampleNone(project);
});

function resampleNone(project) {
  return Object(_transform_js__WEBPACK_IMPORTED_MODULE_2__["transformer"])({
    point: function(x, y) {
      x = project(x, y);
      this.stream.point(x[0], x[1]);
    }
  });
}

function resample(project, delta2) {

  function resampleLineTo(x0, y0, lambda0, a0, b0, c0, x1, y1, lambda1, a1, b1, c1, depth, stream) {
    var dx = x1 - x0,
        dy = y1 - y0,
        d2 = dx * dx + dy * dy;
    if (d2 > 4 * delta2 && depth--) {
      var a = a0 + a1,
          b = b0 + b1,
          c = c0 + c1,
          m = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sqrt"])(a * a + b * b + c * c),
          phi2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(c /= m),
          lambda2 = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(c) - 1) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] || Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda0 - lambda1) < _math_js__WEBPACK_IMPORTED_MODULE_1__["epsilon"] ? (lambda0 + lambda1) / 2 : Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(b, a),
          p = project(lambda2, phi2),
          x2 = p[0],
          y2 = p[1],
          dx2 = x2 - x0,
          dy2 = y2 - y0,
          dz = dy * dx2 - dx * dy2;
      if (dz * dz / d2 > delta2 // perpendicular projected distance
          || Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])((dx * dx2 + dy * dy2) / d2 - 0.5) > 0.3 // midpoint close to an end
          || a0 * a1 + b0 * b1 + c0 * c1 < cosMinDistance) { // angular distance
        resampleLineTo(x0, y0, lambda0, a0, b0, c0, x2, y2, lambda2, a /= m, b /= m, c, depth, stream);
        stream.point(x2, y2);
        resampleLineTo(x2, y2, lambda2, a, b, c, x1, y1, lambda1, a1, b1, c1, depth, stream);
      }
    }
  }
  return function(stream) {
    var lambda00, x00, y00, a00, b00, c00, // first point
        lambda0, x0, y0, a0, b0, c0; // previous point

    var resampleStream = {
      point: point,
      lineStart: lineStart,
      lineEnd: lineEnd,
      polygonStart: function() { stream.polygonStart(); resampleStream.lineStart = ringStart; },
      polygonEnd: function() { stream.polygonEnd(); resampleStream.lineStart = lineStart; }
    };

    function point(x, y) {
      x = project(x, y);
      stream.point(x[0], x[1]);
    }

    function lineStart() {
      x0 = NaN;
      resampleStream.point = linePoint;
      stream.lineStart();
    }

    function linePoint(lambda, phi) {
      var c = Object(_cartesian_js__WEBPACK_IMPORTED_MODULE_0__["cartesian"])([lambda, phi]), p = project(lambda, phi);
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x0 = p[0], y0 = p[1], lambda0 = lambda, a0 = c[0], b0 = c[1], c0 = c[2], maxDepth, stream);
      stream.point(x0, y0);
    }

    function lineEnd() {
      resampleStream.point = point;
      stream.lineEnd();
    }

    function ringStart() {
      lineStart();
      resampleStream.point = ringPoint;
      resampleStream.lineEnd = ringEnd;
    }

    function ringPoint(lambda, phi) {
      linePoint(lambda00 = lambda, phi), x00 = x0, y00 = y0, a00 = a0, b00 = b0, c00 = c0;
      resampleStream.point = linePoint;
    }

    function ringEnd() {
      resampleLineTo(x0, y0, lambda0, a0, b0, c0, x00, y00, lambda00, a00, b00, c00, maxDepth, stream);
      resampleStream.lineEnd = lineEnd;
      lineEnd();
    }

    return resampleStream;
  };
}


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/stereographic.js":
/*!*************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/stereographic.js ***!
  \*************************************************************/
/*! exports provided: stereographicRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "stereographicRaw", function() { return stereographicRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _azimuthal_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./azimuthal.js */ "./node_modules/d3-geo/src/projection/azimuthal.js");
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./index.js */ "./node_modules/d3-geo/src/projection/index.js");




function stereographicRaw(x, y) {
  var cy = Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(y), k = 1 + Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["cos"])(x) * cy;
  return [cy * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(x) / k, Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["sin"])(y) / k];
}

stereographicRaw.invert = Object(_azimuthal_js__WEBPACK_IMPORTED_MODULE_1__["azimuthalInvert"])(function(z) {
  return 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"])(z);
});

/* harmony default export */ __webpack_exports__["default"] = (function() {
  return Object(_index_js__WEBPACK_IMPORTED_MODULE_2__["default"])(stereographicRaw)
      .scale(250)
      .clipAngle(142);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/projection/transverseMercator.js":
/*!******************************************************************!*\
  !*** ./node_modules/d3-geo/src/projection/transverseMercator.js ***!
  \******************************************************************/
/*! exports provided: transverseMercatorRaw, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transverseMercatorRaw", function() { return transverseMercatorRaw; });
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../math.js */ "./node_modules/d3-geo/src/math.js");
/* harmony import */ var _mercator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mercator.js */ "./node_modules/d3-geo/src/projection/mercator.js");



function transverseMercatorRaw(lambda, phi) {
  return [Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["log"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["tan"])((_math_js__WEBPACK_IMPORTED_MODULE_0__["halfPi"] + phi) / 2)), -lambda];
}

transverseMercatorRaw.invert = function(x, y) {
  return [-y, 2 * Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["atan"])(Object(_math_js__WEBPACK_IMPORTED_MODULE_0__["exp"])(x)) - _math_js__WEBPACK_IMPORTED_MODULE_0__["halfPi"]];
};

/* harmony default export */ __webpack_exports__["default"] = (function() {
  var m = Object(_mercator_js__WEBPACK_IMPORTED_MODULE_1__["mercatorProjection"])(transverseMercatorRaw),
      center = m.center,
      rotate = m.rotate;

  m.center = function(_) {
    return arguments.length ? center([-_[1], _[0]]) : (_ = center(), [_[1], -_[0]]);
  };

  m.rotate = function(_) {
    return arguments.length ? rotate([_[0], _[1], _.length > 2 ? _[2] + 90 : 90]) : (_ = rotate(), [_[0], _[1], _[2] - 90]);
  };

  return rotate([0, 0, 90])
      .scale(159.155);
});


/***/ }),

/***/ "./node_modules/d3-geo/src/rotation.js":
/*!*********************************************!*\
  !*** ./node_modules/d3-geo/src/rotation.js ***!
  \*********************************************/
/*! exports provided: rotateRadians, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "rotateRadians", function() { return rotateRadians; });
/* harmony import */ var _compose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./compose.js */ "./node_modules/d3-geo/src/compose.js");
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./math.js */ "./node_modules/d3-geo/src/math.js");



function rotationIdentity(lambda, phi) {
  return [Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["abs"])(lambda) > _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] ? lambda + Math.round(-lambda / _math_js__WEBPACK_IMPORTED_MODULE_1__["tau"]) * _math_js__WEBPACK_IMPORTED_MODULE_1__["tau"] : lambda, phi];
}

rotationIdentity.invert = rotationIdentity;

function rotateRadians(deltaLambda, deltaPhi, deltaGamma) {
  return (deltaLambda %= _math_js__WEBPACK_IMPORTED_MODULE_1__["tau"]) ? (deltaPhi || deltaGamma ? Object(_compose_js__WEBPACK_IMPORTED_MODULE_0__["default"])(rotationLambda(deltaLambda), rotationPhiGamma(deltaPhi, deltaGamma))
    : rotationLambda(deltaLambda))
    : (deltaPhi || deltaGamma ? rotationPhiGamma(deltaPhi, deltaGamma)
    : rotationIdentity);
}

function forwardRotationLambda(deltaLambda) {
  return function(lambda, phi) {
    return lambda += deltaLambda, [lambda > _math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] ? lambda - _math_js__WEBPACK_IMPORTED_MODULE_1__["tau"] : lambda < -_math_js__WEBPACK_IMPORTED_MODULE_1__["pi"] ? lambda + _math_js__WEBPACK_IMPORTED_MODULE_1__["tau"] : lambda, phi];
  };
}

function rotationLambda(deltaLambda) {
  var rotation = forwardRotationLambda(deltaLambda);
  rotation.invert = forwardRotationLambda(-deltaLambda);
  return rotation;
}

function rotationPhiGamma(deltaPhi, deltaGamma) {
  var cosDeltaPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(deltaPhi),
      sinDeltaPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(deltaPhi),
      cosDeltaGamma = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(deltaGamma),
      sinDeltaGamma = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(deltaGamma);

  function rotation(lambda, phi) {
    var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        x = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda) * cosPhi,
        y = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) * cosPhi,
        z = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        k = z * cosDeltaPhi + x * sinDeltaPhi;
    return [
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y * cosDeltaGamma - k * sinDeltaGamma, x * cosDeltaPhi - z * sinDeltaPhi),
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(k * cosDeltaGamma + y * sinDeltaGamma)
    ];
  }

  rotation.invert = function(lambda, phi) {
    var cosPhi = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(phi),
        x = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["cos"])(lambda) * cosPhi,
        y = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(lambda) * cosPhi,
        z = Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["sin"])(phi),
        k = z * cosDeltaGamma - y * sinDeltaGamma;
    return [
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["atan2"])(y * cosDeltaGamma + z * sinDeltaGamma, x * cosDeltaPhi + k * sinDeltaPhi),
      Object(_math_js__WEBPACK_IMPORTED_MODULE_1__["asin"])(k * cosDeltaPhi - x * sinDeltaPhi)
    ];
  };

  return rotation;
}

/* harmony default export */ __webpack_exports__["default"] = (function(rotate) {
  rotate = rotateRadians(rotate[0] * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], rotate[1] * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], rotate.length > 2 ? rotate[2] * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"] : 0);

  function forward(coordinates) {
    coordinates = rotate(coordinates[0] * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], coordinates[1] * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]);
    return coordinates[0] *= _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates[1] *= _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates;
  }

  forward.invert = function(coordinates) {
    coordinates = rotate.invert(coordinates[0] * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"], coordinates[1] * _math_js__WEBPACK_IMPORTED_MODULE_1__["radians"]);
    return coordinates[0] *= _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates[1] *= _math_js__WEBPACK_IMPORTED_MODULE_1__["degrees"], coordinates;
  };

  return forward;
});


/***/ }),

/***/ "./node_modules/d3-geo/src/stream.js":
/*!*******************************************!*\
  !*** ./node_modules/d3-geo/src/stream.js ***!
  \*******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
function streamGeometry(geometry, stream) {
  if (geometry && streamGeometryType.hasOwnProperty(geometry.type)) {
    streamGeometryType[geometry.type](geometry, stream);
  }
}

var streamObjectType = {
  Feature: function(object, stream) {
    streamGeometry(object.geometry, stream);
  },
  FeatureCollection: function(object, stream) {
    var features = object.features, i = -1, n = features.length;
    while (++i < n) streamGeometry(features[i].geometry, stream);
  }
};

var streamGeometryType = {
  Sphere: function(object, stream) {
    stream.sphere();
  },
  Point: function(object, stream) {
    object = object.coordinates;
    stream.point(object[0], object[1], object[2]);
  },
  MultiPoint: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) object = coordinates[i], stream.point(object[0], object[1], object[2]);
  },
  LineString: function(object, stream) {
    streamLine(object.coordinates, stream, 0);
  },
  MultiLineString: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) streamLine(coordinates[i], stream, 0);
  },
  Polygon: function(object, stream) {
    streamPolygon(object.coordinates, stream);
  },
  MultiPolygon: function(object, stream) {
    var coordinates = object.coordinates, i = -1, n = coordinates.length;
    while (++i < n) streamPolygon(coordinates[i], stream);
  },
  GeometryCollection: function(object, stream) {
    var geometries = object.geometries, i = -1, n = geometries.length;
    while (++i < n) streamGeometry(geometries[i], stream);
  }
};

function streamLine(coordinates, stream, closed) {
  var i = -1, n = coordinates.length - closed, coordinate;
  stream.lineStart();
  while (++i < n) coordinate = coordinates[i], stream.point(coordinate[0], coordinate[1], coordinate[2]);
  stream.lineEnd();
}

function streamPolygon(coordinates, stream) {
  var i = -1, n = coordinates.length;
  stream.polygonStart();
  while (++i < n) streamLine(coordinates[i], stream, 1);
  stream.polygonEnd();
}

/* harmony default export */ __webpack_exports__["default"] = (function(object, stream) {
  if (object && streamObjectType.hasOwnProperty(object.type)) {
    streamObjectType[object.type](object, stream);
  } else {
    streamGeometry(object, stream);
  }
});


/***/ }),

/***/ "./node_modules/d3-geo/src/transform.js":
/*!**********************************************!*\
  !*** ./node_modules/d3-geo/src/transform.js ***!
  \**********************************************/
/*! exports provided: default, transformer */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "transformer", function() { return transformer; });
/* harmony default export */ __webpack_exports__["default"] = (function(methods) {
  return {
    stream: transformer(methods)
  };
});

function transformer(methods) {
  return function(stream) {
    var s = new TransformStream;
    for (var key in methods) s[key] = methods[key];
    s.stream = stream;
    return s;
  };
}

function TransformStream() {}

TransformStream.prototype = {
  constructor: TransformStream,
  point: function(x, y) { this.stream.point(x, y); },
  sphere: function() { this.stream.sphere(); },
  lineStart: function() { this.stream.lineStart(); },
  lineEnd: function() { this.stream.lineEnd(); },
  polygonStart: function() { this.stream.polygonStart(); },
  polygonEnd: function() { this.stream.polygonEnd(); }
};


/***/ }),

/***/ "./node_modules/internmap/src/index.js":
/*!*********************************************!*\
  !*** ./node_modules/internmap/src/index.js ***!
  \*********************************************/
/*! exports provided: InternMap, InternSet */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InternMap", function() { return InternMap; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "InternSet", function() { return InternSet; });
class InternMap extends Map {
  constructor(entries = [], key = keyof) {
    super();
    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});
    for (const [key, value] of entries) this.set(key, value);
  }
  get(key) {
    return super.get(intern_get(this, key));
  }
  has(key) {
    return super.has(intern_get(this, key));
  }
  set(key, value) {
    return super.set(intern_set(this, key), value);
  }
  delete(key) {
    return super.delete(intern_delete(this, key));
  }
}

class InternSet extends Set {
  constructor(values = [], key = keyof) {
    super();
    Object.defineProperties(this, {_intern: {value: new Map()}, _key: {value: key}});
    for (const value of values) this.add(value);
  }
  has(value) {
    return super.has(intern_get(this, value));
  }
  add(value) {
    return super.add(intern_set(this, value));
  }
  delete(value) {
    return super.delete(intern_delete(this, value));
  }
}

function intern_get({_intern, _key}, value) {
  const key = _key(value);
  return _intern.has(key) ? _intern.get(key) : value;
}

function intern_set({_intern, _key}, value) {
  const key = _key(value);
  if (_intern.has(key)) return _intern.get(key);
  _intern.set(key, value);
  return value;
}

function intern_delete({_intern, _key}, value) {
  const key = _key(value);
  if (_intern.has(key)) {
    value = _intern.get(value);
    _intern.delete(key);
  }
  return value;
}

function keyof(value) {
  return value !== null && typeof value === "object" ? value.valueOf() : value;
}


/***/ }),

/***/ "./node_modules/polylabel/polylabel.js":
/*!*********************************************!*\
  !*** ./node_modules/polylabel/polylabel.js ***!
  \*********************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";


var Queue = __webpack_require__(/*! tinyqueue */ "./node_modules/tinyqueue/index.js");

if (Queue.default) Queue = Queue.default; // temporary webpack fix

module.exports = polylabel;
module.exports.default = polylabel;

function polylabel(polygon, precision, debug) {
    precision = precision || 1.0;

    // find the bounding box of the outer ring
    var minX, minY, maxX, maxY;
    for (var i = 0; i < polygon[0].length; i++) {
        var p = polygon[0][i];
        if (!i || p[0] < minX) minX = p[0];
        if (!i || p[1] < minY) minY = p[1];
        if (!i || p[0] > maxX) maxX = p[0];
        if (!i || p[1] > maxY) maxY = p[1];
    }

    var width = maxX - minX;
    var height = maxY - minY;
    var cellSize = Math.min(width, height);
    var h = cellSize / 2;

    if (cellSize === 0) {
        var degeneratePoleOfInaccessibility = [minX, minY];
        degeneratePoleOfInaccessibility.distance = 0;
        return degeneratePoleOfInaccessibility;
    }

    // a priority queue of cells in order of their "potential" (max distance to polygon)
    var cellQueue = new Queue(undefined, compareMax);

    // cover polygon with initial cells
    for (var x = minX; x < maxX; x += cellSize) {
        for (var y = minY; y < maxY; y += cellSize) {
            cellQueue.push(new Cell(x + h, y + h, h, polygon));
        }
    }

    // take centroid as the first best guess
    var bestCell = getCentroidCell(polygon);

    // special case for rectangular polygons
    var bboxCell = new Cell(minX + width / 2, minY + height / 2, 0, polygon);
    if (bboxCell.d > bestCell.d) bestCell = bboxCell;

    var numProbes = cellQueue.length;

    while (cellQueue.length) {
        // pick the most promising cell from the queue
        var cell = cellQueue.pop();

        // update the best cell if we found a better one
        if (cell.d > bestCell.d) {
            bestCell = cell;
            if (debug) console.log('found best %d after %d probes', Math.round(1e4 * cell.d) / 1e4, numProbes);
        }

        // do not drill down further if there's no chance of a better solution
        if (cell.max - bestCell.d <= precision) continue;

        // split the cell into four cells
        h = cell.h / 2;
        cellQueue.push(new Cell(cell.x - h, cell.y - h, h, polygon));
        cellQueue.push(new Cell(cell.x + h, cell.y - h, h, polygon));
        cellQueue.push(new Cell(cell.x - h, cell.y + h, h, polygon));
        cellQueue.push(new Cell(cell.x + h, cell.y + h, h, polygon));
        numProbes += 4;
    }

    if (debug) {
        console.log('num probes: ' + numProbes);
        console.log('best distance: ' + bestCell.d);
    }

    var poleOfInaccessibility = [bestCell.x, bestCell.y];
    poleOfInaccessibility.distance = bestCell.d;
    return poleOfInaccessibility;
}

function compareMax(a, b) {
    return b.max - a.max;
}

function Cell(x, y, h, polygon) {
    this.x = x; // cell center x
    this.y = y; // cell center y
    this.h = h; // half the cell size
    this.d = pointToPolygonDist(x, y, polygon); // distance from cell center to polygon
    this.max = this.d + this.h * Math.SQRT2; // max distance to polygon within a cell
}

// signed distance from point to polygon outline (negative if point is outside)
function pointToPolygonDist(x, y, polygon) {
    var inside = false;
    var minDistSq = Infinity;

    for (var k = 0; k < polygon.length; k++) {
        var ring = polygon[k];

        for (var i = 0, len = ring.length, j = len - 1; i < len; j = i++) {
            var a = ring[i];
            var b = ring[j];

            if ((a[1] > y !== b[1] > y) &&
                (x < (b[0] - a[0]) * (y - a[1]) / (b[1] - a[1]) + a[0])) inside = !inside;

            minDistSq = Math.min(minDistSq, getSegDistSq(x, y, a, b));
        }
    }

    return minDistSq === 0 ? 0 : (inside ? 1 : -1) * Math.sqrt(minDistSq);
}

// get polygon centroid
function getCentroidCell(polygon) {
    var area = 0;
    var x = 0;
    var y = 0;
    var points = polygon[0];

    for (var i = 0, len = points.length, j = len - 1; i < len; j = i++) {
        var a = points[i];
        var b = points[j];
        var f = a[0] * b[1] - b[0] * a[1];
        x += (a[0] + b[0]) * f;
        y += (a[1] + b[1]) * f;
        area += f * 3;
    }
    if (area === 0) return new Cell(points[0][0], points[0][1], 0, polygon);
    return new Cell(x / area, y / area, 0, polygon);
}

// get squared distance from a point to a segment
function getSegDistSq(px, py, a, b) {

    var x = a[0];
    var y = a[1];
    var dx = b[0] - x;
    var dy = b[1] - y;

    if (dx !== 0 || dy !== 0) {

        var t = ((px - x) * dx + (py - y) * dy) / (dx * dx + dy * dy);

        if (t > 1) {
            x = b[0];
            y = b[1];

        } else if (t > 0) {
            x += dx * t;
            y += dy * t;
        }
    }

    dx = px - x;
    dy = py - y;

    return dx * dx + dy * dy;
}


/***/ }),

/***/ "./node_modules/tinyqueue/index.js":
/*!*****************************************!*\
  !*** ./node_modules/tinyqueue/index.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "default", function() { return TinyQueue; });

class TinyQueue {
    constructor(data = [], compare = defaultCompare) {
        this.data = data;
        this.length = this.data.length;
        this.compare = compare;

        if (this.length > 0) {
            for (let i = (this.length >> 1) - 1; i >= 0; i--) this._down(i);
        }
    }

    push(item) {
        this.data.push(item);
        this.length++;
        this._up(this.length - 1);
    }

    pop() {
        if (this.length === 0) return undefined;

        const top = this.data[0];
        const bottom = this.data.pop();
        this.length--;

        if (this.length > 0) {
            this.data[0] = bottom;
            this._down(0);
        }

        return top;
    }

    peek() {
        return this.data[0];
    }

    _up(pos) {
        const {data, compare} = this;
        const item = data[pos];

        while (pos > 0) {
            const parent = (pos - 1) >> 1;
            const current = data[parent];
            if (compare(item, current) >= 0) break;
            data[pos] = current;
            pos = parent;
        }

        data[pos] = item;
    }

    _down(pos) {
        const {data, compare} = this;
        const halfLength = this.length >> 1;
        const item = data[pos];

        while (pos < halfLength) {
            let left = (pos << 1) + 1;
            let best = data[left];
            const right = left + 1;

            if (right < this.length && compare(data[right], best) < 0) {
                left = right;
                best = data[right];
            }
            if (compare(best, item) >= 0) break;

            data[pos] = best;
            pos = left;
        }

        data[pos] = item;
    }
}

function defaultCompare(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
}


/***/ })

}]);